var searchIndex = JSON.parse('{\
"abigen":{"doc":"","i":[[3,"AbigenOptions","abigen","Options passed into the ABI generator.",null,null],[12,"compiled_script_directory","","Where to find the .mv files of scripts.",0,null],[12,"output_directory","","In which directory to store output.",0,null],[3,"Abigen","","The ABI generator.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"clone","","",0,[[],["abigenoptions",3]]],[11,"default","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"serialize","","",0,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"new","","Creates a new ABI generator.",1,[[["abigenoptions",3],["globalenv",3]]]],[11,"into_result","","Returns the result of ABI generation, a vector of pairs …",1,[[],["vec",3]]],[11,"gen","","Generates ABIs for all script modules in the environment …",1,[[]]]],"p":[[3,"AbigenOptions"],[3,"Abigen"]]},\
"accumulator":{"doc":"This module provides algorithms for accessing and …","i":[[0,"test_helpers","accumulator","",null,null],[5,"arb_two_hash_batches","accumulator::test_helpers","",null,[[]]],[5,"arb_three_hash_batches","","",null,[[]]],[5,"test_proof_impl","","",null,[[]]],[5,"test_consistency_proof_impl","","",null,[[]]],[5,"test_range_proof_impl","","",null,[[]]],[5,"arb_hash_batch","","",null,[[]]],[5,"test_get_frozen_subtree_hashes_impl","","",null,[[["vec",3],["hashvalue",3]]]],[5,"arb_list_of_hash_batches","","",null,[[]]],[5,"test_append_many_impl","","",null,[[["vec",3],["vec",3]]]],[5,"test_append_empty_impl","","",null,[[["vec",3],["hashvalue",3]]]],[8,"HashReader","accumulator","Defines the interface between <code>MerkleAccumulator</code> and …",null,null],[10,"get","","Return <code>HashValue</code> carried by the node at <code>Position</code>.",0,[[["position",3]],[["result",6],["hashvalue",3]]]],[3,"MerkleAccumulator","","In this live Merkle Accumulator algorithms.",null,null],[11,"append","","Given an existing Merkle Accumulator (represented by …",1,[[["leafcount",6]],["result",6]]],[11,"get_proof","","Get proof of inclusion of the leaf at <code>leaf_index</code> in this …",1,[[["leafcount",6]],[["accumulatorproof",3],["result",6]]]],[11,"get_consistency_proof","","Gets a proof that shows the full accumulator is …",1,[[["leafcount",6]],[["accumulatorconsistencyproof",3],["result",6]]]],[11,"get_range_proof","","Gets a proof that shows a range of leaves are part of the …",1,[[["leafcount",6],["option",4]],[["accumulatorrangeproof",3],["result",6]]]],[11,"get_range_proof_positions","","See <code>get_range_proof</code>. This is the version of it that …",1,[[["leafcount",6],["option",4]],["result",6]]],[11,"get_frozen_subtree_hashes","","From left to right, gets frozen subtree root hashes of …",1,[[["leafcount",6]],[["result",6],["vec",3]]]],[11,"get_root_hash","","Get root hash at a specific version (hence num_leaves).",1,[[["leafcount",6]],[["result",6],["hashvalue",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]]],"p":[[8,"HashReader"],[3,"MerkleAccumulator"]]},\
"backup_cli":{"doc":"","i":[[0,"backup_types","backup_cli","",null,null],[0,"epoch_ending","backup_cli::backup_types","",null,null],[0,"backup","backup_cli::backup_types::epoch_ending","",null,null],[3,"EpochEndingBackupOpt","backup_cli::backup_types::epoch_ending::backup","",null,null],[12,"start_epoch","","",0,null],[12,"end_epoch","","",0,null],[3,"EpochEndingBackupController","","",null,null],[11,"new","","",1,[[["globalbackupopt",3],["epochendingbackupopt",3],["arc",3],["backupserviceclient",3],["arc",3],["backupstorage",8]]]],[11,"run","","",1,[[]]],[0,"manifest","backup_cli::backup_types::epoch_ending","",null,null],[3,"EpochEndingChunk","backup_cli::backup_types::epoch_ending::manifest","A chunk of an epoch ending backup manifest, representing …",null,null],[12,"first_epoch","","",2,null],[12,"last_epoch","","",2,null],[12,"ledger_infos","","",2,null],[3,"EpochEndingBackup","","Epoch ending backup manifest, representing epoch ending …",null,null],[12,"first_epoch","","",3,null],[12,"last_epoch","","",3,null],[12,"waypoints","","",3,null],[12,"chunks","","",3,null],[11,"verify","","",3,[[],["result",6]]],[0,"restore","backup_cli::backup_types::epoch_ending","",null,null],[3,"EpochEndingRestoreOpt","backup_cli::backup_types::epoch_ending::restore","",null,null],[12,"manifest_handle","","",4,null],[3,"EpochEndingRestoreController","","",null,null],[11,"new","","",5,[[["globalrestoreoptions",3],["arc",3],["backupstorage",8],["epochendingrestoreopt",3]]]],[11,"preheat","","",5,[[]]],[11,"run","","",5,[[["ledgerinfo",3],["option",4]]]],[3,"PreheatedEpochEndingRestore","","",null,null],[11,"run","","",6,[[["ledgerinfo",3],["option",4]]]],[3,"EpochHistory","","Represents a history of epoch changes since epoch 0.",null,null],[12,"epoch_endings","","",7,null],[11,"verify_ledger_info","","",7,[[["ledgerinfowithsignatures",4]],["result",6]]],[3,"EpochHistoryRestoreController","","",null,null],[11,"new","","",8,[[["vec",3],["filehandle",6],["globalrestoreoptions",3],["arc",3],["backupstorage",8]]]],[11,"run","","",8,[[]]],[0,"state_snapshot","backup_cli::backup_types","",null,null],[0,"backup","backup_cli::backup_types::state_snapshot","",null,null],[3,"StateSnapshotBackupOpt","backup_cli::backup_types::state_snapshot::backup","",null,null],[12,"version","","",9,null],[3,"StateSnapshotBackupController","","",null,null],[11,"new","","",10,[[["globalbackupopt",3],["backupstorage",8],["arc",3],["backupserviceclient",3],["arc",3],["statesnapshotbackupopt",3]]]],[11,"run","","",10,[[]]],[0,"manifest","backup_cli::backup_types::state_snapshot","",null,null],[3,"StateSnapshotChunk","backup_cli::backup_types::state_snapshot::manifest","A chunk of a state snapshot manifest, representing …",null,null],[12,"first_idx","","index of the first account in this chunk over all …",11,null],[12,"last_idx","","index of the last account in this chunk over all accounts.",11,null],[12,"first_key","","key of the first account in this chunk.",11,null],[12,"last_key","","key of the last account in this chunk.",11,null],[12,"blobs","","Repeated <code>len(record) + record</code> where <code>record</code> is BCS …",11,null],[12,"proof","","BCS serialized <code>SparseMerkleRangeProof</code> that proves this …",11,null],[3,"StateSnapshotBackup","","State snapshot backup manifest, representing a complete …",null,null],[12,"version","","Version at which this state snapshot is taken.",12,null],[12,"root_hash","","Hash of the state tree root.",12,null],[12,"chunks","","All account blobs in chunks.",12,null],[12,"proof","","BCS serialized …",12,null],[0,"restore","backup_cli::backup_types::state_snapshot","",null,null],[3,"StateSnapshotRestoreOpt","backup_cli::backup_types::state_snapshot::restore","",null,null],[12,"manifest_handle","","",13,null],[12,"version","","",13,null],[3,"StateSnapshotRestoreController","","",null,null],[11,"new","","",14,[[["globalrestoreoptions",3],["statesnapshotrestoreopt",3],["arc",3],["backupstorage",8],["arc",3],["option",4]]]],[11,"run","","",14,[[]]],[0,"transaction","backup_cli::backup_types","",null,null],[0,"backup","backup_cli::backup_types::transaction","",null,null],[3,"TransactionBackupOpt","backup_cli::backup_types::transaction::backup","",null,null],[12,"start_version","","",15,null],[12,"num_transactions","","",15,null],[3,"TransactionBackupController","","",null,null],[11,"new","","",16,[[["globalbackupopt",3],["backupstorage",8],["arc",3],["transactionbackupopt",3],["backupserviceclient",3],["arc",3]]]],[11,"run","","",16,[[]]],[0,"manifest","backup_cli::backup_types::transaction","",null,null],[3,"TransactionChunk","backup_cli::backup_types::transaction::manifest","A chunk of a transaction backup manifest to represent the …",null,null],[12,"first_version","","",17,null],[12,"last_version","","",17,null],[12,"transactions","","Repeated <code>len(record) + record</code>, where <code>record</code> is BCS …",17,null],[12,"proof","","BCS serialized …",17,null],[3,"TransactionBackup","","Transaction backup manifest, representing transactions in …",null,null],[12,"first_version","","",18,null],[12,"last_version","","",18,null],[12,"chunks","","",18,null],[11,"verify","","",18,[[],["result",6]]],[0,"restore","backup_cli::backup_types::transaction","",null,null],[3,"TransactionRestoreOpt","backup_cli::backup_types::transaction::restore","",null,null],[12,"manifest_handle","","",19,null],[12,"replay_from_version","","",19,null],[11,"replay_from_version","","",19,[[],["version",6]]],[3,"TransactionRestoreController","","",null,null],[11,"new","","",20,[[["option",4],["globalrestoreoptions",3],["arc",3],["transactionrestoreopt",3],["backupstorage",8],["arc",3]]]],[11,"preheat","","",20,[[]]],[11,"run","","",20,[[]]],[3,"PreheatedTransactionRestore","","",null,null],[11,"run","","",21,[[]]],[11,"get_last_version","","",21,[[],[["result",6],["version",6]]]],[3,"TransactionRestoreBatchController","","Takes a series of transaction backup manifests, preheat …",null,null],[11,"new","","",22,[[["vec",3],["globalrestoreoptions",3],["filehandle",6],["option",4],["arc",3],["backupstorage",8],["version",6],["arc",3],["option",4]]]],[11,"run","","",22,[[]]],[0,"coordinators","backup_cli","",null,null],[0,"backup","backup_cli::coordinators","",null,null],[3,"BackupCoordinatorOpt","backup_cli::coordinators::backup","",null,null],[12,"metadata_cache_opt","","",23,null],[12,"state_snapshot_interval","","",23,null],[12,"transaction_batch_size","","",23,null],[3,"BackupCoordinator","","",null,null],[11,"new","","",24,[[["globalbackupopt",3],["backupcoordinatoropt",3],["arc",3],["backupserviceclient",3],["arc",3],["backupstorage",8]]]],[11,"run","","",24,[[]]],[0,"restore","backup_cli::coordinators","",null,null],[3,"RestoreCoordinatorOpt","backup_cli::coordinators::restore","",null,null],[12,"metadata_cache_opt","","",25,null],[12,"replay_all","","",25,null],[3,"RestoreCoordinator","","",null,null],[11,"new","","",26,[[["globalrestoreoptions",3],["arc",3],["backupstorage",8],["restorecoordinatoropt",3]]]],[11,"run","","",26,[[]]],[0,"verify","backup_cli::coordinators","",null,null],[3,"VerifyCoordinator","backup_cli::coordinators::verify","",null,null],[11,"new","","",27,[[["trustedwaypointopt",3],["arc",3],["backupstorage",8],["metadatacacheopt",3]],["result",6]]],[11,"run","","",27,[[]]],[0,"metadata","backup_cli","",null,null],[0,"cache","backup_cli::metadata","",null,null],[3,"MetadataCacheOpt","backup_cli::metadata::cache","",null,null],[5,"sync_and_load","","Sync local cache folder with remote storage, and load all …",null,[[["arc",3],["backupstorage",8],["metadatacacheopt",3]]]],[0,"view","backup_cli::metadata","",null,null],[3,"MetadataView","backup_cli::metadata::view","",null,null],[11,"get_storage_state","","",28,[[],["backupstoragestate",3]]],[11,"select_state_snapshot","","",28,[[["version",6]],[["result",6],["option",4]]]],[11,"select_transaction_backups","","",28,[[["version",6]],[["result",6],["vec",3]]]],[11,"select_epoch_ending_backups","","",28,[[["version",6]],[["result",6],["vec",3]]]],[3,"BackupStorageState","","",null,null],[12,"latest_epoch_ending_epoch","","",29,null],[12,"latest_state_snapshot_version","","",29,null],[12,"latest_transaction_version","","",29,null],[3,"EpochEndingBackupMeta","backup_cli::metadata","",null,null],[12,"first_epoch","","",30,null],[12,"last_epoch","","",30,null],[12,"first_version","","",30,null],[12,"last_version","","",30,null],[12,"manifest","","",30,null],[3,"StateSnapshotBackupMeta","","",null,null],[12,"version","","",31,null],[12,"manifest","","",31,null],[3,"TransactionBackupMeta","","",null,null],[12,"first_version","","",32,null],[12,"last_version","","",32,null],[12,"manifest","","",32,null],[0,"metrics","backup_cli","",null,null],[0,"backup","backup_cli::metrics","",null,null],[7,"HEARTBEAT_TS","backup_cli::metrics::backup","",null,null],[7,"EPOCH_ENDING_EPOCH","","",null,null],[7,"STATE_SNAPSHOT_VERSION","","",null,null],[7,"TRANSACTION_VERSION","","",null,null],[0,"metadata","backup_cli::metrics","",null,null],[7,"NUM_META_FILES","backup_cli::metrics::metadata","",null,null],[7,"NUM_META_MISS","","",null,null],[7,"NUM_META_DOWNLOAD","","",null,null],[0,"restore","backup_cli::metrics","",null,null],[7,"COORDINATOR_TARGET_VERSION","backup_cli::metrics::restore","",null,null],[7,"EPOCH_ENDING_EPOCH","","",null,null],[7,"EPOCH_ENDING_VERSION","","",null,null],[7,"STATE_SNAPSHOT_VERSION","","",null,null],[7,"STATE_SNAPSHOT_TARGET_LEAF_INDEX","","",null,null],[7,"STATE_SNAPSHOT_LEAF_INDEX","","",null,null],[7,"TRANSACTION_SAVE_VERSION","","",null,null],[7,"TRANSACTION_REPLAY_VERSION","","",null,null],[7,"COORDINATOR_START_TS","","",null,null],[7,"COORDINATOR_SUCC_TS","","",null,null],[7,"COORDINATOR_FAIL_TS","","",null,null],[0,"verify","backup_cli::metrics","",null,null],[7,"VERIFY_EPOCH_ENDING_EPOCH","backup_cli::metrics::verify","",null,null],[7,"VERIFY_EPOCH_ENDING_VERSION","","",null,null],[7,"VERIFY_STATE_SNAPSHOT_VERSION","","",null,null],[7,"VERIFY_STATE_SNAPSHOT_TARGET_LEAF_INDEX","","",null,null],[7,"VERIFY_STATE_SNAPSHOT_LEAF_INDEX","","",null,null],[7,"VERIFY_TRANSACTION_VERSION","","",null,null],[7,"VERIFY_COORDINATOR_START_TS","","",null,null],[7,"VERIFY_COORDINATOR_SUCC_TS","","",null,null],[7,"VERIFY_COORDINATOR_FAIL_TS","","",null,null],[0,"storage","backup_cli","",null,null],[0,"command_adapter","backup_cli::storage","",null,null],[3,"CommandAdapterOpt","backup_cli::storage::command_adapter","",null,null],[3,"CommandAdapter","","A BackupStorage that delegates required APIs to …",null,null],[11,"new","","",33,[[["commandadapterconfig",3]]]],[11,"new_with_opt","","",33,[[["commandadapteropt",3]]]],[0,"local_fs","backup_cli::storage","",null,null],[3,"LocalFsOpt","backup_cli::storage::local_fs","",null,null],[12,"dir","","",34,null],[3,"LocalFs","","A storage backend that stores everything in a local …",null,null],[11,"new","","",35,[[["pathbuf",3]]]],[11,"new_with_opt","","",35,[[["localfsopt",3]]]],[11,"metadata_dir","","",35,[[],["pathbuf",3]]],[6,"BackupHandle","backup_cli::storage","String returned by a specific storage implementation to …",null,null],[6,"BackupHandleRef","","",null,null],[6,"FileHandle","","URI pointing to a file in a backup storage, like …",null,null],[6,"FileHandleRef","","",null,null],[3,"ShellSafeName","","Through this, the backup controller promises to the …",null,null],[3,"TextLine","","",null,null],[11,"new","","",36,[[],["result",6]]],[8,"BackupStorage","","",null,null],[10,"create_backup","","Hint that a bunch of files are gonna be created related …",37,[[["shellsafename",3]],[["pin",3],["box",3]]]],[10,"create_for_write","","Ask to create a file for write, <code>backup_handle</code> was …",37,[[["backuphandleref",6],["shellsafename",3]],[["pin",3],["box",3]]]],[10,"open_for_read","","Open file for reading.",37,[[["filehandleref",6]],[["pin",3],["box",3]]]],[10,"save_metadata_line","","Asks to save a metadata entry. A metadata entry is one …",37,[[["shellsafename",3],["textline",3]],[["box",3],["pin",3]]]],[10,"list_metadata_files","","The backup system always asks for all metadata files and …",37,[[],[["pin",3],["box",3]]]],[4,"StorageOpt","","",null,null],[13,"LocalFs","","",38,null],[13,"CommandAdapter","","",38,null],[11,"init_storage","","",38,[[]]],[0,"utils","backup_cli","",null,null],[0,"backup_service_client","backup_cli::utils","",null,null],[3,"BackupServiceClientOpt","backup_cli::utils::backup_service_client","",null,null],[12,"address","","",39,null],[3,"BackupServiceClient","","",null,null],[11,"new_with_opt","","",40,[[["backupserviceclientopt",3]]]],[11,"new","","",40,[[["string",3]]]],[11,"get_db_state","","",40,[[]]],[11,"get_account_range_proof","","",40,[[["hashvalue",3],["version",6]]]],[11,"get_state_snapshot","","",40,[[["version",6]]]],[11,"get_state_root_proof","","",40,[[["version",6]]]],[11,"get_epoch_ending_ledger_infos","","",40,[[]]],[11,"get_transactions","","",40,[[["version",6]]]],[11,"get_transaction_range_proof","","",40,[[["version",6]]]],[0,"read_record_bytes","backup_cli::utils","",null,null],[8,"ReadRecordBytes","backup_cli::utils::read_record_bytes","",null,null],[10,"read_full_buf_or_none","","",41,[[["bytesmut",3]],[["box",3],["pin",3]]]],[10,"read_record_bytes","","",41,[[],[["pin",3],["box",3]]]],[0,"storage_ext","backup_cli::utils","",null,null],[8,"BackupStorageExt","backup_cli::utils::storage_ext","",null,null],[10,"read_all","","",42,[[["filehandleref",6]],[["box",3],["pin",3]]]],[10,"load_json_file","","",42,[[["filehandleref",6]],[["box",3],["pin",3]]]],[10,"load_bcs_file","","",42,[[["filehandleref",6]],[["box",3],["pin",3]]]],[10,"create_backup_with_random_suffix","","Adds a random suffix \\\".XXXX\\\" to the backup name, so a …",42,[[],[["pin",3],["box",3]]]],[3,"GlobalBackupOpt","backup_cli::utils","",null,null],[12,"max_chunk_size","","",43,null],[3,"RocksdbOpt","","",null,null],[3,"GlobalRestoreOpt","","",null,null],[12,"dry_run","","",44,null],[12,"db_dir","","",44,null],[12,"target_version","","",44,null],[12,"trusted_waypoints","","",44,null],[12,"rocksdb_opt","","",44,null],[4,"RestoreRunMode","","",null,null],[13,"Restore","","",45,null],[12,"restore_handler","backup_cli::utils::RestoreRunMode","",46,null],[13,"Verify","backup_cli::utils","",45,null],[11,"name","","",45,[[]]],[11,"is_verify","","",45,[[]]],[11,"get_state_restore_receiver","","",45,[[["hashvalue",3],["version",6]],[["jellyfishmerklerestore",3],["result",6]]]],[3,"GlobalRestoreOptions","","",null,null],[12,"target_version","","",47,null],[12,"trusted_waypoints","","",47,null],[12,"run_mode","","",47,null],[3,"TrustedWaypointOpt","","",null,null],[12,"trust_waypoint","","",48,null],[11,"verify","","",48,[[],[["hashmap",3],["result",6]]]],[11,"from","backup_cli::backup_types::epoch_ending::backup","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","backup_cli::backup_types::epoch_ending::manifest","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"erased_serialize","","",3,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","backup_cli::backup_types::epoch_ending::restore","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","backup_cli::backup_types::state_snapshot::backup","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","backup_cli::backup_types::state_snapshot::manifest","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"erased_serialize","","",11,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"test_only_hash","","",11,[[],["hashvalue",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"erased_serialize","","",12,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"test_only_hash","","",12,[[],["hashvalue",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","backup_cli::backup_types::state_snapshot::restore","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","backup_cli::backup_types::transaction::backup","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","backup_cli::backup_types::transaction::manifest","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"erased_serialize","","",17,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"test_only_hash","","",17,[[],["hashvalue",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"erased_serialize","","",18,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"test_only_hash","","",18,[[],["hashvalue",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","backup_cli::backup_types::transaction::restore","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","backup_cli::coordinators::backup","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","backup_cli::coordinators::restore","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","backup_cli::coordinators::verify","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"from","backup_cli::metadata::cache","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"init","","",49,[[]]],[11,"deref","","",49,[[]]],[11,"deref_mut","","",49,[[]]],[11,"drop","","",49,[[]]],[11,"from","backup_cli::metadata::view","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","backup_cli::metadata","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"equivalent","","",30,[[]]],[11,"erased_serialize","","",30,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"test_only_hash","","",30,[[],["hashvalue",3]]],[11,"vzip","","",30,[[]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"equivalent","","",31,[[]]],[11,"erased_serialize","","",31,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"test_only_hash","","",31,[[],["hashvalue",3]]],[11,"vzip","","",31,[[]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"equivalent","","",32,[[]]],[11,"erased_serialize","","",32,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"test_only_hash","","",32,[[],["hashvalue",3]]],[11,"vzip","","",32,[[]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"from","backup_cli::storage::command_adapter","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"init","","",50,[[]]],[11,"deref","","",50,[[]]],[11,"deref_mut","","",50,[[]]],[11,"drop","","",50,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"from","backup_cli::storage::local_fs","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"from","backup_cli::storage","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"init","","",51,[[]]],[11,"deref","","",51,[[]]],[11,"deref_mut","","",51,[[]]],[11,"drop","","",51,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"from","backup_cli::utils::backup_service_client","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"from","backup_cli::utils","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"init","","",52,[[]]],[11,"deref","","",52,[[]]],[11,"deref_mut","","",52,[[]]],[11,"drop","","",52,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"init","","",47,[[]]],[11,"deref","","",47,[[]]],[11,"deref_mut","","",47,[[]]],[11,"drop","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"init","","",48,[[]]],[11,"deref","","",48,[[]]],[11,"deref_mut","","",48,[[]]],[11,"drop","","",48,[[]]],[11,"create_backup","backup_cli::storage::command_adapter","",33,[[["shellsafename",3]],[["pin",3],["box",3]]]],[11,"create_for_write","","",33,[[["backuphandleref",6],["shellsafename",3]],[["pin",3],["box",3]]]],[11,"open_for_read","","",33,[[["filehandleref",6]],[["pin",3],["box",3]]]],[11,"save_metadata_line","","",33,[[["shellsafename",3],["textline",3]],[["box",3],["pin",3]]]],[11,"list_metadata_files","","",33,[[],[["pin",3],["box",3]]]],[11,"create_backup","backup_cli::storage::local_fs","",35,[[["shellsafename",3]],[["pin",3],["box",3]]]],[11,"create_for_write","","",35,[[["backuphandleref",6],["shellsafename",3]],[["pin",3],["box",3]]]],[11,"open_for_read","","",35,[[["filehandleref",6]],[["pin",3],["box",3]]]],[11,"save_metadata_line","","",35,[[["shellsafename",3],["textline",3]],[["box",3],["pin",3]]]],[11,"list_metadata_files","","",35,[[],[["pin",3],["box",3]]]],[11,"as_ref","backup_cli::storage","",51,[[]]],[11,"as_ref","","",36,[[]]],[11,"from","backup_cli::metadata::view","",28,[[["metadata",4],["vec",3]]]],[11,"clone","backup_cli::backup_types::epoch_ending::restore","",7,[[],["epochhistory",3]]],[11,"clone","backup_cli::backup_types::transaction::manifest","",17,[[],["transactionchunk",3]]],[11,"clone","backup_cli::metadata","",30,[[],["epochendingbackupmeta",3]]],[11,"clone","","",31,[[],["statesnapshotbackupmeta",3]]],[11,"clone","","",32,[[],["transactionbackupmeta",3]]],[11,"clone","backup_cli::utils","",43,[[],["globalbackupopt",3]]],[11,"clone","","",52,[[],["rocksdbopt",3]]],[11,"clone","","",44,[[],["globalrestoreopt",3]]],[11,"clone","","",47,[[],["globalrestoreoptions",3]]],[11,"clone","","",48,[[],["trustedwaypointopt",3]]],[11,"default","","",52,[[]]],[11,"default","","",48,[[],["trustedwaypointopt",3]]],[11,"cmp","backup_cli::metadata","",30,[[["epochendingbackupmeta",3]],["ordering",4]]],[11,"cmp","","",31,[[["statesnapshotbackupmeta",3]],["ordering",4]]],[11,"cmp","","",32,[[["transactionbackupmeta",3]],["ordering",4]]],[11,"eq","","",30,[[["epochendingbackupmeta",3]]]],[11,"ne","","",30,[[["epochendingbackupmeta",3]]]],[11,"eq","","",31,[[["statesnapshotbackupmeta",3]]]],[11,"ne","","",31,[[["statesnapshotbackupmeta",3]]]],[11,"eq","","",32,[[["transactionbackupmeta",3]]]],[11,"ne","","",32,[[["transactionbackupmeta",3]]]],[11,"partial_cmp","","",30,[[["epochendingbackupmeta",3]],[["option",4],["ordering",4]]]],[11,"lt","","",30,[[["epochendingbackupmeta",3]]]],[11,"le","","",30,[[["epochendingbackupmeta",3]]]],[11,"gt","","",30,[[["epochendingbackupmeta",3]]]],[11,"ge","","",30,[[["epochendingbackupmeta",3]]]],[11,"partial_cmp","","",31,[[["statesnapshotbackupmeta",3]],[["option",4],["ordering",4]]]],[11,"lt","","",31,[[["statesnapshotbackupmeta",3]]]],[11,"le","","",31,[[["statesnapshotbackupmeta",3]]]],[11,"gt","","",31,[[["statesnapshotbackupmeta",3]]]],[11,"ge","","",31,[[["statesnapshotbackupmeta",3]]]],[11,"partial_cmp","","",32,[[["transactionbackupmeta",3]],[["option",4],["ordering",4]]]],[11,"lt","","",32,[[["transactionbackupmeta",3]]]],[11,"le","","",32,[[["transactionbackupmeta",3]]]],[11,"gt","","",32,[[["transactionbackupmeta",3]]]],[11,"ge","","",32,[[["transactionbackupmeta",3]]]],[11,"deref","backup_cli::storage","",51,[[]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","backup_cli::metadata::view","",29,[[["formatter",3]],["result",6]]],[11,"try_from","backup_cli::storage","",51,[[["string",3]],["result",6]]],[11,"try_from","backup_cli::utils","",47,[[["globalrestoreopt",3]],["result",6]]],[11,"from_str","backup_cli::metadata::view","",29,[[],["result",6]]],[11,"from_str","backup_cli::storage","",51,[[],["result",6]]],[11,"deserialize","backup_cli::backup_types::epoch_ending::manifest","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","backup_cli::backup_types::state_snapshot::manifest","",11,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","backup_cli::backup_types::transaction::manifest","",17,[[],["result",4]]],[11,"deserialize","","",18,[[],["result",4]]],[11,"deserialize","backup_cli::metadata","",30,[[],["result",4]]],[11,"deserialize","","",31,[[],["result",4]]],[11,"deserialize","","",32,[[],["result",4]]],[11,"serialize","backup_cli::backup_types::epoch_ending::manifest","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","backup_cli::backup_types::state_snapshot::manifest","",11,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","backup_cli::backup_types::transaction::manifest","",17,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"serialize","backup_cli::metadata","",30,[[],["result",4]]],[11,"serialize","","",31,[[],["result",4]]],[11,"serialize","","",32,[[],["result",4]]],[11,"clap","backup_cli::backup_types::epoch_ending::backup","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"clap","backup_cli::backup_types::epoch_ending::restore","",4,[[],["app",3]]],[11,"from_clap","","",4,[[["argmatches",3]]]],[11,"clap","backup_cli::backup_types::state_snapshot::backup","",9,[[],["app",3]]],[11,"from_clap","","",9,[[["argmatches",3]]]],[11,"clap","backup_cli::backup_types::state_snapshot::restore","",13,[[],["app",3]]],[11,"from_clap","","",13,[[["argmatches",3]]]],[11,"clap","backup_cli::backup_types::transaction::backup","",15,[[],["app",3]]],[11,"from_clap","","",15,[[["argmatches",3]]]],[11,"clap","backup_cli::backup_types::transaction::restore","",19,[[],["app",3]]],[11,"from_clap","","",19,[[["argmatches",3]]]],[11,"clap","backup_cli::coordinators::backup","",23,[[],["app",3]]],[11,"from_clap","","",23,[[["argmatches",3]]]],[11,"clap","backup_cli::coordinators::restore","",25,[[],["app",3]]],[11,"from_clap","","",25,[[["argmatches",3]]]],[11,"clap","backup_cli::metadata::cache","",49,[[],["app",3]]],[11,"from_clap","","",49,[[["argmatches",3]]]],[11,"clap","backup_cli::storage::command_adapter","",50,[[],["app",3]]],[11,"from_clap","","",50,[[["argmatches",3]]]],[11,"clap","backup_cli::storage::local_fs","",34,[[],["app",3]]],[11,"from_clap","","",34,[[["argmatches",3]]]],[11,"clap","backup_cli::storage","",38,[[],["app",3]]],[11,"from_clap","","",38,[[["argmatches",3]]]],[11,"clap","backup_cli::utils::backup_service_client","",39,[[],["app",3]]],[11,"from_clap","","",39,[[["argmatches",3]]]],[11,"clap","backup_cli::utils","",43,[[],["app",3]]],[11,"from_clap","","",43,[[["argmatches",3]]]],[11,"clap","","",52,[[],["app",3]]],[11,"from_clap","","",52,[[["argmatches",3]]]],[11,"clap","","",44,[[],["app",3]]],[11,"from_clap","","",44,[[["argmatches",3]]]],[11,"clap","","",48,[[],["app",3]]],[11,"from_clap","","",48,[[["argmatches",3]]]],[11,"augment_clap","backup_cli::backup_types::epoch_ending::backup","",0,[[["app",3]],["app",3]]],[11,"is_subcommand","","",0,[[]]],[11,"augment_clap","backup_cli::backup_types::epoch_ending::restore","",4,[[["app",3]],["app",3]]],[11,"is_subcommand","","",4,[[]]],[11,"augment_clap","backup_cli::backup_types::state_snapshot::backup","",9,[[["app",3]],["app",3]]],[11,"is_subcommand","","",9,[[]]],[11,"augment_clap","backup_cli::backup_types::state_snapshot::restore","",13,[[["app",3]],["app",3]]],[11,"is_subcommand","","",13,[[]]],[11,"augment_clap","backup_cli::backup_types::transaction::backup","",15,[[["app",3]],["app",3]]],[11,"is_subcommand","","",15,[[]]],[11,"augment_clap","backup_cli::backup_types::transaction::restore","",19,[[["app",3]],["app",3]]],[11,"is_subcommand","","",19,[[]]],[11,"augment_clap","backup_cli::coordinators::backup","",23,[[["app",3]],["app",3]]],[11,"is_subcommand","","",23,[[]]],[11,"augment_clap","backup_cli::coordinators::restore","",25,[[["app",3]],["app",3]]],[11,"is_subcommand","","",25,[[]]],[11,"augment_clap","backup_cli::metadata::cache","",49,[[["app",3]],["app",3]]],[11,"is_subcommand","","",49,[[]]],[11,"augment_clap","backup_cli::storage::command_adapter","",50,[[["app",3]],["app",3]]],[11,"is_subcommand","","",50,[[]]],[11,"augment_clap","backup_cli::storage::local_fs","",34,[[["app",3]],["app",3]]],[11,"is_subcommand","","",34,[[]]],[11,"augment_clap","backup_cli::storage","",38,[[["app",3]],["app",3]]],[11,"from_subcommand","","",38,[[],["option",4]]],[11,"is_subcommand","","",38,[[]]],[11,"augment_clap","backup_cli::utils::backup_service_client","",39,[[["app",3]],["app",3]]],[11,"is_subcommand","","",39,[[]]],[11,"augment_clap","backup_cli::utils","",43,[[["app",3]],["app",3]]],[11,"is_subcommand","","",43,[[]]],[11,"augment_clap","","",52,[[["app",3]],["app",3]]],[11,"is_subcommand","","",52,[[]]],[11,"augment_clap","","",44,[[["app",3]],["app",3]]],[11,"is_subcommand","","",44,[[]]],[11,"augment_clap","","",48,[[["app",3]],["app",3]]],[11,"is_subcommand","","",48,[[]]]],"p":[[3,"EpochEndingBackupOpt"],[3,"EpochEndingBackupController"],[3,"EpochEndingChunk"],[3,"EpochEndingBackup"],[3,"EpochEndingRestoreOpt"],[3,"EpochEndingRestoreController"],[3,"PreheatedEpochEndingRestore"],[3,"EpochHistory"],[3,"EpochHistoryRestoreController"],[3,"StateSnapshotBackupOpt"],[3,"StateSnapshotBackupController"],[3,"StateSnapshotChunk"],[3,"StateSnapshotBackup"],[3,"StateSnapshotRestoreOpt"],[3,"StateSnapshotRestoreController"],[3,"TransactionBackupOpt"],[3,"TransactionBackupController"],[3,"TransactionChunk"],[3,"TransactionBackup"],[3,"TransactionRestoreOpt"],[3,"TransactionRestoreController"],[3,"PreheatedTransactionRestore"],[3,"TransactionRestoreBatchController"],[3,"BackupCoordinatorOpt"],[3,"BackupCoordinator"],[3,"RestoreCoordinatorOpt"],[3,"RestoreCoordinator"],[3,"VerifyCoordinator"],[3,"MetadataView"],[3,"BackupStorageState"],[3,"EpochEndingBackupMeta"],[3,"StateSnapshotBackupMeta"],[3,"TransactionBackupMeta"],[3,"CommandAdapter"],[3,"LocalFsOpt"],[3,"LocalFs"],[3,"TextLine"],[8,"BackupStorage"],[4,"StorageOpt"],[3,"BackupServiceClientOpt"],[3,"BackupServiceClient"],[8,"ReadRecordBytes"],[8,"BackupStorageExt"],[3,"GlobalBackupOpt"],[3,"GlobalRestoreOpt"],[4,"RestoreRunMode"],[13,"Restore"],[3,"GlobalRestoreOptions"],[3,"TrustedWaypointOpt"],[3,"MetadataCacheOpt"],[3,"CommandAdapterOpt"],[3,"ShellSafeName"],[3,"RocksdbOpt"]]},\
"backup_service":{"doc":"","i":[[5,"start_backup_service","backup_service","",null,[[["socketaddr",4],["arc",3],["diemdb",3]],["runtime",3]]]],"p":[]},\
"boogie_backend":{"doc":"","i":[[0,"boogie_wrapper","boogie_backend","Wrapper around the boogie program. Allows to call boogie …",null,null],[3,"BoogieWrapper","boogie_backend::boogie_wrapper","Represents the boogie wrapper.",null,null],[12,"env","","",0,null],[12,"targets","","",0,null],[12,"writer","","",0,null],[12,"options","","",0,null],[12,"boogie_file_id","","",0,null],[3,"BoogieOutput","","Output of a boogie run.",null,null],[12,"errors","","All errors which could be parsed from the output.",1,null],[12,"all_output","","Full output as a string.",1,null],[4,"BoogieErrorKind","","Kind of boogie error.",null,null],[13,"Assertion","","",2,null],[13,"Inconclusive","","",2,null],[3,"BoogieError","","A boogie error.",null,null],[12,"kind","","",3,null],[12,"loc","","",3,null],[12,"message","","",3,null],[12,"execution_trace","","",3,null],[12,"model","","",3,null],[4,"TraceEntry","","A trace entry.",null,null],[13,"AtLocation","","",4,null],[13,"Temporary","","",4,null],[13,"Result","","",4,null],[13,"Abort","","",4,null],[11,"call_boogie","","Calls boogie on the given file. On success, returns a …",0,[[],[["result",6],["boogieoutput",3]]]],[11,"call_boogie_and_verify_output","","Calls boogie and analyzes output.",0,[[],["result",6]]],[4,"ValueArrayRep","","Represents whether the Vector type is implemented at the …",null,null],[13,"ValueArrayIsMap","","",5,null],[13,"ValueArrayIsSeq","","",5,null],[3,"Model","","Represents a boogie model.",null,null],[4,"ModelValue","","Represents a model value.",null,null],[13,"Literal","","",6,null],[13,"List","","",6,null],[13,"Map","","",6,null],[3,"ModelValueVector","","Represents a spare representation of a model value vector.",null,null],[11,"pretty_or_raw","","Pretty prints the given model value which has given type. …",6,[[["boogiewrapper",3],["model",3],["type",4]],["rcdoc",3]]],[11,"pretty","","Pretty prints the given model value which has given type.",6,[[["boogiewrapper",3],["model",3],["type",4]],[["rcdoc",3],["option",4]]]],[11,"pretty_vec_or_struct_body","","Pretty prints the body of a struct or vector, enclosed in …",6,[[["rcdoc",3],["vec",3]],["rcdoc",3]]],[11,"pretty_vector","","Pretty prints a vector.",6,[[["boogiewrapper",3],["model",3],["type",4]],[["rcdoc",3],["option",4]]]],[11,"pretty_struct","","Pretty prints a struct.",6,[[["boogiewrapper",3],["model",3],["structid",3],["moduleid",3]],[["rcdoc",3],["option",4]]]],[0,"bytecode_translator","boogie_backend","This module translates the bytecode of a module to Boogie …",null,null],[3,"BoogieTranslator","boogie_backend::bytecode_translator","",null,null],[3,"ModuleTranslator","","",null,null],[11,"new","","",7,[[["boogieoptions",3],["globalenv",3],["codewriter",3],["functiontargetsholder",3]]]],[11,"translate","","",7,[[]]],[0,"options","boogie_backend","",null,null],[3,"BoogieOptions","boogie_backend::options","Boogie options.",null,null],[12,"boogie_exe","","Path to the boogie executable.",8,null],[12,"z3_exe","","Path to the z3 executable.",8,null],[12,"use_cvc4","","Whether to use cvc4.",8,null],[12,"cvc4_exe","","Path to the cvc4 executable.",8,null],[12,"debug_trace","","Whether to generate debug trace code.",8,null],[12,"boogie_flags","","List of flags to pass on to boogie.",8,null],[12,"use_array_theory","","Whether to use native array theory.",8,null],[12,"generate_smt","","Whether to produce an SMT file for each verification …",8,null],[12,"native_equality","","Whether native instead of stratified equality should be …",8,null],[12,"type_requires","","A string determining the type of requires used for …",8,null],[12,"stratification_depth","","The depth until which stratified functions are expanded.",8,null],[12,"aggressive_func_inline","","A string to be used to inline a function of medium size. …",8,null],[12,"func_inline","","A string to be used to inline a function of small size. …",8,null],[12,"serialize_bound","","A bound to apply to the length of serialization results.",8,null],[12,"bench_repeat","","How many times to call the prover backend for the …",8,null],[12,"vector_using_sequences","","Whether to use the sequence theory as the internal …",8,null],[12,"random_seed","","A seed for the prover.",8,null],[12,"proc_cores","","The number of cores to use for parallel processing of …",8,null],[12,"vc_timeout","","A (soft) timeout for the solver, per verification …",8,null],[12,"keep_artifacts","","Whether Boogie output and log should be saved.",8,null],[12,"eager_threshold","","Eager threshold for quantifier instantiation.",8,null],[12,"lazy_threshold","","Lazy threshold for quantifier instantiation.",8,null],[12,"stable_test_output","","Whether to use the new Boogie <code>{:debug ..}</code> attribute for …",8,null],[12,"num_instances","","Number of Boogie instances to be run concurrently.",8,null],[12,"sequential_task","","Whether to run Boogie instances sequentially.",8,null],[11,"get_boogie_command","","Returns command line to call boogie.",8,[[],[["string",3],["vec",3]]]],[11,"get_boogie_log_file","","Returns name of file where to log boogie output.",8,[[],["string",3]]],[11,"adjust_timeout","","Adjust a timeout value, given in seconds, for the runtime …",8,[[]]],[11,"from","boogie_backend::boogie_wrapper","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"equivalent","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"equivalent","","",5,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"equivalent","","",6,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","boogie_backend::bytecode_translator","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","boogie_backend::options","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"test_only_hash","","",8,[[],["hashvalue",3]]],[11,"vzip","","",8,[[]]],[11,"clone","boogie_backend::boogie_wrapper","",2,[[],["boogieerrorkind",4]]],[11,"clone","","",6,[[],["modelvalue",4]]],[11,"clone","boogie_backend::options","",8,[[],["boogieoptions",3]]],[11,"default","","",8,[[]]],[11,"cmp","boogie_backend::boogie_wrapper","",6,[[["modelvalue",4]],["ordering",4]]],[11,"eq","","",2,[[["boogieerrorkind",4]]]],[11,"eq","","",5,[[["valuearrayrep",4]]]],[11,"eq","","",6,[[["modelvalue",4]]]],[11,"ne","","",6,[[["modelvalue",4]]]],[11,"partial_cmp","","",6,[[["modelvalue",4]],[["option",4],["ordering",4]]]],[11,"lt","","",6,[[["modelvalue",4]]]],[11,"le","","",6,[[["modelvalue",4]]]],[11,"gt","","",6,[[["modelvalue",4]]]],[11,"ge","","",6,[[["modelvalue",4]]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","boogie_backend::options","",8,[[["formatter",3]],["result",6]]],[11,"hash","boogie_backend::boogie_wrapper","",6,[[]]],[11,"deserialize","boogie_backend::options","",8,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]]],"p":[[3,"BoogieWrapper"],[3,"BoogieOutput"],[4,"BoogieErrorKind"],[3,"BoogieError"],[4,"TraceEntry"],[4,"ValueArrayRep"],[4,"ModelValue"],[3,"BoogieTranslator"],[3,"BoogieOptions"],[3,"Model"],[3,"ModelValueVector"],[3,"ModuleTranslator"]]},\
"borrow_graph":{"doc":"","i":[[0,"graph","borrow_graph","",null,null],[3,"BorrowGraph","borrow_graph::graph","",null,null],[11,"new","","creates an empty borrow graph",0,[[]]],[11,"is_mutable","","checks if the given reference is mutable or not",0,[[["refid",3]]]],[11,"new_ref","","Adds a new reference to the borrow graph Fails if the id …",0,[[["refid",3]]]],[11,"borrowed_by","","Return the references borrowing the <code>id</code> reference The …",0,[[["refid",3]]]],[11,"between_edges","","Return the edges between parent and child",0,[[["refid",3]],["vec",3]]],[11,"out_edges","","Return the outgoing edges from id",0,[[["refid",3]],["vec",3]]],[11,"in_edges","","Return the incoming edges into id",0,[[["refid",3]],["vec",3]]],[11,"add_strong_borrow","","Add a strong (exact) epsilon borrow from <code>parent_id</code> to …",0,[[["refid",3]]]],[11,"add_strong_field_borrow","","Add a strong (exact) field borrow from <code>parent_id</code> to …",0,[[["refid",3]]]],[11,"add_weak_borrow","","Add a weak (prefix) epsilon borrow from <code>parent_id</code> to …",0,[[["refid",3]]]],[11,"add_weak_field_borrow","","Add a weak (prefix) field borrow from <code>parent_id</code> to …",0,[[["refid",3]]]],[11,"release","","Remove reference <code>id</code> from the graph Fixes any transitive …",0,[[["refid",3]]]],[11,"leq","","checks if <code>self</code> covers <code>other</code>",0,[[]]],[11,"remap_refs","","Utility for remapping the reference ids according the …",0,[[["btreemap",3]]]],[11,"join","","Joins other into self It adds only \'unmatched\' edges from …",0,[[]]],[11,"contains_id","","Checks if the current reference is in the graph",0,[[["refid",3]]]],[11,"all_refs","","Returns all ref ids in the map",0,[[],[["btreeset",3],["refid",3]]]],[11,"display","","Prints out a view of the borrow graph",0,[[]]],[0,"references","borrow_graph","",null,null],[3,"RefID","borrow_graph::references","Unique identifier for the reference",null,null],[11,"new","","Creates a new reference id from the given number",1,[[]]],[11,"number","","Returns the number representing this reference id.",1,[[]]],[11,"from","borrow_graph::graph","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","borrow_graph::references","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"clone","borrow_graph::graph","",0,[[],["borrowgraph",3]]],[11,"clone","borrow_graph::references","",1,[[],["refid",3]]],[11,"default","borrow_graph::graph","",0,[[],["borrowgraph",3]]],[11,"cmp","borrow_graph::references","",1,[[["refid",3]],["ordering",4]]],[11,"eq","borrow_graph::graph","",0,[[["borrowgraph",3]]]],[11,"ne","","",0,[[["borrowgraph",3]]]],[11,"eq","borrow_graph::references","",1,[[["refid",3]]]],[11,"ne","","",1,[[["refid",3]]]],[11,"partial_cmp","","",1,[[["refid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["refid",3]]]],[11,"le","","",1,[[["refid",3]]]],[11,"gt","","",1,[[["refid",3]]]],[11,"ge","","",1,[[["refid",3]]]],[11,"fmt","borrow_graph::graph","",0,[[["formatter",3]],["result",6]]],[11,"fmt","borrow_graph::references","",1,[[["formatter",3]],["result",6]]]],"p":[[3,"BorrowGraph"],[3,"RefID"]]},\
"bounded_executor":{"doc":"A bounded tokio [<code>Handle</code>]. Only a bounded number of tasks …","i":[[3,"BoundedExecutor","bounded_executor","",null,null],[11,"new","","Create a new <code>BoundedExecutor</code> from an existing tokio […",0,[[["handle",3]]]],[11,"spawn","","Spawn a [<code>Future</code>] on the <code>BoundedExecutor</code>. This function is …",0,[[]]],[11,"try_spawn","","Try to spawn a [<code>Future</code>] on the <code>BoundedExecutor</code>. If the …",0,[[],[["result",4],["joinhandle",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[],["boundedexecutor",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"BoundedExecutor"]]},\
"bytecode":{"doc":"","i":[[0,"access_path","bytecode","This file contains an abstraction of concrete <em>access paths</em>…",null,null],[3,"AbsStructType","bytecode::access_path","Fully qualified type identifier <code>base</code> bound to type …",null,null],[4,"Addr","","Building block for abstraction of addresses",null,null],[13,"Constant","","Account address constant",0,null],[13,"Footprint","","Account address read from given access path. This …",0,null],[6,"AbsAddr","","Abstraction of an address: non-empty set of constant or …",null,null],[3,"GlobalKey","","Abstraction of a key of type <code>addr</code>::<code>ty</code> in global storage",null,null],[4,"Root","","Root of an access path: a global, local, or return …",null,null],[13,"Global","","A key in global storage",1,null],[13,"Local","","A local variable or formal parameter",1,null],[13,"Return","","A return variable",1,null],[4,"Offset","","Offset of an access path: either a field, vector index, …",null,null],[13,"Field","","Index into contents of a struct by field offset",2,null],[13,"VectorIndex","","Unknown index into a vector",2,null],[13,"Global","","A type index into global storage. Only follows a field or …",2,null],[3,"AccessPath","","A unique identifier for a memory cell: root followed by …",null,null],[8,"AccessPathMap","","Trait for a domain that can be viewed as a partial map …",null,null],[10,"get_access_path","","",3,[[["accesspath",3]],["option",4]]],[8,"FootprintDomain","","Trait for an abstract domain that can represent footprint …",null,null],[10,"make_footprint","","Create a footprint value for access path <code>ap</code>",4,[[["accesspath",3]],["option",4]]],[11,"constant","","Create a constant address from concrete address <code>a</code>",0,[[["biguint",3]]]],[11,"footprint","","Create a footprint address from access path <code>ap</code>",0,[[["accesspath",3]]]],[11,"is_constant","","Return <code>true</code> if <code>self</code> is a constant",0,[[]]],[11,"add_struct_offset","","Convert this address-typed abstract value A into an …",0,[[["type",4],["moduleid",3],["structid",3],["vec",3]],["accesspath",3]]],[11,"display","","Return a wrapper of <code>self</code> that implements <code>Display</code> using <code>env</code>",0,[[["functiontarget",3]],["addrdisplay",3]]],[11,"constant","","Create a constant address from concrete address <code>a</code>",5,[[["biguint",3]]]],[11,"footprint","","Create a footprint address from access path <code>ap</code>",5,[[["accesspath",3]]]],[11,"formal","","Create a footprint address read from formal <code>temp_index</code>",5,[[["tempindex",6]]]],[11,"is_constant","","Return <code>true</code> if <code>self</code> is a constant",5,[[]]],[11,"substitute_footprint","","Substitute all occurences of Footprint(ap) in <code>self</code> by …",5,[[["accesspathmap",8]]]],[11,"add_struct_offset","","Return a new abstract address by adding the offset …",5,[[["type",4],["moduleid",3],["structid",3],["vec",3]]]],[11,"add_offset","","Return a new abstract address by adding the offset <code>offset</code> …",5,[[["offset",4]]]],[11,"prepend","","Produce a new version of <code>self</code> with <code>prefix</code> prepended to …",5,[[["accesspath",3]]]],[11,"footprint_paths","","return an iterator over the footprint paths in <code>self</code>",5,[[]]],[11,"display","","Return a wrapper of <code>self</code> that implements <code>Display</code> using <code>env</code>",5,[[["functiontarget",3]],["absaddrdisplay",3]]],[11,"new","","",6,[[["vec",3],["structid",3],["moduleid",3],["type",4],["absaddr",6]]]],[11,"constant","","Create a constant <code>GlobalKey</code> using constant <code>addr</code> and type …",6,[[["absstructtype",3],["biguint",3]]]],[11,"is_statically_known","","Return true if the address and type parameters of this …",6,[[]]],[11,"substitute_footprint","","Substitute all occurences of Footprint(ap) in <code>self.addr</code> …",6,[[["accesspathmap",8]]]],[11,"display","","Return a wrapper of <code>self</code> that implements <code>Display</code> using <code>env</code>",6,[[["functiontarget",3]],["globalkeydisplay",3]]],[11,"local","","Create a <code>Root</code> from local variable <code>index</code>",1,[[["tempindex",6]]]],[11,"global","","Create a <code>Root</code> from global storage key <code>key</code>",1,[[["globalkey",3]]]],[11,"ret","","Create a <code>Root</code> from return variable <code>index</code>",1,[[]]],[11,"get_type","","Return the type of <code>self</code> in <code>fun</code>",1,[[["functiontarget",3]],["type",4]]],[11,"is_formal","","Return true if this variable is a formal parameter of <code>fun</code>",1,[[["functiontarget",3]]]],[11,"substitute_footprint","","Replace all footprint paths in <code>self</code> using <code>actuals</code> and …",1,[[["accesspathmap",8]]]],[11,"display","","Return a wrapper of <code>self</code> that implements <code>Display</code> using <code>env</code>",1,[[["functiontarget",3]],["rootdisplay",3]]],[11,"global","","",2,[[["type",4],["moduleid",3],["structid",3],["vec",3]]]],[11,"field","","",2,[[]]],[11,"get_type","","Get the type of offset <code>base</code>/<code>self</code> in function <code>fun</code>",2,[[["type",4],["globalenv",3]],["type",4]]],[11,"substitute_footprint","","Bind free type variables in <code>self</code> to <code>type_actuals</code>",2,[[]]],[11,"is_statically_known","","Return true if this offset is the same in all concrete …",2,[[]]],[11,"display","","Return a wrapper of <code>self</code> that implements <code>Display</code> using <code>env</code>",2,[[["type",4],["globalenv",3]],["offsetdisplay",3]]],[11,"new","","",7,[[["root",4],["vec",3],["offset",4]]]],[11,"new_root","","",7,[[["root",4]]]],[11,"new_global","","",7,[[["vec",3],["structid",3],["moduleid",3],["type",4],["absaddr",6]]]],[11,"new_address_constant","","",7,[[["structid",3],["moduleid",3],["biguint",3],["type",4],["vec",3]]]],[11,"new_global_constant","","",7,[[["absstructtype",3],["biguint",3]]]],[11,"new_local","","",7,[[["tempindex",6]]]],[11,"into","","Unpack <code>self</code> into its root and offsets",7,[[]]],[11,"root","","",7,[[],["root",4]]],[11,"offsets","","",7,[[]]],[11,"add_offset","","extend this access path by adding offset <code>o</code> to the end",7,[[["offset",4]]]],[11,"get_type","","Return the type of this access path",7,[[["functiontarget",3]],["type",4]]],[11,"prepend","","prepend <code>prefix</code> to self by swapping <code>self</code>\'s root for …",7,[[]]],[11,"prepend_addrs","","Construct a new abstract address by prepending the …",7,[[["absaddr",6]],["absaddr",6]]],[11,"substitute_footprint","","Replace all footprint paths in <code>self</code> using <code>actuals</code> and …",7,[[["accesspathmap",8]],["absaddr",6]]],[11,"display","","Return a wrapper of <code>self</code> that implements <code>Display</code> using <code>env</code>",7,[[["functiontarget",3]],["accesspathdisplay",3]]],[11,"new","","",8,[[["type",4],["moduleid",3],["structid",3],["vec",3]]]],[11,"get_type","","Return the concrete type of <code>self</code>",8,[[],["type",4]]],[11,"substitute_footprint","","Substitue the open types in self.types with caller …",8,[[]]],[11,"normalize","","Returns a normalized representation of this type if it …",8,[[["globalenv",3]],[["option",4],["structtag",3]]]],[11,"is_closed","","Return <code>true</code> if <code>self</code> has no type variables or if all of …",8,[[]]],[11,"display","","Return a wrapper of <code>self</code> that implements <code>Display</code> using <code>env</code>",8,[[["globalenv",3]],["absstructtypedisplay",3]]],[3,"AbsStructTypeDisplay","","",null,null],[3,"AddrDisplay","","",null,null],[3,"AbsAddrDisplay","","",null,null],[3,"GlobalKeyDisplay","","",null,null],[3,"RootDisplay","","",null,null],[3,"OffsetDisplay","","",null,null],[3,"AccessPathDisplay","","",null,null],[0,"access_path_trie","bytecode","The obvious approach to abstracting a set of concrete …",null,null],[3,"TrieNode","bytecode::access_path_trie","A node in the access Trie: <code>data</code> associated with the …",null,null],[3,"AccessPathTrie","","Set of (root node, child) associations",null,null],[11,"new","","",9,[[]]],[11,"new_opt","","",9,[[["option",4]]]],[11,"join_data_opt","","Like join, but gracefully handles <code>Non</code> data fields by …",9,[[["option",4]],["joinresult",4]]],[11,"data","","",9,[[],["option",4]]],[11,"children","","",9,[[],["mapdomain",3]]],[11,"entry","","",9,[[["offset",4]],[["offset",4],["entry",4],["trienode",3]]]],[11,"get_offset","","Return the node mapped to <code>o</code> from self (if any)",9,[[["offset",4]],["option",4]]],[11,"substitute_footprint","","Bind caller data in <code>actuals</code>, <code>type_actuals</code>, and <code>sub_map</code> to …",9,[[["accesspathmap",8]]]],[11,"iter_values","","Apply <code>f</code> to each node in <code>self</code>",9,[[]]],[11,"update_access_path_weak","","Like <code>update_access_path</code>, but always performs a weak update",10,[[["option",4],["accesspath",3]]]],[11,"update_access_path","","Update <code>ap</code> in <code>global</code>. Performs a strong update if the base …",10,[[["option",4],["accesspath",3]]]],[11,"join_access_path","","Join the value bound to <code>ap</code> with <code>node</code>",10,[[["trienode",3],["accesspath",3]]]],[11,"bind_local","","Bind <code>data</code> to <code>local_index</code> in the trie, overwriting the old …",10,[[["tempindex",6]]]],[11,"bind_local_node","","Bind <code>node</code> to <code>local_index</code> in the trie, overwriting the old …",10,[[["tempindex",6],["trienode",3]]]],[11,"remove_local","","Remove the value bound to the local variable <code>local_index</code>",10,[[["tempindex",6]]]],[11,"bind_return","","Bind <code>data</code> to the return variable <code>return_index</code>",10,[[]]],[11,"get_local","","Retrieve the data associated with <code>local_index</code> in the …",10,[[["tempindex",6]],["option",4]]],[11,"get_local_node","","Retrieve the node associated with <code>local_index</code> in the …",10,[[["tempindex",6]],[["option",4],["trienode",3]]]],[11,"local_exists","","Return <code>true</code> if there is a value bound to local variable …",10,[[["tempindex",6]]]],[11,"substitute_footprint","","Bind caller data in <code>actuals</code>, <code>type_actuals</code>, and <code>sub_map</code> to …",10,[[["accesspathmap",8]]]],[11,"substitute_footprint_skip_data","","Same as <code>substitute_footprint</code>, but does not change the <code>data</code>…",10,[[["accesspathmap",8]]]],[11,"iter_values","","Apply <code>f</code> to each node in <code>self</code>",10,[[]]],[11,"iter_paths_opt","","Apply <code>f</code> to each (access path, Option(data)) pair encoded …",10,[[]]],[11,"iter_paths","","Apply <code>f</code> to each (access path, data) pair encoded in <code>self</code>",10,[[]]],[11,"display","","Return a wrapper that of <code>self</code> that implements <code>Display</code> …",10,[[["functiontarget",3]],["accesspathtriedisplay",3]]],[3,"AccessPathTrieDisplay","","",null,null],[0,"annotations","bytecode","",null,null],[3,"Annotations","bytecode::annotations","A container for an extensible, dynamically typed set of …",null,null],[11,"has","","Tests whether annotation of type T is present.",11,[[]]],[11,"get","","Gets annotation of type T.",11,[[],["option",4]]],[11,"get_or_default_mut","","Gets annotation of type T or creates one from default.",11,[[]]],[11,"set","","Sets annotation of type T.",11,[[["any",8]]]],[11,"remove","","Removes annotation of type T.",11,[[],[["box",3],["option",4]]]],[0,"borrow_analysis","bytecode","Data flow analysis computing borrow information for …",null,null],[4,"EdgeDomain","bytecode::borrow_analysis","Borrow graph edge abstract domain.",null,null],[13,"Top","","",12,null],[13,"EdgeSet","","",12,null],[3,"BorrowInfo","","",null,null],[11,"get_children","","Gets the children of this node.",13,[[["borrownode",4]],[["vec",3],["borrownode",4]]]],[11,"get_parents","","Gets the parents of this node.",13,[[["borrownode",4]],[["vec",3],["borrownode",4]]]],[11,"get_incoming","","Gets incoming edges (together with sources) of this node.",13,[[["borrownode",4]],[["btreemap",3],["borrownode",4],["edgedomain",4]]]],[11,"is_in_use","","Checks whether a node is in use. A node is used if it is …",13,[[["borrownode",4]]]],[11,"is_unchecked","","Checks whether this is an unchecked node.",13,[[["borrownode",4]]]],[11,"is_moved","","Checks whether this is a moved node.",13,[[["borrownode",4]]]],[11,"is_spliced","","Checks whether this is an spliced node.",13,[[["borrownode",4]]]],[11,"dying_nodes","","Returns nodes which are dying from this to the next …",13,[[["borrowinfo",3]],[["borrownode",4],["vec",3]]]],[11,"is_empty","","",13,[[]]],[11,"borrow_info_str","","",13,[[["functiontarget",3]],["string",3]]],[3,"BorrowInfoAtCodeOffset","","",null,null],[12,"before","","",14,null],[12,"after","","",14,null],[3,"BorrowAnnotation","","Borrow annotation computed by the borrow analysis …",null,null],[11,"get_borrow_info_at","","",15,[[["codeoffset",6]],[["option",4],["borrowinfoatcodeoffset",3]]]],[3,"BorrowAnalysisProcessor","","Borrow analysis processor.",null,null],[11,"new","","",16,[[],["box",3]]],[5,"format_borrow_annotation","","Format a borrow annotation.",null,[[["codeoffset",6],["functiontarget",3]],[["string",3],["option",4]]]],[0,"clean_and_optimize","bytecode","",null,null],[3,"CleanAndOptimizeProcessor","bytecode::clean_and_optimize","",null,null],[11,"new","","",17,[[],["box",3]]],[0,"compositional_analysis","bytecode","",null,null],[3,"SummaryCache","bytecode::compositional_analysis","Provides access to procedure summaries that have already …",null,null],[11,"new","","",18,[[["functiontargetsholder",3],["globalenv",3]]]],[11,"get","","Return a summary for <code>fun_id</code>. Returns None if <code>fun_id</code> is a …",18,[[["funid",3],["qualifiedid",3]],["option",4]]],[11,"global_env","","",18,[[],["globalenv",3]]],[8,"CompositionalAnalysis","","Trait that lifts an intraprocedural analysis into a …",null,null],[10,"to_summary","","Specifies mapping from elements of dataflow analysis …",19,[[["functiontarget",3]]]],[11,"summarize","","Computes a postcondition for the procedure <code>data</code> and then …",19,[[["functionenv",3],["functiondata",3]],["functiondata",3]]],[0,"data_invariant_instrumentation","bytecode","Transformation which injects data invariants into the …",null,null],[3,"DataInvariantInstrumentationProcessor","bytecode::data_invariant_instrumentation","",null,null],[11,"new","","",20,[[],["box",3]]],[0,"dataflow_analysis","bytecode","Adapted from AbstractInterpreter for Bytecode, this …",null,null],[4,"JoinResult","bytecode::dataflow_analysis","",null,null],[13,"Unchanged","","",21,null],[13,"Changed","","",21,null],[11,"combine","","",21,[[["joinresult",4]],["joinresult",4]]],[8,"AbstractDomain","","",null,null],[10,"join","","",22,[[],["joinresult",4]]],[3,"SetDomain","","",null,null],[12,"0","","",23,null],[11,"singleton","","",23,[[]]],[11,"of_set","","",23,[[["btreeset",3]]]],[3,"MapDomain","","",null,null],[12,"0","","",24,null],[11,"insert_join","","join <code>v</code> with self[k] if <code>k</code> is bound, insert <code>v</code> otherwise",24,[[]]],[3,"BlockState","","",null,null],[12,"pre","","",25,null],[12,"post","","",25,null],[6,"StateMap","","",null,null],[8,"TransferFunctions","","Take a pre-state + instruction and mutate it to produce a …",null,null],[16,"State","","",26,null],[18,"BACKWARD","","",26,null],[11,"execute_block","","",26,[[["stacklesscontrolflowgraph",3],["blockid",6]]]],[10,"execute","","",26,[[["codeoffset",6],["bytecode",4]]]],[8,"DataflowAnalysis","","",null,null],[11,"analyze_function","","",27,[[["stacklesscontrolflowgraph",3]],["statemap",6]]],[11,"state_per_instruction","","Takes the StateMap resulting from <code>analyze_function</code> and …",27,[[["statemap",6],["stacklesscontrolflowgraph",3]],[["btreemap",3],["codeoffset",6]]]],[0,"debug_instrumentation","bytecode","Transformation which injects trace instructions which are …",null,null],[3,"DebugInstrumenter","bytecode::debug_instrumentation","",null,null],[11,"new","","",28,[[],["box",3]]],[0,"eliminate_imm_refs","bytecode","",null,null],[3,"EliminateImmRefsProcessor","bytecode::eliminate_imm_refs","",null,null],[11,"new","","",29,[[],["box",3]]],[3,"EliminateImmRefs","","",null,null],[0,"function_data_builder","bytecode","Provides a builder for <code>FunctionData</code>, including building …",null,null],[3,"FunctionDataBuilder","bytecode::function_data_builder","A builder for <code>FunctionData</code>.",null,null],[12,"fun_env","","",30,null],[12,"data","","",30,null],[11,"new","","Creates a new builder.",30,[[["functionenv",3],["functiondata",3]]]],[11,"global_env","","Gets the global env associated with this builder.",30,[[],["globalenv",3]]],[11,"get_target","","Gets a function target viewpoint on this builder. This …",30,[[],["functiontarget",3]]],[11,"new_temp","","Allocates a new temporary.",30,[[["type",4]],["tempindex",6]]],[11,"add_return","","Add a return parameter.",30,[[["type",4]]]],[11,"set_loc","","Sets the default location.",30,[[["loc",3]]]],[11,"set_loc_and_vc_info","","Sets the default location as well as information about …",30,[[["loc",3]]]],[11,"set_loc_from_attr","","Sets the default location from a code attribute id.",30,[[["attrid",3]]]],[11,"set_loc_from_node","","Sets the default location from a node id.",30,[[["nodeid",3]]]],[11,"get_loc","","Gets the location from the bytecode attribute.",30,[[["attrid",3]],["loc",3]]],[11,"get_current_loc","","Gets the default location.",30,[[],["loc",3]]],[11,"new_attr","","Creates a new bytecode attribute id with default location.",30,[[],["attrid",3]]],[11,"new_label","","Creates a new branching label for bytecode.",30,[[],["label",3]]],[11,"new_node","","Creates a new expression node id, using current default …",30,[[["vec",3],["option",4],["type",4]],["nodeid",3]]],[11,"mk_bool_const","","Make a boolean constant expression.",30,[[],["exp",4]]],[11,"mk_call","","Makes a Call expression.",30,[[["type",4],["vec",3],["exp",4],["operation",4]],["exp",4]]],[11,"mk_ite","","Makes an if-then-else expression.",30,[[["exp",4]],["exp",4]]],[11,"mk_bool_call","","Makes a Call expression with boolean result type.",30,[[["operation",4],["vec",3],["exp",4]],["exp",4]]],[11,"mk_not","","Make a boolean not expression.",30,[[["exp",4]],["exp",4]]],[11,"mk_eq","","Make an equality expression.",30,[[["exp",4]],["exp",4]]],[11,"mk_and","","Make an and expression.",30,[[["exp",4]],["exp",4]]],[11,"mk_or","","Make an or expression.",30,[[["exp",4]],["exp",4]]],[11,"mk_implies","","Make an implies expression.",30,[[["exp",4]],["exp",4]]],[11,"mk_builtin_num_const","","Make a numerical expression for some of the builtin …",30,[[["operation",4]],["exp",4]]],[11,"mk_join_bool","","Join an iterator of boolean expressions with a boolean …",30,[[["operation",4]],[["option",4],["exp",4]]]],[11,"mk_join_opt_bool","","Join two boolean optional expression with binary operator.",30,[[["exp",4],["operation",4],["option",4]],[["option",4],["exp",4]]]],[11,"mk_vector_quant_opt","","Creates a quantifier over the content of a vector. The …",30,[[["type",4],["quantkind",4],["exp",4]],[["option",4],["exp",4]]]],[11,"mk_mem_quant_opt","","Creates a quantifier over the content of memory. The …",30,[[["qualifiedid",3],["quantkind",4],["structid",3]],[["option",4],["exp",4]]]],[11,"mk_decl","","Makes a local variable declaration.",30,[[["symbol",3],["type",4],["option",4],["exp",4]],["localvardecl",3]]],[11,"mk_symbol","","Makes a symbol from a string.",30,[[],["symbol",3]]],[11,"mk_type_domain","","Makes a type domain expression.",30,[[["type",4]],["exp",4]]],[11,"mk_field_select","","Makes an expression which selects a field from a struct.",30,[[["fieldenv",3],["exp",4]],["exp",4]]],[11,"mk_temporary","","Makes an expression for a temporary.",30,[[["tempindex",6]],["exp",4]]],[11,"mk_local","","Makes an expression for a named local.",30,[[["type",4]],["exp",4]]],[11,"get_memory_of_node","","Get\'s the memory associated with a Call(Global,..) or …",30,[[["nodeid",3]],[["qualifiedid",3],["structid",3]]]],[11,"emit","","Emits a bytecode.",30,[[["bytecode",4]]]],[11,"emit_vec","","Emits a sequence of bytecodes.",30,[[["vec",3],["bytecode",4]]]],[11,"emit_with","","Emits a bytecode via a function which takes a freshly …",30,[[]]],[11,"set_next_debug_comment","","Sets the debug comment which should be associated with …",30,[[["string",3]]]],[11,"clear_next_debug_comment","","This will clear the state that the next <code>self.emit_with(..)</code>…",30,[[]]],[11,"emit_let","","Emits a let: this creates a new temporary and emits an …",30,[[["exp",4]]]],[11,"emit_let_havoc","","Emits a new temporary with a havoced value of given type.",30,[[["type",4]]]],[0,"function_target","bytecode","",null,null],[3,"FunctionTarget","bytecode::function_target","A FunctionTarget is a drop-in replacement for a …",null,null],[12,"func_env","","",31,null],[12,"data","","",31,null],[3,"FunctionData","","Holds the owned data belonging to a FunctionTarget, …",null,null],[12,"variant","","The function variant.",32,null],[12,"code","","The bytecode.",32,null],[12,"local_types","","The locals, including parameters.",32,null],[12,"return_types","","The return types.",32,null],[12,"acquires_global_resources","","The set of global resources acquired by  this function.",32,null],[12,"locations","","A map from byte code attribute to source code location.",32,null],[12,"debug_comments","","A map from byte code attribute to comments associated …",32,null],[12,"vc_infos","","A map from byte code attribute to a message to be printed …",32,null],[12,"annotations","","Annotations associated with this function.",32,null],[12,"name_to_index","","A map from local names to temp indices in code.",32,null],[12,"modify_targets","","A cache of targets modified by this function.",32,null],[3,"FunctionDataBuilder","","",null,null],[12,"data","","",33,null],[12,"next_attr_index","","",33,null],[11,"new","","",31,[[["functionenv",3],["functiondata",3]],["functiontarget",3]]],[11,"get_name","","Returns the name of this function.",31,[[],["symbol",3]]],[11,"get_id","","Gets the id of this function.",31,[[],["funid",3]]],[11,"symbol_pool","","Shortcut for accessing the symbol pool.",31,[[],["symbolpool",3]]],[11,"module_env","","Shortcut for accessing the module env of this function.",31,[[],["moduleenv",3]]],[11,"global_env","","Shortcut for accessing the global env of this function.",31,[[],["globalenv",3]]],[11,"get_loc","","Returns the location of this function.",31,[[],["loc",3]]],[11,"get_bytecode_loc","","Returns the location of the bytecode with the given …",31,[[["attrid",3]],["loc",3]]],[11,"get_debug_comment","","Returns the debug comment, if any, associated with the …",31,[[["attrid",3]],[["string",3],["option",4]]]],[11,"get_vc_info","","Returns the verification condition message, if any, …",31,[[["attrid",3]],[["string",3],["option",4]]]],[11,"is_native","","Returns true if this function is native.",31,[[]]],[11,"is_intrinsic","","Returns true if this function is marked as intrinsic",31,[[]]],[11,"is_opaque","","Returns true if this function is opaque.",31,[[]]],[11,"is_public","","Returns true if this function is public.",31,[[]]],[11,"is_mutating","","Returns true if this function mutates any references …",31,[[]]],[11,"get_type_parameters","","Returns the type parameters associated with this function.",31,[[],[["vec",3],["typeparameter",3]]]],[11,"get_return_type","","Returns return type at given index.",31,[[],["type",4]]],[11,"get_return_types","","Returns return types of this function.",31,[[]]],[11,"get_return_count","","Returns the number of return values of this function.",31,[[]]],[11,"get_parameter_count","","Return the number of parameters of this function",31,[[]]],[11,"get_parameters","","Return an iterator over this function\'s parameters",31,[[],["range",3]]],[11,"get_local_name","","Get the name to be used for a local. If the local has a …",31,[[],["symbol",3]]],[11,"has_local_user_name","","Return true if this local has a user name.",31,[[]]],[11,"get_local_index","","Get the index corresponding to a local name. The name …",31,[[["symbol",3]],["option",4]]],[11,"get_local_count","","Gets the number of locals of this function, including …",31,[[]]],[11,"get_user_local_count","","Gets the number of user declared locals of this function, …",31,[[]]],[11,"get_non_parameter_locals","","Return an iterator over the non-parameter local variables …",31,[[],["range",3]]],[11,"is_temporary","","Returns true if the index is for a temporary, not user …",31,[[]]],[11,"get_local_type","","Gets the type of the local at index. This must use an …",31,[[],["type",4]]],[11,"get_spec","","Returns specification associated with this function.",31,[[],["spec",3]]],[11,"is_pragma_true","","Returns the value of a boolean pragma for this function. …",31,[[]]],[11,"get_bytecode","","Gets the bytecode.",31,[[]]],[11,"get_annotations","","Gets annotations.",31,[[],["annotations",3]]],[11,"get_acquires_global_resources","","Gets acquired resources",31,[[]]],[11,"get_mut_ref_return_index","","Gets index of return parameter for a reference input …",31,[[],["option",4]]],[11,"get_mut_ref_mapping","","Returns a map from &mut parameters to the return indices …",31,[[],[["btreemap",3],["tempindex",6]]]],[11,"is_unchecked_param","","Returns true if this is an unchecked parameter.",31,[[["tempindex",6]]]],[11,"get_modify_targets_for_type","","Gets modify targets for a type",31,[[["qualifiedid",3]],[["option",4],["vec",3]]]],[11,"get_modify_targets","","Gets all modify targets",31,[[],["btreemap",3]]],[11,"new","","Creates new function target data.",32,[[["vec",3],["vec",3],["vec",3],["structid",3],["btreemap",3],["type",4],["functionenv",3],["attrid",3],["loc",3],["bytecode",4]]]],[11,"next_free_attr_index","","Computes the next available index for AttrId.",32,[[]]],[11,"next_free_label_index","","Computes the next available index for Label.",32,[[]]],[11,"rename_vars","","Apply a variable renaming to this data, adjusting …",32,[[]]],[11,"fork","","Fork this function data, without annotations, and mark it …",32,[[["functionvariant",4]]]],[6,"AnnotationFormatter","","A function which is called to display the value of an …",null,null],[11,"register_annotation_formatter","","Register a formatter. Each function target processor …",31,[[["annotationformatter",6],["box",3]]]],[11,"register_annotation_formatters_for_test","","Tests use this function to register all relevant …",31,[[]]],[0,"function_target_pipeline","bytecode","",null,null],[3,"FunctionTargetsHolder","bytecode::function_target_pipeline","A data structure which holds data for multiple function …",null,null],[4,"FunctionVariant","","Describes a function target variant.",null,null],[13,"Baseline","","The baseline variant which was created from the original …",34,null],[13,"Verification","","The variant which is instrumented for verification. Only …",34,null],[8,"FunctionTargetProcessor","","A trait describing a function target processor.",null,null],[11,"process","","Processes a function variant. Takes as parameter a target …",35,[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]]],[11,"process_and_maybe_remove","","Same as <code>process</code> but can return None to indicate that the …",35,[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],[["option",4],["functiondata",3]]]],[10,"name","","Returns a name for this processor. This should be …",35,[[],["string",3]]],[11,"initialize","","A function which is called once before any <code>process</code> call …",35,[[["globalenv",3],["functiontargetsholder",3]]]],[11,"finalize","","A function which is called once after the last <code>process</code> …",35,[[["globalenv",3],["functiontargetsholder",3]]]],[3,"FunctionTargetPipeline","","A processing pipeline for function targets.",null,null],[11,"get_funs","","Get an iterator for all functions this holder.",36,[[]]],[11,"get_funs_and_variants","","Gets an iterator for all functions and variants in this …",36,[[]]],[11,"add_target","","Adds a new function target. The target will be …",36,[[["functionenv",3]]]],[11,"get_target","","Gets a function target for read-only consumption, for the …",36,[[["functionenv",3],["functionvariant",4]],["functiontarget",3]]],[11,"get_annotated_target","","Gets the function target from the variant which owns the …",36,[[["functionenv",3]],["functiontarget",3]]],[11,"get_target_variants","","Gets all available variants for function.",36,[[["functionenv",3]],[["vec",3],["functionvariant",4]]]],[11,"get_targets","","Gets targets for all available variants.",36,[[["functionenv",3]],["vec",3]]],[11,"get_data","","Gets function data for a variant.",36,[[["functionvariant",4],["qualifiedid",3]],[["option",4],["functiondata",3]]]],[11,"get_data_mut","","Gets mutable function data for a variant.",36,[[["functionvariant",4],["qualifiedid",3]],[["functiondata",3],["option",4]]]],[11,"remove_target_data","","Removes function data for a variant.",36,[[["functionvariant",4],["qualifiedid",3]],["functiondata",3]]],[11,"insert_target_data","","Sets function data for a function\'s variant.",36,[[["functiondata",3],["functionvariant",4],["qualifiedid",3]]]],[11,"add_processor","","Adds a processor to this pipeline. Processor will be …",37,[[["box",3],["functiontargetprocessor",8]]]],[11,"run","","Runs the pipeline on all functions in the targets holder. …",37,[[["string",3],["option",4],["functiontargetsholder",3],["globalenv",3]]]],[0,"global_invariant_instrumentation","bytecode","",null,null],[3,"GlobalInvariantInstrumentationProcessor","bytecode::global_invariant_instrumentation","",null,null],[11,"new","","",38,[[],["box",3]]],[0,"global_invariant_instrumentation_v2","bytecode","",null,null],[3,"GlobalInvariantInstrumentationProcessorV2","bytecode::global_invariant_instrumentation_v2","",null,null],[11,"new","","",39,[[],["box",3]]],[0,"graph","bytecode","",null,null],[3,"Reducible","bytecode::graph","",null,null],[12,"loop_headers","","",40,null],[12,"natural_loops","","",40,null],[3,"Graph","","",null,null],[11,"new","","This function creates a graph from a set of nodes (with a …",41,[[["vec",3],["vec",3]]]],[11,"compute_reducible","","This function computes the loop headers and natural loops …",41,[[],[["option",4],["reducible",3]]]],[0,"livevar_analysis","bytecode","",null,null],[3,"LiveVarInfoAtCodeOffset","bytecode::livevar_analysis","The annotation for live variable analysis. For each code …",null,null],[12,"before","","",42,null],[12,"after","","",42,null],[3,"LiveVarAnnotation","","",null,null],[11,"get_live_var_info_at","","",43,[[["codeoffset",6]],[["option",4],["livevarinfoatcodeoffset",3]]]],[3,"LiveVarAnalysisProcessor","","",null,null],[11,"new","","",44,[[],["box",3]]],[11,"new_no_annotate","","",44,[[],["box",3]]],[5,"format_livevar_annotation","","Format a live variable annotation.",null,[[["codeoffset",6],["functiontarget",3]],[["string",3],["option",4]]]],[0,"loop_analysis","bytecode","",null,null],[3,"LoopAnnotation","bytecode::loop_analysis","",null,null],[12,"loop_targets","","",45,null],[3,"LoopAnalysisProcessor","","",null,null],[11,"new","","",46,[[],["box",3]]],[0,"memory_instrumentation","bytecode","",null,null],[3,"MemoryInstrumentationProcessor","bytecode::memory_instrumentation","",null,null],[11,"new","","",47,[[],["box",3]]],[0,"mut_ref_instrumentation","bytecode","",null,null],[3,"FunctionEnv","bytecode::mut_ref_instrumentation","",null,null],[12,"module_env","","Reference to enclosing module.",48,null],[3,"Loc","","LocationsA location, consisting of a FileId and a span in …",null,null],[4,"Type","","Represents a type.",null,null],[13,"Primitive","","",49,null],[13,"Tuple","","",49,null],[13,"Vector","","",49,null],[13,"Struct","","",49,null],[13,"TypeParameter","","",49,null],[13,"Reference","","",49,null],[13,"Fun","","",49,null],[13,"TypeDomain","","",49,null],[13,"ResourceDomain","","",49,null],[13,"TypeLocal","","",49,null],[13,"Error","","",49,null],[13,"Var","","",49,null],[3,"MutRefInstrumenter","","",null,null],[11,"new","","",50,[[],["box",3]]],[0,"options","bytecode","",null,null],[3,"ProverOptions","bytecode::options","",null,null],[12,"generate_only","","Whether to only generate backend code.",51,null],[12,"native_stubs","","Whether to generate stubs for native functions.",51,null],[12,"minimize_execution_trace","","Whether to minimize execution traces in errors.",51,null],[12,"omit_model_debug","","Whether to omit debug information in generated model.",51,null],[12,"stable_test_output","","Whether output for e.g. diagnosis shall be …",51,null],[12,"verify_scope","","Scope of what functions to verify.",51,null],[12,"resource_wellformed_axiom","","[deprecated] Whether to emit global axiom that resources …",51,null],[12,"assume_wellformed_on_access","","Whether to assume wellformedness when elements are read …",51,null],[12,"assume_invariant_on_access","","Whether to assume a global invariant when the related …",51,null],[12,"deep_pack_unpack","","Whether pack/unpack should recurse over the structure.",51,null],[12,"debug_trace","","Whether to automatically debug trace values of …",51,null],[12,"report_warnings","","Report warnings. This is not on by default. We may turn …",51,null],[12,"dump_bytecode","","Whether to dump the transformed stackless bytecode to a …",51,null],[12,"num_instances","","Number of Boogie instances to be run concurrently.",51,null],[12,"sequential_task","","Whether to run Boogie instances sequentially.",51,null],[11,"get","","",51,[[["globalenv",3]],[["proveroptions",3],["rc",3]]]],[0,"packed_types_analysis","bytecode","",null,null],[5,"get_packed_types","bytecode::packed_types_analysis","Get all closed types that may be packed by (1) genesis …",null,[[["globalenv",3],["functiontargetsholder",3]],[["btreeset",3],["structtag",3]]]],[3,"PackedTypesProcessor","","",null,null],[11,"new","","",52,[[],["box",3]]],[0,"reaching_def_analysis","bytecode","",null,null],[4,"Def","bytecode::reaching_def_analysis","The reaching definitions we are capturing. Currently we …",null,null],[13,"Alias","","",53,null],[3,"ReachingDefAnnotation","","The annotation for reaching definitions. For each code …",null,null],[3,"ReachingDefProcessor","","",null,null],[11,"new","","",54,[[],["box",3]]],[11,"copy_propagation","","Perform copy propagation based on reaching definitions …",54,[[["vec",3],["reachingdefannotation",3],["bytecode",4],["functiontarget",3]],[["vec",3],["bytecode",4]]]],[5,"format_reaching_def_annotation","","Format a reaching definition annotation.",null,[[["codeoffset",6],["functiontarget",3]],[["string",3],["option",4]]]],[0,"read_write_set_analysis","bytecode","The read/write set analysis is a compositional analysis …",null,null],[3,"ReadWriteSetProcessor","bytecode::read_write_set_analysis","",null,null],[11,"new","","",55,[[],["box",3]]],[5,"get_read_write_set","","",null,[[["globalenv",3],["functiontargetsholder",3]]]],[5,"format_read_write_set_annotation","","Return a string representation of the summary for <code>target</code>",null,[[["codeoffset",6],["functiontarget",3]],[["string",3],["option",4]]]],[0,"spec_instrumentation","bytecode","",null,null],[3,"SpecInstrumentationProcessor","bytecode::spec_instrumentation","Spec Instrumenter",null,null],[11,"new","","",56,[[],["box",3]]],[0,"stackless_bytecode","bytecode","",null,null],[3,"Label","bytecode::stackless_bytecode","A label for a branch destination.",null,null],[11,"new","","",57,[[]]],[11,"as_usize","","",57,[[]]],[3,"AttrId","","An id for an attribute attached to an instruction.",null,null],[11,"new","","",58,[[]]],[11,"as_usize","","",58,[[]]],[3,"SpecBlockId","","An id for a spec block. A spec block can contain assumes …",null,null],[11,"new","","",59,[[]]],[11,"as_usize","","",59,[[]]],[4,"AssignKind","","The kind of an assignment in the bytecode.",null,null],[13,"Copy","","The assign copies the lhs value.",60,null],[13,"Move","","The assign moves the lhs value.",60,null],[13,"Store","","The assign stores the lhs value.",60,null],[4,"Constant","","A constant value.",null,null],[13,"Bool","","",61,null],[13,"U8","","",61,null],[13,"U64","","",61,null],[13,"U128","","",61,null],[13,"Address","","",61,null],[13,"ByteArray","","",61,null],[4,"Operation","","An operation -- target of a call. This contains user …",null,null],[13,"Function","","",62,null],[13,"Pack","","",62,null],[13,"Unpack","","",62,null],[13,"MoveTo","","",62,null],[13,"MoveFrom","","",62,null],[13,"Exists","","",62,null],[13,"BorrowLoc","","",62,null],[13,"BorrowField","","",62,null],[13,"BorrowGlobal","","",62,null],[13,"GetField","","",62,null],[13,"GetGlobal","","",62,null],[13,"Destroy","","",62,null],[13,"ReadRef","","",62,null],[13,"WriteRef","","",62,null],[13,"FreezeRef","","",62,null],[13,"Havoc","","",62,null],[13,"WriteBack","","",62,null],[13,"Splice","","",62,null],[13,"UnpackRef","","",62,null],[13,"PackRef","","",62,null],[13,"UnpackRefDeep","","",62,null],[13,"PackRefDeep","","",62,null],[13,"CastU8","","",62,null],[13,"CastU64","","",62,null],[13,"CastU128","","",62,null],[13,"Not","","",62,null],[13,"Add","","",62,null],[13,"Sub","","",62,null],[13,"Mul","","",62,null],[13,"Div","","",62,null],[13,"Mod","","",62,null],[13,"BitOr","","",62,null],[13,"BitAnd","","",62,null],[13,"Xor","","",62,null],[13,"Shl","","",62,null],[13,"Shr","","",62,null],[13,"Lt","","",62,null],[13,"Gt","","",62,null],[13,"Le","","",62,null],[13,"Ge","","",62,null],[13,"Or","","",62,null],[13,"And","","",62,null],[13,"Eq","","",62,null],[13,"Neq","","",62,null],[13,"TraceLocal","","",62,null],[13,"TraceReturn","","",62,null],[13,"TraceAbort","","",62,null],[13,"EmitEvent","","",62,null],[13,"EventStoreDiverge","","",62,null],[11,"can_abort","","Returns true of the operation can cause abort.",62,[[]]],[4,"BorrowNode","","A borrow node -- used in memory operations.",null,null],[13,"GlobalRoot","","",63,null],[13,"LocalRoot","","",63,null],[13,"Reference","","",63,null],[11,"get_ref","","",63,[[],[["option",4],["tempindex",6]]]],[4,"StrongEdge","","A borrow edge with a known offset -- used in memory …",null,null],[13,"Empty","","",64,null],[13,"Offset","","",64,null],[4,"BorrowEdge","","A borrow edge -- used in memory operations",null,null],[13,"Weak","","",65,null],[13,"Strong","","",65,null],[4,"PropKind","","A specification property kind.",null,null],[13,"Assert","","",66,null],[13,"Assume","","",66,null],[13,"Modifies","","",66,null],[3,"AbortAction","","Information about the action to take on abort. The label …",null,null],[12,"0","","",67,null],[12,"1","","",67,null],[4,"Bytecode","","The stackless bytecode.",null,null],[13,"SpecBlock","","",68,null],[13,"Assign","","",68,null],[13,"Call","","",68,null],[13,"Ret","","",68,null],[13,"Load","","",68,null],[13,"Branch","","",68,null],[13,"Jump","","",68,null],[13,"Label","","",68,null],[13,"Abort","","",68,null],[13,"Nop","","",68,null],[13,"SaveMem","","",68,null],[13,"SaveSpecVar","","",68,null],[13,"Prop","","",68,null],[11,"get_attr_id","","",68,[[],["attrid",3]]],[11,"is_exit","","",68,[[]]],[11,"is_return","","",68,[[]]],[11,"is_unconditional_branch","","",68,[[]]],[11,"is_conditional_branch","","",68,[[]]],[11,"is_branch","","",68,[[]]],[11,"branch_dests","","Return the destination(s) if self is a branch/jump …",68,[[],[["vec",3],["label",3]]]],[11,"label_offsets","","Returns a mapping from labels to code offsets.",68,[[],[["label",3],["btreemap",3],["codeoffset",6]]]],[11,"get_successors","","Return the successor offsets of this instruction. In …",68,[[["btreemap",3],["codeoffset",6]],[["vec",3],["codeoffset",6]]]],[11,"get_exits","","Returns the code offsets at which the code exits(aborts …",68,[[],[["vec",3],["codeoffset",6]]]],[11,"remap_all_vars","","Remaps variables in the instruction.",68,[[["functiontarget",3]]]],[11,"remap_src_vars","","Remaps variables in source position in the instruction.",68,[[["functiontarget",3]]]],[11,"modifies","","Return the temporaries this instruction modifies. This …",68,[[["functiontarget",3]],[["tempindex",6],["vec",3]]]],[11,"display","","Creates a format object for a bytecode in context of a …",68,[[["functiontarget",3],["btreemap",3]],["bytecodedisplay",3]]],[3,"BytecodeDisplay","","A display object for a bytecode.",null,null],[11,"display","","Creates a format object for a bytecode in context of a …",62,[[["functiontarget",3]],["operationdisplay",3]]],[3,"OperationDisplay","","A display object for an operation.",null,null],[3,"BorrowNodeDisplay","","A display object for a borrow node.",null,null],[11,"display","","Creates a format object for a borrow node in context of a …",63,[[["functiontarget",3]],["borrownodedisplay",3]]],[0,"stackless_bytecode_generator","bytecode","",null,null],[3,"StacklessBytecodeGenerator","bytecode::stackless_bytecode_generator","",null,null],[11,"new","","",69,[[["functionenv",3]]]],[11,"generate_function","","",69,[[],["functiondata",3]]],[11,"generate_bytecode","","",69,[[["btreemap",3],["codeoffset",6],["movebytecode",4]]]],[0,"stackless_control_flow_graph","bytecode","Adapted from control_flow_graph for Bytecode, this module …",null,null],[6,"BlockId","bytecode::stackless_control_flow_graph","",null,null],[4,"BlockContent","","",null,null],[13,"Basic","","",70,null],[12,"lower","bytecode::stackless_control_flow_graph::BlockContent","",71,null],[12,"upper","","",71,null],[13,"Dummy","bytecode::stackless_control_flow_graph","",70,null],[3,"StacklessControlFlowGraph","","",null,null],[11,"new_forward","","",72,[[]]],[11,"new_backward","","If from_all_blocks is false, perform backward analysis …",72,[[]]],[11,"successors","","",72,[[["blockid",6]],["vec",3]]],[11,"content","","",72,[[["blockid",6]],["blockcontent",4]]],[11,"blocks","","",72,[[],[["blockid",6],["vec",3]]]],[11,"entry_block","","",72,[[],["blockid",6]]],[11,"exit_block","","",72,[[],["blockid",6]]],[11,"instr_indexes","","",72,[[["blockid",6]],[["option",4],["box",3]]]],[11,"num_blocks","","",72,[[]]],[11,"is_dummmy","","",72,[[["blockid",6]]]],[11,"display","","",72,[[]]],[0,"usage_analysis","bytecode","",null,null],[5,"get_used_memory","bytecode::usage_analysis","",null,[[["functiontarget",3]],["btreeset",3]]],[5,"get_modified_memory","","",null,[[["functiontarget",3]],["btreeset",3]]],[5,"get_directly_modified_memory","","",null,[[["functiontarget",3]],["btreeset",3]]],[3,"UsageProcessor","","",null,null],[11,"new","","",73,[[],["box",3]]],[0,"verification_analysis","bytecode","Analysis which computes an annotation for each function …",null,null],[3,"VerificationInfo","bytecode::verification_analysis","The annotation for information about verification.",null,null],[12,"verified","","Whether the function is target of verification.",74,null],[12,"inlined","","Whether the function needs to have an inlined variant …",74,null],[5,"get_info","","Get verification information for this function.",null,[[["functiontarget",3]],["verificationinfo",3]]],[3,"VerificationAnalysisProcessor","","",null,null],[11,"new","","",75,[[],["box",3]]],[5,"print_targets_for_test","bytecode","Print function targets for testing and debugging.",null,[[["globalenv",3],["functiontargetsholder",3]],["string",3]]],[11,"from","bytecode::access_path","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"equivalent","","",8,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"equivalent","","",0,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"equivalent","","",6,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"equivalent","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"equivalent","","",2,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"equivalent","","",7,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_string","","",76,[[],["string",3]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_string","","",77,[[],["string",3]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_string","","",78,[[],["string",3]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_string","","",79,[[],["string",3]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_string","","",80,[[],["string",3]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_string","","",81,[[],["string",3]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_string","","",82,[[],["string",3]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"from","bytecode::access_path_trie","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"equivalent","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"equivalent","","",10,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_string","","",83,[[],["string",3]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"from","bytecode::annotations","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","bytecode::borrow_analysis","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"equivalent","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"equivalent","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","bytecode::clean_and_optimize","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","bytecode::compositional_analysis","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","bytecode::data_invariant_instrumentation","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","bytecode::dataflow_analysis","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"equivalent","","",21,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"equivalent","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"equivalent","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"equivalent","","",25,[[]]],[11,"from","bytecode::debug_instrumentation","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","bytecode::eliminate_imm_refs","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"from","bytecode::function_data_builder","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","bytecode::function_target","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","bytecode::function_target_pipeline","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"equivalent","","",34,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","bytecode::global_invariant_instrumentation","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","bytecode::global_invariant_instrumentation_v2","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","bytecode::graph","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","bytecode::livevar_analysis","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","bytecode::loop_analysis","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","bytecode::memory_instrumentation","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","bytecode::mut_ref_instrumentation","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"equivalent","","",85,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"equivalent","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","bytecode::options","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"test_only_hash","","",51,[[],["hashvalue",3]]],[11,"vzip","","",51,[[]]],[11,"from","bytecode::packed_types_analysis","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","bytecode::reaching_def_analysis","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"equivalent","","",53,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","bytecode::read_write_set_analysis","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","bytecode::spec_instrumentation","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","bytecode::stackless_bytecode","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"equivalent","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"equivalent","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"equivalent","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"equivalent","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"to_string","","",61,[[],["string",3]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"equivalent","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"equivalent","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"equivalent","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"to_string","","",64,[[],["string",3]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"equivalent","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"to_string","","",65,[[],["string",3]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"equivalent","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"equivalent","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"equivalent","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"equivalent","","",68,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_string","","",87,[[],["string",3]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_string","","",88,[[],["string",3]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_string","","",89,[[],["string",3]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"from","bytecode::stackless_bytecode_generator","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"from","bytecode::stackless_control_flow_graph","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"from","bytecode::usage_analysis","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"from","bytecode::verification_analysis","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"partial_cmp","bytecode::mut_ref_instrumentation","",85,[[["loc",3]],[["ordering",4],["option",4]]]],[11,"lt","","",85,[[["loc",3]]]],[11,"le","","",85,[[["loc",3]]]],[11,"gt","","",85,[[["loc",3]]]],[11,"ge","","",85,[[["loc",3]]]],[11,"partial_cmp","","",49,[[["type",4]],[["ordering",4],["option",4]]]],[11,"lt","","",49,[[["type",4]]]],[11,"le","","",49,[[["type",4]]]],[11,"gt","","",49,[[["type",4]]]],[11,"ge","","",49,[[["type",4]]]],[11,"hash","","",49,[[]]],[11,"default","","",85,[[],["loc",3]]],[11,"clone","","",49,[[],["type",4]]],[11,"clone","","",48,[[],["functionenv",3]]],[11,"clone","","",85,[[],["loc",3]]],[11,"cmp","","",85,[[["loc",3]],["ordering",4]]],[11,"cmp","","",49,[[["type",4]],["ordering",4]]],[11,"eq","","",49,[[["type",4]]]],[11,"ne","","",49,[[["type",4]]]],[11,"eq","","",85,[[["loc",3]]]],[11,"ne","","",85,[[["loc",3]]]],[11,"fmt","","",49,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",48,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",85,[[["formatter",3]],[["result",4],["error",3]]]],[11,"get_access_path","bytecode::access_path_trie","",10,[[["accesspath",3]],["option",4]]],[11,"make_footprint","bytecode","",5,[[["accesspath",3]],["option",4]]],[11,"join","bytecode::access_path_trie","",9,[[],["joinresult",4]]],[11,"join","","",10,[[],["joinresult",4]]],[11,"join","bytecode::borrow_analysis","",12,[[],["joinresult",4]]],[11,"join","","",13,[[],["joinresult",4]]],[11,"join","bytecode::dataflow_analysis","",23,[[],["joinresult",4]]],[11,"join","","",24,[[],["joinresult",4]]],[11,"process","bytecode::borrow_analysis","",16,[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]]],[11,"name","","",16,[[],["string",3]]],[11,"process","bytecode::clean_and_optimize","",17,[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]]],[11,"name","","",17,[[],["string",3]]],[11,"process","bytecode::data_invariant_instrumentation","",20,[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]]],[11,"name","","",20,[[],["string",3]]],[11,"process","bytecode::debug_instrumentation","",28,[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]]],[11,"name","","",28,[[],["string",3]]],[11,"process","bytecode::eliminate_imm_refs","",29,[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]]],[11,"name","","",29,[[],["string",3]]],[11,"process","bytecode::global_invariant_instrumentation","",38,[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]]],[11,"name","","",38,[[],["string",3]]],[11,"initialize","","",38,[[["globalenv",3],["functiontargetsholder",3]]]],[11,"process","bytecode::global_invariant_instrumentation_v2","",39,[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]]],[11,"name","","",39,[[],["string",3]]],[11,"initialize","","",39,[[["globalenv",3],["functiontargetsholder",3]]]],[11,"process","bytecode::livevar_analysis","",44,[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]]],[11,"name","","",44,[[],["string",3]]],[11,"process","bytecode::loop_analysis","",46,[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]]],[11,"name","","",46,[[],["string",3]]],[11,"process","bytecode::memory_instrumentation","",47,[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]]],[11,"name","","",47,[[],["string",3]]],[11,"process","bytecode::mut_ref_instrumentation","",50,[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]]],[11,"name","","",50,[[],["string",3]]],[11,"process","bytecode::packed_types_analysis","",52,[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]]],[11,"name","","",52,[[],["string",3]]],[11,"process","bytecode::reaching_def_analysis","",54,[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]]],[11,"name","","",54,[[],["string",3]]],[11,"process","bytecode::read_write_set_analysis","",55,[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]]],[11,"name","","",55,[[],["string",3]]],[11,"initialize","bytecode::spec_instrumentation","",56,[[["globalenv",3],["functiontargetsholder",3]]]],[11,"process","","",56,[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]]],[11,"name","","",56,[[],["string",3]]],[11,"process","bytecode::usage_analysis","",73,[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]]],[11,"name","","",73,[[],["string",3]]],[11,"process","bytecode::verification_analysis","",75,[[["functionenv",3],["functiondata",3],["functiontargetsholder",3]],["functiondata",3]]],[11,"name","","",75,[[],["string",3]]],[11,"into_iter","bytecode::dataflow_analysis","",23,[[]]],[11,"clone","bytecode::access_path","",8,[[],["absstructtype",3]]],[11,"clone","","",0,[[],["addr",4]]],[11,"clone","","",6,[[],["globalkey",3]]],[11,"clone","","",1,[[],["root",4]]],[11,"clone","","",2,[[],["offset",4]]],[11,"clone","","",7,[[],["accesspath",3]]],[11,"clone","bytecode::access_path_trie","",9,[[],["trienode",3]]],[11,"clone","","",10,[[],["accesspathtrie",3]]],[11,"clone","bytecode::borrow_analysis","",12,[[],["edgedomain",4]]],[11,"clone","","",13,[[],["borrowinfo",3]]],[11,"clone","bytecode::dataflow_analysis","",21,[[],["joinresult",4]]],[11,"clone","","",23,[[],["setdomain",3]]],[11,"clone","","",24,[[],["mapdomain",3]]],[11,"clone","","",25,[[],["blockstate",3]]],[11,"clone","bytecode::function_target","",31,[[]]],[11,"clone","bytecode::function_target_pipeline","",34,[[],["functionvariant",4]]],[11,"clone","bytecode::options","",51,[[],["proveroptions",3]]],[11,"clone","bytecode::reaching_def_analysis","",53,[[],["def",4]]],[11,"clone","bytecode::stackless_bytecode","",57,[[],["label",3]]],[11,"clone","","",58,[[],["attrid",3]]],[11,"clone","","",59,[[],["specblockid",3]]],[11,"clone","","",60,[[],["assignkind",4]]],[11,"clone","","",61,[[],["constant",4]]],[11,"clone","","",62,[[],["operation",4]]],[11,"clone","","",63,[[],["borrownode",4]]],[11,"clone","","",64,[[],["strongedge",4]]],[11,"clone","","",65,[[],["borrowedge",4]]],[11,"clone","","",66,[[],["propkind",4]]],[11,"clone","","",67,[[],["abortaction",3]]],[11,"clone","","",68,[[],["bytecode",4]]],[11,"clone","bytecode::stackless_control_flow_graph","",70,[[],["blockcontent",4]]],[11,"clone","bytecode::verification_analysis","",74,[[],["verificationinfo",3]]],[11,"default","bytecode::access_path_trie","",9,[[]]],[11,"default","","",10,[[]]],[11,"default","bytecode::annotations","",11,[[],["annotations",3]]],[11,"default","bytecode::borrow_analysis","",12,[[]]],[11,"default","","",13,[[],["borrowinfo",3]]],[11,"default","bytecode::dataflow_analysis","",23,[[]]],[11,"default","","",24,[[]]],[11,"default","bytecode::function_target_pipeline","",36,[[],["functiontargetsholder",3]]],[11,"default","","",37,[[],["functiontargetpipeline",3]]],[11,"default","bytecode::livevar_analysis","",42,[[],["livevarinfoatcodeoffset",3]]],[11,"default","","",43,[[],["livevarannotation",3]]],[11,"default","bytecode::loop_analysis","",45,[[],["loopannotation",3]]],[11,"default","bytecode::options","",51,[[]]],[11,"default","bytecode::reaching_def_analysis","",86,[[],["reachingdefannotation",3]]],[11,"default","bytecode::verification_analysis","",74,[[],["verificationinfo",3]]],[11,"cmp","bytecode::access_path","",8,[[["absstructtype",3]],["ordering",4]]],[11,"cmp","","",0,[[["addr",4]],["ordering",4]]],[11,"cmp","","",6,[[["globalkey",3]],["ordering",4]]],[11,"cmp","","",1,[[["root",4]],["ordering",4]]],[11,"cmp","","",2,[[["offset",4]],["ordering",4]]],[11,"cmp","","",7,[[["accesspath",3]],["ordering",4]]],[11,"cmp","bytecode::borrow_analysis","",12,[[["edgedomain",4]],["ordering",4]]],[11,"cmp","bytecode::dataflow_analysis","",23,[[["setdomain",3]],["ordering",4]]],[11,"cmp","","",24,[[["mapdomain",3]],["ordering",4]]],[11,"cmp","","",25,[[["blockstate",3]],["ordering",4]]],[11,"cmp","bytecode::function_target_pipeline","",34,[[["functionvariant",4]],["ordering",4]]],[11,"cmp","bytecode::reaching_def_analysis","",53,[[["def",4]],["ordering",4]]],[11,"cmp","bytecode::stackless_bytecode","",57,[[["label",3]],["ordering",4]]],[11,"cmp","","",58,[[["attrid",3]],["ordering",4]]],[11,"cmp","","",59,[[["specblockid",3]],["ordering",4]]],[11,"cmp","","",60,[[["assignkind",4]],["ordering",4]]],[11,"cmp","","",61,[[["constant",4]],["ordering",4]]],[11,"cmp","","",63,[[["borrownode",4]],["ordering",4]]],[11,"cmp","","",64,[[["strongedge",4]],["ordering",4]]],[11,"cmp","","",66,[[["propkind",4]],["ordering",4]]],[11,"eq","bytecode::access_path","",8,[[["absstructtype",3]]]],[11,"ne","","",8,[[["absstructtype",3]]]],[11,"eq","","",0,[[["addr",4]]]],[11,"ne","","",0,[[["addr",4]]]],[11,"eq","","",6,[[["globalkey",3]]]],[11,"ne","","",6,[[["globalkey",3]]]],[11,"eq","","",1,[[["root",4]]]],[11,"ne","","",1,[[["root",4]]]],[11,"eq","","",2,[[["offset",4]]]],[11,"ne","","",2,[[["offset",4]]]],[11,"eq","","",7,[[["accesspath",3]]]],[11,"ne","","",7,[[["accesspath",3]]]],[11,"eq","bytecode::access_path_trie","",9,[[["trienode",3]]]],[11,"ne","","",9,[[["trienode",3]]]],[11,"eq","","",10,[[["accesspathtrie",3]]]],[11,"ne","","",10,[[["accesspathtrie",3]]]],[11,"eq","bytecode::borrow_analysis","",12,[[["edgedomain",4]]]],[11,"ne","","",12,[[["edgedomain",4]]]],[11,"eq","","",13,[[["borrowinfo",3]]]],[11,"ne","","",13,[[["borrowinfo",3]]]],[11,"eq","bytecode::dataflow_analysis","",21,[[["joinresult",4]]]],[11,"eq","","",23,[[["setdomain",3]]]],[11,"ne","","",23,[[["setdomain",3]]]],[11,"eq","","",24,[[["mapdomain",3]]]],[11,"ne","","",24,[[["mapdomain",3]]]],[11,"eq","","",25,[[["blockstate",3]]]],[11,"ne","","",25,[[["blockstate",3]]]],[11,"eq","bytecode::function_target_pipeline","",34,[[["functionvariant",4]]]],[11,"eq","bytecode::reaching_def_analysis","",53,[[["def",4]]]],[11,"ne","","",53,[[["def",4]]]],[11,"eq","bytecode::stackless_bytecode","",57,[[["label",3]]]],[11,"ne","","",57,[[["label",3]]]],[11,"eq","","",58,[[["attrid",3]]]],[11,"ne","","",58,[[["attrid",3]]]],[11,"eq","","",59,[[["specblockid",3]]]],[11,"ne","","",59,[[["specblockid",3]]]],[11,"eq","","",60,[[["assignkind",4]]]],[11,"eq","","",61,[[["constant",4]]]],[11,"ne","","",61,[[["constant",4]]]],[11,"eq","","",62,[[["operation",4]]]],[11,"ne","","",62,[[["operation",4]]]],[11,"eq","","",63,[[["borrownode",4]]]],[11,"ne","","",63,[[["borrownode",4]]]],[11,"eq","","",64,[[["strongedge",4]]]],[11,"ne","","",64,[[["strongedge",4]]]],[11,"eq","","",65,[[["borrowedge",4]]]],[11,"ne","","",65,[[["borrowedge",4]]]],[11,"eq","","",66,[[["propkind",4]]]],[11,"eq","","",67,[[["abortaction",3]]]],[11,"ne","","",67,[[["abortaction",3]]]],[11,"eq","","",68,[[["bytecode",4]]]],[11,"ne","","",68,[[["bytecode",4]]]],[11,"partial_cmp","bytecode::access_path","",8,[[["absstructtype",3]],[["option",4],["ordering",4]]]],[11,"lt","","",8,[[["absstructtype",3]]]],[11,"le","","",8,[[["absstructtype",3]]]],[11,"gt","","",8,[[["absstructtype",3]]]],[11,"ge","","",8,[[["absstructtype",3]]]],[11,"partial_cmp","","",0,[[["addr",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["addr",4]]]],[11,"le","","",0,[[["addr",4]]]],[11,"gt","","",0,[[["addr",4]]]],[11,"ge","","",0,[[["addr",4]]]],[11,"partial_cmp","","",6,[[["globalkey",3]],[["option",4],["ordering",4]]]],[11,"lt","","",6,[[["globalkey",3]]]],[11,"le","","",6,[[["globalkey",3]]]],[11,"gt","","",6,[[["globalkey",3]]]],[11,"ge","","",6,[[["globalkey",3]]]],[11,"partial_cmp","","",1,[[["root",4]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["root",4]]]],[11,"le","","",1,[[["root",4]]]],[11,"gt","","",1,[[["root",4]]]],[11,"ge","","",1,[[["root",4]]]],[11,"partial_cmp","","",2,[[["offset",4]],[["option",4],["ordering",4]]]],[11,"lt","","",2,[[["offset",4]]]],[11,"le","","",2,[[["offset",4]]]],[11,"gt","","",2,[[["offset",4]]]],[11,"ge","","",2,[[["offset",4]]]],[11,"partial_cmp","","",7,[[["accesspath",3]],[["option",4],["ordering",4]]]],[11,"lt","","",7,[[["accesspath",3]]]],[11,"le","","",7,[[["accesspath",3]]]],[11,"gt","","",7,[[["accesspath",3]]]],[11,"ge","","",7,[[["accesspath",3]]]],[11,"partial_cmp","bytecode::access_path_trie","",9,[[["trienode",3]],[["option",4],["ordering",4]]]],[11,"lt","","",9,[[["trienode",3]]]],[11,"le","","",9,[[["trienode",3]]]],[11,"gt","","",9,[[["trienode",3]]]],[11,"ge","","",9,[[["trienode",3]]]],[11,"partial_cmp","","",10,[[["accesspathtrie",3]],[["option",4],["ordering",4]]]],[11,"lt","","",10,[[["accesspathtrie",3]]]],[11,"le","","",10,[[["accesspathtrie",3]]]],[11,"gt","","",10,[[["accesspathtrie",3]]]],[11,"ge","","",10,[[["accesspathtrie",3]]]],[11,"partial_cmp","bytecode::borrow_analysis","",12,[[["edgedomain",4]],[["option",4],["ordering",4]]]],[11,"lt","","",12,[[["edgedomain",4]]]],[11,"le","","",12,[[["edgedomain",4]]]],[11,"gt","","",12,[[["edgedomain",4]]]],[11,"ge","","",12,[[["edgedomain",4]]]],[11,"partial_cmp","","",13,[[["borrowinfo",3]],[["option",4],["ordering",4]]]],[11,"lt","","",13,[[["borrowinfo",3]]]],[11,"le","","",13,[[["borrowinfo",3]]]],[11,"gt","","",13,[[["borrowinfo",3]]]],[11,"ge","","",13,[[["borrowinfo",3]]]],[11,"partial_cmp","bytecode::dataflow_analysis","",23,[[["setdomain",3]],[["option",4],["ordering",4]]]],[11,"lt","","",23,[[["setdomain",3]]]],[11,"le","","",23,[[["setdomain",3]]]],[11,"gt","","",23,[[["setdomain",3]]]],[11,"ge","","",23,[[["setdomain",3]]]],[11,"partial_cmp","","",24,[[["mapdomain",3]],[["option",4],["ordering",4]]]],[11,"lt","","",24,[[["mapdomain",3]]]],[11,"le","","",24,[[["mapdomain",3]]]],[11,"gt","","",24,[[["mapdomain",3]]]],[11,"ge","","",24,[[["mapdomain",3]]]],[11,"partial_cmp","","",25,[[["blockstate",3]],[["option",4],["ordering",4]]]],[11,"lt","","",25,[[["blockstate",3]]]],[11,"le","","",25,[[["blockstate",3]]]],[11,"gt","","",25,[[["blockstate",3]]]],[11,"ge","","",25,[[["blockstate",3]]]],[11,"partial_cmp","bytecode::function_target_pipeline","",34,[[["functionvariant",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","bytecode::reaching_def_analysis","",53,[[["def",4]],[["option",4],["ordering",4]]]],[11,"lt","","",53,[[["def",4]]]],[11,"le","","",53,[[["def",4]]]],[11,"gt","","",53,[[["def",4]]]],[11,"ge","","",53,[[["def",4]]]],[11,"partial_cmp","bytecode::stackless_bytecode","",57,[[["label",3]],[["option",4],["ordering",4]]]],[11,"lt","","",57,[[["label",3]]]],[11,"le","","",57,[[["label",3]]]],[11,"gt","","",57,[[["label",3]]]],[11,"ge","","",57,[[["label",3]]]],[11,"partial_cmp","","",58,[[["attrid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",58,[[["attrid",3]]]],[11,"le","","",58,[[["attrid",3]]]],[11,"gt","","",58,[[["attrid",3]]]],[11,"ge","","",58,[[["attrid",3]]]],[11,"partial_cmp","","",59,[[["specblockid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",59,[[["specblockid",3]]]],[11,"le","","",59,[[["specblockid",3]]]],[11,"gt","","",59,[[["specblockid",3]]]],[11,"ge","","",59,[[["specblockid",3]]]],[11,"partial_cmp","","",60,[[["assignkind",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",61,[[["constant",4]],[["option",4],["ordering",4]]]],[11,"lt","","",61,[[["constant",4]]]],[11,"le","","",61,[[["constant",4]]]],[11,"gt","","",61,[[["constant",4]]]],[11,"ge","","",61,[[["constant",4]]]],[11,"partial_cmp","","",63,[[["borrownode",4]],[["option",4],["ordering",4]]]],[11,"lt","","",63,[[["borrownode",4]]]],[11,"le","","",63,[[["borrownode",4]]]],[11,"gt","","",63,[[["borrownode",4]]]],[11,"ge","","",63,[[["borrownode",4]]]],[11,"partial_cmp","","",64,[[["strongedge",4]],[["option",4],["ordering",4]]]],[11,"lt","","",64,[[["strongedge",4]]]],[11,"le","","",64,[[["strongedge",4]]]],[11,"gt","","",64,[[["strongedge",4]]]],[11,"ge","","",64,[[["strongedge",4]]]],[11,"partial_cmp","","",66,[[["propkind",4]],[["option",4],["ordering",4]]]],[11,"deref","bytecode::access_path_trie","",10,[[]]],[11,"deref","bytecode::dataflow_analysis","",23,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","bytecode::access_path_trie","",10,[[]]],[11,"deref_mut","bytecode::dataflow_analysis","",23,[[]]],[11,"deref_mut","","",24,[[]]],[11,"fmt","bytecode::access_path","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::access_path_trie","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::annotations","",11,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::borrow_analysis","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::dataflow_analysis","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::function_target","",32,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::function_target_pipeline","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::livevar_analysis","",42,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::loop_analysis","",45,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::options","",51,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::reaching_def_analysis","",53,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::stackless_bytecode","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::stackless_control_flow_graph","",70,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::access_path","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::access_path_trie","",83,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::borrow_analysis","",12,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::function_target","",31,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::function_target_pipeline","",34,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode::stackless_bytecode","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"hash","","",57,[[]]],[11,"hash","","",58,[[]]],[11,"hash","","",59,[[]]],[11,"from_iter","bytecode::dataflow_analysis","",23,[[["intoiterator",8]]]],[11,"deserialize","bytecode::options","",51,[[],["result",4]]],[11,"serialize","","",51,[[],["result",4]]],[11,"constant","bytecode::dataflow_analysis","Create a constant address from concrete address <code>a</code>",23,[[["biguint",3]]]],[11,"footprint","","Create a footprint address from access path <code>ap</code>",23,[[["accesspath",3]]]],[11,"formal","","Create a footprint address read from formal <code>temp_index</code>",23,[[["tempindex",6]]]],[11,"is_constant","","Return <code>true</code> if <code>self</code> is a constant",23,[[]]],[11,"substitute_footprint","","Substitute all occurences of Footprint(ap) in <code>self</code> by …",23,[[["accesspathmap",8]]]],[11,"add_struct_offset","","Return a new abstract address by adding the offset …",23,[[["type",4],["moduleid",3],["structid",3],["vec",3]]]],[11,"add_offset","","Return a new abstract address by adding the offset <code>offset</code> …",23,[[["offset",4]]]],[11,"prepend","","Produce a new version of <code>self</code> with <code>prefix</code> prepended to …",23,[[["accesspath",3]]]],[11,"footprint_paths","","return an iterator over the footprint paths in <code>self</code>",23,[[]]],[11,"display","","Return a wrapper of <code>self</code> that implements <code>Display</code> using <code>env</code>",23,[[["functiontarget",3]],["absaddrdisplay",3]]],[11,"get_name","bytecode::mut_ref_instrumentation","Returns the name of this function.",48,[[],["symbol",3]]],[11,"get_full_name_str","","Gets full name as string.",48,[[],["string",3]]],[11,"get_identifier","","Returns the VM identifier for this function",48,[[],["identifier",3]]],[11,"get_id","","Gets the id of this function.",48,[[],["funid",3]]],[11,"get_qualified_id","","Gets the qualified id of this function.",48,[[],[["funid",3],["qualifiedid",3]]]],[11,"get_doc","","Get documentation associated with this function.",48,[[]]],[11,"get_def_idx","","Gets the definition index of this function.",48,[[],["functiondefinitionindex",3]]],[11,"symbol_pool","","Shortcut for accessing the symbol pool.",48,[[],["symbolpool",3]]],[11,"get_loc","","Returns the location of this function.",48,[[],["loc",3]]],[11,"get_spec_loc","","Returns the location of the specification block of this …",48,[[],["loc",3]]],[11,"get_bytecode_loc","","Returns the location of the bytecode at the given offset.",48,[[],["loc",3]]],[11,"get_bytecode","","Returns the bytecode associated with this function.",48,[[]]],[11,"is_pragma_true","","Returns the value of a boolean pragma for this function. …",48,[[]]],[11,"is_pragma_false","","Returns true if the value of a boolean pragma for this …",48,[[]]],[11,"is_num_pragma_set","","Returns whether the value of a numeric pragma is …",48,[[]]],[11,"get_num_pragma","","Returns the value of a numeric pragma for this function. …",48,[[]]],[11,"get_ident_pragma","","Returns the value of a pragma representing an identifier …",48,[[],[["option",4],["rc",3]]]],[11,"get_func_env_from_pragma","","Returns the FunctionEnv of the function identified by the …",48,[[],[["functionenv",3],["option",4]]]],[11,"is_native","","Returns true if this function is native.",48,[[]]],[11,"is_intrinsic","","Returns true if this function has the pragma intrinsic …",48,[[]]],[11,"is_opaque","","Returns true if this function is opaque.",48,[[]]],[11,"is_public","","Returns true if this function is public.",48,[[]]],[11,"are_invariants_disabled_in_body","","Returns true if invariants are declared disabled in body …",48,[[]]],[11,"are_invariants_disabled_at_call","","Returns true if invariants are declared disabled in body …",48,[[]]],[11,"is_mutating","","Returns true if this function mutates any references …",48,[[]]],[11,"get_friend_name","","Returns the name of the friend(the only allowed caller) …",48,[[],[["option",4],["rc",3]]]],[11,"has_friend","","Returns true if a friend is specified for this function.",48,[[]]],[11,"get_friend_env","","Returns the FunctionEnv of the friend function if the …",48,[[],[["functionenv",3],["option",4]]]],[11,"get_transitive_friend","","Returns the FunctionEnv of the transitive friend of the …",48,[[],["functionenv",3]]],[11,"get_type_parameters","","Returns the type parameters associated with this function.",48,[[],[["typeparameter",3],["vec",3],["global",3]]]],[11,"get_named_type_parameters","","Returns the type parameters with the real names.",48,[[],[["typeparameter",3],["vec",3],["global",3]]]],[11,"get_parameter_count","","",48,[[]]],[11,"is_parameter","","Return <code>true</code> if idx is a formal parameter index",48,[[]]],[11,"get_parameters","","Returns the regular parameters associated with this …",48,[[],[["vec",3],["parameter",3],["global",3]]]],[11,"get_return_types","","Returns return types of this function.",48,[[],[["global",3],["type",4],["vec",3]]]],[11,"get_return_type","","Returns return type at given index.",48,[[],["type",4]]],[11,"get_return_count","","Returns the number of return values of this function.",48,[[]]],[11,"get_local_name","","Get the name to be used for a local. If the local is an …",48,[[],["symbol",3]]],[11,"is_temporary","","Returns true if the index is for a temporary, not user …",48,[[]]],[11,"get_local_count","","Gets the number of proper locals of this function. Those …",48,[[]]],[11,"get_local_type","","Gets the type of the local at index. This must use an …",48,[[],["type",4]]],[11,"get_spec","","Returns associated specification.",48,[[],["spec",3]]],[11,"get_acquires_global_resources","","Returns the acquired global resource types.",48,[[],[["global",3],["structid",3],["vec",3]]]],[11,"get_modify_targets","","Computes the modified targets of the spec clause, as a …",48,[[],[["btreemap",3],["qualifiedid",3],["vec",3]]]],[11,"should_verify","","Determine whether the function is target of verification.",48,[[["verificationscope",4]]]],[11,"is_explicitly_not_verified","","Determine whether this function is explicitly deactivated …",48,[[]]],[11,"get_calling_functions","","Get the functions that call this one",48,[[],[["btreeset",3],["qualifiedid",3]]]],[11,"get_called_functions","","Get the functions that this one calls",48,[[],[["btreeset",3],["qualifiedid",3]]]],[11,"get_simple_name_string","","Returns the function name excluding the address and the …",48,[[],[["rc",3],["string",3]]]],[11,"get_name_string","","Returns the function name with the module name excluding …",48,[[],["rc",3]]],[11,"new","","",85,[[["fileid",3],["span",3]],["loc",3]]],[11,"span","","",85,[[],["span",3]]],[11,"file_id","","",85,[[],["fileid",3]]],[11,"at_end","","",85,[[],["loc",3]]],[11,"at_start","","",85,[[],["loc",3]]],[11,"enclosing","","Creates a location which encloses all the locations in …",85,[[],["loc",3]]],[11,"display","","",85,[[["globalenv",3]],["locdisplay",3]]],[11,"display_line_only","","",85,[[["globalenv",3]],["locdisplay",3]]],[11,"new_prim","","",49,[[["primitivetype",4]],["type",4]]],[11,"is_reference","","Determines whether this is a reference.",49,[[]]],[11,"is_mutable_reference","","Determines whether this is a mutable reference.",49,[[]]],[11,"is_immutable_reference","","Determines whether this is an immutable reference.",49,[[]]],[11,"is_struct","","Determines whether this type is a struct.",49,[[]]],[11,"is_struct_or_vector_of_struct","","Determines whether this is a struct, or a vector of …",49,[[]]],[11,"is_spec","","Returns true if this type is a specification language …",49,[[]]],[11,"is_number","","Returns true if this is any number type.",49,[[]]],[11,"skip_reference","","Skip reference type.",49,[[],["type",4]]],[11,"replace_struct_instantiation","","If this is a struct type, replace the type instantiation.",49,[[],["type",4]]],[11,"get_struct","","If this is a struct type, return the associated struct …",49,[[["globalenv",3]],["option",4]]],[11,"require_struct","","Require this to be a struct, if so extracts its content.",49,[[]]],[11,"instantiate","","Instantiates type parameters in this type.",49,[[],["type",4]]],[11,"contains","","Checks whether this type contains a type for which the …",49,[[]]],[11,"is_incomplete","","Returns true if this type is incomplete, i.e. contains …",49,[[]]],[11,"is_open","","Return true if this type contains free type variables",49,[[]]],[11,"module_usage","","Compute used modules in this type, adding them to the …",49,[[["btreeset",3]]]],[11,"into_struct_tag","","",49,[[["globalenv",3]],[["structtag",3],["option",4]]]],[11,"into_type_tag","","Attempt to convert this type into a …",49,[[["globalenv",3]],[["option",4],["typetag",4]]]],[11,"from_type_tag","","Create a <code>Type</code> from <code>t</code>",49,[[["globalenv",3],["typetag",4]],["type",4]]],[11,"get_vars","","Get the unbound type variables in the type.",49,[[],["btreeset",3]]],[11,"display","","",49,[[["typedisplaycontext",4]],["typedisplay",3]]]],"p":[[4,"Addr"],[4,"Root"],[4,"Offset"],[8,"AccessPathMap"],[8,"FootprintDomain"],[6,"AbsAddr"],[3,"GlobalKey"],[3,"AccessPath"],[3,"AbsStructType"],[3,"TrieNode"],[3,"AccessPathTrie"],[3,"Annotations"],[4,"EdgeDomain"],[3,"BorrowInfo"],[3,"BorrowInfoAtCodeOffset"],[3,"BorrowAnnotation"],[3,"BorrowAnalysisProcessor"],[3,"CleanAndOptimizeProcessor"],[3,"SummaryCache"],[8,"CompositionalAnalysis"],[3,"DataInvariantInstrumentationProcessor"],[4,"JoinResult"],[8,"AbstractDomain"],[3,"SetDomain"],[3,"MapDomain"],[3,"BlockState"],[8,"TransferFunctions"],[8,"DataflowAnalysis"],[3,"DebugInstrumenter"],[3,"EliminateImmRefsProcessor"],[3,"FunctionDataBuilder"],[3,"FunctionTarget"],[3,"FunctionData"],[3,"FunctionDataBuilder"],[4,"FunctionVariant"],[8,"FunctionTargetProcessor"],[3,"FunctionTargetsHolder"],[3,"FunctionTargetPipeline"],[3,"GlobalInvariantInstrumentationProcessor"],[3,"GlobalInvariantInstrumentationProcessorV2"],[3,"Reducible"],[3,"Graph"],[3,"LiveVarInfoAtCodeOffset"],[3,"LiveVarAnnotation"],[3,"LiveVarAnalysisProcessor"],[3,"LoopAnnotation"],[3,"LoopAnalysisProcessor"],[3,"MemoryInstrumentationProcessor"],[3,"FunctionEnv"],[4,"Type"],[3,"MutRefInstrumenter"],[3,"ProverOptions"],[3,"PackedTypesProcessor"],[4,"Def"],[3,"ReachingDefProcessor"],[3,"ReadWriteSetProcessor"],[3,"SpecInstrumentationProcessor"],[3,"Label"],[3,"AttrId"],[3,"SpecBlockId"],[4,"AssignKind"],[4,"Constant"],[4,"Operation"],[4,"BorrowNode"],[4,"StrongEdge"],[4,"BorrowEdge"],[4,"PropKind"],[3,"AbortAction"],[4,"Bytecode"],[3,"StacklessBytecodeGenerator"],[4,"BlockContent"],[13,"Basic"],[3,"StacklessControlFlowGraph"],[3,"UsageProcessor"],[3,"VerificationInfo"],[3,"VerificationAnalysisProcessor"],[3,"AbsStructTypeDisplay"],[3,"AddrDisplay"],[3,"AbsAddrDisplay"],[3,"GlobalKeyDisplay"],[3,"RootDisplay"],[3,"OffsetDisplay"],[3,"AccessPathDisplay"],[3,"AccessPathTrieDisplay"],[3,"EliminateImmRefs"],[3,"Loc"],[3,"ReachingDefAnnotation"],[3,"BytecodeDisplay"],[3,"OperationDisplay"],[3,"BorrowNodeDisplay"]]},\
"bytecode_source_map":{"doc":"","i":[[0,"mapping","bytecode_source_map","",null,null],[3,"SourceMapping","bytecode_source_map::mapping","An object that associates source code with compiled …",null,null],[12,"bytecode","","",0,null],[12,"source_map","","",0,null],[12,"source_code","","",0,null],[12,"marks","","",0,null],[11,"new","","",0,[[["compiledmodule",3],["sourcemap",3]]]],[11,"new_from_module","","",0,[[["compiledmodule",3]],["result",6]]],[11,"new_from_script","","",0,[[["compiledscript",3],["sourcemap",3]]]],[11,"with_marks","","",0,[[["markedsourcemapping",3]]]],[11,"with_source_code","","",0,[[]]],[0,"marking","bytecode_source_map","",null,null],[3,"FunctionMarking","bytecode_source_map::marking","A data structure used to track any markings or extra …",null,null],[12,"code_offsets","","",1,null],[12,"type_param_offsets","","",1,null],[3,"StructMarking","","A data structure used to track any markings or extra …",null,null],[12,"fields","","",2,null],[12,"type_param_offsets","","",2,null],[3,"MarkedSourceMapping","","A data structure that contains markings for both …",null,null],[11,"new","","",1,[[]]],[11,"code_offset","","",1,[[["string",3],["codeoffset",6]]]],[11,"type_param","","",1,[[["string",3]]]],[11,"new","","",2,[[]]],[11,"field","","",2,[[["string",3],["membercount",6]]]],[11,"type_param","","",2,[[["string",3]]]],[11,"new","","",3,[[]]],[11,"mark_code_offset","","",3,[[["string",3],["codeoffset",6],["functiondefinitionindex",3]]]],[11,"mark_function_type_param","","",3,[[["string",3],["functiondefinitionindex",3]]]],[11,"mark_struct_field","","",3,[[["structdefinitionindex",3],["string",3],["membercount",6]]]],[11,"mark_struct_type_param","","",3,[[["structdefinitionindex",3],["string",3]]]],[0,"source_map","bytecode_source_map","",null,null],[6,"SourceName","bytecode_source_map::source_map","",null,null],[3,"StructSourceMap","","",null,null],[12,"decl_location","","The source declaration location of the struct",4,null],[12,"type_parameters","","Important: type parameters need to be added in the order …",4,null],[12,"fields","","Note that fields to a struct source map need to be added …",4,null],[3,"FunctionSourceMap","","",null,null],[12,"decl_location","","The source location for the definition of this entire …",5,null],[12,"type_parameters","","Note that type parameters need to be added in the order …",5,null],[12,"parameters","","",5,null],[12,"locals","","The index into the vector is the locals index. The …",5,null],[12,"nops","","A map to the code offset for a corresponding nop. Nop\'s …",5,null],[12,"code_map","","The source location map for the function body.",5,null],[3,"SourceMap","","",null,null],[12,"module_name_opt","","The name <address.module_name> for module that this …",6,null],[12,"constant_map","","",6,null],[5,"remap_locations_source_name","","",null,[[["sourcename",6],["clone",8],["eq",8]],[["eq",8],["clone",8],["sourcename",6]]]],[5,"remap_locations_source_map","","",null,[[["vec",3],["sourcemap",3]],[["vec",3],["sourcemap",3]]]],[11,"new","","",4,[[]]],[11,"add_type_parameter","","",4,[[["sourcename",6]]]],[11,"get_type_parameter_name","","",4,[[],[["sourcename",6],["option",4]]]],[11,"add_field_location","","",4,[[]]],[11,"get_field_location","","",4,[[["membercount",6]],["option",4]]],[11,"dummy_struct_map","","",4,[[["compiledmodule",3],["structdefinition",3]],["result",6]]],[11,"remap_locations","","",4,[[],[["structsourcemap",3],["clone",8],["eq",8]]]],[11,"new","","",5,[[]]],[11,"add_type_parameter","","",5,[[["sourcename",6]]]],[11,"get_type_parameter_name","","",5,[[],[["sourcename",6],["option",4]]]],[11,"add_code_mapping","","A single source-level instruction may possibly map to a …",5,[[["codeoffset",6]]]],[11,"add_nop_mapping","","Record the code offset for an Nop label",5,[[["noplabel",3],["codeoffset",6]]]],[11,"add_local_mapping","","",5,[[["sourcename",6]]]],[11,"add_parameter_mapping","","",5,[[["sourcename",6]]]],[11,"get_code_location","","Recall that we are using a segment tree. We therefore …",5,[[["codeoffset",6]],["option",4]]],[11,"get_parameter_or_local_name","","",5,[[],[["sourcename",6],["option",4]]]],[11,"make_local_name_to_index_map","","",5,[[],[["btreemap",3],["string",3],["localindex",6]]]],[11,"dummy_function_map","","",5,[[["compiledmodule",3],["functiondefinition",3]],["result",6]]],[11,"remap_locations","","",5,[[],[["functionsourcemap",3],["clone",8],["eq",8]]]],[11,"new","","",6,[[["option",4],["qualifiedmoduleident",3]]]],[11,"add_top_level_function_mapping","","",6,[[["functiondefinitionindex",3]],["result",6]]],[11,"add_function_type_parameter_mapping","","",6,[[["sourcename",6],["functiondefinitionindex",3]],["result",6]]],[11,"get_function_type_parameter_name","","",6,[[["functiondefinitionindex",3]],[["result",6],["sourcename",6]]]],[11,"add_code_mapping","","",6,[[["codeoffset",6],["functiondefinitionindex",3]],["result",6]]],[11,"add_nop_mapping","","",6,[[["codeoffset",6],["noplabel",3],["functiondefinitionindex",3]],["result",6]]],[11,"get_code_location","","Given a function definition and a code offset within that …",6,[[["codeoffset",6],["functiondefinitionindex",3]],["result",6]]],[11,"add_local_mapping","","",6,[[["sourcename",6],["functiondefinitionindex",3]],["result",6]]],[11,"add_parameter_mapping","","",6,[[["sourcename",6],["functiondefinitionindex",3]],["result",6]]],[11,"get_parameter_or_local_name","","",6,[[["functiondefinitionindex",3]],[["result",6],["sourcename",6]]]],[11,"add_top_level_struct_mapping","","",6,[[["structdefinitionindex",3]],["result",6]]],[11,"add_const_mapping","","",6,[[["constantpoolindex",3],["constantname",3]],["result",6]]],[11,"add_struct_field_mapping","","",6,[[["structdefinitionindex",3]],["result",6]]],[11,"get_struct_field_name","","",6,[[["structdefinitionindex",3],["membercount",6]],["option",4]]],[11,"add_struct_type_parameter_mapping","","",6,[[["structdefinitionindex",3],["sourcename",6]],["result",6]]],[11,"get_struct_type_parameter_name","","",6,[[["structdefinitionindex",3]],[["result",6],["sourcename",6]]]],[11,"get_function_source_map","","",6,[[["functiondefinitionindex",3]],[["functionsourcemap",3],["result",6]]]],[11,"get_struct_source_map","","",6,[[["structdefinitionindex",3]],[["structsourcemap",3],["result",6]]]],[11,"dummy_from_module","","Create a \'dummy\' source map for a compiled module. This …",6,[[["compiledmodule",3]],["result",6]]],[11,"dummy_from_script","","",6,[[["compiledscript",3]],["result",6]]],[11,"remap_locations","","",6,[[],[["eq",8],["clone",8],["sourcemap",3]]]],[0,"utils","bytecode_source_map","",null,null],[6,"Error","bytecode_source_map::utils","",null,null],[6,"Errors","","",null,null],[5,"source_map_from_file","","",null,[[["path",3]],[["sourcemap",3],["result",6]]]],[5,"render_errors","","",null,[[["errors",6],["sourcemapping",3]],["result",6]]],[5,"create_diagnostic","","",null,[[["fileid",3],["error",6]],["diagnostic",3]]],[3,"OwnedLoc","","",null,null],[5,"remap_owned_loc_to_loc","","",null,[[["sourcemap",3],["ownedloc",3]],[["sourcemap",3],["loc",3]]]],[11,"from","bytecode_source_map::mapping","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","bytecode_source_map::marking","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","bytecode_source_map::source_map","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"test_only_hash","","",4,[[],["hashvalue",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"test_only_hash","","",6,[[],["hashvalue",3]]],[11,"from","bytecode_source_map::utils","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"test_only_hash","","",7,[[],["hashvalue",3]]],[11,"equivalent","","",7,[[]]],[11,"clone","bytecode_source_map::source_map","",4,[[],["structsourcemap",3]]],[11,"clone","","",5,[[],["functionsourcemap",3]]],[11,"clone","","",6,[[],["sourcemap",3]]],[11,"clone","bytecode_source_map::utils","",7,[[],["ownedloc",3]]],[11,"default","bytecode_source_map::marking","",1,[[],["functionmarking",3]]],[11,"default","","",2,[[],["structmarking",3]]],[11,"default","","",3,[[],["markedsourcemapping",3]]],[11,"default","bytecode_source_map::utils","",7,[[],["ownedloc",3]]],[11,"eq","","",7,[[["ownedloc",3]]]],[11,"ne","","",7,[[["ownedloc",3]]]],[11,"fmt","bytecode_source_map::mapping","",0,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode_source_map::marking","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode_source_map::source_map","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","bytecode_source_map::utils","",7,[[["formatter",3]],["result",6]]],[11,"serialize","bytecode_source_map::source_map","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","bytecode_source_map::utils","",7,[[],["result",4]]],[11,"deserialize","bytecode_source_map::source_map","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","bytecode_source_map::utils","",7,[[],["result",4]]]],"p":[[3,"SourceMapping"],[3,"FunctionMarking"],[3,"StructMarking"],[3,"MarkedSourceMapping"],[3,"StructSourceMap"],[3,"FunctionSourceMap"],[3,"SourceMap"],[3,"OwnedLoc"]]},\
"bytecode_verifier":{"doc":"Verifies bytecode sanity.","i":[[0,"ability_field_requirements","bytecode_verifier","This module implements a checker for verifying that all …",null,null],[5,"verify_module","bytecode_verifier::ability_field_requirements","",null,[[["compiledmodule",3]],["vmresult",6]]],[0,"check_duplication","bytecode_verifier","This module implements a checker for verifying that each …",null,null],[3,"DuplicationChecker","bytecode_verifier::check_duplication","",null,null],[11,"verify_module","","",0,[[["compiledmodule",3]],["vmresult",6]]],[11,"verify_script","","",0,[[["compiledscript",3]],["vmresult",6]]],[0,"code_unit_verifier","bytecode_verifier","This module implements the checker for verifying …",null,null],[3,"CodeUnitVerifier","bytecode_verifier::code_unit_verifier","",null,null],[11,"verify_module","","",1,[[["compiledmodule",3]],["vmresult",6]]],[11,"verify_script","","",1,[[["compiledscript",3]],["vmresult",6]]],[0,"constants","bytecode_verifier","This module implements a checker for verifying that",null,null],[5,"verify_module","bytecode_verifier::constants","",null,[[["compiledmodule",3]],["vmresult",6]]],[5,"verify_script","","",null,[[["compiledscript",3]],["vmresult",6]]],[0,"control_flow","bytecode_verifier","This module implements a checker for verifies control …",null,null],[5,"verify","bytecode_verifier::control_flow","",null,[[["option",4],["functiondefinitionindex",3],["codeunit",3]],["partialvmresult",6]]],[0,"control_flow_graph","bytecode_verifier","This module defines the control-flow graph uses for …",null,null],[6,"BlockId","bytecode_verifier::control_flow_graph","",null,null],[8,"ControlFlowGraph","","A trait that specifies the basic requirements for a CFG",null,null],[10,"block_start","","Start index of the block ID in the bytecode vector",2,[[["blockid",6]],["codeoffset",6]]],[10,"block_end","","End index of the block ID in the bytecode vector",2,[[["blockid",6]],["codeoffset",6]]],[10,"successors","","Successors of the block ID in the bytecode vector",2,[[["blockid",6]],["vec",3]]],[10,"instr_indexes","","Iterator over the indexes of instructions in this block",2,[[["blockid",6]],[["iterator",8],["box",3]]]],[10,"blocks","","Return an iterator over the blocks of the CFG",2,[[],[["vec",3],["blockid",6]]]],[10,"num_blocks","","Return the number of blocks (vertices) in the control …",2,[[]]],[10,"entry_block_id","","Return the id of the entry block for this control-flow …",2,[[],["blockid",6]]],[3,"VMControlFlowGraph","","The control flow graph that we build from the bytecode.",null,null],[11,"new","","",3,[[]]],[11,"display","","",3,[[]]],[11,"reachable_from","","",3,[[["blockid",6]],[["vec",3],["blockid",6]]]],[0,"cyclic_dependencies","bytecode_verifier","This module contains verification of usage of …",null,null],[5,"verify_module","bytecode_verifier::cyclic_dependencies","",null,[[["compiledmodule",3]],["vmresult",6]]],[0,"dependencies","bytecode_verifier","This module contains verification of usage of …",null,null],[5,"verify_module","bytecode_verifier::dependencies","",null,[[["compiledmodule",3]],["vmresult",6]]],[5,"verify_script","","",null,[[["compiledscript",3]],["vmresult",6]]],[5,"verify_script_impl","","",null,[[["compiledscript",3]],["partialvmresult",6]]],[0,"friends","bytecode_verifier","This module contains verification of usage of …",null,null],[5,"verify_module","bytecode_verifier::friends","",null,[[["compiledmodule",3]],["vmresult",6]]],[0,"instantiation_loops","bytecode_verifier","This implements an algorithm that detects loops during …",null,null],[3,"InstantiationLoopChecker","bytecode_verifier::instantiation_loops","",null,null],[11,"verify_module","","",4,[[["compiledmodule",3]],["vmresult",6]]],[0,"instruction_consistency","bytecode_verifier","This module defines the transfer functions for verifying …",null,null],[3,"InstructionConsistency","bytecode_verifier::instruction_consistency","",null,null],[11,"verify_module","","",5,[[["compiledmodule",3]],["vmresult",6]]],[11,"verify_script","","",5,[[["compiledscript",3]],["vmresult",6]]],[11,"verify_script_impl","","",5,[[["compiledscript",3]],["partialvmresult",6]]],[0,"script_signature","bytecode_verifier","This module implements a checker for verifying that a …",null,null],[5,"verify_script","bytecode_verifier::script_signature","This function checks the extra requirements on the …",null,[[["compiledscript",3]],["vmresult",6]]],[5,"verify_module_script_function","","This function checks the extra requirements on the …",null,[[["identstr",3],["compiledmodule",3]],["vmresult",6]]],[0,"signature","bytecode_verifier","This module implements a checker for verifying signature …",null,null],[3,"SignatureChecker","bytecode_verifier::signature","",null,null],[11,"verify_module","","",6,[[["compiledmodule",3]],["vmresult",6]]],[11,"verify_script","","",6,[[["compiledscript",3]],["vmresult",6]]],[0,"struct_defs","bytecode_verifier","This module provides a checker for verifying that struct …",null,null],[3,"RecursiveStructDefChecker","bytecode_verifier::struct_defs","",null,null],[11,"verify_module","","",7,[[["compiledmodule",3]],["vmresult",6]]],[0,"verifier","bytecode_verifier","This module contains the public APIs supported by the …",null,null],[5,"verify_module","bytecode_verifier::verifier","Helper for a \\\"canonical\\\" verification of a module.",null,[[["compiledmodule",3]],["vmresult",6]]],[5,"verify_script","","Helper for a \\\"canonical\\\" verification of a script.",null,[[["compiledscript",3]],["vmresult",6]]],[11,"from","bytecode_verifier::check_duplication","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","bytecode_verifier::code_unit_verifier","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","bytecode_verifier::control_flow_graph","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","bytecode_verifier::instantiation_loops","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","bytecode_verifier::instruction_consistency","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","bytecode_verifier::signature","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","bytecode_verifier::struct_defs","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"block_start","bytecode_verifier::control_flow_graph","",3,[[["blockid",6]],["codeoffset",6]]],[11,"block_end","","",3,[[["blockid",6]],["codeoffset",6]]],[11,"successors","","",3,[[["blockid",6]],["vec",3]]],[11,"blocks","","",3,[[],[["vec",3],["blockid",6]]]],[11,"instr_indexes","","",3,[[["blockid",6]],[["iterator",8],["box",3]]]],[11,"num_blocks","","",3,[[]]],[11,"entry_block_id","","",3,[[],["blockid",6]]]],"p":[[3,"DuplicationChecker"],[3,"CodeUnitVerifier"],[8,"ControlFlowGraph"],[3,"VMControlFlowGraph"],[3,"InstantiationLoopChecker"],[3,"InstructionConsistency"],[3,"SignatureChecker"],[3,"RecursiveStructDefChecker"]]},\
"bytecode_verifier_tests":{"doc":"","i":[],"p":[]},\
"channel":{"doc":"Provides an mpsc (multi-producer single-consumer) channel …","i":[[0,"diem_channel","channel","diem_channel provides an mpsc channel which has two ends …",null,null],[3,"Sender","channel::diem_channel","The sending end of the diem_channel.",null,null],[4,"ElementStatus","","The status of an element inserted into a diem_channel. If …",null,null],[13,"Dequeued","","",0,null],[13,"Dropped","","",0,null],[11,"push","","This adds the message into the internal queue data …",1,[[],["result",6]]],[11,"push_with_feedback","","Same as <code>push</code>, but this function also accepts a …",1,[[["option",4],["sender",3]],["result",6]]],[3,"Receiver","","The receiving end of the diem_channel.",null,null],[11,"clear","","Removes all the previously sent transactions that have …",2,[[]]],[5,"new","","Create a new Diem Channel and returns the two ends of the …",null,[[["option",4],["queuestyle",4],["intcountervec",6]]]],[0,"message_queues","channel","",null,null],[4,"QueueStyle","channel::message_queues","QueueStyle is an enum which can be used as a …",null,null],[13,"LIFO","","",3,null],[13,"FIFO","","",3,null],[13,"KLAST","","",3,null],[3,"Sender","channel","An <code>mpsc::Sender</code> with an [<code>IntGauge</code>] counting the number of …",null,null],[3,"Receiver","","An <code>mpsc::Receiver</code> with an [<code>IntGauge</code>] counting the number …",null,null],[11,"try_send","","",4,[[],[["senderror",3],["result",4]]]],[5,"new","","Similar to <code>mpsc::channel</code>, <code>new</code> creates a pair of <code>Sender</code> …",null,[[["intgauge",6]]]],[5,"new_test","","",null,[[]]],[11,"from","channel::diem_channel","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"try_poll_next","","",2,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","channel::message_queues","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","channel","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"try_poll_next","","",5,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"drop","channel::diem_channel","",1,[[]]],[11,"drop","","",2,[[]]],[11,"clone","","",1,[[]]],[11,"clone","channel::message_queues","",3,[[],["queuestyle",4]]],[11,"clone","channel","",4,[[]]],[11,"eq","channel::diem_channel","",0,[[["elementstatus",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","channel::message_queues","",3,[[["formatter",3]],["result",6]]],[11,"is_terminated","channel::diem_channel","",2,[[]]],[11,"is_terminated","channel","",5,[[]]],[11,"poll_next","channel::diem_channel","poll_next checks whether there is something ready for …",2,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","channel","",5,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_ready","","",4,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",4,[[["pin",3]],["result",4]]],[11,"poll_flush","","",4,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",4,[[["context",3],["pin",3]],[["poll",4],["result",4]]]]],"p":[[4,"ElementStatus"],[3,"Sender"],[3,"Receiver"],[4,"QueueStyle"],[3,"Sender"],[3,"Receiver"]]},\
"cli":{"doc":"Diem Client","i":[[0,"client_proxy","cli","Main instance of client holding corresponding …",null,null],[3,"AddressAndIndex","cli::client_proxy","Account data is stored in a map and referenced by an …",null,null],[12,"address","","Address of the account.",0,null],[12,"index","","The account_ref_id of this account in client.",0,null],[4,"AccountEntry","","Account is represented either as an entry into accounts …",null,null],[13,"Index","","Index into client.accounts",1,null],[13,"Address","","Address of the account",1,null],[3,"IndexAndSequence","","Used to return the sequence and sender account index …",null,null],[12,"account_index","","Index/key of the account in TestClient::accounts vector.",2,null],[12,"sequence_number","","Sequence number of the account.",2,null],[3,"ClientProxy","","Proxy handling CLI commands/inputs.",null,null],[12,"chain_id","","chain ID of the Diem network this client is interacting …",3,null],[12,"client","","client for admission control interface.",3,null],[12,"accounts","","Created accounts.",3,null],[12,"diem_root_account","","Account used for Diem Root operations (e.g., adding a new …",3,null],[12,"tc_account","","Account used for Treasury Compliance operations",3,null],[12,"testnet_designated_dealer_account","","Account used for \\\"minting\\\" operations",3,null],[12,"quiet_wait","","do not print \'.\' when waiting for signed transaction",3,null],[11,"new","","Construct a new TestClient.",3,[[["option",4],["string",3],["chainid",3],["waypoint",3]],["result",6]]],[11,"create_next_account","","Returns the account index that should be used by user to …",3,[[],[["result",6],["addressandindex",3]]]],[11,"latest_epoch_change_li","","Returns the ledger info corresonding to the latest epoch …",3,[[],[["option",4],["ledgerinfowithsignatures",4]]]],[11,"print_all_accounts","","Print index and address of all accounts.",3,[[]]],[11,"copy_all_accounts","","Clone all accounts held in the client.",3,[[],[["vec",3],["accountdata",3]]]],[11,"set_accounts","","Set the account of this client instance.",3,[[["vec",3],["accountdata",3]],[["addressandindex",3],["vec",3]]]],[11,"get_balances","","Get balance from validator for the account specified.",3,[[],[["result",6],["vec",3]]]],[11,"get_sequence_number","","Get the latest sequence number from validator for the …",3,[[],["result",6]]],[11,"add_currency","","Adds a currency to the sending account. Fails if that …",3,[[],["result",6]]],[11,"mint_coins","","Mints coins for the receiver specified.",3,[[],["result",6]]],[11,"enable_custom_script","","Allow executing arbitrary script in the network.",3,[[],["result",6]]],[11,"change_diem_version","","Modify the stored DiemVersion on chain.",3,[[],["result",6]]],[11,"upgrade_stdlib","","Only allow executing predefined script in the Move …",3,[[],["result",6]]],[11,"wait_for_transaction","","Wait for transaction, this function is not safe for …",3,[[["accountaddress",3]],["result",6]]],[11,"submit_and_wait","","Submit transaction and waits for the transaction executed",3,[[["signedtransaction",3]],["result",6]]],[11,"wait_for_signed_transaction","","Waits for the transaction",3,[[["signedtransaction",3]],[["result",6],["transactionview",3]]]],[11,"transfer_coins_int","","Transfer num_coins from sender account to receiver. If …",3,[[["option",4],["string",3],["option",4],["accountaddress",3]],[["indexandsequence",3],["result",6]]]],[11,"prepare_transfer_coins","","Prepare a transfer transaction: return the unsigned raw …",3,[[["option",4],["string",3],["accountaddress",3],["option",4]],[["rawtransaction",3],["result",6]]]],[11,"transfer_coins","","Transfers coins from sender to receiver.",3,[[],[["indexandsequence",3],["result",6]]]],[11,"compile_program","","Compile Move program",3,[[],[["result",6],["vec",3]]]],[11,"submit_signed_transaction","","Submit a transaction to the network given the unsigned …",3,[[["rawtransaction",3],["ed25519publickey",3],["ed25519signature",3]],["result",6]]],[11,"publish_module","","Publish Move module",3,[[],["result",6]]],[11,"execute_script","","Execute custom script",3,[[],["result",6]]],[11,"get_latest_account","","Get the latest account information from validator.",3,[[],[["result",6],["option",4]]]],[11,"get_latest_version","","Get the latest version",3,[[],["version",6]]],[11,"get_latest_account_resources","","Get the latest annotated account resources from validator.",3,[[],["result",6]]],[11,"get_committed_txn_by_acc_seq","","Get committed txn by account and sequence number.",3,[[],[["result",6],["option",4]]]],[11,"get_committed_txn_by_range","","Get committed txn by account and sequence number",3,[[],[["result",6],["vec",3]]]],[11,"get_account_address_from_parameter","","Get account address and (if applicable) authentication …",3,[[],["result",6]]],[11,"get_events_by_account_and_type","","Get events by account and event type with start sequence …",3,[[],["result",6]]],[11,"write_recovery","","Write mnemonic recover to the file specified.",3,[[],["result",6]]],[11,"recover_wallet_accounts","","Recover wallet accounts from command \'recover \' and …",3,[[],[["result",6],["vec",3]]]],[11,"recover_accounts_in_wallet","","Recover accounts in wallets and sync state if …",3,[[],[["result",6],["vec",3]]]],[11,"insert_account_data","","Insert the account data to Client::accounts and return …",3,[[["accountdata",3]],["addressandindex",3]]],[11,"test_validator_connection","","Test JSON RPC client connection with validator.",3,[[],[["metadataview",3],["result",6]]]],[11,"test_trusted_connection","","Test client\'s connection to validator with proof.",3,[[],["result",6]]],[11,"association_transaction_with_local_diem_root_account","","Send a transaction signed by the local diem_root …",3,[[["transactionpayload",4]],["result",6]]],[11,"convert_to_scaled_representation","","Scale the number in <code>input</code> based on <code>scaling_factor</code> and …",3,[[],["result",6]]],[11,"convert_to_on_chain_representation","","convert number of coins (main unit) given as string to …",3,[[],["result",6]]],[0,"commands","cli","Command struct to interact with client.",null,null],[5,"report_error","cli::commands","Print the error and bump up error counter.",null,[[["error",3]]]],[5,"blocking_cmd","","Check whether a command is blocking.",null,[[]]],[5,"debug_format_cmd","","Check whether a command is debugging command.",null,[[]]],[5,"is_address","","Check whether the input string is a valid diem address.",null,[[]]],[5,"is_authentication_key","","Check whether the input string is a valid diem …",null,[[]]],[5,"get_commands","","Returns all the commands available, as well as the …",null,[[]]],[5,"parse_cmd","","Parse a cmd string, the first element in the returned …",null,[[],["vec",3]]],[5,"print_subcommand_help","","Print the help message for all sub commands.",null,[[]]],[5,"subcommand_execute","","Execute sub command.",null,[[["vec",3],["clientproxy",3],["box",3]]]],[8,"Command","","Trait to perform client operations.",null,null],[10,"get_aliases","","all commands and aliases this command support.",4,[[],["vec",3]]],[11,"get_params_help","","string that describes params.",4,[[]]],[10,"get_description","","string that describes what the command does.",4,[[]]],[10,"execute","","code to execute.",4,[[["clientproxy",3]]]],[3,"AccountData","cli","Struct used to store data for each created account.  We …",null,null],[12,"address","","Address of the account.",5,null],[12,"authentication_key","","Authentication key of the account.",5,null],[12,"key_pair","","(private_key, public_key) pair if the account is not …",5,null],[12,"sequence_number","","Latest sequence number maintained by client, it can be …",5,null],[12,"status","","Whether the account is initialized on chain, cached local …",5,null],[4,"AccountStatus","","Enum used to represent account status.",null,null],[13,"Local","","Account exists only in local cache, it is not persisted …",6,null],[13,"Persisted","","Account is persisted on chain.",6,null],[13,"Unknown","","Not able to check account status, probably because client …",6,null],[11,"keypair_as_string","","Serialize account keypair if exists.",5,[[],["option",4]]],[11,"from","cli::client_proxy","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","cli","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"erased_serialize","","",5,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"test_only_hash","","",6,[[],["hashvalue",3]]],[11,"vzip","","",6,[[]]],[11,"erased_serialize","","",6,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"clone","","",5,[[],["accountdata",3]]],[11,"clone","","",6,[[],["accountstatus",4]]],[11,"eq","","",5,[[["accountdata",3]]]],[11,"ne","","",5,[[["accountdata",3]]]],[11,"eq","","",6,[[["accountstatus",4]]]],[11,"fmt","cli::client_proxy","",0,[[["formatter",3]],["result",6]]],[11,"fmt","cli","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","cli::client_proxy","",1,[[["formatter",3]],["result",6]]],[11,"serialize","cli","",5,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]]],"p":[[3,"AddressAndIndex"],[4,"AccountEntry"],[3,"IndexAndSequence"],[3,"ClientProxy"],[8,"Command"],[3,"AccountData"],[4,"AccountStatus"]]},\
"cluster_test":{"doc":"","i":[[0,"atomic_histogram","cluster_test","",null,null],[3,"AtomicHistogramAccumulator","cluster_test::atomic_histogram","",null,null],[11,"new","","",0,[[],["atomichistogramaccumulator",3]]],[11,"snapshot","","",0,[[],["atomichistogramsnapshot",3]]],[11,"record_data_point","","",0,[[]]],[3,"AtomicHistogramSnapshot","","",null,null],[11,"percentile","","",1,[[]]],[0,"aws","cluster_test","",null,null],[5,"set_asg_size","cluster_test::aws","set_asg_size sets the size of the given autoscaling group",null,[[]]],[0,"cluster","cluster_test","",null,null],[3,"Cluster","cluster_test::cluster","",null,null],[12,"chain_id","","",2,null],[5,"dummy_key_pair","","",null,[[],[["keypair",3],["ed25519privatekey",3],["ed25519publickey",3]]]],[11,"from_host_port","","",2,[[["vec",3],["chainid",3]]]],[11,"new","","",2,[[["option",4],["instance",3],["waypoint",3],["vec",3]]]],[11,"random_validator_instance","","",2,[[],["instance",3]]],[11,"validator_instances","","",2,[[]]],[11,"random_fullnode_instance","","",2,[[],["instance",3]]],[11,"fullnode_instances","","",2,[[]]],[11,"lsr_instances","","",2,[[]]],[11,"vault_instances","","",2,[[]]],[11,"all_instances","","",2,[[]]],[11,"validator_and_fullnode_instances","","",2,[[]]],[11,"into_validator_instances","","",2,[[],[["vec",3],["instance",3]]]],[11,"into_fullnode_instances","","",2,[[],[["vec",3],["instance",3]]]],[11,"into_lsr_instances","","",2,[[],[["vec",3],["instance",3]]]],[11,"into_vault_instances","","",2,[[],[["vec",3],["instance",3]]]],[11,"mint_key_pair","","",2,[[],["keypair",3]]],[11,"get_validator_instance","","",2,[[],[["option",4],["instance",3]]]],[11,"split_n_validators_random","","Splits this cluster into two",2,[[]]],[11,"split_n_fullnodes_random","","",2,[[]]],[11,"validator_sub_cluster","","",2,[[["vec",3],["string",3]],["cluster",3]]],[11,"find_instance_by_pod","","",2,[[],[["option",4],["instance",3]]]],[11,"instances_for_group","","",2,[[["validatorgroup",3]]]],[11,"lsr_instances_for_validators","","",2,[[],[["vec",3],["instance",3]]]],[11,"vault_instances_for_validators","","",2,[[],[["vec",3],["instance",3]]]],[0,"cluster_builder","cluster_test","",null,null],[3,"ClusterBuilderParams","cluster_test::cluster_builder","",null,null],[12,"fullnodes_per_validator","","",3,null],[12,"num_validators","","",3,null],[12,"enable_lsr","","",3,null],[12,"lsr_backend","","",3,null],[11,"enable_lsr","","",3,[[]]],[3,"ClusterBuilder","","",null,null],[12,"current_tag","","",4,null],[12,"cluster_swarm","","",4,null],[11,"new","","",4,[[["clusterswarmkube",3],["string",3]]]],[11,"setup_cluster","","",4,[[["clusterbuilderparams",3]]]],[11,"spawn_validator_and_fullnode_set","","Creates a set of validators and fullnodes with the given …",4,[[]]],[0,"cluster_swarm","cluster_test","",null,null],[0,"cluster_swarm_kube","cluster_test::cluster_swarm","",null,null],[17,"CFG_SEED","cluster_test::cluster_swarm::cluster_swarm_kube","",null,null],[3,"ClusterSwarmKube","","",null,null],[12,"node_map","","",5,null],[11,"new","","",5,[[]]],[11,"kill_job","","",5,[[]]],[11,"get_workspace","","",5,[[]]],[11,"spawn_job","","",5,[[]]],[11,"run","","",5,[[]]],[11,"allocate_node","","",5,[[]]],[11,"upsert_node","","",5,[[["instanceconfig",3]]]],[11,"delete_node","","",5,[[["instanceconfig",3]]]],[11,"cleanup","","",5,[[]]],[11,"delete","","",5,[[]]],[11,"delete_all","","",5,[[]]],[11,"util_cmd","","Runs command on the provided host in separate utility …",5,[[["asref",8]]]],[3,"KubeNode","","",null,null],[12,"name","","",6,null],[12,"provider_id","","",6,null],[12,"internal_ip","","",6,null],[8,"ClusterSwarm","cluster_test::cluster_swarm","",null,null],[10,"spawn_new_instance","","Spawns a new instance.",7,[[["instanceconfig",3]],[["pin",3],["box",3]]]],[10,"clean_data","","If deleting /opt/diem/data/* is required, call clean_date …",7,[[],[["box",3],["pin",3]]]],[10,"get_node_name","","",7,[[],[["box",3],["pin",3]]]],[10,"get_grafana_baseurl","","",7,[[],[["box",3],["pin",3]]]],[10,"put_file","","",7,[[],[["box",3],["pin",3]]]],[0,"effects","cluster_test","",null,null],[0,"network_delay","cluster_test::effects","",null,null],[3,"NetworkDelay","cluster_test::effects::network_delay","",null,null],[11,"new","","",8,[[["vec",3],["instance",3]]]],[5,"three_region_simulation_effects","","three_region_simulation_effects returns the list of …",null,[[],[["vec",3],["networkdelay",3]]]],[0,"packet_loss","cluster_test::effects","",null,null],[3,"PacketLoss","cluster_test::effects::packet_loss","",null,null],[11,"new","","",9,[[["instance",3]]]],[0,"stop_validator","cluster_test::effects","",null,null],[3,"StopValidator","cluster_test::effects::stop_validator","",null,null],[11,"new","","",10,[[["instance",3]]]],[8,"Effect","cluster_test::effects","",null,null],[10,"activate","","",11,[[],[["box",3],["pin",3]]]],[10,"deactivate","","",11,[[],[["box",3],["pin",3]]]],[5,"activate_all","","",null,[[["vec",3]]]],[5,"deactivate_all","","",null,[[["vec",3]]]],[0,"experiments","cluster_test","",null,null],[3,"CompatibilityTest","cluster_test::experiments","",null,null],[3,"CompatiblityTestParams","","",null,null],[12,"count","","",12,null],[12,"updated_image_tag","","",12,null],[3,"LoadTestParams","","",null,null],[12,"mempool","","",13,null],[12,"state_sync","","",13,null],[12,"emit_txn","","",13,null],[12,"duration","","",13,null],[12,"num_stubbed","","",13,null],[3,"PacketLossRandomValidators","","",null,null],[3,"PacketLossRandomValidatorsParams","","",null,null],[3,"PerformanceBenchmark","","",null,null],[3,"PerformanceBenchmarkParams","","",null,null],[12,"percent_nodes_down","","",14,null],[12,"trace","","",14,null],[12,"trace_single","","",14,null],[12,"use_logs_for_trace","","",14,null],[12,"duration","","",14,null],[12,"tps","","",14,null],[12,"backup","","",14,null],[12,"gas_price","","",14,null],[12,"periodic_stats","","",14,null],[12,"invalid_tx","","",14,null],[3,"PerformanceBenchmarkThreeRegionSimulation","","",null,null],[3,"PerformanceBenchmarkThreeRegionSimulationParams","","",null,null],[3,"RebootCluster","","",null,null],[3,"RebootClusterParams","","",null,null],[3,"RebootRandomValidators","","",null,null],[3,"RebootRandomValidatorsParams","","",null,null],[3,"Reconfiguration","","",null,null],[3,"ReconfigurationParams","","",null,null],[12,"count","","",15,null],[12,"emit_txn","","",15,null],[3,"RecoveryTime","","",null,null],[3,"RecoveryTimeParams","","",null,null],[12,"num_accounts_to_mint","","",16,null],[3,"TwinValidators","","",null,null],[3,"TwinValidatorsParams","","",null,null],[12,"pair","","",17,null],[3,"ValidatorVersioning","","",null,null],[3,"ValidatorVersioningParams","","",null,null],[12,"count","","",18,null],[12,"updated_image_tag","","",18,null],[3,"CpuFlamegraph","","",null,null],[3,"CpuFlamegraphParams","","",null,null],[12,"duration_secs","","",19,null],[8,"Experiment","","",null,null],[11,"affected_validators","","",20,[[],[["hashset",3],["string",3]]]],[10,"run","","",20,[[["context",3]],[["pin",3],["box",3]]]],[10,"deadline","","",20,[[],["duration",3]]],[8,"ExperimentParam","","",null,null],[16,"E","","",21,null],[10,"build","","",21,[[["cluster",3]]]],[3,"Context","","",null,null],[12,"tx_emitter","","",22,null],[12,"trace_tail","","",22,null],[12,"prometheus","","",22,null],[12,"cluster_builder","","",22,null],[12,"cluster_builder_params","","",22,null],[12,"cluster","","",22,null],[12,"report","","",22,null],[12,"global_emit_job_request","","",22,null],[12,"emit_to_validator","","",22,null],[12,"cluster_swarm","","",22,null],[12,"current_tag","","Current docker image tag used by this run",22,null],[11,"new","","",22,[[["cluster",3],["prometheus",3],["clusterbuilderparams",3],["tracetail",3],["txemitter",3],["suitereport",3],["option",4],["clusterbuilder",3],["clusterswarmkube",3]]]],[5,"get_experiment","","Given an experiment name and its flags, it constructs an …",null,[[["cluster",3]],[["experiment",8],["box",3]]]],[0,"genesis_helper","cluster_test","",null,null],[3,"GenesisHelper","cluster_test::genesis_helper","",null,null],[11,"new","","",23,[[]]],[11,"set_layout","","",23,[[]]],[11,"diem_root_key","","",23,[[]]],[11,"owner_key","","",23,[[]]],[11,"operator_key","","",23,[[]]],[11,"treasury_compliance_key","","",23,[[]]],[11,"validator_config","","",23,[[["chainid",3],["networkaddress",3]]]],[11,"set_operator","","",23,[[]]],[11,"genesis","","",23,[[["path",3],["chainid",3]]]],[11,"create_and_insert_waypoint","","",23,[[["chainid",3]]]],[11,"create_waypoint","","",23,[[["chainid",3]]]],[11,"extract_private_key","","",23,[[]]],[0,"github","cluster_test","",null,null],[3,"CommitInfo","cluster_test::github","",null,null],[12,"sha","","",24,null],[12,"commit","","",24,null],[3,"GitCommitInfo","","",null,null],[12,"author","","",25,null],[12,"message","","",25,null],[3,"Author","","",null,null],[12,"name","","",26,null],[12,"email","","",26,null],[3,"GitHub","","",null,null],[11,"new","","",27,[[],["github",3]]],[11,"get_commits","","repo in format owner/repo_name sha can be long or short …",27,[[],[["result",6],["vec",3]]]],[0,"health","cluster_test","",null,null],[3,"CommitHistoryHealthCheck","cluster_test::health","Verifies that commit history produced by validators is …",null,null],[3,"DebugPortLogWorker","","",null,null],[3,"FullNodeHealthCheck","","",null,null],[3,"LivenessHealthCheck","","",null,null],[3,"LogTail","","",null,null],[12,"event_receiver","","",28,null],[12,"pending_messages","","",28,null],[3,"TraceTail","","",null,null],[12,"trace_receiver","","",29,null],[12,"trace_enabled","","",29,null],[3,"Commit","","",null,null],[11,"epoch_and_round","","",30,[[]]],[4,"Event","","",null,null],[13,"Commit","","",31,null],[13,"ConsensusStarted","","",31,null],[3,"ValidatorEvent","","",null,null],[8,"HealthCheck","","",null,null],[11,"on_event","","Verify specific event",32,[[["healthcheckcontext",3],["validatorevent",3]]]],[10,"verify","","Periodic verification (happens even if when no events …",32,[[["healthcheckcontext",3]],[["pin",3],["box",3]]]],[11,"invalidate","","Optionally marks validator as failed, requiring waiting …",32,[[]]],[11,"clear","","Clean is invoked when cluster is wiped This means that …",32,[[]]],[10,"name","","",32,[[]]],[3,"HealthCheckRunner","","",null,null],[11,"new","","",33,[[["cluster",3],["box",3],["vec",3]]]],[11,"new_all","","",33,[[["cluster",3]]]],[11,"run","","Takes a list of affected_validators. If there are …",33,[[["printfailures",4],["hashset",3]]]],[11,"invalidate","","",33,[[]]],[11,"clear","","",33,[[]]],[4,"PrintFailures","","",null,null],[13,"None","","",34,null],[13,"UnexpectedOnly","","",34,null],[13,"All","","",34,null],[3,"HealthCheckContext","","",null,null],[3,"HealthCheckError","","",null,null],[12,"validator","","",35,null],[12,"message","","",35,null],[11,"new","","",36,[[]]],[11,"now","","",36,[[],["duration",3]]],[11,"report_failure","","",36,[[["string",3]]]],[0,"instance","cluster_test","",null,null],[3,"ValidatorGroup","cluster_test::instance","",null,null],[12,"index","","",37,null],[12,"twin_index","","",37,null],[3,"InstanceConfig","","",null,null],[12,"validator_group","","",38,null],[12,"application_config","","",38,null],[4,"ApplicationConfig","","",null,null],[13,"Validator","","",39,null],[13,"Fullnode","","",39,null],[13,"LSR","","",39,null],[13,"Vault","","",39,null],[3,"VaultConfig","","",null,null],[3,"LSRConfig","","",null,null],[12,"image_tag","","",40,null],[12,"lsr_backend","","",40,null],[12,"vault_addr","","",40,null],[12,"vault_namespace","","",40,null],[3,"ValidatorConfig","","",null,null],[12,"enable_lsr","","",41,null],[12,"image_tag","","",41,null],[12,"safety_rules_addr","","",41,null],[12,"vault_addr","","",41,null],[12,"vault_namespace","","",41,null],[3,"FullnodeConfig","","",null,null],[12,"fullnode_index","","",42,null],[12,"image_tag","","",42,null],[12,"seed_peer_ip","","",42,null],[12,"vault_addr","","",42,null],[12,"vault_namespace","","",42,null],[3,"Instance","","",null,null],[11,"new_for_index","","",37,[[],["validatorgroup",3]]],[11,"index_only","","",37,[[]]],[11,"needs_genesis","","",39,[[]]],[11,"needs_config","","",39,[[]]],[11,"needs_fluentbit","","",39,[[]]],[11,"replace_tag","","",38,[[["string",3]],["result",6]]],[11,"pod_name","","",38,[[],["string",3]]],[11,"make_twin","","",38,[[]]],[11,"new","","",43,[[["option",4],["string",3],["client",3]],["instance",3]]],[11,"new_k8s","","",43,[[["client",3],["clusterswarmkube",3],["instanceconfig",3],["string",3]],["instance",3]]],[11,"counter","","",43,[[],["result",6]]],[11,"try_json_rpc","","",43,[[]]],[11,"wait_json_rpc","","",43,[[["instant",3]]]],[11,"peer_name","","",43,[[],["string",3]]],[11,"validator_group","","",43,[[],["validatorgroup",3]]],[11,"ip","","",43,[[],["string",3]]],[11,"ac_port","","",43,[[]]],[11,"json_rpc_url","","",43,[[],["url",3]]],[11,"debug_interface_port","","",43,[[],["option",4]]],[11,"json_rpc_client","","",43,[[],["jsonrpcclient",3]]],[11,"stop","","",43,[[]]],[11,"start","","Node must be stopped first",43,[[]]],[11,"clean_data","","If deleting /opt/diem/data/* is required, call …",43,[[]]],[11,"spawn_job","","",43,[[]]],[11,"instance_config","","",43,[[],["instanceconfig",3]]],[11,"cmd","","",43,[[["asref",8]]]],[11,"util_cmd","","Runs command on the same host in separate utility …",43,[[["asref",8]]]],[11,"exec","","Unlike util_cmd, exec runs command inside the container",43,[[]]],[11,"debug_interface_client","","",43,[[],["asyncnodedebugclient",3]]],[5,"instancelist_to_set","","",null,[[],[["hashset",3],["string",3]]]],[5,"validator_pod_name","","",null,[[],["string",3]]],[5,"vault_pod_name","","",null,[[],["string",3]]],[5,"lsr_pod_name","","",null,[[],["string",3]]],[5,"fullnode_pod_name","","",null,[[],["string",3]]],[0,"prometheus","cluster_test","",null,null],[3,"Prometheus","cluster_test::prometheus","",null,null],[3,"MatrixResponse","","",null,null],[3,"TimeSeries","","",null,null],[11,"new","","",44,[[["string",3]]]],[11,"link_to_dashboard","","",44,[[["duration",3]],["string",3]]],[11,"query_range_avg","","",44,[[["duration",3],["string",3]],["result",6]]],[11,"avg","","",45,[[],["option",4]]],[11,"get","","",46,[[]]],[11,"avg","","",46,[[],["option",4]]],[0,"report","cluster_test","",null,null],[3,"SuiteReport","cluster_test::report","",null,null],[3,"ReportedMetric","","",null,null],[12,"experiment","","",47,null],[12,"metric","","",47,null],[12,"value","","",47,null],[11,"new","","",48,[[]]],[11,"report_metric","","",48,[[["tostring",8]]]],[11,"report_text","","",48,[[["string",3]]]],[11,"report_text_same_line","","",48,[[["string",3]]]],[11,"report_txn_stats","","",48,[[["duration",3],["string",3],["txstats",3]]]],[0,"slack","cluster_test","",null,null],[3,"SlackClient","cluster_test::slack","",null,null],[11,"new","","",49,[[]]],[11,"send_message","","",49,[[["url",3]],["result",6]]],[0,"stats","cluster_test","",null,null],[3,"PrometheusRangeView","cluster_test::stats","",null,null],[11,"new","","",50,[[["prometheus",3],["duration",3]]]],[11,"avg_txns_per_block","","",50,[[],["option",4]]],[11,"avg_backup_bytes_per_second","","",50,[[],["option",4]]],[0,"suite","cluster_test","",null,null],[3,"ExperimentSuite","cluster_test::suite","",null,null],[12,"experiments","","",51,null],[11,"new_by_name","","",51,[[["cluster",3]],["result",6]]],[0,"tx_emitter","cluster_test","",null,null],[4,"InvalidTxType","cluster_test::tx_emitter","",null,null],[13,"ChainId","","invalid tx with wrong chain id",52,null],[13,"Sender","","invalid tx with sender not on chain",52,null],[13,"Receiver","","invalid tx with receiver not on chain",52,null],[13,"Duplication","","duplicate an exist tx",52,null],[13,"MaxValue","","Last element of enum, please add new case above",52,null],[3,"TxEmitter","","",null,null],[3,"EmitJob","","",null,null],[3,"TxStats","","",null,null],[12,"submitted","","",53,null],[12,"committed","","",53,null],[12,"expired","","",53,null],[12,"latency","","",53,null],[12,"latency_buckets","","",53,null],[3,"TxStatsRate","","",null,null],[12,"submitted","","",54,null],[12,"committed","","",54,null],[12,"expired","","",54,null],[12,"latency","","",54,null],[12,"p99_latency","","",54,null],[3,"EmitThreadParams","","",null,null],[12,"wait_millis","","",55,null],[12,"wait_committed","","",55,null],[3,"EmitJobRequest","","",null,null],[12,"instances","","",56,null],[12,"accounts_per_client","","",56,null],[12,"workers_per_ac","","",56,null],[12,"thread_params","","",56,null],[12,"gas_price","","",56,null],[12,"invalid_tx","","",56,null],[7,"REUSE_ACC","","",null,null],[11,"for_instances","","",56,[[["option",4],["vec",3],["instance",3]]]],[11,"fixed_tps_params","","",56,[[]]],[11,"fixed_tps","","",56,[[["vec",3],["instance",3]]]],[11,"new","","",57,[[["cluster",3]]]],[11,"take_account","","",57,[[],["accountdata",3]]],[11,"clear","","",57,[[]]],[11,"submit_single_transaction","","",57,[[["instance",3],["accountdata",3],["accountaddress",3]]]],[11,"start_job","","",57,[[["emitjobrequest",3]]]],[11,"load_diem_root_account","","",57,[[["jsonrpcclient",3]]]],[11,"load_faucet_account","","",57,[[["jsonrpcclient",3]]]],[11,"load_tc_account","","",57,[[["jsonrpcclient",3]]]],[11,"load_dd_account","","",57,[[["jsonrpcclient",3]]]],[11,"load_vasp_account","","",57,[[["jsonrpcclient",3]]]],[11,"get_money_source","","",57,[[]]],[11,"get_seed_accounts","","",57,[[]]],[11,"mint_accounts","","",57,[[["emitjobrequest",3]]]],[11,"peek_job_stats","","",57,[[["emitjob",3]],["txstats",3]]],[11,"stop_job","","",57,[[["emitjob",3]]]],[11,"periodic_stat","","",57,[[["emitjob",3],["duration",3]]]],[11,"emit_txn_for","","",57,[[["emitjobrequest",3],["duration",3]]]],[11,"emit_txn_for_with_stats","","",57,[[["emitjobrequest",3],["duration",3]]]],[11,"query_sequence_numbers","","",57,[[["instance",3],["accountaddress",3]]]],[5,"gen_submit_transaction_request","","",null,[[["chainid",3],["accountdata",3],["script",3]],["signedtransaction",3]]],[5,"gen_transfer_txn_request","","",null,[[["chainid",3],["accountdata",3],["accountaddress",3]],["signedtransaction",3]]],[5,"execute_and_wait_transactions","","",null,[[["vec",3],["jsonrpcclient",3],["accountdata",3],["signedtransaction",3]]]],[3,"AccountData","","",null,null],[12,"address","","",58,null],[12,"key_pair","","",58,null],[12,"sequence_number","","",58,null],[11,"auth_key_prefix","","",58,[[],["vec",3]]],[11,"rate","","",53,[[["duration",3]],["txstatsrate",3]]],[0,"util","cluster_test","",null,null],[5,"human_readable_bytes_per_sec","cluster_test::util","",null,[[],["string",3]]],[11,"from","cluster_test::atomic_histogram","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","cluster_test::cluster","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","cluster_test::cluster_builder","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","cluster_test::cluster_swarm::cluster_swarm_kube","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","cluster_test::effects::network_delay","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","cluster_test::effects::packet_loss","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","cluster_test::effects::stop_validator","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","cluster_test::experiments","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_string","","",59,[[],["string",3]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"init","","",59,[[]]],[11,"deref","","",59,[[]]],[11,"deref_mut","","",59,[[]]],[11,"drop","","",59,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_string","","",60,[[],["string",3]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"init","","",60,[[]]],[11,"deref","","",60,[[]]],[11,"deref_mut","","",60,[[]]],[11,"drop","","",60,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_string","","",61,[[],["string",3]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"init","","",61,[[]]],[11,"deref","","",61,[[]]],[11,"deref_mut","","",61,[[]]],[11,"drop","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"init","","",62,[[]]],[11,"deref","","",62,[[]]],[11,"deref_mut","","",62,[[]]],[11,"drop","","",62,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_string","","",63,[[],["string",3]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"init","","",63,[[]]],[11,"deref","","",63,[[]]],[11,"deref_mut","","",63,[[]]],[11,"drop","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_string","","",64,[[],["string",3]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"init","","",64,[[]]],[11,"deref","","",64,[[]]],[11,"deref_mut","","",64,[[]]],[11,"drop","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"init","","",65,[[]]],[11,"deref","","",65,[[]]],[11,"deref_mut","","",65,[[]]],[11,"drop","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"init","","",66,[[]]],[11,"deref","","",66,[[]]],[11,"deref_mut","","",66,[[]]],[11,"drop","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_string","","",67,[[],["string",3]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"init","","",67,[[]]],[11,"deref","","",67,[[]]],[11,"deref_mut","","",67,[[]]],[11,"drop","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"init","","",68,[[]]],[11,"deref","","",68,[[]]],[11,"deref_mut","","",68,[[]]],[11,"drop","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_string","","",69,[[],["string",3]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"init","","",69,[[]]],[11,"deref","","",69,[[]]],[11,"deref_mut","","",69,[[]]],[11,"drop","","",69,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_string","","",70,[[],["string",3]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"init","","",70,[[]]],[11,"deref","","",70,[[]]],[11,"deref_mut","","",70,[[]]],[11,"drop","","",70,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_string","","",71,[[],["string",3]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"init","","",71,[[]]],[11,"deref","","",71,[[]]],[11,"deref_mut","","",71,[[]]],[11,"drop","","",71,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_string","","",72,[[],["string",3]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"init","","",72,[[]]],[11,"deref","","",72,[[]]],[11,"deref_mut","","",72,[[]]],[11,"drop","","",72,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_string","","",73,[[],["string",3]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"init","","",73,[[]]],[11,"deref","","",73,[[]]],[11,"deref_mut","","",73,[[]]],[11,"drop","","",73,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","cluster_test::genesis_helper","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","cluster_test::github","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"from","cluster_test::health","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"init","","",74,[[]]],[11,"deref","","",74,[[]]],[11,"deref_mut","","",74,[[]]],[11,"drop","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"init","","",75,[[]]],[11,"deref","","",75,[[]]],[11,"deref_mut","","",75,[[]]],[11,"drop","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"init","","",76,[[]]],[11,"deref","","",76,[[]]],[11,"deref_mut","","",76,[[]]],[11,"drop","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"init","","",77,[[]]],[11,"deref","","",77,[[]]],[11,"deref_mut","","",77,[[]]],[11,"drop","","",77,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"init","","",78,[[]]],[11,"deref","","",78,[[]]],[11,"deref_mut","","",78,[[]]],[11,"drop","","",78,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"from","cluster_test::instance","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"init","","",79,[[]]],[11,"deref","","",79,[[]]],[11,"deref_mut","","",79,[[]]],[11,"drop","","",79,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"init","","",41,[[]]],[11,"deref","","",41,[[]]],[11,"deref_mut","","",41,[[]]],[11,"drop","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"to_string","","",43,[[],["string",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"from","cluster_test::prometheus","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"init","","",46,[[]]],[11,"deref","","",46,[[]]],[11,"deref_mut","","",46,[[]]],[11,"drop","","",46,[[]]],[11,"from","cluster_test::report","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_string","","",48,[[],["string",3]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"erased_serialize","","",48,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"test_only_hash","","",48,[[],["hashvalue",3]]],[11,"vzip","","",48,[[]]],[11,"init","","",48,[[]]],[11,"deref","","",48,[[]]],[11,"deref_mut","","",48,[[]]],[11,"drop","","",48,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"erased_serialize","","",47,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"test_only_hash","","",47,[[],["hashvalue",3]]],[11,"vzip","","",47,[[]]],[11,"init","","",47,[[]]],[11,"deref","","",47,[[]]],[11,"deref_mut","","",47,[[]]],[11,"drop","","",47,[[]]],[11,"from","cluster_test::slack","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"init","","",49,[[]]],[11,"deref","","",49,[[]]],[11,"deref_mut","","",49,[[]]],[11,"drop","","",49,[[]]],[11,"from","cluster_test::stats","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"init","","",50,[[]]],[11,"deref","","",50,[[]]],[11,"deref_mut","","",50,[[]]],[11,"drop","","",50,[[]]],[11,"from","cluster_test::suite","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"init","","",51,[[]]],[11,"deref","","",51,[[]]],[11,"deref_mut","","",51,[[]]],[11,"drop","","",51,[[]]],[11,"from","cluster_test::tx_emitter","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"init","","",52,[[]]],[11,"deref","","",52,[[]]],[11,"deref_mut","","",52,[[]]],[11,"drop","","",52,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"init","","",57,[[]]],[11,"deref","","",57,[[]]],[11,"deref_mut","","",57,[[]]],[11,"drop","","",57,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"init","","",80,[[]]],[11,"deref","","",80,[[]]],[11,"deref_mut","","",80,[[]]],[11,"drop","","",80,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_string","","",53,[[],["string",3]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"init","","",53,[[]]],[11,"deref","","",53,[[]]],[11,"deref_mut","","",53,[[]]],[11,"drop","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_string","","",54,[[],["string",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"init","","",54,[[]]],[11,"deref","","",54,[[]]],[11,"deref_mut","","",54,[[]]],[11,"drop","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"init","","",55,[[]]],[11,"deref","","",55,[[]]],[11,"deref_mut","","",55,[[]]],[11,"drop","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"init","","",56,[[]]],[11,"deref","","",56,[[]]],[11,"deref_mut","","",56,[[]]],[11,"drop","","",56,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"init","","",58,[[]]],[11,"deref","","",58,[[]]],[11,"deref_mut","","",58,[[]]],[11,"drop","","",58,[[]]],[11,"build","cluster_test::experiments","",12,[[["cluster",3]]]],[11,"build","","",19,[[["cluster",3]]]],[11,"build","","",13,[[["cluster",3]]]],[11,"build","","",62,[[["cluster",3]]]],[11,"build","","",14,[[["cluster",3]]]],[11,"build","","",65,[[["cluster",3]]]],[11,"build","","",66,[[["cluster",3]]]],[11,"build","","",68,[[["cluster",3]]]],[11,"build","","",15,[[["cluster",3]]]],[11,"build","","",16,[[["cluster",3]]]],[11,"build","","",17,[[["cluster",3]]]],[11,"build","","",18,[[["cluster",3]]]],[11,"spawn_new_instance","cluster_test::cluster_swarm::cluster_swarm_kube","",5,[[["instanceconfig",3]],[["pin",3],["box",3]]]],[11,"clean_data","","",5,[[],[["box",3],["pin",3]]]],[11,"get_node_name","","",5,[[],[["box",3],["pin",3]]]],[11,"get_grafana_baseurl","","",5,[[],[["box",3],["pin",3]]]],[11,"put_file","","",5,[[],[["box",3],["pin",3]]]],[11,"activate","cluster_test::effects::network_delay","",8,[[],[["box",3],["pin",3]]]],[11,"deactivate","","",8,[[],[["box",3],["pin",3]]]],[11,"activate","cluster_test::effects::packet_loss","",9,[[],[["box",3],["pin",3]]]],[11,"deactivate","","",9,[[],[["box",3],["pin",3]]]],[11,"activate","cluster_test::effects::stop_validator","",10,[[],[["box",3],["pin",3]]]],[11,"deactivate","","",10,[[],[["box",3],["pin",3]]]],[11,"affected_validators","cluster_test::experiments","",59,[[],[["hashset",3],["string",3]]]],[11,"run","","",59,[[["context",3]],[["pin",3],["box",3]]]],[11,"deadline","","",59,[[],["duration",3]]],[11,"affected_validators","","",60,[[],[["hashset",3],["string",3]]]],[11,"run","","",60,[[["context",3]],[["box",3],["pin",3]]]],[11,"deadline","","",60,[[],["duration",3]]],[11,"run","","",61,[[["context",3]],[["pin",3],["box",3]]]],[11,"deadline","","",61,[[],["duration",3]]],[11,"affected_validators","","",63,[[],[["hashset",3],["string",3]]]],[11,"run","","",63,[[["context",3]],[["box",3],["pin",3]]]],[11,"deadline","","",63,[[],["duration",3]]],[11,"run","","",64,[[["context",3]],[["pin",3],["box",3]]]],[11,"deadline","","",64,[[],["duration",3]]],[11,"affected_validators","","",67,[[],[["hashset",3],["string",3]]]],[11,"run","","",67,[[["context",3]],[["pin",3],["box",3]]]],[11,"deadline","","",67,[[],["duration",3]]],[11,"affected_validators","","",69,[[],[["hashset",3],["string",3]]]],[11,"run","","",69,[[["context",3]],[["pin",3],["box",3]]]],[11,"deadline","","",69,[[],["duration",3]]],[11,"affected_validators","","",70,[[],[["hashset",3],["string",3]]]],[11,"run","","",70,[[["context",3]],[["pin",3],["box",3]]]],[11,"deadline","","",70,[[],["duration",3]]],[11,"affected_validators","","",71,[[],[["hashset",3],["string",3]]]],[11,"run","","",71,[[["context",3]],[["pin",3],["box",3]]]],[11,"deadline","","",71,[[],["duration",3]]],[11,"affected_validators","","",72,[[],[["hashset",3],["string",3]]]],[11,"run","","",72,[[["context",3]],[["pin",3],["box",3]]]],[11,"deadline","","",72,[[],["duration",3]]],[11,"affected_validators","","",73,[[],[["hashset",3],["string",3]]]],[11,"run","","",73,[[["context",3]],[["pin",3],["box",3]]]],[11,"deadline","","",73,[[],["duration",3]]],[11,"on_event","cluster_test::health","",74,[[["healthcheckcontext",3],["validatorevent",3]]]],[11,"verify","","",74,[[["healthcheckcontext",3]],[["pin",3],["box",3]]]],[11,"clear","","",74,[[]]],[11,"name","","",74,[[]]],[11,"verify","","",76,[[["healthcheckcontext",3]],[["pin",3],["box",3]]]],[11,"name","","",76,[[]]],[11,"on_event","","",77,[[["healthcheckcontext",3],["validatorevent",3]]]],[11,"verify","","",77,[[["healthcheckcontext",3]],[["pin",3],["box",3]]]],[11,"invalidate","","",77,[[]]],[11,"name","","",77,[[]]],[11,"clone","cluster_test::cluster","",2,[[],["cluster",3]]],[11,"clone","cluster_test::cluster_builder","",3,[[],["clusterbuilderparams",3]]],[11,"clone","cluster_test::cluster_swarm::cluster_swarm_kube","",5,[[],["clusterswarmkube",3]]],[11,"clone","","",6,[[],["kubenode",3]]],[11,"clone","cluster_test::health","",30,[[],["commit",3]]],[11,"clone","","",31,[[],["event",4]]],[11,"clone","","",78,[[],["validatorevent",3]]],[11,"clone","cluster_test::instance","",37,[[],["validatorgroup",3]]],[11,"clone","","",38,[[],["instanceconfig",3]]],[11,"clone","","",39,[[],["applicationconfig",4]]],[11,"clone","","",79,[[],["vaultconfig",3]]],[11,"clone","","",40,[[],["lsrconfig",3]]],[11,"clone","","",41,[[],["validatorconfig",3]]],[11,"clone","","",42,[[],["fullnodeconfig",3]]],[11,"clone","","",43,[[],["instance",3]]],[11,"clone","cluster_test::prometheus","",44,[[],["prometheus",3]]],[11,"clone","cluster_test::tx_emitter","",55,[[],["emitthreadparams",3]]],[11,"clone","","",56,[[],["emitjobrequest",3]]],[11,"clone","","",58,[[],["accountdata",3]]],[11,"default","cluster_test::atomic_histogram","",0,[[],["atomichistogramaccumulator",3]]],[11,"default","","",1,[[],["atomichistogramsnapshot",3]]],[11,"default","cluster_test::github","",27,[[]]],[11,"default","cluster_test::health","",74,[[],["commithistoryhealthcheck",3]]],[11,"default","","",36,[[]]],[11,"default","cluster_test::report","",48,[[],["suitereport",3]]],[11,"default","cluster_test::slack","",49,[[]]],[11,"default","cluster_test::tx_emitter","",53,[[],["txstats",3]]],[11,"default","","",54,[[],["txstatsrate",3]]],[11,"default","","",55,[[]]],[11,"eq","cluster_test::instance","",37,[[["validatorgroup",3]]]],[11,"ne","","",37,[[["validatorgroup",3]]]],[11,"fmt","cluster_test::atomic_histogram","",1,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::cluster_builder","",3,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::cluster_swarm::cluster_swarm_kube","",6,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::experiments","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::github","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::health","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::instance","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::report","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::tx_emitter","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::effects::network_delay","",8,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::effects::packet_loss","",9,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::effects::stop_validator","",10,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::experiments","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],[["result",6],["error",3]]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],[["result",6],["error",3]]]],[11,"fmt","","",64,[[["formatter",3]],[["result",6],["error",3]]]],[11,"fmt","","",67,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::instance","",43,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::report","",48,[[["formatter",3]],["result",6]]],[11,"fmt","cluster_test::tx_emitter","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"try_from","cluster_test::cluster_swarm::cluster_swarm_kube","",6,[[["node",3]],["result",6]]],[11,"deserialize","cluster_test::github","",24,[[],["result",4]]],[11,"deserialize","","",25,[[],["result",4]]],[11,"deserialize","","",26,[[],["result",4]]],[11,"serialize","cluster_test::report","",48,[[],["result",4]]],[11,"serialize","","",47,[[],["result",4]]],[11,"clap","cluster_test::cluster_builder","",3,[[],["app",3]]],[11,"from_clap","","",3,[[["argmatches",3]]]],[11,"clap","cluster_test::experiments","",12,[[],["app",3]]],[11,"from_clap","","",12,[[["argmatches",3]]]],[11,"clap","","",19,[[],["app",3]]],[11,"from_clap","","",19,[[["argmatches",3]]]],[11,"clap","","",13,[[],["app",3]]],[11,"from_clap","","",13,[[["argmatches",3]]]],[11,"clap","","",62,[[],["app",3]]],[11,"from_clap","","",62,[[["argmatches",3]]]],[11,"clap","","",14,[[],["app",3]]],[11,"from_clap","","",14,[[["argmatches",3]]]],[11,"clap","","",65,[[],["app",3]]],[11,"from_clap","","",65,[[["argmatches",3]]]],[11,"clap","","",66,[[],["app",3]]],[11,"from_clap","","",66,[[["argmatches",3]]]],[11,"clap","","",68,[[],["app",3]]],[11,"from_clap","","",68,[[["argmatches",3]]]],[11,"clap","","",15,[[],["app",3]]],[11,"from_clap","","",15,[[["argmatches",3]]]],[11,"clap","","",16,[[],["app",3]]],[11,"from_clap","","",16,[[["argmatches",3]]]],[11,"clap","","",17,[[],["app",3]]],[11,"from_clap","","",17,[[["argmatches",3]]]],[11,"clap","","",18,[[],["app",3]]],[11,"from_clap","","",18,[[["argmatches",3]]]],[11,"augment_clap","cluster_test::cluster_builder","",3,[[["app",3]],["app",3]]],[11,"is_subcommand","","",3,[[]]],[11,"augment_clap","cluster_test::experiments","",12,[[["app",3]],["app",3]]],[11,"is_subcommand","","",12,[[]]],[11,"augment_clap","","",19,[[["app",3]],["app",3]]],[11,"is_subcommand","","",19,[[]]],[11,"augment_clap","","",13,[[["app",3]],["app",3]]],[11,"is_subcommand","","",13,[[]]],[11,"augment_clap","","",62,[[["app",3]],["app",3]]],[11,"is_subcommand","","",62,[[]]],[11,"augment_clap","","",14,[[["app",3]],["app",3]]],[11,"is_subcommand","","",14,[[]]],[11,"augment_clap","","",65,[[["app",3]],["app",3]]],[11,"is_subcommand","","",65,[[]]],[11,"augment_clap","","",66,[[["app",3]],["app",3]]],[11,"is_subcommand","","",66,[[]]],[11,"augment_clap","","",68,[[["app",3]],["app",3]]],[11,"is_subcommand","","",68,[[]]],[11,"augment_clap","","",15,[[["app",3]],["app",3]]],[11,"is_subcommand","","",15,[[]]],[11,"augment_clap","","",16,[[["app",3]],["app",3]]],[11,"is_subcommand","","",16,[[]]],[11,"augment_clap","","",17,[[["app",3]],["app",3]]],[11,"is_subcommand","","",17,[[]]],[11,"augment_clap","","",18,[[["app",3]],["app",3]]],[11,"is_subcommand","","",18,[[]]],[11,"new_nodes_down","","",14,[[]]],[11,"new_fixed_tps","","",14,[[]]],[11,"non_zero_gas_price","","",14,[[]]],[11,"mix_invalid_tx","","",14,[[]]],[11,"enable_db_backup","","",14,[[]]],[11,"new","","",68,[[]]],[11,"new","cluster_test::health","",74,[[]]],[11,"spawn_new","","",75,[[["cluster",3]]]],[11,"run","","",75,[[]]],[11,"new","","",76,[[["cluster",3]],["fullnodehealthcheck",3]]],[11,"new","","",77,[[["cluster",3]]]],[11,"recv_all_until_deadline","","",28,[[["instant",3]],[["vec",3],["validatorevent",3]]]],[11,"recv_all","","",28,[[],[["vec",3],["validatorevent",3]]]],[11,"capture_trace","","",29,[[["duration",3]]]]],"p":[[3,"AtomicHistogramAccumulator"],[3,"AtomicHistogramSnapshot"],[3,"Cluster"],[3,"ClusterBuilderParams"],[3,"ClusterBuilder"],[3,"ClusterSwarmKube"],[3,"KubeNode"],[8,"ClusterSwarm"],[3,"NetworkDelay"],[3,"PacketLoss"],[3,"StopValidator"],[8,"Effect"],[3,"CompatiblityTestParams"],[3,"LoadTestParams"],[3,"PerformanceBenchmarkParams"],[3,"ReconfigurationParams"],[3,"RecoveryTimeParams"],[3,"TwinValidatorsParams"],[3,"ValidatorVersioningParams"],[3,"CpuFlamegraphParams"],[8,"Experiment"],[8,"ExperimentParam"],[3,"Context"],[3,"GenesisHelper"],[3,"CommitInfo"],[3,"GitCommitInfo"],[3,"Author"],[3,"GitHub"],[3,"LogTail"],[3,"TraceTail"],[3,"Commit"],[4,"Event"],[8,"HealthCheck"],[3,"HealthCheckRunner"],[4,"PrintFailures"],[3,"HealthCheckError"],[3,"HealthCheckContext"],[3,"ValidatorGroup"],[3,"InstanceConfig"],[4,"ApplicationConfig"],[3,"LSRConfig"],[3,"ValidatorConfig"],[3,"FullnodeConfig"],[3,"Instance"],[3,"Prometheus"],[3,"MatrixResponse"],[3,"TimeSeries"],[3,"ReportedMetric"],[3,"SuiteReport"],[3,"SlackClient"],[3,"PrometheusRangeView"],[3,"ExperimentSuite"],[4,"InvalidTxType"],[3,"TxStats"],[3,"TxStatsRate"],[3,"EmitThreadParams"],[3,"EmitJobRequest"],[3,"TxEmitter"],[3,"AccountData"],[3,"CompatibilityTest"],[3,"CpuFlamegraph"],[3,"PacketLossRandomValidators"],[3,"PacketLossRandomValidatorsParams"],[3,"PerformanceBenchmark"],[3,"PerformanceBenchmarkThreeRegionSimulation"],[3,"PerformanceBenchmarkThreeRegionSimulationParams"],[3,"RebootClusterParams"],[3,"RebootCluster"],[3,"RebootRandomValidatorsParams"],[3,"RebootRandomValidators"],[3,"Reconfiguration"],[3,"RecoveryTime"],[3,"TwinValidators"],[3,"ValidatorVersioning"],[3,"CommitHistoryHealthCheck"],[3,"DebugPortLogWorker"],[3,"FullNodeHealthCheck"],[3,"LivenessHealthCheck"],[3,"ValidatorEvent"],[3,"VaultConfig"],[3,"EmitJob"]]},\
"compiled_stdlib":{"doc":"","i":[[0,"legacy","compiled_stdlib","",null,null],[0,"transaction_scripts","compiled_stdlib::legacy","Rust representation of a Move transaction script that can …",null,null],[4,"LegacyStdlibScript","compiled_stdlib::legacy::transaction_scripts","All of the Move transaction scripts that can be executed …",null,null],[13,"AddCurrencyToAccount","","",0,null],[13,"AddRecoveryRotationCapability","","",0,null],[13,"AddScriptAllowList","","",0,null],[13,"AddValidatorAndReconfigure","","",0,null],[13,"Burn","","",0,null],[13,"BurnTxnFees","","",0,null],[13,"CancelBurn","","",0,null],[13,"CreateChildVaspAccount","","",0,null],[13,"CreateDesignatedDealer","","",0,null],[13,"CreateParentVaspAccount","","",0,null],[13,"CreateRecoveryAddress","","",0,null],[13,"CreateValidatorAccount","","",0,null],[13,"CreateValidatorOperatorAccount","","",0,null],[13,"FreezeAccount","","",0,null],[13,"PeerToPeerWithMetadata","","",0,null],[13,"Preburn","","",0,null],[13,"PublishSharedEd2551PublicKey","","",0,null],[13,"RegisterValidatorConfig","","",0,null],[13,"RemoveValidatorAndReconfigure","","",0,null],[13,"RotateAuthenticationKey","","",0,null],[13,"RotateAuthenticationKeyWithNonce","","",0,null],[13,"RotateAuthenticationKeyWithNonceAdmin","","",0,null],[13,"RotateAuthenticationKeyWithRecoveryAddress","","",0,null],[13,"RotateDualAttestationInfo","","",0,null],[13,"RotateSharedEd2551PublicKey","","",0,null],[13,"SetValidatorConfigAndReconfigure","","",0,null],[13,"SetValidatorOperator","","",0,null],[13,"SetValidatorOperatorWithNonceAdmin","","",0,null],[13,"TieredMint","","",0,null],[13,"UnfreezeAccount","","",0,null],[13,"UpdateExchangeRate","","",0,null],[13,"UpdateDiemVersion","","",0,null],[13,"UpdateMintingAbility","","",0,null],[13,"UpdateDualAttestationLimit","","",0,null],[11,"all","","Return a vector containing all of the standard library …",0,[[],["vec",3]]],[11,"allowlist","","Construct the allowlist of script hashes used to …",0,[[],["vec",3]]],[11,"name","","Return a lowercase-underscore style name for this script",0,[[],["string",3]]],[11,"is","","Return true if <code>code_bytes</code> is the bytecode of one of the …",0,[[]]],[11,"compiled_bytes","","Return the Move bytecode that was produced by compiling …",0,[[],["compiledbytes",3]]],[11,"abi","","Return the ABI of the script (including the bytecode).",0,[[],["scriptabi",3]]],[11,"hash","","Return the sha3-256 hash of the compiled script bytes.",0,[[],["hashvalue",3]]],[3,"CompiledBytes","","Bytes produced by compiling a Move source language script …",null,null],[11,"hash","","Return the sha3-256 hash of the script bytes",1,[[],["hashvalue",3]]],[11,"into_vec","","Convert this newtype wrapper into a vector of bytes",1,[[],["vec",3]]],[0,"shim","compiled_stdlib","",null,null],[0,"tmp_new_transaction_script_builders","compiled_stdlib::shim","Conversion library between a structured representation of …",null,null],[4,"ScriptCall","compiled_stdlib::shim::tmp_new_transaction_script_builders","Structured representation of a call into a known Move …",null,null],[13,"AddCurrencyToAccount","","SummaryAdds a zero <code>Currency</code> balance to the sending <code>account</code>…",2,null],[12,"currency","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",3,null],[13,"AddRecoveryRotationCapability","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryStores the sending accounts ability to rotate its …",2,null],[12,"recovery_address","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",4,null],[13,"AddValidatorAndReconfigure","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryAdds a validator account to the validator set, and …",2,null],[12,"sliding_nonce","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",5,null],[12,"validator_name","","",5,null],[12,"validator_address","","",5,null],[13,"BurnTxnFees","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryBurns the transaction fees collected in the …",2,null],[12,"coin_type","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",6,null],[13,"BurnWithAmount","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryBurns the coins held in a preburn resource in the …",2,null],[12,"token","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",7,null],[12,"sliding_nonce","","",7,null],[12,"preburn_address","","",7,null],[12,"amount","","",7,null],[13,"CancelBurnWithAmount","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryCancels and returns the coins held in the preburn …",2,null],[12,"token","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",8,null],[12,"preburn_address","","",8,null],[12,"amount","","",8,null],[13,"CreateChildVaspAccount","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryCreates a Child VASP account with its parent being …",2,null],[12,"coin_type","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",9,null],[12,"child_address","","",9,null],[12,"auth_key_prefix","","",9,null],[12,"add_all_currencies","","",9,null],[12,"child_initial_balance","","",9,null],[13,"CreateDesignatedDealer","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryCreates a Designated Dealer account with the …",2,null],[12,"currency","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",10,null],[12,"sliding_nonce","","",10,null],[12,"addr","","",10,null],[12,"auth_key_prefix","","",10,null],[12,"human_name","","",10,null],[12,"add_all_currencies","","",10,null],[13,"CreateParentVaspAccount","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryCreates a Parent VASP account with the specified …",2,null],[12,"coin_type","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",11,null],[12,"sliding_nonce","","",11,null],[12,"new_account_address","","",11,null],[12,"auth_key_prefix","","",11,null],[12,"human_name","","",11,null],[12,"add_all_currencies","","",11,null],[13,"CreateRecoveryAddress","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryInitializes the sending account as a recovery …",2,null],[13,"CreateValidatorAccount","","SummaryCreates a Validator account. This transaction can …",2,null],[12,"sliding_nonce","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",12,null],[12,"new_account_address","","",12,null],[12,"auth_key_prefix","","",12,null],[12,"human_name","","",12,null],[13,"CreateValidatorOperatorAccount","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryCreates a Validator Operator account. This …",2,null],[12,"sliding_nonce","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",13,null],[12,"new_account_address","","",13,null],[12,"auth_key_prefix","","",13,null],[12,"human_name","","",13,null],[13,"FreezeAccount","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryFreezes the account at <code>address</code>. The sending …",2,null],[12,"sliding_nonce","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",14,null],[12,"to_freeze_account","","",14,null],[13,"PeerToPeerWithMetadata","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryTransfers a given number of coins in a specified …",2,null],[12,"currency","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",15,null],[12,"payee","","",15,null],[12,"amount","","",15,null],[12,"metadata","","",15,null],[12,"metadata_signature","","",15,null],[13,"Preburn","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryMoves a specified number of coins in a given …",2,null],[12,"token","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",16,null],[12,"amount","","",16,null],[13,"PublishSharedEd25519PublicKey","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryRotates the authentication key of the sending …",2,null],[12,"public_key","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",17,null],[13,"RegisterValidatorConfig","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryUpdates a validator\'s configuration. This does not …",2,null],[12,"validator_account","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",18,null],[12,"consensus_pubkey","","",18,null],[12,"validator_network_addresses","","",18,null],[12,"fullnode_network_addresses","","",18,null],[13,"RemoveValidatorAndReconfigure","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryThis script removes a validator account from the …",2,null],[12,"sliding_nonce","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",19,null],[12,"validator_name","","",19,null],[12,"validator_address","","",19,null],[13,"RotateAuthenticationKey","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryRotates the transaction sender\'s authentication …",2,null],[12,"new_key","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",20,null],[13,"RotateAuthenticationKeyWithNonce","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryRotates the sender\'s authentication key to the …",2,null],[12,"sliding_nonce","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",21,null],[12,"new_key","","",21,null],[13,"RotateAuthenticationKeyWithNonceAdmin","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryRotates the specified account\'s authentication key …",2,null],[12,"sliding_nonce","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",22,null],[12,"new_key","","",22,null],[13,"RotateAuthenticationKeyWithRecoveryAddress","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryRotates the authentication key of a specified …",2,null],[12,"recovery_address","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",23,null],[12,"to_recover","","",23,null],[12,"new_key","","",23,null],[13,"RotateDualAttestationInfo","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryUpdates the url used for off-chain communication, …",2,null],[12,"new_url","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",24,null],[12,"new_key","","",24,null],[13,"RotateSharedEd25519PublicKey","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryRotates the authentication key in a …",2,null],[12,"public_key","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",25,null],[13,"SetValidatorConfigAndReconfigure","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryUpdates a validator\'s configuration, and triggers …",2,null],[12,"validator_account","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",26,null],[12,"consensus_pubkey","","",26,null],[12,"validator_network_addresses","","",26,null],[12,"fullnode_network_addresses","","",26,null],[13,"SetValidatorOperator","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummarySets the validator operator for a validator in the …",2,null],[12,"operator_name","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",27,null],[12,"operator_account","","",27,null],[13,"SetValidatorOperatorWithNonceAdmin","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummarySets the validator operator for a validator in the …",2,null],[12,"sliding_nonce","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",28,null],[12,"operator_name","","",28,null],[12,"operator_account","","",28,null],[13,"TieredMint","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryMints a specified number of coins in a currency to …",2,null],[12,"coin_type","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",29,null],[12,"sliding_nonce","","",29,null],[12,"designated_dealer_address","","",29,null],[12,"mint_amount","","",29,null],[12,"tier_index","","",29,null],[13,"UnfreezeAccount","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryUnfreezes the account at <code>address</code>. The sending …",2,null],[12,"sliding_nonce","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",30,null],[12,"to_unfreeze_account","","",30,null],[13,"UpdateDiemVersion","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryUpdates the Diem major version that is stored …",2,null],[12,"sliding_nonce","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",31,null],[12,"major","","",31,null],[13,"UpdateDualAttestationLimit","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryUpdate the dual attestation limit on-chain. …",2,null],[12,"sliding_nonce","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",32,null],[12,"new_micro_xdx_limit","","",32,null],[13,"UpdateExchangeRate","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryUpdate the rough on-chain exchange rate between a …",2,null],[12,"currency","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",33,null],[12,"sliding_nonce","","",33,null],[12,"new_exchange_rate_numerator","","",33,null],[12,"new_exchange_rate_denominator","","",33,null],[13,"UpdateMintingAbility","compiled_stdlib::shim::tmp_new_transaction_script_builders","SummaryScript to allow or disallow minting of new coins …",2,null],[12,"currency","compiled_stdlib::shim::tmp_new_transaction_script_builders::ScriptCall","",34,null],[12,"allow_minting","","",34,null],[11,"encode","compiled_stdlib::shim::tmp_new_transaction_script_builders","Build a Diem <code>Script</code> from a structured object <code>ScriptCall</code>.",2,[[],["script",3]]],[11,"decode","","Try to recognize a Diem <code>Script</code> and convert it into a …",2,[[["script",3]],[["option",4],["scriptcall",4]]]],[5,"encode_add_currency_to_account_script","","SummaryAdds a zero <code>Currency</code> balance to the sending <code>account</code>…",null,[[["typetag",4]],["script",3]]],[5,"encode_add_recovery_rotation_capability_script","","SummaryStores the sending accounts ability to rotate its …",null,[[["accountaddress",3]],["script",3]]],[5,"encode_add_validator_and_reconfigure_script","","SummaryAdds a validator account to the validator set, and …",null,[[["vec",3],["accountaddress",3]],["script",3]]],[5,"encode_burn_txn_fees_script","","SummaryBurns the transaction fees collected in the …",null,[[["typetag",4]],["script",3]]],[5,"encode_burn_with_amount_script","","SummaryBurns the coins held in a preburn resource in the …",null,[[["accountaddress",3],["typetag",4]],["script",3]]],[5,"encode_cancel_burn_with_amount_script","","SummaryCancels and returns the coins held in the preburn …",null,[[["accountaddress",3],["typetag",4]],["script",3]]],[5,"encode_create_child_vasp_account_script","","SummaryCreates a Child VASP account with its parent being …",null,[[["vec",3],["accountaddress",3],["typetag",4]],["script",3]]],[5,"encode_create_designated_dealer_script","","SummaryCreates a Designated Dealer account with the …",null,[[["vec",3],["accountaddress",3],["typetag",4]],["script",3]]],[5,"encode_create_parent_vasp_account_script","","SummaryCreates a Parent VASP account with the specified …",null,[[["vec",3],["accountaddress",3],["typetag",4]],["script",3]]],[5,"encode_create_recovery_address_script","","SummaryInitializes the sending account as a recovery …",null,[[],["script",3]]],[5,"encode_create_validator_account_script","","SummaryCreates a Validator account. This transaction can …",null,[[["vec",3],["accountaddress",3]],["script",3]]],[5,"encode_create_validator_operator_account_script","","SummaryCreates a Validator Operator account. This …",null,[[["vec",3],["accountaddress",3]],["script",3]]],[5,"encode_freeze_account_script","","SummaryFreezes the account at <code>address</code>. The sending …",null,[[["accountaddress",3]],["script",3]]],[5,"encode_peer_to_peer_with_metadata_script","","SummaryTransfers a given number of coins in a specified …",null,[[["vec",3],["accountaddress",3],["typetag",4]],["script",3]]],[5,"encode_preburn_script","","SummaryMoves a specified number of coins in a given …",null,[[["typetag",4]],["script",3]]],[5,"encode_publish_shared_ed25519_public_key_script","","SummaryRotates the authentication key of the sending …",null,[[["vec",3]],["script",3]]],[5,"encode_register_validator_config_script","","SummaryUpdates a validator\'s configuration. This does not …",null,[[["vec",3],["accountaddress",3]],["script",3]]],[5,"encode_remove_validator_and_reconfigure_script","","SummaryThis script removes a validator account from the …",null,[[["vec",3],["accountaddress",3]],["script",3]]],[5,"encode_rotate_authentication_key_script","","SummaryRotates the transaction sender\'s authentication …",null,[[["vec",3]],["script",3]]],[5,"encode_rotate_authentication_key_with_nonce_script","","SummaryRotates the sender\'s authentication key to the …",null,[[["vec",3]],["script",3]]],[5,"encode_rotate_authentication_key_with_nonce_admin_script","","SummaryRotates the specified account\'s authentication key …",null,[[["vec",3]],["script",3]]],[5,"encode_rotate_authentication_key_with_recovery_address_script","","SummaryRotates the authentication key of a specified …",null,[[["vec",3],["accountaddress",3]],["script",3]]],[5,"encode_rotate_dual_attestation_info_script","","SummaryUpdates the url used for off-chain communication, …",null,[[["vec",3]],["script",3]]],[5,"encode_rotate_shared_ed25519_public_key_script","","SummaryRotates the authentication key in a …",null,[[["vec",3]],["script",3]]],[5,"encode_set_validator_config_and_reconfigure_script","","SummaryUpdates a validator\'s configuration, and triggers …",null,[[["vec",3],["accountaddress",3]],["script",3]]],[5,"encode_set_validator_operator_script","","SummarySets the validator operator for a validator in the …",null,[[["vec",3],["accountaddress",3]],["script",3]]],[5,"encode_set_validator_operator_with_nonce_admin_script","","SummarySets the validator operator for a validator in the …",null,[[["vec",3],["accountaddress",3]],["script",3]]],[5,"encode_tiered_mint_script","","SummaryMints a specified number of coins in a currency to …",null,[[["accountaddress",3],["typetag",4]],["script",3]]],[5,"encode_unfreeze_account_script","","SummaryUnfreezes the account at <code>address</code>. The sending …",null,[[["accountaddress",3]],["script",3]]],[5,"encode_update_diem_version_script","","SummaryUpdates the Diem major version that is stored …",null,[[],["script",3]]],[5,"encode_update_dual_attestation_limit_script","","SummaryUpdate the dual attestation limit on-chain. …",null,[[],["script",3]]],[5,"encode_update_exchange_rate_script","","SummaryUpdate the rough on-chain exchange rate between a …",null,[[["typetag",4]],["script",3]]],[5,"encode_update_minting_ability_script","","SummaryScript to allow or disallow minting of new coins …",null,[[["typetag",4]],["script",3]]],[0,"tmp_new_transaction_scripts","compiled_stdlib::shim","This is a temporary shim to allow us to get the names of …",null,null],[5,"name_for_script","compiled_stdlib::shim::tmp_new_transaction_scripts","",null,[[],[["result",6],["string",3]]]],[17,"NO_USE_COMPILED","compiled_stdlib","",null,null],[17,"COMPILED_STDLIB_DIR","","The compiled library needs to be included in the Rust …",null,null],[17,"ERROR_DESCRIPTIONS","","",null,null],[4,"StdLibOptions","","An enum specifying whether the compiled stdlib/scripts …",null,null],[13,"Compiled","","",35,null],[13,"Fresh","","",35,null],[3,"StdLibModules","","Return value of <code>stdlib_modules</code>. Gives a reference to the …",null,null],[12,"compiled_modules","","",36,null],[12,"bytes_opt","","",36,null],[11,"bytes_vec","","If bytes_opt is Some, returns an owned copy of the the …",36,[[],[["vec",3],["vec",3]]]],[5,"stdlib_modules","","Returns a reference to the standard library. Depending …",null,[[["stdliboptions",4]],["stdlibmodules",3]]],[5,"env_stdlib_modules","","Returns a reference to the standard library built by …",null,[[],["stdlibmodules",3]]],[5,"use_compiled","","A predicate detailing whether the compiled versions of …",null,[[]]],[11,"from","compiled_stdlib::legacy::transaction_scripts","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"equivalent","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","compiled_stdlib::shim::tmp_new_transaction_script_builders","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","compiled_stdlib","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"equivalent","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"clone","compiled_stdlib::legacy::transaction_scripts","",0,[[],["legacystdlibscript",4]]],[11,"clone","","",1,[[],["compiledbytes",3]]],[11,"clone","compiled_stdlib::shim::tmp_new_transaction_script_builders","",2,[[],["scriptcall",4]]],[11,"eq","compiled_stdlib::legacy::transaction_scripts","",0,[[["legacystdlibscript",4]]]],[11,"eq","compiled_stdlib::shim::tmp_new_transaction_script_builders","",2,[[["scriptcall",4]]]],[11,"ne","","",2,[[["scriptcall",4]]]],[11,"eq","compiled_stdlib","",35,[[["stdliboptions",4]]]],[11,"partial_cmp","compiled_stdlib::shim::tmp_new_transaction_script_builders","",2,[[["scriptcall",4]],[["option",4],["ordering",4]]]],[11,"lt","","",2,[[["scriptcall",4]]]],[11,"le","","",2,[[["scriptcall",4]]]],[11,"gt","","",2,[[["scriptcall",4]]]],[11,"ge","","",2,[[["scriptcall",4]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","compiled_stdlib","",35,[[["formatter",3]],["result",6]]],[11,"fmt","compiled_stdlib::legacy::transaction_scripts","",0,[[["formatter",3]],["result",6]]],[11,"try_from","","Return <code>Some(<script_name>)</code> if  <code>code_bytes</code> is the bytecode …",0,[[],["result",6]]]],"p":[[4,"LegacyStdlibScript"],[3,"CompiledBytes"],[4,"ScriptCall"],[13,"AddCurrencyToAccount"],[13,"AddRecoveryRotationCapability"],[13,"AddValidatorAndReconfigure"],[13,"BurnTxnFees"],[13,"BurnWithAmount"],[13,"CancelBurnWithAmount"],[13,"CreateChildVaspAccount"],[13,"CreateDesignatedDealer"],[13,"CreateParentVaspAccount"],[13,"CreateValidatorAccount"],[13,"CreateValidatorOperatorAccount"],[13,"FreezeAccount"],[13,"PeerToPeerWithMetadata"],[13,"Preburn"],[13,"PublishSharedEd25519PublicKey"],[13,"RegisterValidatorConfig"],[13,"RemoveValidatorAndReconfigure"],[13,"RotateAuthenticationKey"],[13,"RotateAuthenticationKeyWithNonce"],[13,"RotateAuthenticationKeyWithNonceAdmin"],[13,"RotateAuthenticationKeyWithRecoveryAddress"],[13,"RotateDualAttestationInfo"],[13,"RotateSharedEd25519PublicKey"],[13,"SetValidatorConfigAndReconfigure"],[13,"SetValidatorOperator"],[13,"SetValidatorOperatorWithNonceAdmin"],[13,"TieredMint"],[13,"UnfreezeAccount"],[13,"UpdateDiemVersion"],[13,"UpdateDualAttestationLimit"],[13,"UpdateExchangeRate"],[13,"UpdateMintingAbility"],[4,"StdLibOptions"],[3,"StdLibModules"]]},\
"compiler":{"doc":"","i":[[0,"util","compiler","",null,null],[5,"do_compile_module","compiler::util","",null,[[["path",3],["accountaddress",3]]]],[3,"Compiler","compiler","An API for the compiler. Supports setting custom options.",null,null],[12,"address","","The address used as the sender for the compiler.",0,null],[12,"skip_stdlib_deps","","Skip stdlib dependencies if true.",0,null],[12,"extra_deps","","Extra dependencies to compile with.",0,null],[11,"into_compiled_script_and_source_map","","Compiles into a <code>CompiledScript</code> where the bytecode hasn\'t …",0,[[],["result",6]]],[11,"into_script_blob","","Compiles the script into a serialized form.",0,[[],[["vec",3],["result",6]]]],[11,"into_compiled_module","","Compiles the module.",0,[[],[["result",6],["compiledmodule",3]]]],[11,"into_module_blob","","Compiles the module into a serialized form.",0,[[],[["vec",3],["result",6]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"clone","","",0,[[],["compiler",3]]],[11,"default","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"Compiler"]]},\
"consensus":{"doc":"Consensus for the Diem Core blockchain","i":[[0,"consensus_provider","consensus","DiemBFT implementation",null,null],[5,"start_consensus","consensus::consensus_provider","Helper function to start consensus based on configuration …",null,[[["receiver",3],["consensusnetworksender",3],["consensusnetworkevents",6],["sender",3],["consensusrequest",4],["arc",3],["nodeconfig",3],["dbreader",8],["statesyncclient",3],["onchainconfigpayload",3]],["runtime",3]]],[0,"network_interface","consensus","DiemNet interface. Interface between Consensus and …",null,null],[4,"ConsensusMsg","consensus::network_interface","Network type for consensus",null,null],[13,"BlockRetrievalRequest","","RPC to get a chain of block of the given length starting …",0,null],[13,"BlockRetrievalResponse","","Carries the returned blocks and the retrieval status.",0,null],[13,"EpochRetrievalRequest","","Request to get a EpochChangeProof from current_epoch to …",0,null],[13,"ProposalMsg","","ProposalMsg contains the required information for the …",0,null],[13,"SyncInfo","","This struct describes basic synchronization metadata.",0,null],[13,"EpochChangeProof","","A vector of LedgerInfo with contiguous increasing epoch …",0,null],[13,"VoteMsg","","VoteMsg is the struct that is ultimately sent by the …",0,null],[6,"ConsensusNetworkEvents","","The interface from Network to Consensus layer.",null,null],[3,"ConsensusNetworkSender","","The interface from Consensus to Networking layer.",null,null],[5,"network_endpoint_config","","Configuration for the network endpoints to support …",null,[[]]],[11,"send_to","","Send a single message to the destination peer using the …",1,[[["peerid",3],["consensusmsg",4]],[["networkerror",3],["result",4]]]],[11,"send_to_many","","Send a single message to the destination peers using the …",1,[[["consensusmsg",4]],[["networkerror",3],["result",4]]]],[11,"send_rpc","","Send a RPC to the destination peer using the …",1,[[["peerid",3],["consensusmsg",4],["duration",3]]]],[0,"round_manager_fuzzing","consensus","",null,null],[5,"generate_corpus_proposal","consensus::round_manager_fuzzing","",null,[[],["vec",3]]],[5,"fuzz_proposal","","",null,[[]]],[5,"gen_consensus_reconfig_subscription","consensus","Creates consensus\'s subscription to reconfiguration …",null,[[]]],[11,"from","consensus::network_interface","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"clone","","",0,[[],["consensusmsg",4]]],[11,"clone","","",1,[[],["consensusnetworksender",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"serialize","","",0,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"new","","Returns a Sender that only sends for the …",1,[[["connectionrequestsender",3],["peermanagerrequestsender",3]]]]],"p":[[4,"ConsensusMsg"],[3,"ConsensusNetworkSender"]]},\
"consensus_types":{"doc":"","i":[[0,"block","consensus_types","",null,null],[0,"block_test_utils","consensus_types::block","",null,null],[5,"new_proposal","consensus_types::block::block_test_utils","This strategy is a swiss-army tool to produce a low-level …",null,[[["quorumcert",3],["hashvalue",3]]]],[5,"genesis_strategy","","This produces the genesis block",null,[[]]],[5,"unmoored_block","","This produces an unmoored block, with arbitrary parent & …",null,[[]]],[5,"leaf_strategy","","Offers the genesis block.",null,[[]]],[5,"fake_id","","This produces a block with an invalid id (and therefore …",null,[[]]],[5,"some_round","","This produces a round that is often higher than the …",null,[[["round",6]]]],[5,"block_forest_and_its_keys","","This returns keys and a block forest created from them",null,[[]]],[5,"placeholder_ledger_info","","",null,[[],["ledgerinfo",3]]],[5,"gen_test_certificate","","",null,[[["vec",3],["validatorsigner",3],["blockinfo",3],["option",4]],["quorumcert",3]]],[5,"placeholder_certificate_for_block","","",null,[[["vec",3],["validatorsigner",3],["hashvalue",3]],["quorumcert",3]]],[5,"certificate_for_genesis","","",null,[[],["quorumcert",3]]],[5,"random_payload","","",null,[[],["payload",6]]],[3,"Block","consensus_types::block","Block has the core data of a consensus block that should …",null,null],[11,"author","","",0,[[],[["option",4],["author",6]]]],[11,"epoch","","",0,[[]]],[11,"id","","",0,[[],["hashvalue",3]]],[11,"parent_id","","",0,[[],["hashvalue",3]]],[11,"payload","","",0,[[],[["payload",6],["option",4]]]],[11,"quorum_cert","","",0,[[],["quorumcert",3]]],[11,"round","","",0,[[],["round",6]]],[11,"signature","","",0,[[],[["option",4],["ed25519signature",3]]]],[11,"timestamp_usecs","","",0,[[]]],[11,"gen_block_info","","",0,[[["hashvalue",3],["version",6],["epochstate",3],["option",4]],["blockinfo",3]]],[11,"block_data","","",0,[[],["blockdata",3]]],[11,"is_genesis_block","","",0,[[]]],[11,"is_nil_block","","",0,[[]]],[11,"make_genesis_block","","",0,[[]]],[11,"make_genesis_block_from_ledger_info","","Construct new genesis block for next epoch …",0,[[["ledgerinfo",3]]]],[11,"new_for_testing","","",0,[[["ed25519signature",3],["hashvalue",3],["option",4],["blockdata",3]]]],[11,"new_nil","","The NIL blocks are special: they\'re not carrying any real …",0,[[["quorumcert",3],["round",6]]]],[11,"new_proposal","","",0,[[["payload",6],["validatorsigner",3],["quorumcert",3],["round",6]]]],[11,"new_proposal_from_block_data","","",0,[[["blockdata",3],["validatorsigner",3]]]],[11,"new_proposal_from_block_data_and_signature","","",0,[[["ed25519signature",3],["blockdata",3]]]],[11,"validate_signature","","Verifies that the proposal and the QC are correctly …",0,[[["validatorverifier",3]],["result",6]]],[11,"verify_well_formed","","Makes sure that the proposal makes sense, independently …",0,[[],["result",6]]],[0,"block_data","consensus_types","",null,null],[4,"BlockType","consensus_types::block_data","",null,null],[13,"Proposal","","",1,null],[12,"payload","consensus_types::block_data::BlockType","T of the block (e.g. one or more transaction(s)",2,null],[12,"author","","Author of the block that can be validated by the author\'s …",2,null],[13,"NilBlock","consensus_types::block_data","NIL blocks don\'t have authors or signatures: they\'re …",1,null],[13,"Genesis","","A genesis block is the first committed block in any epoch …",1,null],[3,"BlockData","","Block has the core data of a consensus block that should …",null,null],[3,"BlockDataHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[11,"author","","",3,[[],[["option",4],["author",6]]]],[11,"block_type","","",3,[[],["blocktype",4]]],[11,"epoch","","",3,[[]]],[11,"parent_id","","",3,[[],["hashvalue",3]]],[11,"payload","","",3,[[],[["payload",6],["option",4]]]],[11,"round","","",3,[[],["round",6]]],[11,"timestamp_usecs","","",3,[[]]],[11,"quorum_cert","","",3,[[],["quorumcert",3]]],[11,"is_genesis_block","","",3,[[]]],[11,"is_nil_block","","",3,[[]]],[11,"new_genesis_from_ledger_info","","",3,[[["ledgerinfo",3]]]],[11,"new_for_testing","","",3,[[["quorumcert",3],["blocktype",4],["round",6]]]],[11,"new_genesis","","",3,[[["quorumcert",3]]]],[11,"new_nil","","",3,[[["quorumcert",3],["round",6]]]],[11,"new_proposal","","",3,[[["payload",6],["author",6],["quorumcert",3],["round",6]]]],[0,"block_retrieval","consensus_types","",null,null],[17,"MAX_BLOCKS_PER_REQUEST","consensus_types::block_retrieval","",null,null],[3,"BlockRetrievalRequest","","RPC to get a chain of block of the given length starting …",null,null],[11,"new","","",4,[[["hashvalue",3]]]],[11,"block_id","","",4,[[],["hashvalue",3]]],[11,"num_blocks","","",4,[[]]],[4,"BlockRetrievalStatus","","",null,null],[13,"Succeeded","","",5,null],[13,"IdNotFound","","",5,null],[13,"NotEnoughBlocks","","",5,null],[3,"BlockRetrievalResponse","","Carries the returned blocks and the retrieval status.",null,null],[11,"new","","",6,[[["vec",3],["block",3],["blockretrievalstatus",4]]]],[11,"status","","",6,[[],["blockretrievalstatus",4]]],[11,"blocks","","",6,[[],["vec",3]]],[11,"verify","","",6,[[["validatorverifier",3],["hashvalue",3]],["result",6]]],[0,"common","consensus_types","",null,null],[6,"Round","consensus_types::common","The round of a block is a consensus-internal counter, …",null,null],[6,"Author","","Author refers to the author\'s account address",null,null],[6,"Payload","","The payload in block.",null,null],[0,"epoch_retrieval","consensus_types","",null,null],[3,"EpochRetrievalRequest","consensus_types::epoch_retrieval","Request to get a EpochChangeProof from current_epoch to …",null,null],[12,"start_epoch","","",7,null],[12,"end_epoch","","",7,null],[0,"executed_block","consensus_types","",null,null],[3,"ExecutedBlock","consensus_types::executed_block","ExecutedBlocks are managed in a speculative tree, the …",null,null],[11,"new","","",8,[[["block",3],["statecomputeresult",3]]]],[11,"block","","",8,[[],["block",3]]],[11,"id","","",8,[[],["hashvalue",3]]],[11,"epoch","","",8,[[]]],[11,"payload","","",8,[[],[["payload",6],["option",4]]]],[11,"parent_id","","",8,[[],["hashvalue",3]]],[11,"quorum_cert","","",8,[[],["quorumcert",3]]],[11,"round","","",8,[[],["round",6]]],[11,"timestamp_usecs","","",8,[[]]],[11,"compute_result","","",8,[[],["statecomputeresult",3]]],[11,"block_info","","",8,[[],["blockinfo",3]]],[11,"maybe_signed_vote_proposal","","",8,[[],["maybesignedvoteproposal",3]]],[0,"proposal_msg","consensus_types","",null,null],[3,"ProposalMsg","consensus_types::proposal_msg","ProposalMsg contains the required information for the …",null,null],[11,"new","","Creates a new proposal.",9,[[["syncinfo",3],["block",3]]]],[11,"epoch","","",9,[[]]],[11,"verify_well_formed","","Verifies that the ProposalMsg is well-formed.",9,[[],["result",6]]],[11,"verify","","",9,[[["validatorverifier",3]],["result",6]]],[11,"proposal","","",9,[[],["block",3]]],[11,"take_proposal","","",9,[[],["block",3]]],[11,"sync_info","","",9,[[],["syncinfo",3]]],[11,"proposer","","",9,[[],["author",6]]],[0,"quorum_cert","consensus_types","",null,null],[3,"QuorumCert","consensus_types::quorum_cert","",null,null],[11,"new","","",10,[[["ledgerinfowithsignatures",4],["votedata",3]]]],[11,"vote_data","","",10,[[],["votedata",3]]],[11,"certified_block","","",10,[[],["blockinfo",3]]],[11,"parent_block","","",10,[[],["blockinfo",3]]],[11,"ledger_info","","",10,[[],["ledgerinfowithsignatures",4]]],[11,"commit_info","","",10,[[],["blockinfo",3]]],[11,"ends_epoch","","If the QC commits reconfiguration and starts a new epoch",10,[[]]],[11,"certificate_for_genesis_from_ledger_info","","QuorumCert for the genesis block deterministically …",10,[[["ledgerinfo",3],["hashvalue",3]],["quorumcert",3]]],[11,"verify","","",10,[[["validatorverifier",3]],["result",6]]],[0,"safety_data","consensus_types","",null,null],[3,"SafetyData","consensus_types::safety_data","Data structure for safety rules to ensure consensus …",null,null],[12,"epoch","","",11,null],[12,"last_voted_round","","",11,null],[12,"preferred_round","","",11,null],[12,"last_vote","","",11,null],[11,"new","","",11,[[["option",4],["vote",3]]]],[0,"sync_info","consensus_types","",null,null],[3,"SyncInfo","consensus_types::sync_info","This struct describes basic synchronization metadata.",null,null],[11,"new","","",12,[[["timeoutcertificate",3],["quorumcert",3],["option",4]]]],[11,"highest_quorum_cert","","Highest quorum certificate",12,[[],["quorumcert",3]]],[11,"highest_commit_cert","","Highest ledger info",12,[[],["quorumcert",3]]],[11,"highest_timeout_certificate","","Highest timeout certificate if available",12,[[],[["timeoutcertificate",3],["option",4]]]],[11,"highest_certified_round","","",12,[[],["round",6]]],[11,"highest_timeout_round","","",12,[[],["round",6]]],[11,"highest_commit_round","","",12,[[],["round",6]]],[11,"highest_round","","The highest round the SyncInfo carries.",12,[[],["round",6]]],[11,"verify","","",12,[[["validatorverifier",3]],["result",6]]],[11,"epoch","","",12,[[]]],[11,"has_newer_certificates","","",12,[[["syncinfo",3]]]],[0,"timeout","consensus_types","",null,null],[3,"Timeout","consensus_types::timeout","This structure contains all the information necessary to …",null,null],[3,"TimeoutHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[11,"new","","",13,[[["round",6]]]],[11,"epoch","","",13,[[]]],[11,"round","","",13,[[],["round",6]]],[11,"sign","","",13,[[["validatorsigner",3]],["ed25519signature",3]]],[0,"timeout_certificate","consensus_types","",null,null],[3,"TimeoutCertificate","consensus_types::timeout_certificate","TimeoutCertificate is a proof that 2f+1 participants in …",null,null],[11,"new","","Creates new TimeoutCertificate",14,[[["timeout",3]]]],[11,"verify","","Verifies the signatures for the round",14,[[["validatorverifier",3]],["result",6]]],[11,"epoch","","Returns the epoch of the timeout certificate",14,[[]]],[11,"round","","Returns the round of the timeout certificate",14,[[],["round",6]]],[11,"signatures","","Returns the signatures certifying the round",14,[[],["btreemap",3]]],[11,"add_signature","","",14,[[["ed25519signature",3],["author",6]]]],[11,"remove_signature","","",14,[[["author",6]]]],[0,"vote","consensus_types","",null,null],[3,"Vote","consensus_types::vote","Vote is the struct that is ultimately sent by the voter …",null,null],[11,"new","","Generates a new Vote corresponding to the \\\"fast-vote\\\" …",15,[[["author",6],["validatorsigner",3],["votedata",3],["ledgerinfo",3]]]],[11,"new_with_signature","","Generates a new Vote using a signature over the specified …",15,[[["ed25519signature",3],["author",6],["votedata",3],["ledgerinfo",3]]]],[11,"add_timeout_signature","","Generates a round signature, which can then be used for …",15,[[["ed25519signature",3]]]],[11,"vote_data","","",15,[[],["votedata",3]]],[11,"author","","Return the author of the vote",15,[[],["author",6]]],[11,"ledger_info","","Return the LedgerInfo associated with this vote",15,[[],["ledgerinfo",3]]],[11,"signature","","Return the signature of the vote",15,[[],["ed25519signature",3]]],[11,"timeout","","Returns the hash of the data represent by a timeout …",15,[[],["timeout",3]]],[11,"epoch","","Return the epoch of the vote",15,[[]]],[11,"timeout_signature","","Returns the signature for the …",15,[[],[["option",4],["ed25519signature",3]]]],[11,"is_timeout","","The vote message is considered a timeout vote message if …",15,[[]]],[11,"verify","","Verifies that the consensus data hash of LedgerInfo …",15,[[["validatorverifier",3]],["result",6]]],[0,"vote_data","consensus_types","",null,null],[3,"VoteData","consensus_types::vote_data","VoteData keeps the information about the block, and its …",null,null],[3,"VoteDataHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[11,"new","","Constructs a new VoteData from the block information of a …",16,[[["blockinfo",3]]]],[11,"parent","","Returns block information associated to the block being …",16,[[],["blockinfo",3]]],[11,"proposed","","Returns block information associated to the block being …",16,[[],["blockinfo",3]]],[11,"verify","","Well-formedness checks that are independent of the …",16,[[],["result",6]]],[0,"vote_msg","consensus_types","",null,null],[3,"VoteMsg","consensus_types::vote_msg","VoteMsg is the struct that is ultimately sent by the …",null,null],[11,"new","","",17,[[["syncinfo",3],["vote",3]]]],[11,"vote","","Container for actual voting material",17,[[],["vote",3]]],[11,"sync_info","","SyncInfo of the given vote message",17,[[],["syncinfo",3]]],[11,"epoch","","",17,[[]]],[11,"proposed_block_id","","",17,[[],["hashvalue",3]]],[11,"verify","","",17,[[["validatorverifier",3]],["result",6]]],[0,"vote_proposal","consensus_types","",null,null],[3,"VoteProposal","consensus_types::vote_proposal","This structure contains all the information needed by …",null,null],[3,"VoteProposalHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[11,"new","","",18,[[["accumulatorextensionproof",3],["transactionaccumulatorhasher",3],["epochstate",3],["block",3],["option",4]]]],[11,"accumulator_extension_proof","","",18,[[],["accumulatorextensionproof",3]]],[11,"block","","",18,[[],["block",3]]],[11,"next_epoch_state","","",18,[[],[["epochstate",3],["option",4]]]],[3,"MaybeSignedVoteProposal","","Wraps a vote_proposal and its signature.",null,null],[12,"vote_proposal","","The vote proposal to be signed.",19,null],[12,"signature","","The signature of this proposal\'s hash from Diem Execution …",19,null],[11,"from","consensus_types::block","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"equivalent","","",0,[[]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","consensus_types::block_data","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"vzip","","",1,[[]]],[11,"equivalent","","",1,[[]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"vzip","","",3,[[]]],[11,"equivalent","","",3,[[]]],[11,"erased_serialize","","",3,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","consensus_types::block_retrieval","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"test_only_hash","","",4,[[],["hashvalue",3]]],[11,"vzip","","",4,[[]]],[11,"equivalent","","",4,[[]]],[11,"erased_serialize","","",4,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"equivalent","","",5,[[]]],[11,"erased_serialize","","",5,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"test_only_hash","","",6,[[],["hashvalue",3]]],[11,"vzip","","",6,[[]]],[11,"equivalent","","",6,[[]]],[11,"erased_serialize","","",6,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","consensus_types::epoch_retrieval","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"test_only_hash","","",7,[[],["hashvalue",3]]],[11,"vzip","","",7,[[]]],[11,"erased_serialize","","",7,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","consensus_types::executed_block","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"equivalent","","",8,[[]]],[11,"from","consensus_types::proposal_msg","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"test_only_hash","","",9,[[],["hashvalue",3]]],[11,"vzip","","",9,[[]]],[11,"equivalent","","",9,[[]]],[11,"erased_serialize","","",9,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","consensus_types::quorum_cert","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"test_only_hash","","",10,[[],["hashvalue",3]]],[11,"vzip","","",10,[[]]],[11,"equivalent","","",10,[[]]],[11,"erased_serialize","","",10,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","consensus_types::safety_data","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"test_only_hash","","",11,[[],["hashvalue",3]]],[11,"vzip","","",11,[[]]],[11,"equivalent","","",11,[[]]],[11,"erased_serialize","","",11,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","consensus_types::sync_info","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"test_only_hash","","",12,[[],["hashvalue",3]]],[11,"vzip","","",12,[[]]],[11,"equivalent","","",12,[[]]],[11,"erased_serialize","","",12,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","consensus_types::timeout","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"test_only_hash","","",13,[[],["hashvalue",3]]],[11,"vzip","","",13,[[]]],[11,"equivalent","","",13,[[]]],[11,"erased_serialize","","",13,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","consensus_types::timeout_certificate","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"test_only_hash","","",14,[[],["hashvalue",3]]],[11,"vzip","","",14,[[]]],[11,"equivalent","","",14,[[]]],[11,"erased_serialize","","",14,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","consensus_types::vote","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"test_only_hash","","",15,[[],["hashvalue",3]]],[11,"vzip","","",15,[[]]],[11,"equivalent","","",15,[[]]],[11,"erased_serialize","","",15,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","consensus_types::vote_data","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"test_only_hash","","",16,[[],["hashvalue",3]]],[11,"vzip","","",16,[[]]],[11,"equivalent","","",16,[[]]],[11,"erased_serialize","","",16,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","consensus_types::vote_msg","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"test_only_hash","","",17,[[],["hashvalue",3]]],[11,"vzip","","",17,[[]]],[11,"equivalent","","",17,[[]]],[11,"erased_serialize","","",17,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","consensus_types::vote_proposal","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"test_only_hash","","",18,[[],["hashvalue",3]]],[11,"vzip","","",18,[[]]],[11,"erased_serialize","","",18,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"test_only_hash","","",19,[[],["hashvalue",3]]],[11,"vzip","","",19,[[]]],[11,"erased_serialize","","",19,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"clone","consensus_types::block","",0,[[],["block",3]]],[11,"clone","consensus_types::block_data","",1,[[],["blocktype",4]]],[11,"clone","","",3,[[],["blockdata",3]]],[11,"clone","","",20,[[],["blockdatahasher",3]]],[11,"clone","consensus_types::block_retrieval","",4,[[],["blockretrievalrequest",3]]],[11,"clone","","",5,[[],["blockretrievalstatus",4]]],[11,"clone","","",6,[[],["blockretrievalresponse",3]]],[11,"clone","consensus_types::epoch_retrieval","",7,[[],["epochretrievalrequest",3]]],[11,"clone","consensus_types::executed_block","",8,[[],["executedblock",3]]],[11,"clone","consensus_types::proposal_msg","",9,[[],["proposalmsg",3]]],[11,"clone","consensus_types::quorum_cert","",10,[[],["quorumcert",3]]],[11,"clone","consensus_types::safety_data","",11,[[],["safetydata",3]]],[11,"clone","consensus_types::sync_info","",12,[[],["syncinfo",3]]],[11,"clone","consensus_types::timeout","",13,[[],["timeout",3]]],[11,"clone","","",21,[[],["timeouthasher",3]]],[11,"clone","consensus_types::timeout_certificate","",14,[[],["timeoutcertificate",3]]],[11,"clone","consensus_types::vote","",15,[[],["vote",3]]],[11,"clone","consensus_types::vote_data","",16,[[],["votedata",3]]],[11,"clone","","",22,[[],["votedatahasher",3]]],[11,"clone","consensus_types::vote_msg","",17,[[],["votemsg",3]]],[11,"clone","consensus_types::vote_proposal","",18,[[],["voteproposal",3]]],[11,"clone","","",23,[[],["voteproposalhasher",3]]],[11,"clone","","",19,[[],["maybesignedvoteproposal",3]]],[11,"default","consensus_types::block_data","",20,[[]]],[11,"default","consensus_types::safety_data","",11,[[],["safetydata",3]]],[11,"default","consensus_types::timeout","",21,[[]]],[11,"default","consensus_types::vote_data","",22,[[]]],[11,"default","consensus_types::vote_proposal","",23,[[]]],[11,"eq","consensus_types::block","",0,[[["block",3]]]],[11,"ne","","",0,[[["block",3]]]],[11,"eq","consensus_types::block_data","",1,[[["blocktype",4]]]],[11,"ne","","",1,[[["blocktype",4]]]],[11,"eq","","",3,[[["blockdata",3]]]],[11,"ne","","",3,[[["blockdata",3]]]],[11,"eq","consensus_types::block_retrieval","",4,[[["blockretrievalrequest",3]]]],[11,"ne","","",4,[[["blockretrievalrequest",3]]]],[11,"eq","","",5,[[["blockretrievalstatus",4]]]],[11,"eq","","",6,[[["blockretrievalresponse",3]]]],[11,"ne","","",6,[[["blockretrievalresponse",3]]]],[11,"eq","consensus_types::executed_block","",8,[[["executedblock",3]]]],[11,"ne","","",8,[[["executedblock",3]]]],[11,"eq","consensus_types::proposal_msg","",9,[[["proposalmsg",3]]]],[11,"ne","","",9,[[["proposalmsg",3]]]],[11,"eq","consensus_types::quorum_cert","",10,[[["quorumcert",3]]]],[11,"ne","","",10,[[["quorumcert",3]]]],[11,"eq","consensus_types::safety_data","",11,[[["safetydata",3]]]],[11,"ne","","",11,[[["safetydata",3]]]],[11,"eq","consensus_types::sync_info","",12,[[["syncinfo",3]]]],[11,"ne","","",12,[[["syncinfo",3]]]],[11,"eq","consensus_types::timeout","",13,[[["timeout",3]]]],[11,"ne","","",13,[[["timeout",3]]]],[11,"eq","consensus_types::timeout_certificate","",14,[[["timeoutcertificate",3]]]],[11,"ne","","",14,[[["timeoutcertificate",3]]]],[11,"eq","consensus_types::vote","",15,[[["vote",3]]]],[11,"ne","","",15,[[["vote",3]]]],[11,"eq","consensus_types::vote_data","",16,[[["votedata",3]]]],[11,"ne","","",16,[[["votedata",3]]]],[11,"eq","consensus_types::vote_msg","",17,[[["votemsg",3]]]],[11,"ne","","",17,[[["votemsg",3]]]],[11,"deref","consensus_types::vote_proposal","",19,[[],["voteproposal",3]]],[11,"fmt","consensus_types::block","",0,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::block_data","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::block_retrieval","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::epoch_retrieval","",7,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::executed_block","",8,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::proposal_msg","",9,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::quorum_cert","",10,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::safety_data","",11,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::sync_info","",12,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::timeout","",13,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::timeout_certificate","",14,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::vote","",15,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::vote_data","",16,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::vote_msg","",17,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::vote_proposal","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::block","",0,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::block_retrieval","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::epoch_retrieval","",7,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::executed_block","",8,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::proposal_msg","",9,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::quorum_cert","",10,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::safety_data","",11,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::sync_info","",12,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::timeout","",13,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::timeout_certificate","",14,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::vote","",15,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::vote_data","",16,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::vote_msg","",17,[[["formatter",3]],["result",6]]],[11,"fmt","consensus_types::vote_proposal","",18,[[["formatter",3]],["result",6]]],[11,"write","consensus_types::block_data","",20,[[],["result",6]]],[11,"flush","","",20,[[],["result",6]]],[11,"write","consensus_types::timeout","",21,[[],["result",6]]],[11,"flush","","",21,[[],["result",6]]],[11,"write","consensus_types::vote_data","",22,[[],["result",6]]],[11,"flush","","",22,[[],["result",6]]],[11,"write","consensus_types::vote_proposal","",23,[[],["result",6]]],[11,"flush","","",23,[[],["result",6]]],[11,"hash","consensus_types::block_data","",3,[[],["hashvalue",3]]],[11,"hash","consensus_types::timeout","",13,[[],["hashvalue",3]]],[11,"hash","consensus_types::vote_data","",16,[[],["hashvalue",3]]],[11,"hash","consensus_types::vote_proposal","",18,[[],["hashvalue",3]]],[11,"seed","consensus_types::block_data","",20,[[]]],[11,"update","","",20,[[]]],[11,"finish","","",20,[[],["hashvalue",3]]],[11,"seed","consensus_types::timeout","",21,[[]]],[11,"update","","",21,[[]]],[11,"finish","","",21,[[],["hashvalue",3]]],[11,"seed","consensus_types::vote_data","",22,[[]]],[11,"update","","",22,[[]]],[11,"finish","","",22,[[],["hashvalue",3]]],[11,"seed","consensus_types::vote_proposal","",23,[[]]],[11,"update","","",23,[[]]],[11,"finish","","",23,[[],["hashvalue",3]]],[11,"serialize","consensus_types::block","",0,[[],["result",4]]],[11,"serialize","consensus_types::block_data","",1,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","consensus_types::block_retrieval","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","consensus_types::epoch_retrieval","",7,[[],["result",4]]],[11,"serialize","consensus_types::proposal_msg","",9,[[],["result",4]]],[11,"serialize","consensus_types::quorum_cert","",10,[[],["result",4]]],[11,"serialize","consensus_types::safety_data","",11,[[],["result",4]]],[11,"serialize","consensus_types::sync_info","",12,[[],["result",4]]],[11,"serialize","consensus_types::timeout","",13,[[],["result",4]]],[11,"serialize","consensus_types::timeout_certificate","",14,[[],["result",4]]],[11,"serialize","consensus_types::vote","",15,[[],["result",4]]],[11,"serialize","consensus_types::vote_data","",16,[[],["result",4]]],[11,"serialize","consensus_types::vote_msg","",17,[[],["result",4]]],[11,"serialize","consensus_types::vote_proposal","",18,[[],["result",4]]],[11,"serialize","","",19,[[],["result",4]]],[11,"deserialize","consensus_types::block","",0,[[],["result",4]]],[11,"deserialize","consensus_types::block_data","",1,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","consensus_types::block_retrieval","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","consensus_types::epoch_retrieval","",7,[[],["result",4]]],[11,"deserialize","consensus_types::proposal_msg","",9,[[],["result",4]]],[11,"deserialize","consensus_types::quorum_cert","",10,[[],["result",4]]],[11,"deserialize","consensus_types::safety_data","",11,[[],["result",4]]],[11,"deserialize","consensus_types::sync_info","",12,[[],["result",4]]],[11,"deserialize","consensus_types::timeout","",13,[[],["result",4]]],[11,"deserialize","consensus_types::timeout_certificate","",14,[[],["result",4]]],[11,"deserialize","consensus_types::vote","",15,[[],["result",4]]],[11,"deserialize","consensus_types::vote_data","",16,[[],["result",4]]],[11,"deserialize","consensus_types::vote_msg","",17,[[],["result",4]]],[11,"deserialize","consensus_types::vote_proposal","",18,[[],["result",4]]],[11,"deserialize","","",19,[[],["result",4]]]],"p":[[3,"Block"],[4,"BlockType"],[13,"Proposal"],[3,"BlockData"],[3,"BlockRetrievalRequest"],[4,"BlockRetrievalStatus"],[3,"BlockRetrievalResponse"],[3,"EpochRetrievalRequest"],[3,"ExecutedBlock"],[3,"ProposalMsg"],[3,"QuorumCert"],[3,"SafetyData"],[3,"SyncInfo"],[3,"Timeout"],[3,"TimeoutCertificate"],[3,"Vote"],[3,"VoteData"],[3,"VoteMsg"],[3,"VoteProposal"],[3,"MaybeSignedVoteProposal"],[3,"BlockDataHasher"],[3,"TimeoutHasher"],[3,"VoteDataHasher"],[3,"VoteProposalHasher"]]},\
"crash_handler":{"doc":"","i":[[3,"CrashInfo","crash_handler","",null,null],[5,"setup_panic_handler","","Invoke to ensure process exits on a thread panic.",null,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"serialize","","",0,[[],["result",4]]]],"p":[[3,"CrashInfo"]]},\
"datatest_stable":{"doc":"<code>datatest-stable</code> is a very simple test harness intended to …","i":[[0,"utils","datatest_stable","",null,null],[5,"iterate_directory","datatest_stable::utils","Helper function to iterate through all the files in the …",null,[[["path",3]]]],[5,"derive_test_name","","",null,[[["path",3]],["string",3]]],[6,"Result","datatest_stable","",null,null],[5,"runner","","",null,[[]]],[3,"Requirements","","",null,null],[14,"harness","","<code>datatest-stable</code> test harness entry point. Should be …",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"new","","",0,[[["string",3]]]]],"p":[[3,"Requirements"]]},\
"debug_interface":{"doc":"","i":[[0,"node_debug_service","debug_interface","Debug interface to access information in a specific node.",null,null],[3,"NodeDebugService","debug_interface::node_debug_service","",null,null],[11,"new","","",0,[[["arc",3],["option",4],["socketaddr",4]]]],[11,"runtime","","",0,[[],["runtime",3]]],[3,"NodeDebugClient","debug_interface","Implement default utility client for NodeDebugInterface",null,null],[11,"new","","Create NodeDebugInterfaceClient from a valid socket …",1,[[["asref",8]]]],[11,"get_node_metric","","",1,[[["asref",8]],[["result",6],["option",4]]]],[11,"get_node_metrics","","",1,[[],[["result",6],["hashmap",3]]]],[11,"get_events","","",1,[[],[["result",6],["vec",3]]]],[3,"AsyncNodeDebugClient","","Implement default utility client for …",null,null],[11,"new","","Create AsyncNodeDebugInterface from a valid socket …",2,[[["asref",8],["client",3]]]],[11,"get_node_metric","","",2,[[["asref",8]]]],[11,"get_node_metrics","","",2,[[]]],[11,"get_events","","",2,[[]]],[11,"from","debug_interface::node_debug_service","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","debug_interface","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"fmt","debug_interface::node_debug_service","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"NodeDebugService"],[3,"NodeDebugClient"],[3,"AsyncNodeDebugClient"]]},\
"diem_bitvec":{"doc":"This library defines a BitVec struct that represents a …","i":[[3,"BitVec","diem_bitvec","BitVec represents a bit vector that supports 4 operations:",null,null],[11,"set","","Sets the bit at position @pos.",0,[[]]],[11,"is_set","","Checks if the bit at position @pos is set.",0,[[]]],[11,"count_ones","","Returns the number of set bits.",0,[[]]],[11,"last_set_bit","","Returns the index of the last set bit.",0,[[],["option",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"clone","","",0,[[],["bitvec",3]]],[11,"default","","",0,[[],["bitvec",3]]],[11,"eq","","",0,[[["bitvec",3]]]],[11,"ne","","",0,[[["bitvec",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"bitand","","Returns a new BitVec that is a bitwise AND of two BitVecs.",0,[[]]],[11,"serialize","","",0,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"arbitrary_with","","",0,[[]]]],"p":[[3,"BitVec"]]},\
"diem_client":{"doc":"","i":[[0,"errors","diem_client","",null,null],[7,"INTERNAL_ERRORS","diem_client::errors","list of server internal errors",null,null],[5,"is_internal_error","","",null,[[]]],[4,"ServerCode","","Custom JSON RPC server error codes Ranges from -32000 to …",null,null],[13,"DefaultServerError","","",0,null],[13,"VmValidationError","","",0,null],[13,"VmVerificationError","","",0,null],[13,"VmInvariantViolationError","","",0,null],[13,"VmDeserializationError","","",0,null],[13,"VmExecutionError","","",0,null],[13,"VmUnknownError","","",0,null],[13,"MempoolInvalidSeqNumber","","",0,null],[13,"MempoolIsFull","","",0,null],[13,"MempoolTooManyTransactions","","",0,null],[13,"MempoolInvalidUpdate","","",0,null],[13,"MempoolVmError","","",0,null],[13,"MempoolUnknownError","","",0,null],[4,"InvalidRequestCode","","JSON RPC server error codes for invalid request",null,null],[13,"InvalidRequest","","",1,null],[13,"MethodNotFound","","",1,null],[13,"InvalidParams","","",1,null],[13,"InvalidFormat","","",1,null],[4,"ErrorData","","",null,null],[13,"StatusCode","","",2,null],[3,"JsonRpcError","","",null,null],[12,"code","","",3,null],[12,"message","","",3,null],[12,"data","","",3,null],[0,"views","diem_client","",null,null],[3,"AmountView","diem_client::views","",null,null],[12,"amount","","",4,null],[12,"currency","","",4,null],[4,"AccountRoleView","","",null,null],[13,"Unknown","","",5,null],[13,"ChildVASP","","",5,null],[12,"parent_vasp_address","diem_client::views::AccountRoleView","",6,null],[13,"ParentVASP","diem_client::views","",5,null],[12,"human_name","diem_client::views::AccountRoleView","",7,null],[12,"base_url","","",7,null],[12,"expiration_time","","",7,null],[12,"compliance_key","","",7,null],[12,"num_children","","",7,null],[12,"compliance_key_rotation_events_key","","",7,null],[12,"base_url_rotation_events_key","","",7,null],[13,"DesignatedDealer","diem_client::views","",5,null],[12,"human_name","diem_client::views::AccountRoleView","",8,null],[12,"base_url","","",8,null],[12,"expiration_time","","",8,null],[12,"compliance_key","","",8,null],[12,"preburn_balances","","",8,null],[12,"received_mint_events_key","","",8,null],[12,"compliance_key_rotation_events_key","","",8,null],[12,"base_url_rotation_events_key","","",8,null],[3,"AccountView","diem_client::views","",null,null],[12,"address","","",9,null],[12,"balances","","",9,null],[12,"sequence_number","","",9,null],[12,"authentication_key","","",9,null],[12,"sent_events_key","","",9,null],[12,"received_events_key","","",9,null],[12,"delegated_key_rotation_capability","","",9,null],[12,"delegated_withdrawal_capability","","",9,null],[12,"is_frozen","","",9,null],[12,"role","","",9,null],[3,"EventView","","",null,null],[12,"key","","",10,null],[12,"sequence_number","","",10,null],[12,"transaction_version","","",10,null],[12,"data","","",10,null],[3,"EventWithProofView","","",null,null],[12,"event_with_proof","","",11,null],[4,"EventDataView","","",null,null],[13,"Burn","","",12,null],[12,"amount","diem_client::views::EventDataView","",13,null],[12,"preburn_address","","",13,null],[13,"CancelBurn","diem_client::views","",12,null],[12,"amount","diem_client::views::EventDataView","",14,null],[12,"preburn_address","","",14,null],[13,"Mint","diem_client::views","",12,null],[12,"amount","diem_client::views::EventDataView","",15,null],[13,"ToXDXExchangeRateUpdate","diem_client::views","",12,null],[12,"currency_code","diem_client::views::EventDataView","",16,null],[12,"new_to_xdx_exchange_rate","","",16,null],[13,"Preburn","diem_client::views","",12,null],[12,"amount","diem_client::views::EventDataView","",17,null],[12,"preburn_address","","",17,null],[13,"ReceivedPayment","diem_client::views","",12,null],[12,"amount","diem_client::views::EventDataView","",18,null],[12,"sender","","",18,null],[12,"receiver","","",18,null],[12,"metadata","","",18,null],[13,"SentPayment","diem_client::views","",12,null],[12,"amount","diem_client::views::EventDataView","",19,null],[12,"receiver","","",19,null],[12,"sender","","",19,null],[12,"metadata","","",19,null],[13,"AdminTransaction","diem_client::views","",12,null],[12,"committed_timestamp_secs","diem_client::views::EventDataView","",20,null],[13,"NewEpoch","diem_client::views","",12,null],[12,"epoch","diem_client::views::EventDataView","",21,null],[13,"NewBlock","diem_client::views","",12,null],[12,"round","diem_client::views::EventDataView","",22,null],[12,"proposer","","",22,null],[12,"proposed_time","","",22,null],[13,"ReceivedMint","diem_client::views","",12,null],[12,"amount","diem_client::views::EventDataView","",23,null],[12,"destination_address","","",23,null],[13,"ComplianceKeyRotation","diem_client::views","",12,null],[12,"new_compliance_public_key","diem_client::views::EventDataView","",24,null],[12,"time_rotated_seconds","","",24,null],[13,"BaseUrlRotation","diem_client::views","",12,null],[12,"new_base_url","diem_client::views::EventDataView","",25,null],[12,"time_rotated_seconds","","",25,null],[13,"CreateAccount","diem_client::views","",12,null],[12,"created_address","diem_client::views::EventDataView","",26,null],[12,"role_id","","",26,null],[13,"Unknown","diem_client::views","",12,null],[3,"MetadataView","","",null,null],[12,"version","","",27,null],[12,"accumulator_root_hash","","",27,null],[12,"timestamp","","",27,null],[12,"chain_id","","",27,null],[12,"script_hash_allow_list","","",27,null],[12,"module_publishing_allowed","","",27,null],[12,"diem_version","","",27,null],[12,"dual_attestation_limit","","",27,null],[3,"BytesView","","",null,null],[12,"0","","",28,null],[3,"MoveAbortExplanationView","","",null,null],[12,"category","","",29,null],[12,"category_description","","",29,null],[12,"reason","","",29,null],[12,"reason_description","","",29,null],[4,"VMStatusView","","",null,null],[13,"Executed","","",30,null],[13,"OutOfGas","","",30,null],[13,"MoveAbort","","",30,null],[12,"location","diem_client::views::VMStatusView","",31,null],[12,"abort_code","","",31,null],[12,"explanation","","",31,null],[13,"ExecutionFailure","diem_client::views","",30,null],[12,"location","diem_client::views::VMStatusView","",32,null],[12,"function_index","","",32,null],[12,"code_offset","","",32,null],[13,"MiscellaneousError","diem_client::views","",30,null],[13,"VerificationError","","",30,null],[13,"DeserializationError","","",30,null],[13,"PublishingFailure","","",30,null],[3,"TransactionView","","",null,null],[12,"version","","",33,null],[12,"transaction","","",33,null],[12,"hash","","",33,null],[12,"bytes","","",33,null],[12,"events","","",33,null],[12,"vm_status","","",33,null],[12,"gas_used","","",33,null],[3,"TransactionsWithProofsView","","",null,null],[12,"serialized_transactions","","",34,null],[12,"proofs","","",34,null],[3,"TransactionsProofsView","","",null,null],[12,"ledger_info_to_transaction_infos_proof","","",35,null],[12,"transaction_infos","","",35,null],[4,"TransactionDataView","","",null,null],[13,"BlockMetadata","","",36,null],[12,"timestamp_usecs","diem_client::views::TransactionDataView","",37,null],[13,"WriteSet","diem_client::views","",36,null],[13,"UserTransaction","","",36,null],[12,"sender","diem_client::views::TransactionDataView","",38,null],[12,"signature_scheme","","",38,null],[12,"signature","","",38,null],[12,"public_key","","",38,null],[12,"sequence_number","","",38,null],[12,"chain_id","","",38,null],[12,"max_gas_amount","","",38,null],[12,"gas_unit_price","","",38,null],[12,"gas_currency","","",38,null],[12,"expiration_timestamp_secs","","",38,null],[12,"script_hash","","",38,null],[12,"script_bytes","","",38,null],[12,"script","","",38,null],[13,"UnknownTransaction","diem_client::views","",36,null],[3,"ScriptView","","",null,null],[12,"type","","",39,null],[12,"code","","",39,null],[12,"arguments","","",39,null],[12,"type_arguments","","",39,null],[12,"receiver","","",39,null],[12,"amount","","",39,null],[12,"currency","","",39,null],[12,"metadata","","",39,null],[12,"metadata_signature","","",39,null],[3,"CurrencyInfoView","","",null,null],[12,"code","","",40,null],[12,"scaling_factor","","",40,null],[12,"fractional_part","","",40,null],[12,"to_xdx_exchange_rate","","",40,null],[12,"mint_events_key","","",40,null],[12,"burn_events_key","","",40,null],[12,"preburn_events_key","","",40,null],[12,"cancel_burn_events_key","","",40,null],[12,"exchange_rate_update_events_key","","",40,null],[3,"StateProofView","","",null,null],[12,"ledger_info_with_signatures","","",41,null],[12,"epoch_change_proof","","",41,null],[12,"ledger_consistency_proof","","",41,null],[3,"AccountStateWithProofView","","",null,null],[12,"version","","",42,null],[12,"blob","","",42,null],[12,"proof","","",42,null],[3,"AccountStateProofView","","",null,null],[12,"ledger_info_to_transaction_info_proof","","",43,null],[12,"transaction_info","","",43,null],[12,"transaction_info_to_account_proof","","",43,null],[3,"AccountAddress","diem_client","A struct that represents an account address.",null,null],[3,"SignedTransaction","","A transaction that has been signed.",null,null],[3,"Error","","",null,null],[6,"Result","","",null,null],[4,"WaitForTransactionError","","",null,null],[13,"GetTransactionError","","",44,null],[13,"TransactionHashMismatchError","","",44,null],[13,"TransactionExecutionFailed","","",44,null],[13,"Timeout","","",44,null],[13,"TransactionExpired","","",44,null],[3,"BlockingClient","","",null,null],[3,"Client","","",null,null],[3,"JsonRpcRequest","","",null,null],[4,"MethodRequest","","",null,null],[13,"Submit","","",45,null],[13,"GetMetadata","","",45,null],[13,"GetAccount","","",45,null],[13,"GetTransactions","","",45,null],[13,"GetAccountTransaction","","",45,null],[13,"GetAccountTransactions","","",45,null],[13,"GetEvents","","",45,null],[13,"GetCurrencies","","",45,null],[13,"GetNetworkStatus","","",45,null],[13,"GetStateProof","","",45,null],[13,"GetAccountStateWithProof","","",45,null],[13,"GetTransactionsWithProofs","","",45,null],[13,"GetEventsWithProofs","","",45,null],[4,"MethodResponse","","",null,null],[13,"Submit","","",46,null],[13,"GetMetadata","","",46,null],[13,"GetAccount","","",46,null],[13,"GetTransactions","","",46,null],[13,"GetAccountTransaction","","",46,null],[13,"GetAccountTransactions","","",46,null],[13,"GetEvents","","",46,null],[13,"GetCurrencies","","",46,null],[13,"GetNetworkStatus","","",46,null],[13,"GetStateProof","","",46,null],[13,"GetAccountStateWithProof","","",46,null],[13,"GetTransactionsWithProofs","","",46,null],[13,"GetEventsWithProofs","","",46,null],[3,"Response","","",null,null],[3,"State","","",null,null],[12,"chain_id","","",47,null],[12,"version","","",47,null],[12,"timestamp_usecs","","",47,null],[3,"Retry","","",null,null],[4,"Method","","",null,null],[13,"Submit","","",48,null],[13,"GetMetadata","","",48,null],[13,"GetAccount","","",48,null],[13,"GetTransactions","","",48,null],[13,"GetAccountTransaction","","",48,null],[13,"GetAccountTransactions","","",48,null],[13,"GetEvents","","",48,null],[13,"GetCurrencies","","",48,null],[13,"GetNetworkStatus","","",48,null],[13,"GetStateProof","","",48,null],[13,"GetAccountStateWithProof","","",48,null],[13,"GetTransactionsWithProofs","","",48,null],[13,"GetEventsWithProofs","","",48,null],[11,"from","diem_client::errors","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"vzip","","",3,[[]]],[11,"from","diem_client::views","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"test_only_hash","","",4,[[],["hashvalue",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"test_only_hash","","",9,[[],["hashvalue",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"test_only_hash","","",10,[[],["hashvalue",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"test_only_hash","","",11,[[],["hashvalue",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"test_only_hash","","",12,[[],["hashvalue",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"test_only_hash","","",27,[[],["hashvalue",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"test_only_hash","","",28,[[],["hashvalue",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"test_only_hash","","",29,[[],["hashvalue",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"test_only_hash","","",30,[[],["hashvalue",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"test_only_hash","","",33,[[],["hashvalue",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"test_only_hash","","",34,[[],["hashvalue",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"test_only_hash","","",35,[[],["hashvalue",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"test_only_hash","","",36,[[],["hashvalue",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"test_only_hash","","",39,[[],["hashvalue",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"test_only_hash","","",40,[[],["hashvalue",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"test_only_hash","","",41,[[],["hashvalue",3]]],[11,"vzip","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"test_only_hash","","",42,[[],["hashvalue",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"test_only_hash","","",43,[[],["hashvalue",3]]],[11,"vzip","","",43,[[]]],[11,"from","diem_client","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"to_string","","",49,[[],["string",3]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"test_only_hash","","",49,[[],["hashvalue",3]]],[11,"vzip","","",49,[[]]],[11,"encode_hex","","",49,[[]]],[11,"encode_hex_upper","","",49,[[]]],[11,"equivalent","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"test_only_hash","","",50,[[],["hashvalue",3]]],[11,"vzip","","",50,[[]]],[11,"equivalent","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_string","","",51,[[],["string",3]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"test_only_hash","","",45,[[],["hashvalue",3]]],[11,"vzip","","",45,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"test_only_hash","","",54,[[],["hashvalue",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"test_only_hash","","",48,[[],["hashvalue",3]]],[11,"vzip","","",48,[[]]],[11,"fmt","diem_client::views","",29,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",28,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",30,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_client::errors","",3,[[["formatter",3]],[["result",4],["error",3]]]],[11,"eq","diem_client::views","",28,[[["bytesview",3]]]],[11,"ne","","",28,[[["bytesview",3]]]],[11,"eq","","",4,[[["amountview",3]]]],[11,"ne","","",4,[[["amountview",3]]]],[11,"eq","","",9,[[["accountview",3]]]],[11,"ne","","",9,[[["accountview",3]]]],[11,"eq","","",10,[[["eventview",3]]]],[11,"ne","","",10,[[["eventview",3]]]],[11,"eq","","",12,[[["eventdataview",4]]]],[11,"ne","","",12,[[["eventdataview",4]]]],[11,"eq","","",41,[[["stateproofview",3]]]],[11,"ne","","",41,[[["stateproofview",3]]]],[11,"eq","","",43,[[["accountstateproofview",3]]]],[11,"ne","","",43,[[["accountstateproofview",3]]]],[11,"eq","","",11,[[["eventwithproofview",3]]]],[11,"ne","","",11,[[["eventwithproofview",3]]]],[11,"eq","","",33,[[["transactionview",3]]]],[11,"ne","","",33,[[["transactionview",3]]]],[11,"eq","","",42,[[["accountstatewithproofview",3]]]],[11,"ne","","",42,[[["accountstatewithproofview",3]]]],[11,"eq","","",29,[[["moveabortexplanationview",3]]]],[11,"ne","","",29,[[["moveabortexplanationview",3]]]],[11,"eq","","",5,[[["accountroleview",4]]]],[11,"ne","","",5,[[["accountroleview",4]]]],[11,"eq","","",39,[[["scriptview",3]]]],[11,"ne","","",39,[[["scriptview",3]]]],[11,"eq","","",30,[[["vmstatusview",4]]]],[11,"ne","","",30,[[["vmstatusview",4]]]],[11,"eq","","",40,[[["currencyinfoview",3]]]],[11,"ne","","",40,[[["currencyinfoview",3]]]],[11,"eq","","",34,[[["transactionswithproofsview",3]]]],[11,"ne","","",34,[[["transactionswithproofsview",3]]]],[11,"eq","","",36,[[["transactiondataview",4]]]],[11,"ne","","",36,[[["transactiondataview",4]]]],[11,"eq","","",35,[[["transactionsproofsview",3]]]],[11,"ne","","",35,[[["transactionsproofsview",3]]]],[11,"eq","","",27,[[["metadataview",3]]]],[11,"ne","","",27,[[["metadataview",3]]]],[11,"from","","",5,[[["accountrole",4]],["accountroleview",4]]],[11,"from","","",28,[[["vec",3]],["bytesview",3]]],[11,"from","","",28,[[["accountaddress",3]],["bytesview",3]]],[11,"from","","",28,[[["accountaddress",3]],["bytesview",3]]],[11,"from","","",28,[[["vec",3],["global",3]],["bytesview",3]]],[11,"from","diem_client::errors","",3,[[["error",3]],["jsonrpcerror",3]]],[11,"from","","",3,[[["error",3]],["jsonrpcerror",3]]],[11,"from","diem_client::views","",40,[[["currencyinforesource",3]],["currencyinfoview",3]]],[11,"from","","",28,[[],["bytesview",3]]],[11,"from","","",28,[[["hashvalue",3]],["bytesview",3]]],[11,"fmt","","",29,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",30,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",40,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",34,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",4,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",35,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",28,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",42,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_client::errors","",3,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_client::views","",10,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",43,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",27,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",36,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",33,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",41,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",5,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",11,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",39,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_client::errors","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"try_from","diem_client::views","",42,[[["accountstatewithproof",3]],[["result",4],["accountstatewithproofview",3],["error",3]]]],[11,"try_from","","",41,[[],[["result",4],["stateproofview",3]]]],[11,"try_from","","",43,[[["accountstateproof",3]],[["error",3],["result",4],["accountstateproofview",3]]]],[11,"try_from","","",10,[[],[["eventview",3],["error",3],["result",4]]]],[11,"try_from","","",12,[[["contractevent",4]],[["result",4],["eventdataview",4],["error",3]]]],[11,"deserialize","","",28,[[],[["result",4],["bytesview",3]]]],[11,"deserialize","","",30,[[],[["result",4],["vmstatusview",4]]]],[11,"deserialize","","",27,[[],[["result",4],["metadataview",3]]]],[11,"deserialize","","",11,[[],[["result",4],["eventwithproofview",3]]]],[11,"deserialize","","",5,[[],[["result",4],["accountroleview",4]]]],[11,"deserialize","","",9,[[],[["result",4],["accountview",3]]]],[11,"deserialize","","",40,[[],[["result",4],["currencyinfoview",3]]]],[11,"deserialize","","",36,[[],[["result",4],["transactiondataview",4]]]],[11,"deserialize","diem_client::errors","",2,[[],[["result",4],["errordata",4]]]],[11,"deserialize","diem_client::views","",34,[[],[["transactionswithproofsview",3],["result",4]]]],[11,"deserialize","","",12,[[],[["eventdataview",4],["result",4]]]],[11,"deserialize","","",42,[[],[["accountstatewithproofview",3],["result",4]]]],[11,"deserialize","","",39,[[],[["scriptview",3],["result",4]]]],[11,"deserialize","","",29,[[],[["result",4],["moveabortexplanationview",3]]]],[11,"deserialize","diem_client::errors","",3,[[],[["jsonrpcerror",3],["result",4]]]],[11,"deserialize","diem_client::views","",33,[[],[["result",4],["transactionview",3]]]],[11,"deserialize","","",35,[[],[["result",4],["transactionsproofsview",3]]]],[11,"deserialize","","",4,[[],[["amountview",3],["result",4]]]],[11,"deserialize","","",41,[[],[["result",4],["stateproofview",3]]]],[11,"deserialize","","",43,[[],[["result",4],["accountstateproofview",3]]]],[11,"deserialize","","",10,[[],[["eventview",3],["result",4]]]],[11,"serialize","","",28,[[],["result",4]]],[11,"serialize","","",43,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","diem_client::errors","",3,[[],["result",4]]],[11,"serialize","diem_client::views","",40,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",35,[[],["result",4]]],[11,"serialize","","",41,[[],["result",4]]],[11,"serialize","","",39,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",29,[[],["result",4]]],[11,"serialize","","",42,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",30,[[],["result",4]]],[11,"serialize","","",33,[[],["result",4]]],[11,"serialize","diem_client::errors","",2,[[],["result",4]]],[11,"serialize","diem_client::views","",34,[[],["result",4]]],[11,"serialize","","",27,[[],["result",4]]],[11,"serialize","","",36,[[],["result",4]]],[11,"default","","",39,[[],["scriptview",3]]],[11,"clone","","",33,[[],["transactionview",3]]],[11,"clone","","",34,[[],["transactionswithproofsview",3]]],[11,"clone","","",12,[[],["eventdataview",4]]],[11,"clone","","",36,[[],["transactiondataview",4]]],[11,"clone","","",41,[[],["stateproofview",3]]],[11,"clone","","",28,[[],["bytesview",3]]],[11,"clone","","",39,[[],["scriptview",3]]],[11,"clone","","",30,[[],["vmstatusview",4]]],[11,"clone","","",43,[[],["accountstateproofview",3]]],[11,"clone","","",40,[[],["currencyinfoview",3]]],[11,"clone","","",29,[[],["moveabortexplanationview",3]]],[11,"clone","","",5,[[],["accountroleview",4]]],[11,"clone","","",11,[[],["eventwithproofview",3]]],[11,"clone","","",4,[[],["amountview",3]]],[11,"clone","","",9,[[],["accountview",3]]],[11,"clone","","",35,[[],["transactionsproofsview",3]]],[11,"clone","","",42,[[],["accountstatewithproofview",3]]],[11,"clone","diem_client::errors","",2,[[],["errordata",4]]],[11,"clone","diem_client::views","",10,[[],["eventview",3]]],[11,"clone","diem_client::errors","",3,[[],["jsonrpcerror",3]]],[11,"clone","diem_client::views","",27,[[],["metadataview",3]]],[11,"hash","diem_client","",49,[[],["hashvalue",3]]],[11,"fmt","","",50,[[["formatter",3]],[["result",4],["error",3]]]],[11,"arbitrary_with","","",50,[[]]],[11,"hash","","",50,[[]]],[11,"deserialize","","",50,[[],[["signedtransaction",3],["result",4]]]],[11,"clone","","",50,[[],["signedtransaction",3]]],[11,"eq","","",50,[[["signedtransaction",3]]]],[11,"ne","","",50,[[["signedtransaction",3]]]],[11,"try_from","","",50,[[["transaction",4]],[["error",3],["result",4],["signedtransaction",3]]]],[11,"serialize","","",50,[[],["result",4]]],[11,"partial_cmp","","",49,[[["accountaddress",3]],[["ordering",4],["option",4]]]],[11,"lt","","",49,[[["accountaddress",3]]]],[11,"le","","",49,[[["accountaddress",3]]]],[11,"gt","","",49,[[["accountaddress",3]]]],[11,"ge","","",49,[[["accountaddress",3]]]],[11,"serialize","","",49,[[],["result",4]]],[11,"from_str","","",49,[[],[["error",3],["result",4],["accountaddress",3]]]],[11,"fmt","","",49,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",49,[[["formatter",3]],[["result",4],["error",3]]]],[11,"as_ref","","",49,[[]]],[11,"cmp","","",49,[[["accountaddress",3]],["ordering",4]]],[11,"deserialize","","",49,[[],[["result",4],["accountaddress",3]]]],[11,"fmt","","",49,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",49,[[["formatter",3]],[["result",4],["error",3]]]],[11,"deref","","",49,[[]]],[11,"arbitrary_with","","",49,[[]]],[11,"hash","","",49,[[]]],[11,"clone","","",49,[[],["accountaddress",3]]],[11,"eq","","",49,[[["accountaddress",3]]]],[11,"ne","","",49,[[["accountaddress",3]]]],[11,"try_from","","Tries to convert the provided byte array into Address.",49,[[],[["error",3],["result",4],["accountaddress",3]]]],[11,"try_from","","Tries to convert the provided byte buffer into Address.",49,[[["vec",3],["global",3]],[["error",3],["result",4],["accountaddress",3]]]],[11,"try_from","","",49,[[["string",3]],[["error",3],["result",4],["accountaddress",3]]]],[11,"try_from","","Tries to convert the provided byte array into Address.",49,[[],[["error",3],["result",4],["accountaddress",3]]]],[11,"from","","",51,[[["error",3]]]],[11,"clone","","",52,[[],["blockingclient",3]]],[11,"clone","","",53,[[],["client",3]]],[11,"clone","","",46,[[],["methodresponse",4]]],[11,"clone","","",47,[[],["state",3]]],[11,"clone","","",56,[[],["retry",3]]],[11,"default","","",56,[[]]],[11,"eq","","",46,[[["methodresponse",4]]]],[11,"ne","","",46,[[["methodresponse",4]]]],[11,"eq","","",47,[[["state",3]]]],[11,"ne","","",47,[[["state",3]]]],[11,"partial_cmp","","",47,[[["state",3]],[["option",4],["ordering",4]]]],[11,"lt","","",47,[[["state",3]]]],[11,"le","","",47,[[["state",3]]]],[11,"gt","","",47,[[["state",3]]]],[11,"ge","","",47,[[["state",3]]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"source","","",51,[[],[["error",8],["option",4]]]],[11,"source","","",44,[[],[["error",8],["option",4]]]],[11,"deserialize","","",45,[[],["result",4]]],[11,"deserialize","","",54,[[],["result",4]]],[11,"deserialize","","",48,[[],["result",4]]],[11,"serialize","","",45,[[],["result",4]]],[11,"serialize","","",54,[[],["result",4]]],[11,"serialize","","",48,[[],["result",4]]],[11,"serialize","diem_client::errors","",3,[[],["value",4]]],[11,"invalid_request","","",3,[[],["jsonrpcerror",3]]],[11,"invalid_request_with_data","","",3,[[["option",4],["errordata",4]],["jsonrpcerror",3]]],[11,"invalid_request_with_msg","","",3,[[["string",3]],["jsonrpcerror",3]]],[11,"invalid_format","","",3,[[],["jsonrpcerror",3]]],[11,"invalid_params","","",3,[[["option",4],["errordata",4]],["jsonrpcerror",3]]],[11,"invalid_params_size","","",3,[[["string",3]],["jsonrpcerror",3]]],[11,"invalid_param","","",3,[[],["jsonrpcerror",3]]],[11,"method_not_found","","",3,[[],["jsonrpcerror",3]]],[11,"internal_error","","",3,[[["string",3]],["jsonrpcerror",3]]],[11,"mempool_error","","",3,[[["mempoolstatus",3]],[["result",4],["error",3],["jsonrpcerror",3]]]],[11,"vm_status","","",3,[[["statuscode",4]],["jsonrpcerror",3]]],[11,"as_status_code","","",3,[[],[["option",4],["statuscode",4]]]],[11,"new","diem_client::views","",9,[[["btreemap",3],["freezingbit",3],["accountaddress",3],["balanceresource",3],["identifier",3],["accountresource",3],["accountrole",4]],["accountview",3]]],[11,"into_bytes","","",28,[[],[["vec",3],["error",3],["result",4]]]],[11,"unknown","","",39,[[],["scriptview",3]]],[11,"new","diem_client","",49,[[],["accountaddress",3]]],[18,"LENGTH","","The number of bytes in an address.",49,null],[18,"ZERO","","Hex address: 0x0",49,null],[11,"random","","",49,[[],["accountaddress",3]]],[11,"short_str_lossless","","",49,[[],["string",3]]],[11,"to_vec","","",49,[[],[["vec",3],["global",3]]]],[11,"to_u8","","",49,[[]]],[11,"from_hex_literal","","",49,[[],[["error",3],["result",4],["accountaddress",3]]]],[11,"new","","",50,[[["ed25519publickey",3],["ed25519signature",3],["rawtransaction",3]],["signedtransaction",3]]],[11,"new_multisig","","",50,[[["multied25519signature",3],["multied25519publickey",3],["rawtransaction",3]],["signedtransaction",3]]],[11,"authenticator","","",50,[[],["transactionauthenticator",4]]],[11,"sender","","",50,[[],["accountaddress",3]]],[11,"into_raw_transaction","","",50,[[],["rawtransaction",3]]],[11,"sequence_number","","",50,[[]]],[11,"chain_id","","",50,[[],["chainid",3]]],[11,"payload","","",50,[[],["transactionpayload",4]]],[11,"max_gas_amount","","",50,[[]]],[11,"gas_unit_price","","",50,[[]]],[11,"gas_currency_code","","",50,[[]]],[11,"expiration_timestamp_secs","","",50,[[]]],[11,"raw_txn_bytes_len","","",50,[[]]],[11,"check_signature","","Checks that the signature of given transaction. Returns …",50,[[],[["result",4],["error",3],["signaturecheckedtransaction",3]]]],[11,"format_for_client","","",50,[[],["string",3]]],[11,"json_rpc_error","","",51,[[],[["option",4],["jsonrpcerror",3]]]],[11,"is_retriable","","",51,[[]]],[11,"new","","",52,[[["string",3],["into",8]]]],[11,"last_known_state","","",52,[[],[["option",4],["state",3]]]],[11,"wait_for_signed_transaction","","",52,[[["option",4],["duration",3],["signedtransaction",3]],[["result",6],["response",3],["waitfortransactionerror",4]]]],[11,"wait_for_transaction","","",52,[[["accountaddress",3],["option",4],["duration",3]],[["result",6],["response",3],["waitfortransactionerror",4]]]],[11,"batch","","",52,[[["vec",3],["methodrequest",4]],[["result",6],["vec",3]]]],[11,"submit","","",52,[[["signedtransaction",3]],[["response",3],["result",6]]]],[11,"get_metadata_by_version","","",52,[[],[["response",3],["result",6]]]],[11,"get_metadata","","",52,[[],[["response",3],["result",6]]]],[11,"get_account","","",52,[[["accountaddress",3]],[["response",3],["result",6]]]],[11,"get_transactions","","",52,[[],[["result",6],["response",3]]]],[11,"get_account_transaction","","",52,[[["accountaddress",3]],[["response",3],["result",6]]]],[11,"get_account_transactions","","",52,[[["accountaddress",3]],[["result",6],["response",3]]]],[11,"get_events","","",52,[[],[["response",3],["result",6]]]],[11,"get_currencies","","",52,[[],[["response",3],["result",6]]]],[11,"get_network_status","","",52,[[],[["result",6],["response",3]]]],[11,"get_state_proof","","",52,[[],[["result",6],["response",3]]]],[11,"get_account_state_with_proof","","",52,[[["option",4],["accountaddress",3]],[["result",6],["response",3]]]],[11,"get_transactions_with_proofs","","",52,[[],[["response",3],["result",6]]]],[11,"get_events_with_proofs","","",52,[[],[["response",3],["result",6]]]],[11,"new","","",53,[[["string",3],["into",8]]]],[11,"last_known_state","","",53,[[],[["option",4],["state",3]]]],[11,"wait_for_signed_transaction","","",53,[[["option",4],["duration",3],["signedtransaction",3]]]],[11,"wait_for_transaction","","",53,[[["accountaddress",3],["option",4],["duration",3]]]],[11,"batch","","",53,[[["vec",3],["methodrequest",4]]]],[11,"submit","","",53,[[["signedtransaction",3]]]],[11,"get_metadata_by_version","","",53,[[]]],[11,"get_metadata","","",53,[[]]],[11,"get_account","","",53,[[["accountaddress",3]]]],[11,"get_transactions","","",53,[[]]],[11,"get_account_transaction","","",53,[[["accountaddress",3]]]],[11,"get_account_transactions","","",53,[[["accountaddress",3]]]],[11,"get_events","","",53,[[]]],[11,"get_currencies","","",53,[[]]],[11,"get_network_status","","",53,[[]]],[11,"get_state_proof","","",53,[[]]],[11,"get_account_state_with_proof","","",53,[[["option",4],["accountaddress",3]]]],[11,"get_transactions_with_proofs","","",53,[[]]],[11,"get_events_with_proofs","","",53,[[]]],[11,"submit","","",45,[[["signedtransaction",3]],[["error",4],["result",4]]]],[11,"get_metadata_by_version","","",45,[[]]],[11,"get_metadata","","",45,[[]]],[11,"get_account","","",45,[[["accountaddress",3]]]],[11,"get_transactions","","",45,[[]]],[11,"get_account_transaction","","",45,[[["accountaddress",3]]]],[11,"get_account_transactions","","",45,[[["accountaddress",3]]]],[11,"get_events","","",45,[[]]],[11,"get_currencies","","",45,[[]]],[11,"get_network_status","","",45,[[]]],[11,"get_state_proof","","",45,[[]]],[11,"get_account_state_with_proof","","",45,[[["option",4],["accountaddress",3]]]],[11,"get_transactions_with_proofs","","",45,[[]]],[11,"get_events_with_proofs","","",45,[[]]],[11,"method","","",45,[[],["method",4]]],[11,"new","","",54,[[["methodrequest",4]]]],[11,"id","","",54,[[]]],[11,"method","","",54,[[],["method",4]]],[11,"new","","",55,[[["state",3]]]],[11,"inner","","",55,[[]]],[11,"into_inner","","",55,[[]]],[11,"state","","",55,[[],["state",3]]],[11,"into_parts","","",55,[[]]],[11,"from_json","","",46,[[["method",4],["value",4]],[["result",4],["error",3]]]],[11,"method","","",46,[[],["method",4]]],[11,"unwrap_get_account","","",46,[[],[["option",4],["accountview",3]]]],[11,"from_response","","",47,[[["jsonrpcresponse",3]]]],[11,"new","","",56,[[["duration",3]]]],[11,"max_retries","","",56,[[]]],[11,"delay","","",56,[[],["duration",3]]]],"p":[[4,"ServerCode"],[4,"InvalidRequestCode"],[4,"ErrorData"],[3,"JsonRpcError"],[3,"AmountView"],[4,"AccountRoleView"],[13,"ChildVASP"],[13,"ParentVASP"],[13,"DesignatedDealer"],[3,"AccountView"],[3,"EventView"],[3,"EventWithProofView"],[4,"EventDataView"],[13,"Burn"],[13,"CancelBurn"],[13,"Mint"],[13,"ToXDXExchangeRateUpdate"],[13,"Preburn"],[13,"ReceivedPayment"],[13,"SentPayment"],[13,"AdminTransaction"],[13,"NewEpoch"],[13,"NewBlock"],[13,"ReceivedMint"],[13,"ComplianceKeyRotation"],[13,"BaseUrlRotation"],[13,"CreateAccount"],[3,"MetadataView"],[3,"BytesView"],[3,"MoveAbortExplanationView"],[4,"VMStatusView"],[13,"MoveAbort"],[13,"ExecutionFailure"],[3,"TransactionView"],[3,"TransactionsWithProofsView"],[3,"TransactionsProofsView"],[4,"TransactionDataView"],[13,"BlockMetadata"],[13,"UserTransaction"],[3,"ScriptView"],[3,"CurrencyInfoView"],[3,"StateProofView"],[3,"AccountStateWithProofView"],[3,"AccountStateProofView"],[4,"WaitForTransactionError"],[4,"MethodRequest"],[4,"MethodResponse"],[3,"State"],[4,"Method"],[3,"AccountAddress"],[3,"SignedTransaction"],[3,"Error"],[3,"BlockingClient"],[3,"Client"],[3,"JsonRpcRequest"],[3,"Response"],[3,"Retry"]]},\
"diem_config":{"doc":"","i":[[0,"config","diem_config","",null,null],[3,"ConsensusConfig","diem_config::config","",null,null],[12,"contiguous_rounds","","",0,null],[12,"max_block_size","","",0,null],[12,"max_pruned_blocks_in_mem","","",0,null],[12,"mempool_executed_txn_timeout_ms","","",0,null],[12,"mempool_txn_pull_timeout_ms","","",0,null],[12,"round_initial_timeout_ms","","",0,null],[12,"proposer_type","","",0,null],[12,"safety_rules","","",0,null],[12,"sync_only","","",0,null],[12,"mempool_poll_count","","",0,null],[4,"ConsensusProposerType","","",null,null],[13,"FixedProposer","","",1,null],[13,"RotatingProposer","","",1,null],[13,"LeaderReputation","","",1,null],[13,"RoundProposer","","",1,null],[3,"LeaderReputationConfig","","",null,null],[12,"active_weights","","",2,null],[12,"inactive_weights","","",2,null],[3,"DebugInterfaceConfig","","",null,null],[12,"admission_control_node_debug_port","","",3,null],[12,"address","","",3,null],[12,"diem_trace","","",3,null],[12,"metrics_server_port","","",3,null],[12,"public_metrics_server_port","","",3,null],[3,"DiemTraceConfig","","",null,null],[12,"sampling","","",4,null],[4,"Error","","",null,null],[13,"InvariantViolation","","",5,null],[13,"IO","","",5,null],[13,"BCS","","",5,null],[13,"Yaml","","",5,null],[13,"Missing","","",5,null],[5,"invariant","","",null,[[["string",3]],[["result",4],["error",4]]]],[3,"ExecutionConfig","","",null,null],[12,"genesis","","",6,null],[12,"sign_vote_proposal","","",6,null],[12,"genesis_file_location","","",6,null],[12,"service","","",6,null],[12,"backend","","",6,null],[12,"network_timeout_ms","","",6,null],[4,"ExecutionCorrectnessService","","Defines how execution correctness should be run",null,null],[13,"Local","","This runs execution correctness in the same thread as …",7,null],[13,"Process","","This is the production, separate service approach",7,null],[13,"Serializer","","This runs safety rules in the same thread as event …",7,null],[13,"Thread","","This creates a separate thread to run execution …",7,null],[3,"RemoteExecutionService","","",null,null],[12,"server_address","","",8,null],[3,"KeyManagerConfig","","",null,null],[12,"logger","","",9,null],[12,"json_rpc_endpoint","","",9,null],[12,"rotation_period_secs","","",9,null],[12,"secure_backend","","",9,null],[12,"sleep_period_secs","","",9,null],[12,"txn_expiration_secs","","",9,null],[12,"chain_id","","",9,null],[3,"LoggerConfig","","",null,null],[12,"chan_size","","",10,null],[12,"is_async","","",10,null],[12,"level","","",10,null],[3,"MetricsConfig","","",null,null],[12,"collection_interval_ms","","",11,null],[12,"dir","","",11,null],[12,"enabled","","",11,null],[3,"MempoolConfig","","",null,null],[12,"capacity","","",12,null],[12,"capacity_per_user","","",12,null],[12,"default_failovers","","",12,null],[12,"max_broadcasts_per_peer","","",12,null],[12,"mempool_snapshot_interval_secs","","",12,null],[12,"shared_mempool_ack_timeout_ms","","",12,null],[12,"shared_mempool_backoff_interval_ms","","",12,null],[12,"shared_mempool_batch_size","","",12,null],[12,"shared_mempool_max_concurrent_inbound_syncs","","",12,null],[12,"shared_mempool_tick_interval_ms","","",12,null],[12,"system_transaction_timeout_secs","","",12,null],[12,"system_transaction_gc_interval_ms","","",12,null],[17,"HANDSHAKE_VERSION","","Current supported protocol negotiation handshake version. …",null,null],[17,"NETWORK_CHANNEL_SIZE","","",null,null],[17,"PING_INTERVAL_MS","","",null,null],[17,"PING_TIMEOUT_MS","","",null,null],[17,"PING_FAILURES_TOLERATED","","",null,null],[17,"CONNECTIVITY_CHECK_INTERVAL_MS","","",null,null],[17,"MAX_CONCURRENT_NETWORK_REQS","","",null,null],[17,"MAX_CONNECTION_DELAY_MS","","",null,null],[17,"MAX_FULLNODE_OUTBOUND_CONNECTIONS","","",null,null],[17,"MAX_INBOUND_CONNECTIONS","","",null,null],[17,"MAX_FRAME_SIZE","","",null,null],[17,"CONNECTION_BACKOFF_BASE","","",null,null],[17,"IP_BYTE_BUCKET_RATE","","",null,null],[17,"IP_BYTE_BUCKET_SIZE","","",null,null],[3,"NetworkConfig","","",null,null],[12,"max_connection_delay_ms","","",13,null],[12,"connection_backoff_base","","",13,null],[12,"connectivity_check_interval_ms","","",13,null],[12,"network_channel_size","","",13,null],[12,"max_concurrent_network_reqs","","",13,null],[12,"discovery_method","","",13,null],[12,"identity","","",13,null],[12,"listen_address","","",13,null],[12,"mutual_authentication","","",13,null],[12,"network_address_key_backend","","",13,null],[12,"network_id","","",13,null],[12,"seed_addrs","","",13,null],[12,"seeds","","",13,null],[12,"max_frame_size","","",13,null],[12,"enable_proxy_protocol","","",13,null],[12,"ping_interval_ms","","",13,null],[12,"ping_timeout_ms","","",13,null],[12,"ping_failures_tolerated","","",13,null],[12,"max_outbound_connections","","",13,null],[12,"max_inbound_connections","","",13,null],[12,"inbound_rate_limit_config","","",13,null],[12,"outbound_rate_limit_config","","",13,null],[4,"DiscoveryMethod","","",null,null],[13,"Onchain","","",14,null],[13,"None","","",14,null],[4,"Identity","","",null,null],[13,"FromConfig","","",15,null],[13,"FromStorage","","",15,null],[13,"None","","",15,null],[3,"IdentityFromConfig","","The identity is stored within the config.",null,null],[12,"key","","",16,null],[12,"peer_id","","",16,null],[3,"IdentityFromStorage","","This represents an identity in a secure-storage as …",null,null],[12,"backend","","",17,null],[12,"key_name","","",17,null],[12,"peer_id_name","","",17,null],[3,"RateLimitConfig","","",null,null],[12,"ip_byte_bucket_rate","","Maximum number of bytes/s for an IP",18,null],[12,"ip_byte_bucket_size","","Maximum burst of bytes for an IP",18,null],[12,"initial_bucket_fill_percentage","","Initial amount of tokens initially in the bucket",18,null],[12,"enabled","","Allow for disabling the throttles",18,null],[6,"PeerSet","","",null,null],[4,"PeerRole","","Represents the Role that a peer plays in the network …",null,null],[13,"Validator","","",19,null],[13,"PreferredUpstream","","",19,null],[13,"ValidatorFullNode","","",19,null],[13,"Upstream","","",19,null],[13,"Downstream","","",19,null],[13,"Known","","",19,null],[13,"Unknown","","",19,null],[3,"Peer","","Represents a single seed configuration for a seed peer",null,null],[12,"addresses","","",20,null],[12,"keys","","",20,null],[12,"role","","",20,null],[3,"JsonRpcConfig","","",null,null],[12,"address","","",21,null],[12,"batch_size_limit","","",21,null],[12,"page_size_limit","","",21,null],[12,"content_length_limit","","",21,null],[12,"tls_cert_path","","",21,null],[12,"tls_key_path","","",21,null],[17,"DEFAULT_JSON_RPC_ADDRESS","","",null,null],[17,"DEFAULT_JSON_RPC_PORT","","",null,null],[17,"DEFAULT_BATCH_SIZE_LIMIT","","",null,null],[17,"DEFAULT_PAGE_SIZE_LIMIT","","",null,null],[17,"DEFAULT_CONTENT_LENGTH_LIMIT","","",null,null],[4,"SecureBackend","","",null,null],[13,"GitHub","","",22,null],[13,"InMemoryStorage","","",22,null],[13,"Vault","","",22,null],[13,"OnDiskStorage","","",22,null],[3,"GitHubConfig","","",null,null],[12,"repository_owner","","The owner or account that hosts a repository",23,null],[12,"repository","","The repository where storage will mount",23,null],[12,"branch","","The branch containing storage, defaults to master",23,null],[12,"token","","The authorization token for accessing the repository",23,null],[12,"namespace","","A namespace is an optional portion of the path to a key …",23,null],[3,"VaultConfig","","",null,null],[12,"ca_certificate","","Optional SSL Certificate for the vault host, this is …",24,null],[12,"namespace","","A namespace is an optional portion of the path to a key …",24,null],[12,"renew_ttl_secs","","Vault leverages leases on many tokens, specify this to …",24,null],[12,"server","","Vault\'s URL, note: only HTTP is currently supported.",24,null],[12,"token","","The authorization token for accessing secrets",24,null],[12,"disable_cas","","Disable check-and-set when writing secrets to Vault",24,null],[12,"connection_timeout_ms","","Timeout for new vault socket connections, in milliseconds.",24,null],[12,"response_timeout_ms","","Timeout for generic vault operations (e.g., reads and …",24,null],[3,"OnDiskStorageConfig","","",null,null],[12,"path","","",25,null],[12,"namespace","","A namespace is an optional portion of the path to a key …",25,null],[4,"Token","","Tokens can either be directly within this config or …",null,null],[13,"FromConfig","","",26,null],[13,"FromDisk","","This is an absolute path and not relative to data_dir",26,null],[3,"TokenFromConfig","","",null,null],[3,"TokenFromDisk","","",null,null],[3,"StateSyncConfig","","",null,null],[12,"chunk_limit","","",27,null],[12,"client_commit_timeout_ms","","",27,null],[12,"long_poll_timeout_ms","","",27,null],[12,"max_chunk_limit","","",27,null],[12,"max_timeout_ms","","",27,null],[12,"mempool_commit_timeout_ms","","",27,null],[12,"multicast_timeout_ms","","",27,null],[12,"sync_request_timeout_ms","","",27,null],[12,"tick_interval_ms","","",27,null],[3,"RocksdbConfig","","Port selected RocksDB options for tuning underlying …",null,null],[12,"max_open_files","","",28,null],[12,"max_total_wal_size","","",28,null],[3,"StorageConfig","","",null,null],[12,"address","","",29,null],[12,"backup_service_address","","",29,null],[12,"dir","","",29,null],[12,"grpc_max_receive_len","","",29,null],[12,"prune_window","","None disables pruning. The windows is in number of …",29,null],[12,"timeout_ms","","Read, Write, Connect timeout for network operations in …",29,null],[12,"rocksdb_config","","Rocksdb-specific configurations",29,null],[3,"SafetyRulesConfig","","",null,null],[12,"backend","","",30,null],[12,"logger","","",30,null],[12,"service","","",30,null],[12,"test","","",30,null],[12,"verify_vote_proposal_signature","","",30,null],[12,"export_consensus_key","","",30,null],[12,"network_timeout_ms","","",30,null],[12,"enable_cached_safety_data","","",30,null],[4,"SafetyRulesService","","Defines how safety rules should be executed",null,null],[13,"Local","","This runs safety rules in the same thread as event …",31,null],[13,"Process","","This is the production, separate service approach",31,null],[13,"Serializer","","This runs safety rules in the same thread as event …",31,null],[13,"Thread","","This creates a separate thread to run safety rules, it is …",31,null],[3,"RemoteService","","",null,null],[12,"server_address","","",32,null],[3,"SafetyRulesTestConfig","","",null,null],[12,"author","","",33,null],[12,"consensus_key","","",33,null],[12,"execution_key","","",33,null],[12,"waypoint","","",33,null],[3,"UpstreamConfig","","If a node considers a network \'upstream\', the node will …",null,null],[12,"networks","","",34,null],[3,"PeerNetworkId","","Identifier of a node, represented as (network_id, peer_id)",null,null],[12,"0","","",35,null],[12,"1","","",35,null],[3,"TestConfig","","",null,null],[12,"auth_key","","",36,null],[12,"operator_key","","",36,null],[12,"owner_key","","",36,null],[12,"execution_key","","",36,null],[12,"publishing_option","","",36,null],[3,"NodeConfig","","Config pulls in configuration information from the config …",null,null],[12,"base","","",37,null],[12,"consensus","","",37,null],[12,"debug_interface","","",37,null],[12,"execution","","",37,null],[12,"full_node_networks","","",37,null],[12,"logger","","",37,null],[12,"metrics","","",37,null],[12,"mempool","","",37,null],[12,"json_rpc","","",37,null],[12,"state_sync","","",37,null],[12,"storage","","",37,null],[12,"test","","",37,null],[12,"upstream","","",37,null],[12,"validator_network","","",37,null],[12,"failpoints","","",37,null],[3,"BaseConfig","","",null,null],[12,"role","","",38,null],[12,"waypoint","","",38,null],[4,"WaypointConfig","","",null,null],[13,"FromConfig","","",39,null],[13,"FromFile","","",39,null],[13,"FromStorage","","",39,null],[13,"None","","",39,null],[11,"waypoint_from_config","","",39,[[],[["option",4],["waypoint",3]]]],[11,"waypoint","","",39,[[],["waypoint",3]]],[11,"genesis_waypoint","","",39,[[],["waypoint",3]]],[4,"RoleType","","",null,null],[13,"Validator","","",40,null],[13,"FullNode","","",40,null],[11,"is_validator","","",40,[[]]],[11,"as_str","","",40,[[]]],[3,"ParseRoleError","","",null,null],[11,"data_dir","","",37,[[],["pathbuf",3]]],[11,"set_data_dir","","",37,[[["pathbuf",3]]]],[11,"load","","Reads the config file and returns the configuration …",37,[[["asref",8],["path",3]],[["error",4],["result",4]]]],[11,"save","","",37,[[["asref",8],["path",3]],[["result",4],["error",4]]]],[11,"randomize_ports","","",37,[[]]],[11,"random","","",37,[[]]],[11,"random_with_template","","",37,[[["stdrng",3]]]],[11,"default_for_public_full_node","","",37,[[]]],[11,"default_for_validator","","",37,[[]]],[11,"default_for_validator_full_node","","",37,[[]]],[8,"PersistableConfig","","",null,null],[11,"load_config","","",41,[[["asref",8],["path",3]],[["error",4],["result",4]]]],[11,"save_config","","",41,[[["asref",8],["path",3]],[["result",4],["error",4]]]],[11,"parse","","",41,[[],[["error",4],["result",4]]]],[3,"RootPath","","",null,null],[11,"new","","",42,[[["asref",8],["path",3]]]],[11,"new_path","","This function assumes that the path is already a directory",42,[[["asref",8],["path",3]]]],[11,"full_path","","This adds a full path when loading / storing if one is …",42,[[["pathbuf",3]],["pathbuf",3]]],[0,"generator","diem_config","Convenience structs and functions for generating a random …",null,null],[3,"ValidatorSwarm","diem_config::generator","",null,null],[12,"nodes","","",43,null],[5,"validator_swarm","","",null,[[["nodeconfig",3]],["validatorswarm",3]]],[5,"validator_swarm_for_testing","","",null,[[],["validatorswarm",3]]],[5,"build_seed_for_network","","Convenience function that builds a <code>PeerSet</code> containing a …",null,[[["networkconfig",3]],["peerset",6]]],[0,"keys","diem_config","This file implements a KeyPair data structure.",null,null],[3,"ConfigKey","diem_config::keys","ConfigKey places a clonable wrapper around PrivateKeys …",null,null],[11,"private_key","","",44,[[]]],[11,"public_key","","",44,[[]]],[0,"network_id","diem_config","",null,null],[3,"NetworkContext","diem_config::network_id","A grouping of common information between all networking …",null,null],[11,"new","","",45,[[["peerid",3],["roletype",4],["networkid",4]],["networkcontext",3]]],[11,"role","","",45,[[],["roletype",4]]],[11,"network_id","","",45,[[],["networkid",4]]],[11,"peer_id","","",45,[[],["peerid",3]]],[11,"mock_with_peer_id","","",45,[[["peerid",3]],["arc",3]]],[11,"mock","","",45,[[],["arc",3]]],[4,"NetworkId","","A representation of the network being used in …",null,null],[13,"Validator","","",46,null],[13,"Public","","",46,null],[13,"Private","","",46,null],[3,"NodeNetworkId","","An intra-node identifier for a network of a node unique …",null,null],[11,"new","","",47,[[["networkid",4]]]],[11,"network_id","","",47,[[],["networkid",4]]],[11,"vfn_network","","Convenience function to specify the VFN network",46,[[],["networkid",4]]],[11,"is_vfn_network","","",46,[[]]],[11,"is_validator_network","","",46,[[]]],[11,"p2p_roles","","Roles for P2P relationships",46,[[["roletype",4]]]],[11,"upstream_roles","","Roles for a prioritization of relative upstreams",46,[[["roletype",4]]]],[11,"downstream_roles","","Roles for a prioritization of relative downstreams",46,[[["roletype",4]]]],[11,"is_p2p_role","","",46,[[["peerrole",4],["roletype",4]]]],[11,"is_upstream_role","","",46,[[["peerrole",4],["roletype",4]]]],[11,"is_downstream_role","","",46,[[["peerrole",4],["roletype",4]]]],[11,"as_str","","",46,[[]]],[0,"utils","diem_config","",null,null],[5,"default_validator_owner_auth_key_from_name","diem_config::utils","",null,[[],["authenticationkey",3]]],[5,"validator_owner_account_from_name","","",null,[[],["accountaddress",3]]],[5,"get_available_port","","Return an ephemeral, available port. On unix systems, the …",null,[[]]],[5,"get_local_ip","","Extracts one local non-loopback IP address, if one …",null,[[],[["option",4],["networkaddress",3]]]],[5,"get_available_port_in_multiaddr","","",null,[[],["networkaddress",3]]],[5,"get_genesis_txn","","",null,[[["nodeconfig",3]],[["option",4],["transaction",4]]]],[11,"from","diem_config::config","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"equivalent","","",1,[[]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"equivalent","","",2,[[]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"erased_serialize","","",3,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"test_only_hash","","",4,[[],["hashvalue",3]]],[11,"erased_serialize","","",4,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"test_only_hash","","",6,[[],["hashvalue",3]]],[11,"erased_serialize","","",6,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"test_only_hash","","",7,[[],["hashvalue",3]]],[11,"erased_serialize","","",7,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"test_only_hash","","",8,[[],["hashvalue",3]]],[11,"erased_serialize","","",8,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"test_only_hash","","",9,[[],["hashvalue",3]]],[11,"erased_serialize","","",9,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"test_only_hash","","",10,[[],["hashvalue",3]]],[11,"erased_serialize","","",10,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"test_only_hash","","",11,[[],["hashvalue",3]]],[11,"erased_serialize","","",11,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"test_only_hash","","",12,[[],["hashvalue",3]]],[11,"erased_serialize","","",12,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"test_only_hash","","",13,[[],["hashvalue",3]]],[11,"erased_serialize","","",13,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"test_only_hash","","",14,[[],["hashvalue",3]]],[11,"equivalent","","",14,[[]]],[11,"erased_serialize","","",14,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"test_only_hash","","",15,[[],["hashvalue",3]]],[11,"erased_serialize","","",15,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"test_only_hash","","",16,[[],["hashvalue",3]]],[11,"erased_serialize","","",16,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"test_only_hash","","",17,[[],["hashvalue",3]]],[11,"erased_serialize","","",17,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"test_only_hash","","",18,[[],["hashvalue",3]]],[11,"equivalent","","",18,[[]]],[11,"erased_serialize","","",18,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"test_only_hash","","",19,[[],["hashvalue",3]]],[11,"equivalent","","",19,[[]]],[11,"erased_serialize","","",19,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"test_only_hash","","",20,[[],["hashvalue",3]]],[11,"erased_serialize","","",20,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"test_only_hash","","",21,[[],["hashvalue",3]]],[11,"erased_serialize","","",21,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"test_only_hash","","",22,[[],["hashvalue",3]]],[11,"erased_serialize","","",22,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"test_only_hash","","",23,[[],["hashvalue",3]]],[11,"erased_serialize","","",23,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"test_only_hash","","",24,[[],["hashvalue",3]]],[11,"erased_serialize","","",24,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"test_only_hash","","",25,[[],["hashvalue",3]]],[11,"erased_serialize","","",25,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"test_only_hash","","",26,[[],["hashvalue",3]]],[11,"erased_serialize","","",26,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"test_only_hash","","",48,[[],["hashvalue",3]]],[11,"erased_serialize","","",48,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"test_only_hash","","",49,[[],["hashvalue",3]]],[11,"erased_serialize","","",49,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"test_only_hash","","",27,[[],["hashvalue",3]]],[11,"erased_serialize","","",27,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"test_only_hash","","",28,[[],["hashvalue",3]]],[11,"erased_serialize","","",28,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"test_only_hash","","",29,[[],["hashvalue",3]]],[11,"erased_serialize","","",29,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"test_only_hash","","",30,[[],["hashvalue",3]]],[11,"erased_serialize","","",30,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"test_only_hash","","",31,[[],["hashvalue",3]]],[11,"erased_serialize","","",31,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"test_only_hash","","",32,[[],["hashvalue",3]]],[11,"erased_serialize","","",32,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"test_only_hash","","",33,[[],["hashvalue",3]]],[11,"erased_serialize","","",33,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"test_only_hash","","",34,[[],["hashvalue",3]]],[11,"erased_serialize","","",34,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"test_only_hash","","",35,[[],["hashvalue",3]]],[11,"equivalent","","",35,[[]]],[11,"erased_serialize","","",35,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"test_only_hash","","",36,[[],["hashvalue",3]]],[11,"erased_serialize","","",36,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"test_only_hash","","",37,[[],["hashvalue",3]]],[11,"erased_serialize","","",37,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"test_only_hash","","",38,[[],["hashvalue",3]]],[11,"erased_serialize","","",38,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"test_only_hash","","",39,[[],["hashvalue",3]]],[11,"erased_serialize","","",39,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"test_only_hash","","",40,[[],["hashvalue",3]]],[11,"equivalent","","",40,[[]]],[11,"erased_serialize","","",40,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","diem_config::generator","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","diem_config::keys","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"test_only_hash","","",44,[[],["hashvalue",3]]],[11,"erased_serialize","","",44,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","diem_config::network_id","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"test_only_hash","","",45,[[],["hashvalue",3]]],[11,"equivalent","","",45,[[]]],[11,"erased_serialize","","",45,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"test_only_hash","","",46,[[],["hashvalue",3]]],[11,"equivalent","","",46,[[]]],[11,"erased_serialize","","",46,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"test_only_hash","","",47,[[],["hashvalue",3]]],[11,"equivalent","","",47,[[]]],[11,"erased_serialize","","",47,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"clone","diem_config::config","",0,[[],["consensusconfig",3]]],[11,"clone","","",1,[[],["consensusproposertype",4]]],[11,"clone","","",2,[[],["leaderreputationconfig",3]]],[11,"clone","","",3,[[],["debuginterfaceconfig",3]]],[11,"clone","","",4,[[],["diemtraceconfig",3]]],[11,"clone","","",6,[[],["executionconfig",3]]],[11,"clone","","",7,[[],["executioncorrectnessservice",4]]],[11,"clone","","",8,[[],["remoteexecutionservice",3]]],[11,"clone","","",9,[[],["keymanagerconfig",3]]],[11,"clone","","",10,[[],["loggerconfig",3]]],[11,"clone","","",11,[[],["metricsconfig",3]]],[11,"clone","","",12,[[],["mempoolconfig",3]]],[11,"clone","","",13,[[],["networkconfig",3]]],[11,"clone","","",14,[[],["discoverymethod",4]]],[11,"clone","","",15,[[],["identity",4]]],[11,"clone","","",16,[[],["identityfromconfig",3]]],[11,"clone","","",17,[[],["identityfromstorage",3]]],[11,"clone","","",18,[[],["ratelimitconfig",3]]],[11,"clone","","",19,[[],["peerrole",4]]],[11,"clone","","",20,[[],["peer",3]]],[11,"clone","","",21,[[],["jsonrpcconfig",3]]],[11,"clone","","",22,[[],["securebackend",4]]],[11,"clone","","",23,[[],["githubconfig",3]]],[11,"clone","","",24,[[],["vaultconfig",3]]],[11,"clone","","",25,[[],["ondiskstorageconfig",3]]],[11,"clone","","",26,[[],["token",4]]],[11,"clone","","",48,[[],["tokenfromconfig",3]]],[11,"clone","","",49,[[],["tokenfromdisk",3]]],[11,"clone","","",27,[[],["statesyncconfig",3]]],[11,"clone","","",28,[[],["rocksdbconfig",3]]],[11,"clone","","",29,[[],["storageconfig",3]]],[11,"clone","","",30,[[],["safetyrulesconfig",3]]],[11,"clone","","",31,[[],["safetyrulesservice",4]]],[11,"clone","","",32,[[],["remoteservice",3]]],[11,"clone","","",33,[[],["safetyrulestestconfig",3]]],[11,"clone","","",34,[[],["upstreamconfig",3]]],[11,"clone","","",35,[[],["peernetworkid",3]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[],["nodeconfig",3]]],[11,"clone","","",38,[[],["baseconfig",3]]],[11,"clone","","",39,[[],["waypointconfig",4]]],[11,"clone","","",40,[[],["roletype",4]]],[11,"clone","diem_config::keys","",44,[[]]],[11,"clone","diem_config::network_id","",45,[[],["networkcontext",3]]],[11,"clone","","",46,[[],["networkid",4]]],[11,"clone","","",47,[[],["nodenetworkid",3]]],[11,"default","diem_config::config","",0,[[],["consensusconfig",3]]],[11,"default","","",3,[[],["debuginterfaceconfig",3]]],[11,"default","","",4,[[],["diemtraceconfig",3]]],[11,"default","","",6,[[],["executionconfig",3]]],[11,"default","","",9,[[],["keymanagerconfig",3]]],[11,"default","","",10,[[],["loggerconfig",3]]],[11,"default","","",11,[[],["metricsconfig",3]]],[11,"default","","",12,[[],["mempoolconfig",3]]],[11,"default","","",13,[[]]],[11,"default","","",18,[[]]],[11,"default","","Default to least trusted",19,[[]]],[11,"default","","",20,[[],["peer",3]]],[11,"default","","",21,[[],["jsonrpcconfig",3]]],[11,"default","","",25,[[]]],[11,"default","","",27,[[]]],[11,"default","","",28,[[]]],[11,"default","","",29,[[],["storageconfig",3]]],[11,"default","","",30,[[]]],[11,"default","","",34,[[],["upstreamconfig",3]]],[11,"default","","",36,[[],["testconfig",3]]],[11,"default","","",37,[[],["nodeconfig",3]]],[11,"default","","",38,[[],["baseconfig",3]]],[11,"default","diem_config::network_id","",46,[[],["networkid",4]]],[11,"cmp","diem_config::config","",19,[[["peerrole",4]],["ordering",4]]],[11,"cmp","diem_config::network_id","",46,[[],["ordering",4]]],[11,"eq","diem_config::config","",0,[[["consensusconfig",3]]]],[11,"ne","","",0,[[["consensusconfig",3]]]],[11,"eq","","",1,[[["consensusproposertype",4]]]],[11,"ne","","",1,[[["consensusproposertype",4]]]],[11,"eq","","",2,[[["leaderreputationconfig",3]]]],[11,"ne","","",2,[[["leaderreputationconfig",3]]]],[11,"eq","","",3,[[["debuginterfaceconfig",3]]]],[11,"ne","","",3,[[["debuginterfaceconfig",3]]]],[11,"eq","","",4,[[["diemtraceconfig",3]]]],[11,"ne","","",4,[[["diemtraceconfig",3]]]],[11,"eq","","",6,[[["executionconfig",3]]]],[11,"ne","","",6,[[["executionconfig",3]]]],[11,"eq","","",7,[[["executioncorrectnessservice",4]]]],[11,"ne","","",7,[[["executioncorrectnessservice",4]]]],[11,"eq","","",8,[[["remoteexecutionservice",3]]]],[11,"ne","","",8,[[["remoteexecutionservice",3]]]],[11,"eq","","",9,[[["keymanagerconfig",3]]]],[11,"ne","","",9,[[["keymanagerconfig",3]]]],[11,"eq","","",10,[[["loggerconfig",3]]]],[11,"ne","","",10,[[["loggerconfig",3]]]],[11,"eq","","",11,[[["metricsconfig",3]]]],[11,"ne","","",11,[[["metricsconfig",3]]]],[11,"eq","","",12,[[["mempoolconfig",3]]]],[11,"ne","","",12,[[["mempoolconfig",3]]]],[11,"eq","","",13,[[["networkconfig",3]]]],[11,"ne","","",13,[[["networkconfig",3]]]],[11,"eq","","",14,[[["discoverymethod",4]]]],[11,"eq","","",15,[[["identity",4]]]],[11,"ne","","",15,[[["identity",4]]]],[11,"eq","","",16,[[["identityfromconfig",3]]]],[11,"ne","","",16,[[["identityfromconfig",3]]]],[11,"eq","","",17,[[["identityfromstorage",3]]]],[11,"ne","","",17,[[["identityfromstorage",3]]]],[11,"eq","","",18,[[["ratelimitconfig",3]]]],[11,"ne","","",18,[[["ratelimitconfig",3]]]],[11,"eq","","",19,[[["peerrole",4]]]],[11,"eq","","",20,[[["peer",3]]]],[11,"ne","","",20,[[["peer",3]]]],[11,"eq","","",21,[[["jsonrpcconfig",3]]]],[11,"ne","","",21,[[["jsonrpcconfig",3]]]],[11,"eq","","",22,[[["securebackend",4]]]],[11,"ne","","",22,[[["securebackend",4]]]],[11,"eq","","",23,[[["githubconfig",3]]]],[11,"ne","","",23,[[["githubconfig",3]]]],[11,"eq","","",24,[[["vaultconfig",3]]]],[11,"ne","","",24,[[["vaultconfig",3]]]],[11,"eq","","",25,[[["ondiskstorageconfig",3]]]],[11,"ne","","",25,[[["ondiskstorageconfig",3]]]],[11,"eq","","",26,[[["token",4]]]],[11,"ne","","",26,[[["token",4]]]],[11,"eq","","",48,[[["tokenfromconfig",3]]]],[11,"ne","","",48,[[["tokenfromconfig",3]]]],[11,"eq","","",49,[[["tokenfromdisk",3]]]],[11,"ne","","",49,[[["tokenfromdisk",3]]]],[11,"eq","","",27,[[["statesyncconfig",3]]]],[11,"ne","","",27,[[["statesyncconfig",3]]]],[11,"eq","","",28,[[["rocksdbconfig",3]]]],[11,"ne","","",28,[[["rocksdbconfig",3]]]],[11,"eq","","",29,[[["storageconfig",3]]]],[11,"ne","","",29,[[["storageconfig",3]]]],[11,"eq","","",30,[[["safetyrulesconfig",3]]]],[11,"ne","","",30,[[["safetyrulesconfig",3]]]],[11,"eq","","",31,[[["safetyrulesservice",4]]]],[11,"ne","","",31,[[["safetyrulesservice",4]]]],[11,"eq","","",32,[[["remoteservice",3]]]],[11,"ne","","",32,[[["remoteservice",3]]]],[11,"eq","","",33,[[["safetyrulestestconfig",3]]]],[11,"ne","","",33,[[["safetyrulestestconfig",3]]]],[11,"eq","","",34,[[["upstreamconfig",3]]]],[11,"ne","","",34,[[["upstreamconfig",3]]]],[11,"eq","","",35,[[["peernetworkid",3]]]],[11,"ne","","",35,[[["peernetworkid",3]]]],[11,"eq","","",36,[[]]],[11,"eq","","",37,[[["nodeconfig",3]]]],[11,"ne","","",37,[[["nodeconfig",3]]]],[11,"eq","","",38,[[["baseconfig",3]]]],[11,"ne","","",38,[[["baseconfig",3]]]],[11,"eq","","",39,[[["waypointconfig",4]]]],[11,"ne","","",39,[[["waypointconfig",4]]]],[11,"eq","","",40,[[["roletype",4]]]],[11,"eq","diem_config::keys","",44,[[]]],[11,"eq","diem_config::network_id","",45,[[["networkcontext",3]]]],[11,"ne","","",45,[[["networkcontext",3]]]],[11,"eq","","",46,[[["networkid",4]]]],[11,"ne","","",46,[[["networkid",4]]]],[11,"eq","","",47,[[["nodenetworkid",3]]]],[11,"ne","","",47,[[["nodenetworkid",3]]]],[11,"partial_cmp","diem_config::config","",19,[[["peerrole",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","diem_config::network_id","Generalized ordering for determining which network is the …",46,[[],[["option",4],["ordering",4]]]],[11,"fmt","diem_config::config","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","diem_config::keys","",44,[[["formatter",3]],["result",6]]],[11,"fmt","diem_config::network_id","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","diem_config::config","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","diem_config::network_id","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"hash","diem_config::config","",19,[[]]],[11,"hash","","",35,[[]]],[11,"hash","diem_config::network_id","",46,[[]]],[11,"hash","","",47,[[]]],[11,"from_str","diem_config::config","",40,[[],["result",4]]],[11,"source","","",5,[[],[["option",4],["error",8]]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","","",14,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","","",17,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"serialize","","",19,[[],["result",4]]],[11,"serialize","","",20,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","","",22,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"serialize","","",24,[[],["result",4]]],[11,"serialize","","",25,[[],["result",4]]],[11,"serialize","","",26,[[],["result",4]]],[11,"serialize","","",48,[[],["result",4]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","","",27,[[],["result",4]]],[11,"serialize","","",28,[[],["result",4]]],[11,"serialize","","",29,[[],["result",4]]],[11,"serialize","","",30,[[],["result",4]]],[11,"serialize","","",31,[[],["result",4]]],[11,"serialize","","",32,[[],["result",4]]],[11,"serialize","","",33,[[],["result",4]]],[11,"serialize","","",34,[[],["result",4]]],[11,"serialize","","",35,[[],["result",4]]],[11,"serialize","","",36,[[],["result",4]]],[11,"serialize","","",37,[[],["result",4]]],[11,"serialize","","",38,[[],["result",4]]],[11,"serialize","","",39,[[],["result",4]]],[11,"serialize","","",40,[[],["result",4]]],[11,"serialize","diem_config::keys","",44,[[],["result",4]]],[11,"serialize","diem_config::network_id","",45,[[],["result",4]]],[11,"serialize","","",46,[[],["result",4]]],[11,"serialize","","",47,[[],["result",4]]],[11,"deserialize","diem_config::config","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"deserialize","","",14,[[],["result",4]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"deserialize","","",16,[[],["result",4]]],[11,"deserialize","","",17,[[],["result",4]]],[11,"deserialize","","",18,[[],["result",4]]],[11,"deserialize","","",19,[[],["result",4]]],[11,"deserialize","","",20,[[],["result",4]]],[11,"deserialize","","",21,[[],["result",4]]],[11,"deserialize","","",22,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"deserialize","","",24,[[],["result",4]]],[11,"deserialize","","",25,[[],["result",4]]],[11,"deserialize","","",26,[[],["result",4]]],[11,"deserialize","","",48,[[],["result",4]]],[11,"deserialize","","",49,[[],["result",4]]],[11,"deserialize","","",27,[[],["result",4]]],[11,"deserialize","","",28,[[],["result",4]]],[11,"deserialize","","",29,[[],["result",4]]],[11,"deserialize","","",30,[[],["result",4]]],[11,"deserialize","","",31,[[],["result",4]]],[11,"deserialize","","",32,[[],["result",4]]],[11,"deserialize","","",33,[[],["result",4]]],[11,"deserialize","","",34,[[],["result",4]]],[11,"deserialize","","",35,[[],["result",4]]],[11,"deserialize","","",36,[[],["result",4]]],[11,"deserialize","","",37,[[],["result",4]]],[11,"deserialize","","",38,[[],["result",4]]],[11,"deserialize","","",39,[[],["result",4]]],[11,"deserialize","","",40,[[],["result",4]]],[11,"deserialize","diem_config::keys","",44,[[],["result",4]]],[11,"deserialize","diem_config::network_id","",46,[[],["result",4]]],[11,"deserialize","","",47,[[],["result",4]]],[11,"set_data_dir","diem_config::config","",0,[[["pathbuf",3]]]],[11,"randomize_ports","","",3,[[]]],[11,"load","","",6,[[["rootpath",3]],[["result",4],["error",4]]]],[11,"save","","",6,[[["rootpath",3]],[["result",4],["error",4]]]],[11,"set_data_dir","","",6,[[["pathbuf",3]]]],[11,"load","","Reads the key manager config file from the given …",9,[[["asref",8],["path",3]],[["error",4],["result",4]]]],[11,"save","","Saves the key manager config file to the given …",9,[[["asref",8],["path",3]],[["result",4],["error",4]]]],[11,"set_data_dir","","",9,[[["pathbuf",3]]]],[11,"dir","","",11,[[],["pathbuf",3]]],[11,"set_data_dir","","",11,[[["pathbuf",3]]]],[11,"network_with_id","","",13,[[["networkid",4]],["networkconfig",3]]],[11,"identity_key","","",13,[[],["privatekey",3]]],[11,"identity_from_storage","","",13,[[],["identityfromstorage",3]]],[11,"encryptor","","",13,[[],["encryptor",3]]],[11,"load_validator_network","","Per convenience, so that NetworkId isn\'t needed to be …",13,[[],[["result",4],["error",4]]]],[11,"load_fullnode_network","","",13,[[],[["result",4],["error",4]]]],[11,"peer_id","","",13,[[],["peerid",3]]],[11,"random","","",13,[[["stdrng",3]]]],[11,"random_with_peer_id","","",13,[[["peerid",3],["option",4],["stdrng",3]]]],[11,"verify_seeds","","",13,[[],[["result",4],["error",4]]]],[11,"from_config","","",15,[[["peerid",3],["privatekey",3]]]],[11,"from_storage","","",15,[[["string",3],["securebackend",4]]]],[11,"new","","Combines <code>Vec<NetworkAddress></code> keys with the <code>HashSet</code> given",20,[[["peerrole",4],["vec",3],["hashset",3],["publickey",3],["networkaddress",3]],["peer",3]]],[11,"extend","","Combines two <code>Peer</code>.  Note: Does not merge duplicate …",20,[[["peer",3]],[["result",4],["error",4]]]],[11,"from_addrs","","",20,[[["networkaddress",3],["vec",3],["peerrole",4]],["peer",3]]],[11,"randomize_ports","","",21,[[]]],[11,"ca_certificate","","",24,[[],[["error",4],["result",4],["string",3]]]],[11,"read_token","","",26,[[],[["error",4],["result",4],["string",3]]]],[11,"path","","",25,[[],["pathbuf",3]]],[11,"set_data_dir","","",25,[[["pathbuf",3]]]],[11,"dir","","",29,[[],["pathbuf",3]]],[11,"set_data_dir","","",29,[[["pathbuf",3]]]],[11,"randomize_ports","","",29,[[]]],[11,"set_data_dir","","",30,[[["pathbuf",3]]]],[11,"server_address","","",32,[[],["socketaddr",4]]],[11,"new","","",33,[[["peerid",3]]]],[11,"consensus_key","","",33,[[["ed25519privatekey",3]]]],[11,"execution_key","","",33,[[["ed25519privatekey",3]]]],[11,"random_consensus_key","","",33,[[["stdrng",3]]]],[11,"random_execution_key","","",33,[[["stdrng",3]]]],[11,"get_upstream_preference","","Returns the upstream network preference of a network …",34,[[["networkid",4]],["option",4]]],[11,"upstream_count","","Returns the number of upstream networks possible for a …",34,[[]]],[11,"network_id","","",35,[[],["nodenetworkid",3]]],[11,"raw_network_id","","",35,[[],["networkid",4]]],[11,"peer_id","","",35,[[],["peerid",3]]],[11,"random","","",35,[[]]],[11,"random_validator","","",35,[[]]],[11,"open_module","","",36,[[]]],[11,"new_with_temp_dir","","",36,[[["option",4],["temppath",3]]]],[11,"execution_key","","",36,[[["ed25519privatekey",3]]]],[11,"operator_key","","",36,[[["ed25519privatekey",3]]]],[11,"owner_key","","",36,[[["ed25519privatekey",3]]]],[11,"random_account_key","","",36,[[["stdrng",3]]]],[11,"random_execution_key","","",36,[[["stdrng",3]]]],[11,"temp_dir","","",36,[[],[["option",4],["path",3]]]]],"p":[[3,"ConsensusConfig"],[4,"ConsensusProposerType"],[3,"LeaderReputationConfig"],[3,"DebugInterfaceConfig"],[3,"DiemTraceConfig"],[4,"Error"],[3,"ExecutionConfig"],[4,"ExecutionCorrectnessService"],[3,"RemoteExecutionService"],[3,"KeyManagerConfig"],[3,"LoggerConfig"],[3,"MetricsConfig"],[3,"MempoolConfig"],[3,"NetworkConfig"],[4,"DiscoveryMethod"],[4,"Identity"],[3,"IdentityFromConfig"],[3,"IdentityFromStorage"],[3,"RateLimitConfig"],[4,"PeerRole"],[3,"Peer"],[3,"JsonRpcConfig"],[4,"SecureBackend"],[3,"GitHubConfig"],[3,"VaultConfig"],[3,"OnDiskStorageConfig"],[4,"Token"],[3,"StateSyncConfig"],[3,"RocksdbConfig"],[3,"StorageConfig"],[3,"SafetyRulesConfig"],[4,"SafetyRulesService"],[3,"RemoteService"],[3,"SafetyRulesTestConfig"],[3,"UpstreamConfig"],[3,"PeerNetworkId"],[3,"TestConfig"],[3,"NodeConfig"],[3,"BaseConfig"],[4,"WaypointConfig"],[4,"RoleType"],[8,"PersistableConfig"],[3,"RootPath"],[3,"ValidatorSwarm"],[3,"ConfigKey"],[3,"NetworkContext"],[4,"NetworkId"],[3,"NodeNetworkId"],[3,"TokenFromConfig"],[3,"TokenFromDisk"],[3,"ParseRoleError"]]},\
"diem_crypto":{"doc":"This feature gets turned on only if diem-crypto is …","i":[[0,"compat","diem_crypto","Wrapper structs for types that need RustCrypto traits …",null,null],[3,"Sha3_256","diem_crypto::compat","A wrapper for [<code>tiny_keccak::Sha3::v256</code>] that implements …",null,null],[0,"ed25519","diem_crypto","This module provides an API for the PureEdDSA signature …",null,null],[17,"ED25519_PRIVATE_KEY_LENGTH","diem_crypto::ed25519","The length of the Ed25519PrivateKey",null,null],[17,"ED25519_PUBLIC_KEY_LENGTH","","The length of the Ed25519PublicKey",null,null],[17,"ED25519_SIGNATURE_LENGTH","","The length of the Ed25519Signature",null,null],[3,"Ed25519PrivateKey","","An Ed25519 private key",null,null],[3,"Ed25519PublicKey","","An Ed25519 public key",null,null],[3,"Ed25519Signature","","An Ed25519 signature",null,null],[18,"LENGTH","","The length of the Ed25519PrivateKey",0,null],[11,"to_bytes","","Serialize an Ed25519PrivateKey.",0,[[]]],[11,"to_bytes","","Serialize an Ed25519PublicKey.",1,[[]]],[18,"LENGTH","","The length of the Ed25519Signature",2,null],[11,"to_bytes","","Serialize an Ed25519Signature.",2,[[]]],[11,"dummy_signature","","return an all-zero signature (for test only)",2,[[]]],[11,"check_malleability","","Check for correct size and third-party based signature …",2,[[],[["result",4],["cryptomaterialerror",4]]]],[5,"keypair_strategy","","Produces a uniformly random ed25519 keypair from a seed",null,[[]]],[0,"error","diem_crypto","Rexport the error types needed for the various crypto …",null,null],[14,"bail","diem_crypto::error","Return early with an error.",null,null],[3,"Error","","The <code>Error</code> type, a wrapper around a dynamic error type.",null,null],[0,"hash","diem_crypto","This module defines traits and implementations of …",null,null],[3,"HashValue","diem_crypto::hash","Output value of our hash function. Intentionally opaque …",null,null],[18,"LENGTH","","The length of the hash in bytes.",3,null],[18,"LENGTH_IN_BITS","","The length of the hash in bits.",3,null],[11,"new","","Create a new [<code>HashValue</code>] from a byte array.",3,[[]]],[11,"from_slice","","Create from a slice (e.g. retrieved from storage).",3,[[],["result",6]]],[11,"to_vec","","Dumps into a vector.",3,[[],["vec",3]]],[11,"zero","","Creates a zero-initialized instance.",3,[[]]],[11,"random","","Create a cryptographically random instance.",3,[[]]],[11,"random_with_rng","","Creates a random instance with given rng. Useful in unit …",3,[[]]],[11,"sha3_256_of","","Convenience function that computes a <code>HashValue</code> internally …",3,[[]]],[11,"iter_bits","","Returns a <code>HashValueBitIterator</code> over all the bits that …",3,[[],["hashvaluebititerator",3]]],[11,"from_bit_iter","","Constructs a <code>HashValue</code> from an iterator of bits.",3,[[],["result",6]]],[11,"common_prefix_bits_len","","Returns the length of common prefix of <code>self</code> and <code>other</code> in …",3,[[["hashvalue",3]]]],[11,"to_hex","","Full hex representation of a given hash value.",3,[[],["string",3]]],[11,"from_hex","","Parse a given hex string to a hash value.",3,[[],["result",6]]],[3,"HashValueBitIterator","","An iterator over <code>HashValue</code> that generates one bit for …",null,null],[8,"CryptoHash","","A type that can be cryptographically hashed to produce a …",null,null],[16,"Hasher","","The associated <code>Hasher</code> type which comes with a unique salt …",4,null],[10,"hash","","Hashes the object and produces a <code>HashValue</code>.",4,[[],["hashvalue",3]]],[8,"CryptoHasher","","A trait for representing the state of a cryptographic …",null,null],[10,"seed","","the seed used to initialize hashing <code>Self</code> before the …",5,[[]]],[10,"update","","Write bytes into the hasher.",5,[[]]],[10,"finish","","Finish constructing the [<code>HashValue</code>].",5,[[],["hashvalue",3]]],[3,"TransactionAccumulatorHasher","","The hasher used to compute the hash of an internal node …",null,null],[3,"EventAccumulatorHasher","","The hasher used to compute the hash of an internal node …",null,null],[3,"SparseMerkleInternalHasher","","The hasher used to compute the hash of an internal node …",null,null],[3,"VoteProposalHasher","","The hasher used to compute the hash of an internal node …",null,null],[3,"TestOnlyHasher","","The hasher used only for testing. It doesn\'t have a salt.",null,null],[7,"ACCUMULATOR_PLACEHOLDER_HASH","","Placeholder hash of <code>Accumulator</code>.",null,null],[7,"SPARSE_MERKLE_PLACEHOLDER_HASH","","Placeholder hash of <code>SparseMerkleTree</code>.",null,null],[7,"PRE_GENESIS_BLOCK_ID","","Block id reserved as the id of parent block of the …",null,null],[7,"GENESIS_BLOCK_ID","","Genesis block id is used as a parent of the very first …",null,null],[8,"TestOnlyHash","","Provides a test_only_hash() method that can be used in …",null,null],[10,"test_only_hash","","Generates a hash used only for tests.",6,[[],["hashvalue",3]]],[0,"hkdf","diem_crypto","An implementation of HKDF, the HMAC-based …",null,null],[3,"Hkdf","diem_crypto::hkdf","Structure representing the HKDF, capable of HKDF-Extract …",null,null],[11,"extract","","The RFC5869 HKDF-Extract operation.",7,[[["option",4]],[["vec",3],["result",4],["hkdferror",4]]]],[11,"expand","","The RFC5869 HKDF-Expand operation.",7,[[["option",4]],[["vec",3],["result",4],["hkdferror",4]]]],[11,"extract_then_expand","","HKDF Extract then Expand operation as a single step.",7,[[["option",4]],[["vec",3],["result",4],["hkdferror",4]]]],[4,"HkdfError","","An error type for HKDF key derivation issues.",null,null],[13,"InvalidOutputLengthError","","HKDF expand output exceeds the maximum allowed or is zero.",8,null],[13,"WrongPseudorandomKeyError","","PRK on HKDF-Expand should not be less than the underlying …",8,null],[13,"MACKeyError","","HMAC key related error; unlikely to happen because every …",8,null],[0,"multi_ed25519","diem_crypto","This module provides an API for the accountable threshold …",null,null],[3,"MultiEd25519PrivateKey","diem_crypto::multi_ed25519","Vector of private keys in the multi-key Ed25519 structure …",null,null],[3,"MultiEd25519PublicKey","","Vector of public keys in the multi-key Ed25519 structure …",null,null],[3,"MultiEd25519Signature","","Vector of the multi-key signatures along with a 32bit […",null,null],[11,"new","","Construct a new MultiEd25519PrivateKey.",9,[[["ed25519privatekey",3],["vec",3]],[["cryptomaterialerror",4],["result",4]]]],[11,"to_bytes","","Serialize a MultiEd25519PrivateKey.",9,[[],["vec",3]]],[11,"new","","Construct a new MultiEd25519PublicKey. --- Rules --- a) …",10,[[["vec",3],["ed25519publickey",3]],[["cryptomaterialerror",4],["result",4]]]],[11,"public_keys","","Getter public_keys",10,[[],["vec",3]]],[11,"threshold","","Getter threshold",10,[[]]],[11,"to_bytes","","Serialize a MultiEd25519PublicKey.",10,[[],["vec",3]]],[11,"new","","This method will also sort signatures based on index.",11,[[["vec",3]],[["cryptomaterialerror",4],["result",4]]]],[11,"signatures","","Getter signatures.",11,[[],["vec",3]]],[11,"bitmap","","Getter bitmap.",11,[[]]],[11,"to_bytes","","Serialize a MultiEd25519Signature in the form of …",11,[[],["vec",3]]],[0,"noise","diem_crypto","Noise is a protocol framework which we use in Diem to …",null,null],[17,"MAX_SIZE_NOISE_MSG","diem_crypto::noise","A noise message cannot be larger than 65535 bytes as per …",null,null],[17,"AES_GCM_TAGLEN","","The authentication tag length of AES-GCM.",null,null],[5,"encrypted_len","","A handy const fn to get the expanded size of a plaintext …",null,[[]]],[5,"decrypted_len","","A handy const fn to get the size of a plaintext from a …",null,[[]]],[5,"handshake_init_msg_len","","A handy const fn to get the size of the first handshake …",null,[[]]],[5,"handshake_resp_msg_len","","A handy const fn to get the size of the second handshake …",null,[[]]],[4,"NoiseError","","A NoiseError enum represents the different types of error …",null,null],[13,"MsgTooShort","","the received message is too short to contain the expected …",12,null],[13,"Hkdf","","HKDF has failed (in practice there is no reason for HKDF …",12,null],[13,"Encrypt","","encryption has failed (in practice there is no reason for …",12,null],[13,"Decrypt","","could not decrypt the received data (most likely the data …",12,null],[13,"WrongPublicKeyReceived","","the public key received is of the wrong format",12,null],[13,"SessionClosed","","session was closed due to decrypt error",12,null],[13,"PayloadTooLarge","","the payload that we are trying to send is too large",12,null],[13,"ReceivedMsgTooLarge","","the message we received is too large",12,null],[13,"ResponseBufferTooSmall","","the response buffer passed as argument is too small",12,null],[13,"NonceOverflow","","the nonce exceeds the maximum u64 value (in practice this …",12,null],[3,"NoiseConfig","","A key holder structure used for both initiators and …",null,null],[3,"InitiatorHandshakeState","","Refer to the Noise protocol framework specification in …",null,null],[3,"ResponderHandshakeState","","Refer to the Noise protocol framework specification in …",null,null],[11,"new","","A peer must create a NoiseConfig through this function …",13,[[["privatekey",3]]]],[11,"public_key","","Handy getter to access the configuration\'s public key",13,[[],["publickey",3]]],[11,"initiate_connection","","An initiator can use this function to initiate a …",13,[[["option",4],["publickey",3]],[["initiatorhandshakestate",3],["noiseerror",4],["result",4]]]],[11,"finalize_connection","","A client can call this to finalize a connection, after …",13,[[["initiatorhandshakestate",3]],[["noiseerror",4],["result",4]]]],[11,"parse_client_init_message","","A responder can accept a connection by first parsing an …",13,[[],[["noiseerror",4],["result",4]]]],[11,"respond_to_client","","A responder can respond to an initiator by calling this …",13,[[["option",4],["responderhandshakestate",3]],[["noiseerror",4],["result",4],["noisesession",3]]]],[11,"respond_to_client_and_finalize","","This function is a one-call that replaces calling the two …",13,[[["option",4]],[["noiseerror",4],["result",4]]]],[3,"NoiseSession","","A NoiseSession is produced after a successful Noise …",null,null],[11,"new_for_testing","","create a dummy session with 0 keys",14,[[]]],[11,"get_remote_static","","obtain remote static public key",14,[[],["publickey",3]]],[11,"write_message_in_place","","encrypts a message for the other peers (post-handshake) …",14,[[],[["result",4],["vec",3],["noiseerror",4]]]],[11,"read_message_in_place","","decrypts a message from the other peer (post-handshake) …",14,[[],[["result",4],["noiseerror",4]]]],[0,"test_utils","diem_crypto","Internal module containing convenience utility functions …",null,null],[17,"TEST_SEED","diem_crypto::test_utils","A deterministic seed for PRNGs related to keys",null,null],[3,"KeyPair","","A keypair consisting of a private and public key",null,null],[12,"private_key","","the private key component",15,null],[12,"public_key","","the public key component",15,null],[5,"uniform_keypair_strategy","","Produces a uniformly random keypair from a seed",null,[[]]],[3,"TestDiemCrypto","","This struct provides a means of testing signing and …",null,null],[12,"0","","",16,null],[3,"TestDiemCryptoHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[5,"random_serializable_struct","","Produces a random TestDiemCrypto signable / verifiable …",null,[[]]],[0,"traits","diem_crypto","This module provides a generic set of traits for dealing …",null,null],[4,"CryptoMaterialError","diem_crypto::traits","An error type for key and signature validation issues, …",null,null],[13,"SerializationError","","Struct to be signed does not serialize correctly.",17,null],[13,"DeserializationError","","Key or signature material does not deserialize correctly.",17,null],[13,"ValidationError","","Key or signature material deserializes, but is otherwise …",17,null],[13,"WrongLengthError","","Key, threshold or signature material does not have the …",17,null],[13,"CanonicalRepresentationError","","Part of the signature or key is not canonical resulting …",17,null],[13,"SmallSubgroupError","","A curve point (i.e., a public key) lies on a small group.",17,null],[13,"PointNotOnCurveError","","A curve point (i.e., a public key) does not satisfy the …",17,null],[13,"BitVecError","","BitVec errors in accountable multi-sig schemes.",17,null],[8,"Length","","The serialized length of the data that enables macro …",null,null],[10,"length","","The serialized length of the data",18,[[]]],[8,"ValidCryptoMaterial","","Key or more generally crypto material with a notion of …",null,null],[10,"to_bytes","","Convert the valid crypto material to bytes.",19,[[],["vec",3]]],[8,"ValidCryptoMaterialStringExt","","An extension to to/from Strings for [<code>ValidCryptoMaterial</code>][…",null,null],[11,"from_encoded_string","","When trying to convert from bytes, we simply decode the …",20,[[],[["cryptomaterialerror",4],["result",4]]]],[11,"to_encoded_string","","A function to encode into hex-string after serializing.",20,[[],[["string",3],["result",6]]]],[8,"PrivateKey","","A type family for key material that should remain secret …",null,null],[16,"PublicKeyMaterial","","We require public / private types to be coupled, i.e. …",21,null],[11,"public_key","","Returns the associated public key",21,[[]]],[8,"SigningKey","","A type family of valid keys that know how to sign.",null,null],[16,"VerifyingKeyMaterial","","The associated verifying key type for this signing key.",22,null],[16,"SignatureMaterial","","The associated signature type for this signing key.",22,null],[10,"sign","","Signs an object that has an distinct domain-separation …",22,[[]]],[10,"sign_arbitrary_message","","Signs a non-hash input message. For testing only.",22,[[]]],[11,"verifying_key","","Returns the associated verifying key",22,[[]]],[8,"PublicKey","","A type for key material that can be publicly shared, and …",null,null],[16,"PrivateKeyMaterial","","We require public / private types to be coupled, i.e. …",23,null],[8,"VerifyingKey","","A type family of public keys that are used for signing.",null,null],[16,"SigningKeyMaterial","","The associated signing key type for this verifying key.",24,null],[16,"SignatureMaterial","","The associated signature type for this verifying key.",24,null],[11,"verify_struct_signature","","We provide the striaghtfoward implementation which …",24,[[],["result",6]]],[11,"batch_verify","","We provide the implementation which dispatches to the …",24,[[["vec",3]],["result",6]]],[8,"Signature","","A type family for signature material that knows which …",null,null],[16,"VerifyingKeyMaterial","","The associated verifying key type for this signature.",25,null],[16,"SigningKeyMaterial","","The associated signing key type for this signature",25,null],[10,"verify","","Verification for a struct we unabmiguously know how to …",25,[[],["result",6]]],[10,"verify_arbitrary_msg","","Native verification function.",25,[[],["result",6]]],[10,"to_bytes","","Convert the signature into a byte representation.",25,[[],["vec",3]]],[11,"batch_verify","","The implementer can override a batch verification …",25,[[["vec",3]],["result",6]]],[8,"Uniform","","A type family for schemes which know how to generate key …",null,null],[10,"generate","","Generate key material from an RNG. This should generally …",26,[[]]],[11,"generate_for_testing","","Generate a random key using the shared TEST_SEED",26,[[]]],[8,"Genesis","","A type family with a by-convention notion of genesis …",null,null],[10,"genesis","","Produces the genesis private key.",27,[[]]],[0,"x25519","diem_crypto","An abstraction of x25519 elliptic curve keys required for …",null,null],[17,"PRIVATE_KEY_SIZE","diem_crypto::x25519","Size of a X25519 private key",null,null],[17,"PUBLIC_KEY_SIZE","","Size of a X25519 public key",null,null],[17,"SHARED_SECRET_SIZE","","Size of a X25519 shared secret",null,null],[3,"PrivateKey","","This type should be used to deserialize a received …",null,null],[3,"PublicKey","","This type should be used to deserialize a received public …",null,null],[11,"public_key","","Obtain the public key part of a private key",28,[[],["publickey",3]]],[11,"diffie_hellman","","To perform a key exchange with another public key",28,[[["publickey",3]]]],[11,"from_ed25519_private_bytes","","Deserialize an X25119 PrivateKey given the sha512 …",28,[[],[["result",4],["cryptomaterialerror",4]]]],[11,"as_slice","","Obtain a slice reference to the underlying bytearray",29,[[]]],[11,"from_ed25519_public_bytes","","Deserialize an X25119 PublicKey from its representation …",29,[[],[["result",4],["cryptomaterialerror",4]]]],[5,"keypair_strategy","","Produces a uniformly random ed25519 keypair from a seed",null,[[]]],[11,"from","diem_crypto::compat","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"new","","",30,[[]]],[11,"update","","",30,[[]]],[11,"chain","","",30,[[]]],[11,"finalize","","",30,[[],["genericarray",3]]],[11,"finalize_reset","","",30,[[],["genericarray",3]]],[11,"reset","","",30,[[]]],[11,"output_size","","",30,[[]]],[11,"digest","","",30,[[],["genericarray",3]]],[11,"update","","",30,[[]]],[11,"finalize_reset","","",30,[[],[["box",3],["global",3]]]],[11,"finalize","","",30,[[["global",3],["box",3]],[["box",3],["global",3]]]],[11,"reset","","",30,[[]]],[11,"output_size","","",30,[[]]],[11,"box_clone","","",30,[[],[["dyndigest",8],["box",3],["global",3]]]],[11,"vzip","","",30,[[]]],[11,"test_only_hash","diem_crypto::ed25519","",0,[[],["hashvalue",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","diem_crypto::error","",31,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"test_only_hash","diem_crypto::hash","",3,[[],["hashvalue",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"into_iter","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","diem_crypto::hkdf","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"test_only_hash","diem_crypto::multi_ed25519","",9,[[],["hashvalue",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"test_only_hash","","",10,[[],["hashvalue",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"test_only_hash","","",11,[[],["hashvalue",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","diem_crypto::noise","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"test_only_hash","diem_crypto::test_utils","",15,[[],["hashvalue",3]]],[11,"from","","",15,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"test_only_hash","","",16,[[],["hashvalue",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","diem_crypto::traits","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"test_only_hash","diem_crypto::x25519","",28,[[],["hashvalue",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"test_only_hash","","",29,[[],["hashvalue",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"fmt","diem_crypto::error","",31,[[["formatter",3]],[["result",4],["error",3]]]],[11,"from","","",31,[[],["error",3]]],[11,"deref","","",31,[[]]],[11,"as_ref","","",31,[[],["error",8]]],[11,"as_ref","","",31,[[],["error",8]]],[11,"fmt","","",31,[[["formatter",3]],[["result",4],["error",3]]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"hash","diem_crypto::test_utils","",16,[[],["hashvalue",3]]],[11,"seed","diem_crypto::hash","",33,[[]]],[11,"update","","",33,[[]]],[11,"finish","","",33,[[],["hashvalue",3]]],[11,"seed","","",34,[[]]],[11,"update","","",34,[[]]],[11,"finish","","",34,[[],["hashvalue",3]]],[11,"seed","","",35,[[]]],[11,"update","","",35,[[]]],[11,"finish","","",35,[[],["hashvalue",3]]],[11,"seed","","",36,[[]]],[11,"update","","",36,[[]]],[11,"finish","","",36,[[],["hashvalue",3]]],[11,"seed","","",37,[[]]],[11,"update","","",37,[[]]],[11,"finish","","",37,[[],["hashvalue",3]]],[11,"seed","diem_crypto::test_utils","",40,[[]]],[11,"update","","",40,[[]]],[11,"finish","","",40,[[],["hashvalue",3]]],[11,"length","diem_crypto::ed25519","",0,[[]]],[11,"length","","",1,[[]]],[11,"length","","",2,[[]]],[11,"length","diem_crypto::multi_ed25519","",9,[[]]],[11,"length","","",10,[[]]],[11,"length","","",11,[[]]],[11,"to_bytes","diem_crypto::ed25519","",0,[[],["vec",3]]],[11,"to_bytes","","",1,[[],["vec",3]]],[11,"to_bytes","","",2,[[],["vec",3]]],[11,"to_bytes","diem_crypto::multi_ed25519","",9,[[],["vec",3]]],[11,"to_bytes","","",10,[[],["vec",3]]],[11,"to_bytes","","",11,[[],["vec",3]]],[11,"to_bytes","diem_crypto::x25519","",28,[[],["vec",3]]],[11,"to_bytes","","",29,[[],["vec",3]]],[11,"sign","diem_crypto::ed25519","",0,[[],["ed25519signature",3]]],[11,"sign_arbitrary_message","","",0,[[],["ed25519signature",3]]],[11,"sign","diem_crypto::multi_ed25519","",9,[[],["multied25519signature",3]]],[11,"sign_arbitrary_message","","",9,[[],["multied25519signature",3]]],[11,"verify","diem_crypto::ed25519","Verifies that the provided signature is valid for the …",2,[[["ed25519publickey",3]],["result",6]]],[11,"verify_arbitrary_msg","","Checks that <code>self</code> is valid for an arbitrary &[u8] <code>message</code> …",2,[[["ed25519publickey",3]],["result",6]]],[11,"to_bytes","","",2,[[],["vec",3]]],[11,"verify","diem_crypto::multi_ed25519","",11,[[["multied25519publickey",3]],["result",6]]],[11,"verify_arbitrary_msg","","Checks that <code>self</code> is valid for an arbitrary &[u8] <code>message</code> …",11,[[["multied25519publickey",3]],["result",6]]],[11,"to_bytes","","",11,[[],["vec",3]]],[11,"generate","diem_crypto::ed25519","",0,[[]]],[11,"generate","diem_crypto::multi_ed25519","",9,[[]]],[11,"generate","diem_crypto::test_utils","",15,[[]]],[11,"generate","diem_crypto::x25519","",28,[[]]],[11,"genesis","diem_crypto::ed25519","",0,[[]]],[11,"genesis","diem_crypto::multi_ed25519","",9,[[]]],[11,"as_ref","diem_crypto::hash","",3,[[]]],[11,"from","diem_crypto::ed25519","",1,[[["ed25519privatekey",3]]]],[11,"from","diem_crypto::multi_ed25519","",9,[[["ed25519privatekey",3]]]],[11,"from","","",10,[[["ed25519publickey",3]]]],[11,"from","","",10,[[["multied25519privatekey",3]]]],[11,"from","","",11,[[["ed25519signature",3]]]],[11,"from","diem_crypto::test_utils","",15,[[]]],[11,"from","diem_crypto::x25519","",28,[[]]],[11,"from","","",29,[[["privatekey",3]]]],[11,"from","","",29,[[]]],[11,"next_back","diem_crypto::hash","",32,[[],["option",4]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"clone","diem_crypto::compat","",30,[[],["sha3_256",3]]],[11,"clone","diem_crypto::ed25519","",0,[[]]],[11,"clone","","",1,[[],["ed25519publickey",3]]],[11,"clone","","",2,[[],["ed25519signature",3]]],[11,"clone","diem_crypto::hash","",3,[[],["hashvalue",3]]],[11,"clone","","",33,[[],["transactionaccumulatorhasher",3]]],[11,"clone","","",34,[[],["eventaccumulatorhasher",3]]],[11,"clone","","",35,[[],["sparsemerkleinternalhasher",3]]],[11,"clone","","",36,[[],["voteproposalhasher",3]]],[11,"clone","","",37,[[],["testonlyhasher",3]]],[11,"clone","diem_crypto::hkdf","",7,[[],["hkdf",3]]],[11,"clone","","",8,[[],["hkdferror",4]]],[11,"clone","diem_crypto::multi_ed25519","",10,[[],["multied25519publickey",3]]],[11,"clone","","",11,[[],["multied25519signature",3]]],[11,"clone","diem_crypto::test_utils","",15,[[],["keypair",3]]],[11,"clone","","",40,[[],["testdiemcryptohasher",3]]],[11,"clone","diem_crypto::traits","",17,[[],["cryptomaterialerror",4]]],[11,"clone","diem_crypto::x25519","",28,[[],["privatekey",3]]],[11,"clone","","",29,[[],["publickey",3]]],[11,"default","diem_crypto::compat","",30,[[]]],[11,"default","diem_crypto::hash","",3,[[]]],[11,"default","","",33,[[]]],[11,"default","","",34,[[]]],[11,"default","","",35,[[]]],[11,"default","","",36,[[]]],[11,"default","","",37,[[]]],[11,"default","diem_crypto::test_utils","",40,[[]]],[11,"default","diem_crypto::x25519","",29,[[],["publickey",3]]],[11,"cmp","diem_crypto::hash","",3,[[["hashvalue",3]],["ordering",4]]],[11,"cmp","diem_crypto::x25519","",29,[[["publickey",3]],["ordering",4]]],[11,"eq","diem_crypto::ed25519","",0,[[]]],[11,"eq","","",1,[[["ed25519publickey",3]]]],[11,"eq","","",2,[[["ed25519signature",3]]]],[11,"eq","diem_crypto::hash","",3,[[["hashvalue",3]]]],[11,"ne","","",3,[[["hashvalue",3]]]],[11,"eq","diem_crypto::hkdf","",8,[[["hkdferror",4]]]],[11,"eq","diem_crypto::multi_ed25519","",9,[[["multied25519privatekey",3]]]],[11,"ne","","",9,[[["multied25519privatekey",3]]]],[11,"eq","","",10,[[["multied25519publickey",3]]]],[11,"ne","","",10,[[["multied25519publickey",3]]]],[11,"eq","","",11,[[["multied25519signature",3]]]],[11,"ne","","",11,[[["multied25519signature",3]]]],[11,"eq","diem_crypto::test_utils","",15,[[["keypair",3]]]],[11,"ne","","",15,[[["keypair",3]]]],[11,"eq","diem_crypto::traits","",17,[[["cryptomaterialerror",4]]]],[11,"ne","","",17,[[["cryptomaterialerror",4]]]],[11,"eq","diem_crypto::x25519","",29,[[["publickey",3]]]],[11,"ne","","",29,[[["publickey",3]]]],[11,"eq","","",28,[[]]],[11,"partial_cmp","diem_crypto::hash","",3,[[["hashvalue",3]],[["option",4],["ordering",4]]]],[11,"lt","","",3,[[["hashvalue",3]]]],[11,"le","","",3,[[["hashvalue",3]]]],[11,"gt","","",3,[[["hashvalue",3]]]],[11,"ge","","",3,[[["hashvalue",3]]]],[11,"partial_cmp","diem_crypto::x25519","",29,[[["publickey",3]],[["option",4],["ordering",4]]]],[11,"lt","","",29,[[["publickey",3]]]],[11,"le","","",29,[[["publickey",3]]]],[11,"gt","","",29,[[["publickey",3]]]],[11,"ge","","",29,[[["publickey",3]]]],[11,"deref","diem_crypto::hash","",3,[[]]],[11,"fmt","diem_crypto::ed25519","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::hash","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::hkdf","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::multi_ed25519","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::noise","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::test_utils","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::traits","",17,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::x25519","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::ed25519","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::hash","",3,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::hkdf","",8,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::multi_ed25519","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::noise","",12,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::traits","",17,[[["formatter",3]],["result",6]]],[11,"fmt","diem_crypto::x25519","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"index","diem_crypto::hash","",3,[[]]],[11,"hash","diem_crypto::ed25519","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","diem_crypto::hash","",3,[[]]],[11,"hash","diem_crypto::multi_ed25519","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","diem_crypto::x25519","",29,[[]]],[11,"try_from","diem_crypto::ed25519","Deserialize an Ed25519PrivateKey. This method will also …",0,[[],[["cryptomaterialerror",4],["ed25519privatekey",3],["result",4]]]],[11,"try_from","","Deserialize an Ed25519PublicKey. This method will also …",1,[[],[["cryptomaterialerror",4],["result",4],["ed25519publickey",3]]]],[11,"try_from","","",2,[[],[["cryptomaterialerror",4],["result",4],["ed25519signature",3]]]],[11,"try_from","diem_crypto::multi_ed25519","Deserialize an Ed25519PrivateKey. This method will also …",9,[[],[["result",4],["cryptomaterialerror",4],["multied25519privatekey",3]]]],[11,"try_from","","Deserialize a MultiEd25519PublicKey. This method will …",10,[[],[["multied25519publickey",3],["cryptomaterialerror",4],["result",4]]]],[11,"try_from","","Deserialize a MultiEd25519Signature. This method will …",11,[[],[["cryptomaterialerror",4],["result",4],["multied25519signature",3]]]],[11,"try_from","diem_crypto::x25519","",28,[[],["result",4]]],[11,"try_from","","",29,[[],["result",4]]],[11,"from_str","diem_crypto::hash","",3,[[],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"write","","",33,[[],["result",6]]],[11,"flush","","",33,[[],["result",6]]],[11,"write","","",34,[[],["result",6]]],[11,"flush","","",34,[[],["result",6]]],[11,"write","","",35,[[],["result",6]]],[11,"flush","","",35,[[],["result",6]]],[11,"write","","",36,[[],["result",6]]],[11,"flush","","",36,[[],["result",6]]],[11,"write","","",37,[[],["result",6]]],[11,"flush","","",37,[[],["result",6]]],[11,"write","diem_crypto::test_utils","",40,[[],["result",6]]],[11,"flush","","",40,[[],["result",6]]],[11,"finalize_into","diem_crypto::compat","",30,[[["genericarray",3]]]],[11,"finalize_into_reset","","",30,[[["genericarray",3]]]],[11,"reset","","",30,[[]]],[11,"update","","",30,[[]]],[11,"serialize","diem_crypto::ed25519","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","diem_crypto::hash","",3,[[],["result",4]]],[11,"serialize","diem_crypto::multi_ed25519","",9,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","diem_crypto::test_utils","",15,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","diem_crypto::x25519","",28,[[],["result",4]]],[11,"serialize","","",29,[[],["result",4]]],[11,"deserialize","diem_crypto::ed25519","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","diem_crypto::hash","",3,[[],["result",4]]],[11,"deserialize","diem_crypto::multi_ed25519","",9,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","diem_crypto::test_utils","",15,[[],["result",4]]],[11,"deserialize","","",16,[[],["result",4]]],[11,"deserialize","diem_crypto::x25519","",28,[[],["result",4]]],[11,"deserialize","","",29,[[],["result",4]]],[11,"arbitrary_with","diem_crypto::ed25519","",1,[[]]],[11,"arbitrary_with","diem_crypto::hash","",3,[[]]],[11,"arbitrary_with","diem_crypto::x25519","",29,[[]]],[11,"arbitrary_with","","",28,[[]]],[11,"new","diem_crypto::error","Create a new error object from any error type.",31,[[],["error",3]]],[11,"msg","","Create a new error object from a printable error message.",31,[[],["error",3]]],[11,"context","","Wrap the error value with additional context.",31,[[],["error",3]]],[11,"backtrace","","Get the backtrace for this Error.",31,[[],["backtrace",3]]],[11,"chain","","An iterator of the chain of source errors contained by …",31,[[],["chain",3]]],[11,"root_cause","","The lowest level cause of this error — this error\'s …",31,[[],["error",8]]],[11,"is","","Returns true if <code>E</code> is the type held by this error object.",31,[[]]],[11,"downcast","","Attempt to downcast the error object to a concrete type.",31,[[],[["error",3],["result",4]]]],[11,"downcast_ref","","Downcast this error object by reference.",31,[[],["option",4]]],[11,"downcast_mut","","Downcast this error object by mutable reference.",31,[[],["option",4]]]],"p":[[3,"Ed25519PrivateKey"],[3,"Ed25519PublicKey"],[3,"Ed25519Signature"],[3,"HashValue"],[8,"CryptoHash"],[8,"CryptoHasher"],[8,"TestOnlyHash"],[3,"Hkdf"],[4,"HkdfError"],[3,"MultiEd25519PrivateKey"],[3,"MultiEd25519PublicKey"],[3,"MultiEd25519Signature"],[4,"NoiseError"],[3,"NoiseConfig"],[3,"NoiseSession"],[3,"KeyPair"],[3,"TestDiemCrypto"],[4,"CryptoMaterialError"],[8,"Length"],[8,"ValidCryptoMaterial"],[8,"ValidCryptoMaterialStringExt"],[8,"PrivateKey"],[8,"SigningKey"],[8,"PublicKey"],[8,"VerifyingKey"],[8,"Signature"],[8,"Uniform"],[8,"Genesis"],[3,"PrivateKey"],[3,"PublicKey"],[3,"Sha3_256"],[3,"Error"],[3,"HashValueBitIterator"],[3,"TransactionAccumulatorHasher"],[3,"EventAccumulatorHasher"],[3,"SparseMerkleInternalHasher"],[3,"VoteProposalHasher"],[3,"TestOnlyHasher"],[3,"InitiatorHandshakeState"],[3,"ResponderHandshakeState"],[3,"TestDiemCryptoHasher"]]},\
"diem_crypto_derive":{"doc":"Derive macros for crypto operationsThis crate contains …","i":[[24,"SilentDisplay","diem_crypto_derive","",null,null],[24,"SilentDebug","","",null,null],[24,"DeserializeKey","","Deserialize from a human readable format where applicable",null,null],[24,"SerializeKey","","Serialize into a human readable format where applicable",null,null],[24,"Deref","","",null,null],[24,"ValidCryptoMaterial","","",null,null],[24,"PublicKey","","",null,null],[24,"PrivateKey","","",null,null],[24,"VerifyingKey","","",null,null],[24,"SigningKey","","",null,null],[24,"Signature","","",null,null],[24,"CryptoHasher","","",null,null],[24,"BCSCryptoHash","","",null,null]],"p":[]},\
"diem_documentation_tool":{"doc":"","i":[[5,"quote_container_definitions","diem_documentation_tool","",null,[[["registry",6]],[["result",4],["btreemap",3],["box",3]]]],[5,"update_rust_quotes","","Replace the markdown content in <code>reader</code> and return a new …",null,[[["btreemap",3]],[["string",3],["result",6]]]]],"p":[]},\
"diem_events_fetcher":{"doc":"","i":[[3,"DiemEventsFetcher","diem_events_fetcher","",null,null],[11,"new","","",0,[[],["result",6]]],[11,"get_payment_event_handles","","",0,[[["accountaddress",3]]]],[11,"get_events","","",0,[[["eventkey",3]]]],[11,"get_all_events","","",0,[[["eventhandle",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]]],"p":[[3,"DiemEventsFetcher"]]},\
"diem_faucet":{"doc":"This crates provides Faucet service for creating Testnet …","i":[[0,"mint","diem_faucet","",null,null],[4,"Response","diem_faucet::mint","",null,null],[13,"DDAccountNextSeqNum","","",0,null],[13,"SubmittedTxns","","",0,null],[3,"MintParams","","",null,null],[12,"amount","","",1,null],[12,"currency_code","","",1,null],[12,"auth_key","","",1,null],[12,"return_txns","","",1,null],[12,"is_designated_dealer","","",1,null],[12,"trade_id","","",1,null],[3,"Service","","",null,null],[11,"new","","",2,[[["chainid",3],["string",3]]]],[11,"process","","",2,[[["mintparams",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"sign_txn","","",2,[[["rawtransaction",3]],[["result",6],["signedtransaction",3]]]]],"p":[[4,"Response"],[3,"MintParams"],[3,"Service"]]},\
"diem_framework":{"doc":"","i":[[0,"utils","diem_framework","",null,null],[5,"iterate_directory","diem_framework::utils","Helper function to iterate through all the files in the …",null,[[["path",3]]]],[17,"STD_LIB_DIR","diem_framework","",null,null],[17,"MOVE_EXTENSION","","",null,null],[17,"ERROR_DESC_EXTENSION","","",null,null],[17,"COMPILED_EXTENSION","","The extension for compiled files",null,null],[17,"TRANSACTION_SCRIPTS","","",null,null],[17,"COMPILED_OUTPUT_PATH","","The output path under which compiled files will be put",null,null],[17,"COMPILED_STDLIB_DIR","","The file name for the compiled stdlib",null,null],[17,"DEBUG_MODULE_FILE_NAME","","The file name of the debug module",null,null],[17,"STD_LIB_DOC_DIR","","The output path for stdlib documentation.",null,null],[17,"TRANSACTION_SCRIPTS_DOC_DIR","","The output path for transaction script documentation.",null,null],[17,"STD_LIB_DOC_TEMPLATE","","The documentation root template for stdlib.",null,null],[17,"TRANSACTION_SCRIPT_DOC_TEMPLATE","","The documentation root template for scripts.",null,null],[17,"SPEC_DOC_TEMPLATE","","The specification root template for scripts and stdlib.",null,null],[17,"REFERENCES_DOC_TEMPLATE","","Path to the references template.",null,null],[17,"ERROR_DESC_DIR","","",null,null],[17,"ERROR_DESC_FILENAME","","",null,null],[17,"PACKED_TYPES_DIR","","",null,null],[17,"PACKED_TYPES_FILENAME","","",null,null],[17,"PACKED_TYPES_EXTENSION","","",null,null],[17,"COMPILED_TRANSACTION_SCRIPTS_DIR","","TODO: These paths are temporary only The output path …",null,null],[17,"COMPILED_TRANSACTION_SCRIPTS_ABI_DIR","","The output path for transaction script ABIs.",null,null],[17,"TRANSACTION_BUILDERS_GENERATED_SOURCE_PATH","","Where to write generated transaction builders.",null,null],[5,"filter_move_files","","",null,[[]]],[5,"filter_move_bytecode_files","","",null,[[]]],[5,"path_in_crate","","",null,[[],["pathbuf",3]]],[5,"stdlib_files","","",null,[[],[["string",3],["vec",3]]]],[5,"stdlib_bytecode_files","","",null,[[],[["string",3],["vec",3]]]],[5,"script_files","","",null,[[],[["string",3],["vec",3]]]],[5,"build_stdlib","","",null,[[],[["string",3],["btreemap",3],["compiledmodule",3]]]],[5,"compile_script","","",null,[[["string",3]],["vec",3]]],[5,"save_binary","","",null,[[["path",3]]]],[5,"build_stdlib_doc","","",null,[[]]],[5,"build_transaction_script_doc","","",null,[[]]],[5,"build_transaction_script_abi","","",null,[[["string",3]]]],[5,"build_stdlib_error_code_map","","",null,[[]]],[5,"get_packed_types_path","","",null,[[],["pathbuf",3]]],[5,"generate_rust_transaction_builders","","",null,[[]]]],"p":[]},\
"diem_fuzzer":{"doc":"","i":[[0,"commands","diem_fuzzer","",null,null],[5,"make_corpus","diem_fuzzer::commands","Generates data for this fuzz target into the output …",null,[[["fuzztarget",3],["path",3]],["result",6]]],[5,"fuzz_target","","Fuzz a target by running <code>cargo fuzz run</code>.",null,[[["fuzztarget",3],["vec",3],["osstring",3],["pathbuf",3]],["result",6]]],[5,"list_targets","","List all known fuzz targets.",null,[[]]],[0,"fuzz_targets","diem_fuzzer","",null,null],[8,"FuzzTargetImpl","","Implementation for a particular target of a fuzz …",null,null],[11,"name","","The name of the fuzz target. By default, we use the …",0,[[]]],[10,"description","","A description for this target.",0,[[]]],[10,"generate","","Generates a new example for this target to store in the …",0,[[["valuegenerator",3]],[["option",4],["vec",3]]]],[10,"fuzz","","Fuzz the target with this data. The fuzzer tests for …",0,[[]]],[3,"FuzzTarget","","A fuzz target.",null,null],[5,"fuzz_data_to_value","","Helper to convert a bytearray to a value implementing the …",null,[[],["debug",8]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"clone","","",1,[[],["fuzztarget",3]]],[11,"deref","","",1,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"from_str","","",1,[[],["result",4]]],[11,"from_env","","Get the current fuzz target from the environment.",1,[[],["result",6]]],[11,"by_name","","Get a fuzz target by name.",1,[[],["option",4]]],[11,"all_targets","","A list of all fuzz targets.",1,[[]]]],"p":[[8,"FuzzTargetImpl"],[3,"FuzzTarget"]]},\
"diem_genesis_tool":{"doc":"","i":[[0,"command","diem_genesis_tool","",null,null],[4,"Command","diem_genesis_tool::command","",null,null],[13,"CreateWaypoint","","",0,null],[13,"Genesis","","",0,null],[13,"InsertWaypoint","","",0,null],[13,"DiemRootKey","","",0,null],[13,"OperatorKey","","",0,null],[13,"OwnerKey","","",0,null],[13,"SetLayout","","",0,null],[13,"SetOperator","","",0,null],[13,"TreasuryComplianceKey","","",0,null],[13,"ValidatorConfig","","",0,null],[13,"Verify","","",0,null],[4,"CommandName","","",null,null],[13,"CreateWaypoint","","",1,null],[13,"Genesis","","",1,null],[13,"InsertWaypoint","","",1,null],[13,"DiemRootKey","","",1,null],[13,"OperatorKey","","",1,null],[13,"OwnerKey","","",1,null],[13,"SetLayout","","",1,null],[13,"SetOperator","","",1,null],[13,"TreasuryComplianceKey","","",1,null],[13,"ValidatorConfig","","",1,null],[13,"Verify","","",1,null],[11,"execute","","",0,[[],[["result",4],["error",4],["string",3]]]],[11,"create_waypoint","","",0,[[],[["result",4],["waypoint",3],["error",4]]]],[11,"genesis","","",0,[[],[["error",4],["result",4],["transaction",4]]]],[11,"insert_waypoint","","",0,[[],[["result",4],["error",4]]]],[11,"diem_root_key","","",0,[[],[["error",4],["ed25519publickey",3],["result",4]]]],[11,"operator_key","","",0,[[],[["error",4],["ed25519publickey",3],["result",4]]]],[11,"owner_key","","",0,[[],[["error",4],["ed25519publickey",3],["result",4]]]],[11,"set_layout","","",0,[[],[["result",4],["error",4],["layout",3]]]],[11,"set_operator","","",0,[[],[["result",4],["error",4],["string",3]]]],[11,"treasury_compliance_key","","",0,[[],[["error",4],["ed25519publickey",3],["result",4]]]],[11,"validator_config","","",0,[[],[["error",4],["result",4],["transaction",4]]]],[11,"verify","","",0,[[],[["result",4],["error",4],["string",3]]]],[0,"layout","diem_genesis_tool","",null,null],[3,"Layout","diem_genesis_tool::layout","Layout defines the set of roles to identities within …",null,null],[12,"operators","","",2,null],[12,"owners","","",2,null],[12,"diem_root","","",2,null],[12,"treasury_compliance","","",2,null],[11,"from_disk","","",2,[[["asref",8],["path",3]],[["result",4],["error",4]]]],[11,"parse","","",2,[[],[["result",4],["error",4]]]],[11,"to_toml","","",2,[[],[["result",4],["error",4],["string",3]]]],[3,"SetLayout","","",null,null],[11,"execute","","",3,[[],[["layout",3],["error",4],["result",4]]]],[0,"config_builder","diem_genesis_tool","",null,null],[3,"ValidatorBuilder","diem_genesis_tool::config_builder","",null,null],[11,"new","","",4,[[["nodeconfig",3]]]],[11,"randomize_first_validator_ports","","",4,[[]]],[4,"FullnodeType","","",null,null],[13,"ValidatorFullnode","","",5,null],[13,"PublicFullnode","","",5,null],[3,"FullnodeBuilder","","",null,null],[11,"new","","",6,[[["vec",3],["nodeconfig",3],["pathbuf",3],["fullnodetype",4]]]],[5,"test_config","","",null,[[]]],[0,"swarm_config","diem_genesis_tool","",null,null],[8,"BuildSwarm","diem_genesis_tool::swarm_config","",null,null],[10,"build_swarm","","Generate the configs for a swarm",7,[[],["result",6]]],[3,"SwarmConfig","","",null,null],[12,"config_files","","",8,null],[12,"diem_root_key_path","","",8,null],[12,"waypoint","","",8,null],[11,"build","","",8,[[["pathbuf",3]],["result",6]]],[11,"from","diem_genesis_tool::command","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","diem_genesis_tool::layout","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","diem_genesis_tool::config_builder","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","diem_genesis_tool::swarm_config","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"build_swarm","diem_genesis_tool::config_builder","",4,[[],["result",6]]],[11,"build_swarm","","",6,[[],["result",6]]],[11,"from","diem_genesis_tool::command","",1,[[["command",4]]]],[11,"default","diem_genesis_tool::layout","",2,[[],["layout",3]]],[11,"eq","diem_genesis_tool::command","",1,[[["commandname",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","diem_genesis_tool::layout","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","diem_genesis_tool::config_builder","",5,[[["formatter",3]],["result",6]]],[11,"fmt","diem_genesis_tool::command","",1,[[["formatter",3]],["result",6]]],[11,"fmt","diem_genesis_tool::layout","",2,[[["formatter",3]],["result",6]]],[11,"serialize","","",2,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"clap","diem_genesis_tool::command","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"clap","diem_genesis_tool::layout","",3,[[],["app",3]]],[11,"from_clap","","",3,[[["argmatches",3]]]],[11,"augment_clap","diem_genesis_tool::command","",0,[[["app",3]],["app",3]]],[11,"from_subcommand","","",0,[[],["option",4]]],[11,"is_subcommand","","",0,[[]]],[11,"augment_clap","diem_genesis_tool::layout","",3,[[["app",3]],["app",3]]],[11,"is_subcommand","","",3,[[]]]],"p":[[4,"Command"],[4,"CommandName"],[3,"Layout"],[3,"SetLayout"],[3,"ValidatorBuilder"],[4,"FullnodeType"],[3,"FullnodeBuilder"],[8,"BuildSwarm"],[3,"SwarmConfig"]]},\
"diem_github_client":{"doc":"","i":[[4,"Error","diem_github_client","",null,null],[13,"HttpError","","",0,null],[13,"InternalError","","",0,null],[13,"MissingField","","",0,null],[13,"NotFound","","",0,null],[13,"SerializationError","","",0,null],[3,"Client","","Client provides a client around the restful interface to …",null,null],[11,"new","","",1,[[["string",3]]]],[11,"delete_file","","Delete a file from a GitHub repository",1,[[],[["error",4],["result",4]]]],[11,"delete_directory","","Recursively delete all files, which as a by product will …",1,[[],[["error",4],["result",4]]]],[11,"get_branches","","Retrieve a list of branches, this is effectively a status …",1,[[],[["vec",3],["result",4],["error",4]]]],[11,"get_directory","","Retrieve the name of contents within a given directory, …",1,[[],[["vec",3],["result",4],["error",4]]]],[11,"get_file","","Retrieve the contents of a file.",1,[[],[["result",4],["string",3],["error",4]]]],[11,"put","","Create or update a file.",1,[[],[["error",4],["result",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["response",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"eq","","",0,[[["error",4]]]],[11,"ne","","",0,[[["error",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[4,"Error"],[3,"Client"]]},\
"diem_global_constants":{"doc":"The purpose of this crate is to offer a single source of …","i":[[17,"CONSENSUS_KEY","diem_global_constants","Definitions of global cryptographic keys (e.g., as held …",null,null],[17,"EXECUTION_KEY","","",null,null],[17,"FULLNODE_NETWORK_KEY","","",null,null],[17,"DIEM_ROOT_KEY","","",null,null],[17,"TREASURY_COMPLIANCE_KEY","","",null,null],[17,"OPERATOR_ACCOUNT","","",null,null],[17,"OPERATOR_KEY","","",null,null],[17,"OWNER_ACCOUNT","","",null,null],[17,"OWNER_KEY","","",null,null],[17,"VALIDATOR_NETWORK_ADDRESS_KEYS","","",null,null],[17,"VALIDATOR_NETWORK_KEY","","",null,null],[17,"SAFETY_DATA","","Definitions of global data items (e.g., as held in secure …",null,null],[17,"WAYPOINT","","",null,null],[17,"GENESIS_WAYPOINT","","",null,null]],"p":[]},\
"diem_infallible":{"doc":"","i":[[3,"MutexGuard","diem_infallible","An RAII implementation of a \\\"scoped lock\\\" of a mutex. …",null,null],[3,"RwLockReadGuard","","RAII structure used to release the shared read access of …",null,null],[3,"RwLockWriteGuard","","RAII structure used to release the exclusive write access …",null,null],[3,"Mutex","","A simple wrapper around the lock() function of a …",null,null],[3,"RwLock","","A simple wrapper around the lock() function of a …",null,null],[5,"duration_since_epoch","","Gives the duration since the Unix epoch, notice the …",null,[[],["duration",3]]],[14,"checked","","Utility macro for writing secure arithmetic operations in …",null,null],[14,"NonZeroUsize","","A wrapper around <code>std::num::NonZeroUsize</code> to no longer …",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"deref","","",1,[[]]],[11,"deref","","",2,[[]]],[11,"deref","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"drop","","",2,[[]]],[11,"drop","","",1,[[]]],[11,"deref_mut","","",0,[[]]],[11,"deref_mut","","",2,[[]]],[11,"fmt","","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"default","","",4,[[],["rwlock",3]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"new","","creates mutex",3,[[]]],[11,"lock","","lock the mutex",3,[[],["mutexguard",3]]],[11,"new","","creates a read-write lock",4,[[]]],[11,"read","","lock the rwlock in read mode",4,[[],["rwlockreadguard",3]]],[11,"write","","lock the rwlock in write mode",4,[[],["rwlockwriteguard",3]]],[11,"into_inner","","return the owned type consuming the lock",4,[[]]]],"p":[[3,"MutexGuard"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"Mutex"],[3,"RwLock"]]},\
"diem_jellyfish_merkle":{"doc":"This module implements <code>JellyfishMerkleTree</code> backed by …","i":[[0,"iterator","diem_jellyfish_merkle","This module implements <code>JellyfishMerkleIterator</code>. …",null,null],[3,"JellyfishMerkleIterator","diem_jellyfish_merkle::iterator","The <code>JellyfishMerkleIterator</code> implementation.",null,null],[11,"new","","Constructs a new iterator. This puts the internal state …",0,[[["hashvalue",3],["version",6],["arc",3]],["result",6]]],[0,"node_type","diem_jellyfish_merkle","Node types of <code>JellyfishMerkleTree</code>",null,null],[3,"NodeKey","diem_jellyfish_merkle::node_type","The unique key of each node.",null,null],[11,"new","","Creates a new <code>NodeKey</code>.",1,[[["version",6],["nibblepath",3]]]],[11,"new_empty_path","","A shortcut to generate a node key consisting of a version …",1,[[["version",6]]]],[11,"version","","Gets the version.",1,[[],["version",6]]],[11,"nibble_path","","Gets the nibble path.",1,[[],["nibblepath",3]]],[11,"gen_child_node_key","","Generates a child node key based on this node key.",1,[[["nibble",3],["version",6]]]],[11,"gen_parent_node_key","","Generates parent node key at the same version based on …",1,[[]]],[11,"set_version","","Sets the version to the given version.",1,[[["version",6]]]],[11,"encode","","Serializes to bytes for physical storage enforcing the …",1,[[],[["vec",3],["result",6]]]],[11,"decode","","Recovers from serialized bytes in physical storage.",1,[[],[["result",6],["nodekey",3]]]],[3,"Child","","Each child of [<code>InternalNode</code>] encapsulates a nibble …",null,null],[12,"hash","","",2,null],[12,"version","","",2,null],[12,"is_leaf","","",2,null],[11,"new","","",2,[[["version",6],["hashvalue",3]]]],[3,"InternalNode","","Represents a 4-level subtree with 16 children at the …",null,null],[11,"new","","Creates a new Internal node.",3,[[["hashmap",3],["nibble",3],["child",3]]]],[11,"hash","","",3,[[],["hashvalue",3]]],[11,"serialize","","",3,[[["vec",3]],["result",6]]],[11,"deserialize","","",3,[[],["result",6]]],[11,"child","","Gets the <code>n</code>-th child.",3,[[["nibble",3]],[["child",3],["option",4]]]],[11,"generate_bitmaps","","Generates <code>existence_bitmap</code> and <code>leaf_bitmap</code> as a pair of …",3,[[]]],[11,"get_child_with_siblings","","Gets the child and its corresponding siblings that are …",3,[[["nibble",3],["nodekey",3]]]],[3,"LeafNode","","Represents an account.",null,null],[11,"new","","Creates a new leaf node.",4,[[["hashvalue",3]]]],[11,"account_key","","Gets the account key, the hashed account address.",4,[[],["hashvalue",3]]],[11,"value","","Gets the associated value itself.",4,[[]]],[11,"hash","","",4,[[],["hashvalue",3]]],[4,"Node","","The concrete node type of <code>JellyfishMerkleTree</code>.",null,null],[13,"Null","","Represents <code>null</code>.",5,null],[13,"Internal","","A wrapper of [<code>InternalNode</code>].",5,null],[13,"Leaf","","A wrapper of [<code>LeafNode</code>].",5,null],[11,"new_null","","Creates the <code>Null</code> variant.",5,[[]]],[11,"new_internal","","Creates the <code>Internal</code> variant.",5,[[["hashmap",3],["nibble",3],["child",3]]]],[11,"new_leaf","","Creates the <code>Leaf</code> variant.",5,[[["hashvalue",3]]]],[11,"is_leaf","","Returns <code>true</code> if the node is a leaf node.",5,[[]]],[11,"encode","","Serializes to bytes for physical storage.",5,[[],[["vec",3],["result",6]]]],[11,"hash","","Computes the hash of nodes.",5,[[],["hashvalue",3]]],[11,"decode","","Recovers from serialized bytes in physical storage.",5,[[],[["node",4],["result",6]]]],[4,"NodeDecodeError","","Error thrown when a [<code>Node</code>] fails to be deserialized out …",null,null],[13,"EmptyInput","","Input is empty.",6,null],[13,"UnknownTag","","The first byte of the input is not a known tag …",6,null],[12,"unknown_tag","diem_jellyfish_merkle::node_type::NodeDecodeError","",7,null],[13,"NoChildren","diem_jellyfish_merkle::node_type","No children found in internal node",6,null],[13,"ExtraLeaves","","Extra leaf bits set",6,null],[12,"existing","diem_jellyfish_merkle::node_type::NodeDecodeError","",8,null],[12,"leaves","","",8,null],[0,"restore","diem_jellyfish_merkle","This module implements the functionality to restore a …",null,null],[3,"JellyfishMerkleRestore","diem_jellyfish_merkle::restore","",null,null],[11,"new","","",9,[[["treereader",8],["arc",3],["hashvalue",3],["version",6],["treewriter",8]],["result",6]]],[11,"new_overwrite","","",9,[[["arc",3],["hashvalue",3],["version",6],["treewriter",8]],["result",6]]],[11,"add_chunk","","Restores a chunk of accounts. This function will verify …",9,[[["vec",3],["sparsemerklerangeproof",3]],["result",6]]],[11,"finish","","Finishes the restoration process. This tells the code …",9,[[],["result",6]]],[0,"test_helper","diem_jellyfish_merkle","",null,null],[3,"ValueBlobHasher","diem_jellyfish_merkle::test_helper","Cryptographic hasher for an BCS-serializable #item",null,null],[5,"plus_one","","Computes the key immediately after <code>key</code>.",null,[[["hashvalue",3]],["hashvalue",3]]],[5,"init_mock_db","","Initializes a DB with a set of key-value pairs by …",null,[[["hashmap",3]]]],[5,"arb_existent_kvs_and_nonexistent_keys","","",null,[[]]],[5,"test_get_with_proof","","",null,[[]]],[5,"arb_kv_pair_with_distinct_last_nibble","","",null,[[]]],[5,"test_get_with_proof_with_distinct_last_nibble","","",null,[[]]],[5,"arb_tree_with_index","","",null,[[]]],[5,"test_get_range_proof","","",null,[[]]],[3,"MissingRootError","diem_jellyfish_merkle","",null,null],[12,"version","","",10,null],[17,"ROOT_NIBBLE_HEIGHT","","The hardcoded maximum height of a [<code>JellyfishMerkleTree</code>] …",null,null],[8,"TreeReader","","<code>TreeReader</code> defines the interface between …",null,null],[11,"get_node","","Gets node given a node key. Returns error if the node …",11,[[["nodekey",3]],[["node",4],["result",6]]]],[10,"get_node_option","","Gets node given a node key. Returns <code>None</code> if the node does …",11,[[["nodekey",3]],[["option",4],["result",6]]]],[10,"get_rightmost_leaf","","Gets the rightmost leaf. Note that this assumes we are in …",11,[[],[["result",6],["option",4]]]],[8,"TreeWriter","","",null,null],[10,"write_node_batch","","Writes a node batch into storage.",12,[[["nodebatch",6]],["result",6]]],[8,"Value","","<code>Value</code> defines the types of data that can be stored in a …",null,null],[8,"TestValue","","<code>TestValue</code> defines the types of data that can be stored in …",null,null],[6,"NodeBatch","","Node batch that will be written into db atomically with …",null,null],[6,"StaleNodeIndexBatch","","<code>StaleNodeIndex</code> batch that will be written into db …",null,null],[3,"NodeStats","","",null,null],[12,"new_nodes","","",13,null],[12,"new_leaves","","",13,null],[12,"stale_nodes","","",13,null],[12,"stale_leaves","","",13,null],[3,"StaleNodeIndex","","Indicates a node becomes stale since <code>stale_since_version</code>.",null,null],[12,"stale_since_version","","The version since when the node is overwritten and …",14,null],[12,"node_key","","The <code>NodeKey</code> identifying the node associated with this …",14,null],[3,"TreeUpdateBatch","","This is a wrapper of <code>NodeBatch</code>, <code>StaleNodeIndexBatch</code> and …",null,null],[12,"node_batch","","",15,null],[12,"stale_node_index_batch","","",15,null],[12,"node_stats","","",15,null],[3,"JellyfishMerkleTree","","The Jellyfish Merkle tree data structure. See [<code>crate</code>] for …",null,null],[11,"new","","Creates a <code>JellyfishMerkleTree</code> backed by the given …",16,[[]]],[11,"put_value_set","","This is a convenient function that calls <code>put_value_sets</code> …",16,[[["vec",3],["version",6]],["result",6]]],[11,"put_value_sets","","Returns the new nodes and values in a batch after …",16,[[["vec",3],["vec",3],["version",6]],["result",6]]],[11,"get_with_proof","","Returns the value (if applicable) and the corresponding …",16,[[["version",6],["hashvalue",3]],["result",6]]],[11,"get_range_proof","","Gets the proof that shows a list of keys up to …",16,[[["version",6],["hashvalue",3]],[["sparsemerklerangeproof",3],["result",6]]]],[11,"get_root_hash","","",16,[[["version",6]],[["result",6],["hashvalue",3]]]],[11,"get_root_hash_option","","",16,[[["version",6]],[["option",4],["result",6]]]],[11,"from","diem_jellyfish_merkle::iterator","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","diem_jellyfish_merkle::node_type","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"equivalent","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"equivalent","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"equivalent","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"test_only_hash","","",4,[[],["hashvalue",3]]],[11,"vzip","","",4,[[]]],[11,"equivalent","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"equivalent","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"equivalent","","",6,[[]]],[11,"from","diem_jellyfish_merkle::restore","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","diem_jellyfish_merkle::test_helper","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","diem_jellyfish_merkle","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"equivalent","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"equivalent","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"equivalent","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","diem_jellyfish_merkle::node_type","",5,[[["internalnode",3]]]],[11,"from","","",5,[[["leafnode",3]]]],[11,"next","diem_jellyfish_merkle::iterator","",0,[[],["option",4]]],[11,"clone","diem_jellyfish_merkle::node_type","",1,[[],["nodekey",3]]],[11,"clone","","",2,[[],["child",3]]],[11,"clone","","",3,[[],["internalnode",3]]],[11,"clone","","",4,[[],["leafnode",3]]],[11,"clone","","",5,[[],["node",4]]],[11,"clone","diem_jellyfish_merkle::test_helper","",17,[[],["valueblobhasher",3]]],[11,"clone","diem_jellyfish_merkle","",13,[[],["nodestats",3]]],[11,"clone","","",14,[[],["stalenodeindex",3]]],[11,"clone","","",15,[[],["treeupdatebatch",3]]],[11,"default","diem_jellyfish_merkle::test_helper","",17,[[]]],[11,"default","diem_jellyfish_merkle","",13,[[],["nodestats",3]]],[11,"default","","",15,[[],["treeupdatebatch",3]]],[11,"cmp","diem_jellyfish_merkle::node_type","",1,[[["nodekey",3]],["ordering",4]]],[11,"cmp","diem_jellyfish_merkle","",14,[[["stalenodeindex",3]],["ordering",4]]],[11,"eq","diem_jellyfish_merkle::node_type","",1,[[["nodekey",3]]]],[11,"ne","","",1,[[["nodekey",3]]]],[11,"eq","","",2,[[["child",3]]]],[11,"ne","","",2,[[["child",3]]]],[11,"eq","","",3,[[["internalnode",3]]]],[11,"ne","","",3,[[["internalnode",3]]]],[11,"eq","","",4,[[["leafnode",3]]]],[11,"ne","","",4,[[["leafnode",3]]]],[11,"eq","","",5,[[["node",4]]]],[11,"ne","","",5,[[["node",4]]]],[11,"eq","","",6,[[["nodedecodeerror",4]]]],[11,"ne","","",6,[[["nodedecodeerror",4]]]],[11,"eq","diem_jellyfish_merkle","",13,[[["nodestats",3]]]],[11,"ne","","",13,[[["nodestats",3]]]],[11,"eq","","",14,[[["stalenodeindex",3]]]],[11,"ne","","",14,[[["stalenodeindex",3]]]],[11,"eq","","",15,[[["treeupdatebatch",3]]]],[11,"ne","","",15,[[["treeupdatebatch",3]]]],[11,"partial_cmp","diem_jellyfish_merkle::node_type","",1,[[["nodekey",3]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["nodekey",3]]]],[11,"le","","",1,[[["nodekey",3]]]],[11,"gt","","",1,[[["nodekey",3]]]],[11,"ge","","",1,[[["nodekey",3]]]],[11,"partial_cmp","diem_jellyfish_merkle","",14,[[["stalenodeindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",14,[[["stalenodeindex",3]]]],[11,"le","","",14,[[["stalenodeindex",3]]]],[11,"gt","","",14,[[["stalenodeindex",3]]]],[11,"ge","","",14,[[["stalenodeindex",3]]]],[11,"fmt","diem_jellyfish_merkle::node_type","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","diem_jellyfish_merkle","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","diem_jellyfish_merkle::node_type","",6,[[["formatter",3]],["result",6]]],[11,"fmt","diem_jellyfish_merkle","",10,[[["formatter",3]],["result",6]]],[11,"hash","diem_jellyfish_merkle::node_type","",1,[[]]],[11,"hash","diem_jellyfish_merkle","",14,[[]]],[11,"write","diem_jellyfish_merkle::test_helper","",17,[[],["result",6]]],[11,"flush","","",17,[[],["result",6]]],[11,"seed","","",17,[[]]],[11,"update","","",17,[[]]],[11,"finish","","",17,[[],["hashvalue",3]]],[11,"serialize","diem_jellyfish_merkle::node_type","",4,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"arbitrary_with","","",1,[[]]],[11,"arbitrary_with","","",2,[[]]],[11,"arbitrary_with","","",3,[[]]],[11,"arbitrary_with","diem_jellyfish_merkle","",14,[[]]]],"p":[[3,"JellyfishMerkleIterator"],[3,"NodeKey"],[3,"Child"],[3,"InternalNode"],[3,"LeafNode"],[4,"Node"],[4,"NodeDecodeError"],[13,"UnknownTag"],[13,"ExtraLeaves"],[3,"JellyfishMerkleRestore"],[3,"MissingRootError"],[8,"TreeReader"],[8,"TreeWriter"],[3,"NodeStats"],[3,"StaleNodeIndex"],[3,"TreeUpdateBatch"],[3,"JellyfishMerkleTree"],[3,"ValueBlobHasher"]]},\
"diem_json_rpc":{"doc":"JSON RPC endpoint","i":[[0,"errors","diem_json_rpc","",null,null],[7,"INTERNAL_ERRORS","diem_json_rpc::errors","list of server internal errors",null,null],[5,"is_internal_error","","",null,[[]]],[4,"ServerCode","","Custom JSON RPC server error codes Ranges from -32000 to …",null,null],[13,"DefaultServerError","","",0,null],[13,"VmValidationError","","",0,null],[13,"VmVerificationError","","",0,null],[13,"VmInvariantViolationError","","",0,null],[13,"VmDeserializationError","","",0,null],[13,"VmExecutionError","","",0,null],[13,"VmUnknownError","","",0,null],[13,"MempoolInvalidSeqNumber","","",0,null],[13,"MempoolIsFull","","",0,null],[13,"MempoolTooManyTransactions","","",0,null],[13,"MempoolInvalidUpdate","","",0,null],[13,"MempoolVmError","","",0,null],[13,"MempoolUnknownError","","",0,null],[4,"InvalidRequestCode","","JSON RPC server error codes for invalid request",null,null],[13,"InvalidRequest","","",1,null],[13,"MethodNotFound","","",1,null],[13,"InvalidParams","","",1,null],[13,"InvalidFormat","","",1,null],[4,"ErrorData","","",null,null],[13,"StatusCode","","",2,null],[3,"JsonRpcError","","",null,null],[12,"code","","",3,null],[12,"message","","",3,null],[12,"data","","",3,null],[0,"response","diem_json_rpc","",null,null],[17,"X_DIEM_CHAIN_ID","diem_json_rpc::response","",null,null],[17,"X_DIEM_VERSION_ID","","",null,null],[17,"X_DIEM_TIMESTAMP_USEC_ID","","",null,null],[3,"JsonRpcResponse","","",null,null],[12,"diem_chain_id","","",4,null],[12,"diem_ledger_version","","",4,null],[12,"diem_ledger_timestampusec","","",4,null],[12,"jsonrpc","","",4,null],[12,"id","","",4,null],[12,"result","","",4,null],[12,"error","","",4,null],[0,"views","diem_json_rpc","",null,null],[3,"AmountView","diem_json_rpc::views","",null,null],[12,"amount","","",5,null],[12,"currency","","",5,null],[4,"AccountRoleView","","",null,null],[13,"Unknown","","",6,null],[13,"ChildVASP","","",6,null],[12,"parent_vasp_address","diem_json_rpc::views::AccountRoleView","",7,null],[13,"ParentVASP","diem_json_rpc::views","",6,null],[12,"human_name","diem_json_rpc::views::AccountRoleView","",8,null],[12,"base_url","","",8,null],[12,"expiration_time","","",8,null],[12,"compliance_key","","",8,null],[12,"num_children","","",8,null],[12,"compliance_key_rotation_events_key","","",8,null],[12,"base_url_rotation_events_key","","",8,null],[13,"DesignatedDealer","diem_json_rpc::views","",6,null],[12,"human_name","diem_json_rpc::views::AccountRoleView","",9,null],[12,"base_url","","",9,null],[12,"expiration_time","","",9,null],[12,"compliance_key","","",9,null],[12,"preburn_balances","","",9,null],[12,"received_mint_events_key","","",9,null],[12,"compliance_key_rotation_events_key","","",9,null],[12,"base_url_rotation_events_key","","",9,null],[3,"AccountView","diem_json_rpc::views","",null,null],[12,"address","","",10,null],[12,"balances","","",10,null],[12,"sequence_number","","",10,null],[12,"authentication_key","","",10,null],[12,"sent_events_key","","",10,null],[12,"received_events_key","","",10,null],[12,"delegated_key_rotation_capability","","",10,null],[12,"delegated_withdrawal_capability","","",10,null],[12,"is_frozen","","",10,null],[12,"role","","",10,null],[3,"EventView","","",null,null],[12,"key","","",11,null],[12,"sequence_number","","",11,null],[12,"transaction_version","","",11,null],[12,"data","","",11,null],[3,"EventWithProofView","","",null,null],[12,"event_with_proof","","",12,null],[4,"EventDataView","","",null,null],[13,"Burn","","",13,null],[12,"amount","diem_json_rpc::views::EventDataView","",14,null],[12,"preburn_address","","",14,null],[13,"CancelBurn","diem_json_rpc::views","",13,null],[12,"amount","diem_json_rpc::views::EventDataView","",15,null],[12,"preburn_address","","",15,null],[13,"Mint","diem_json_rpc::views","",13,null],[12,"amount","diem_json_rpc::views::EventDataView","",16,null],[13,"ToXDXExchangeRateUpdate","diem_json_rpc::views","",13,null],[12,"currency_code","diem_json_rpc::views::EventDataView","",17,null],[12,"new_to_xdx_exchange_rate","","",17,null],[13,"Preburn","diem_json_rpc::views","",13,null],[12,"amount","diem_json_rpc::views::EventDataView","",18,null],[12,"preburn_address","","",18,null],[13,"ReceivedPayment","diem_json_rpc::views","",13,null],[12,"amount","diem_json_rpc::views::EventDataView","",19,null],[12,"sender","","",19,null],[12,"receiver","","",19,null],[12,"metadata","","",19,null],[13,"SentPayment","diem_json_rpc::views","",13,null],[12,"amount","diem_json_rpc::views::EventDataView","",20,null],[12,"receiver","","",20,null],[12,"sender","","",20,null],[12,"metadata","","",20,null],[13,"AdminTransaction","diem_json_rpc::views","",13,null],[12,"committed_timestamp_secs","diem_json_rpc::views::EventDataView","",21,null],[13,"NewEpoch","diem_json_rpc::views","",13,null],[12,"epoch","diem_json_rpc::views::EventDataView","",22,null],[13,"NewBlock","diem_json_rpc::views","",13,null],[12,"round","diem_json_rpc::views::EventDataView","",23,null],[12,"proposer","","",23,null],[12,"proposed_time","","",23,null],[13,"ReceivedMint","diem_json_rpc::views","",13,null],[12,"amount","diem_json_rpc::views::EventDataView","",24,null],[12,"destination_address","","",24,null],[13,"ComplianceKeyRotation","diem_json_rpc::views","",13,null],[12,"new_compliance_public_key","diem_json_rpc::views::EventDataView","",25,null],[12,"time_rotated_seconds","","",25,null],[13,"BaseUrlRotation","diem_json_rpc::views","",13,null],[12,"new_base_url","diem_json_rpc::views::EventDataView","",26,null],[12,"time_rotated_seconds","","",26,null],[13,"CreateAccount","diem_json_rpc::views","",13,null],[12,"created_address","diem_json_rpc::views::EventDataView","",27,null],[12,"role_id","","",27,null],[13,"Unknown","diem_json_rpc::views","",13,null],[3,"MetadataView","","",null,null],[12,"version","","",28,null],[12,"accumulator_root_hash","","",28,null],[12,"timestamp","","",28,null],[12,"chain_id","","",28,null],[12,"script_hash_allow_list","","",28,null],[12,"module_publishing_allowed","","",28,null],[12,"diem_version","","",28,null],[12,"dual_attestation_limit","","",28,null],[3,"BytesView","","",null,null],[12,"0","","",29,null],[3,"MoveAbortExplanationView","","",null,null],[12,"category","","",30,null],[12,"category_description","","",30,null],[12,"reason","","",30,null],[12,"reason_description","","",30,null],[4,"VMStatusView","","",null,null],[13,"Executed","","",31,null],[13,"OutOfGas","","",31,null],[13,"MoveAbort","","",31,null],[12,"location","diem_json_rpc::views::VMStatusView","",32,null],[12,"abort_code","","",32,null],[12,"explanation","","",32,null],[13,"ExecutionFailure","diem_json_rpc::views","",31,null],[12,"location","diem_json_rpc::views::VMStatusView","",33,null],[12,"function_index","","",33,null],[12,"code_offset","","",33,null],[13,"MiscellaneousError","diem_json_rpc::views","",31,null],[13,"VerificationError","","",31,null],[13,"DeserializationError","","",31,null],[13,"PublishingFailure","","",31,null],[3,"TransactionView","","",null,null],[12,"version","","",34,null],[12,"transaction","","",34,null],[12,"hash","","",34,null],[12,"bytes","","",34,null],[12,"events","","",34,null],[12,"vm_status","","",34,null],[12,"gas_used","","",34,null],[3,"TransactionsWithProofsView","","",null,null],[12,"serialized_transactions","","",35,null],[12,"proofs","","",35,null],[3,"TransactionsProofsView","","",null,null],[12,"ledger_info_to_transaction_infos_proof","","",36,null],[12,"transaction_infos","","",36,null],[4,"TransactionDataView","","",null,null],[13,"BlockMetadata","","",37,null],[12,"timestamp_usecs","diem_json_rpc::views::TransactionDataView","",38,null],[13,"WriteSet","diem_json_rpc::views","",37,null],[13,"UserTransaction","","",37,null],[12,"sender","diem_json_rpc::views::TransactionDataView","",39,null],[12,"signature_scheme","","",39,null],[12,"signature","","",39,null],[12,"public_key","","",39,null],[12,"sequence_number","","",39,null],[12,"chain_id","","",39,null],[12,"max_gas_amount","","",39,null],[12,"gas_unit_price","","",39,null],[12,"gas_currency","","",39,null],[12,"expiration_timestamp_secs","","",39,null],[12,"script_hash","","",39,null],[12,"script_bytes","","",39,null],[12,"script","","",39,null],[13,"UnknownTransaction","diem_json_rpc::views","",37,null],[3,"ScriptView","","",null,null],[12,"type","","",40,null],[12,"code","","",40,null],[12,"arguments","","",40,null],[12,"type_arguments","","",40,null],[12,"receiver","","",40,null],[12,"amount","","",40,null],[12,"currency","","",40,null],[12,"metadata","","",40,null],[12,"metadata_signature","","",40,null],[3,"CurrencyInfoView","","",null,null],[12,"code","","",41,null],[12,"scaling_factor","","",41,null],[12,"fractional_part","","",41,null],[12,"to_xdx_exchange_rate","","",41,null],[12,"mint_events_key","","",41,null],[12,"burn_events_key","","",41,null],[12,"preburn_events_key","","",41,null],[12,"cancel_burn_events_key","","",41,null],[12,"exchange_rate_update_events_key","","",41,null],[3,"StateProofView","","",null,null],[12,"ledger_info_with_signatures","","",42,null],[12,"epoch_change_proof","","",42,null],[12,"ledger_consistency_proof","","",42,null],[3,"AccountStateWithProofView","","",null,null],[12,"version","","",43,null],[12,"blob","","",43,null],[12,"proof","","",43,null],[3,"AccountStateProofView","","",null,null],[12,"ledger_info_to_transaction_info_proof","","",44,null],[12,"transaction_info","","",44,null],[12,"transaction_info_to_account_proof","","",44,null],[0,"fuzzing","diem_json_rpc","Fuzzer for JSON RPC service",null,null],[5,"method_fuzzer","diem_json_rpc::fuzzing","",null,[[]]],[5,"generate_corpus","","generate_corpus produces an arbitrary transaction to …",null,[[["valuegenerator",3]],["vec",3]]],[5,"fuzzer","","",null,[[]]],[5,"request_fuzzer","","",null,[[["value",4]]]],[5,"bootstrap","diem_json_rpc","Creates HTTP server (warp-based) that serves JSON RPC …",null,[[["arc",3],["socketaddr",4],["dbreader",8],["roletype",4],["chainid",3],["mempoolclientsender",6],["option",4]],["runtime",3]]],[5,"bootstrap_from_config","","Creates JSON RPC endpoint by given node config",null,[[["nodeconfig",3],["dbreader",8],["chainid",3],["mempoolclientsender",6],["arc",3]],["runtime",3]]],[5,"test_bootstrap","","Creates JSON RPC server for a Validator node Should only …",null,[[["socketaddr",4],["dbreader",8],["mempoolclientsender",6],["arc",3]],["runtime",3]]],[14,"log_response","","",null,null],[14,"gen_request_params","","",null,null],[11,"from","diem_json_rpc::errors","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"vzip","","",3,[[]]],[11,"erased_serialize","","",3,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","diem_json_rpc::response","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"test_only_hash","","",4,[[],["hashvalue",3]]],[11,"vzip","","",4,[[]]],[11,"erased_serialize","","",4,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","diem_json_rpc::views","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"erased_serialize","","",5,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"test_only_hash","","",6,[[],["hashvalue",3]]],[11,"vzip","","",6,[[]]],[11,"erased_serialize","","",6,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"test_only_hash","","",10,[[],["hashvalue",3]]],[11,"vzip","","",10,[[]]],[11,"erased_serialize","","",10,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"test_only_hash","","",11,[[],["hashvalue",3]]],[11,"vzip","","",11,[[]]],[11,"erased_serialize","","",11,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"test_only_hash","","",12,[[],["hashvalue",3]]],[11,"vzip","","",12,[[]]],[11,"erased_serialize","","",12,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"test_only_hash","","",13,[[],["hashvalue",3]]],[11,"vzip","","",13,[[]]],[11,"erased_serialize","","",13,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"test_only_hash","","",28,[[],["hashvalue",3]]],[11,"vzip","","",28,[[]]],[11,"erased_serialize","","",28,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"test_only_hash","","",29,[[],["hashvalue",3]]],[11,"vzip","","",29,[[]]],[11,"erased_serialize","","",29,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"test_only_hash","","",30,[[],["hashvalue",3]]],[11,"vzip","","",30,[[]]],[11,"erased_serialize","","",30,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"test_only_hash","","",31,[[],["hashvalue",3]]],[11,"vzip","","",31,[[]]],[11,"erased_serialize","","",31,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"test_only_hash","","",34,[[],["hashvalue",3]]],[11,"vzip","","",34,[[]]],[11,"erased_serialize","","",34,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"test_only_hash","","",35,[[],["hashvalue",3]]],[11,"vzip","","",35,[[]]],[11,"erased_serialize","","",35,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"test_only_hash","","",36,[[],["hashvalue",3]]],[11,"vzip","","",36,[[]]],[11,"erased_serialize","","",36,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"test_only_hash","","",37,[[],["hashvalue",3]]],[11,"vzip","","",37,[[]]],[11,"erased_serialize","","",37,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"test_only_hash","","",40,[[],["hashvalue",3]]],[11,"vzip","","",40,[[]]],[11,"erased_serialize","","",40,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"test_only_hash","","",41,[[],["hashvalue",3]]],[11,"vzip","","",41,[[]]],[11,"erased_serialize","","",41,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"init","","",41,[[]]],[11,"deref","","",41,[[]]],[11,"deref_mut","","",41,[[]]],[11,"drop","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"test_only_hash","","",42,[[],["hashvalue",3]]],[11,"vzip","","",42,[[]]],[11,"erased_serialize","","",42,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"test_only_hash","","",43,[[],["hashvalue",3]]],[11,"vzip","","",43,[[]]],[11,"erased_serialize","","",43,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"test_only_hash","","",44,[[],["hashvalue",3]]],[11,"vzip","","",44,[[]]],[11,"erased_serialize","","",44,[[["serializer",8]],[["ok",3],["result",4],["error",3]]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"fmt","","",30,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",29,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",31,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc::errors","",3,[[["formatter",3]],[["result",4],["error",3]]]],[11,"eq","diem_json_rpc::views","",29,[[["bytesview",3]]]],[11,"ne","","",29,[[["bytesview",3]]]],[11,"eq","","",5,[[["amountview",3]]]],[11,"ne","","",5,[[["amountview",3]]]],[11,"eq","","",10,[[["accountview",3]]]],[11,"ne","","",10,[[["accountview",3]]]],[11,"eq","","",11,[[["eventview",3]]]],[11,"ne","","",11,[[["eventview",3]]]],[11,"eq","","",13,[[["eventdataview",4]]]],[11,"ne","","",13,[[["eventdataview",4]]]],[11,"eq","","",42,[[["stateproofview",3]]]],[11,"ne","","",42,[[["stateproofview",3]]]],[11,"eq","","",44,[[["accountstateproofview",3]]]],[11,"ne","","",44,[[["accountstateproofview",3]]]],[11,"eq","","",12,[[["eventwithproofview",3]]]],[11,"ne","","",12,[[["eventwithproofview",3]]]],[11,"eq","","",34,[[["transactionview",3]]]],[11,"ne","","",34,[[["transactionview",3]]]],[11,"eq","","",43,[[["accountstatewithproofview",3]]]],[11,"ne","","",43,[[["accountstatewithproofview",3]]]],[11,"eq","","",30,[[["moveabortexplanationview",3]]]],[11,"ne","","",30,[[["moveabortexplanationview",3]]]],[11,"eq","","",6,[[["accountroleview",4]]]],[11,"ne","","",6,[[["accountroleview",4]]]],[11,"eq","","",40,[[["scriptview",3]]]],[11,"ne","","",40,[[["scriptview",3]]]],[11,"eq","","",31,[[["vmstatusview",4]]]],[11,"ne","","",31,[[["vmstatusview",4]]]],[11,"eq","","",41,[[["currencyinfoview",3]]]],[11,"ne","","",41,[[["currencyinfoview",3]]]],[11,"eq","","",35,[[["transactionswithproofsview",3]]]],[11,"ne","","",35,[[["transactionswithproofsview",3]]]],[11,"eq","","",37,[[["transactiondataview",4]]]],[11,"ne","","",37,[[["transactiondataview",4]]]],[11,"eq","","",36,[[["transactionsproofsview",3]]]],[11,"ne","","",36,[[["transactionsproofsview",3]]]],[11,"eq","","",28,[[["metadataview",3]]]],[11,"ne","","",28,[[["metadataview",3]]]],[11,"from","","",6,[[["accountrole",4]],["accountroleview",4]]],[11,"from","","",29,[[["vec",3]],["bytesview",3]]],[11,"from","","",29,[[["accountaddress",3]],["bytesview",3]]],[11,"from","","",29,[[["accountaddress",3]],["bytesview",3]]],[11,"from","","",29,[[["global",3],["vec",3]],["bytesview",3]]],[11,"from","diem_json_rpc::errors","",3,[[["error",3]],["jsonrpcerror",3]]],[11,"from","","",3,[[["error",3]],["jsonrpcerror",3]]],[11,"from","diem_json_rpc::views","",41,[[["currencyinforesource",3]],["currencyinfoview",3]]],[11,"from","","",29,[[],["bytesview",3]]],[11,"from","","",29,[[["hashvalue",3]],["bytesview",3]]],[11,"fmt","","",30,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",31,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",41,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",35,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",5,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",10,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",36,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",29,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",43,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc::errors","",3,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc::views","",11,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",44,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc::response","",4,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc::views","",28,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",37,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",13,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",34,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",42,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",6,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",40,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc::errors","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"try_from","diem_json_rpc::views","",43,[[["accountstatewithproof",3]],[["result",4],["accountstatewithproofview",3],["error",3]]]],[11,"try_from","","",42,[[],[["result",4],["stateproofview",3]]]],[11,"try_from","","",44,[[["accountstateproof",3]],[["accountstateproofview",3],["result",4],["error",3]]]],[11,"try_from","","",11,[[],[["result",4],["eventview",3],["error",3]]]],[11,"try_from","","",13,[[["contractevent",4]],[["eventdataview",4],["error",3],["result",4]]]],[11,"deserialize","","",29,[[],[["result",4],["bytesview",3]]]],[11,"deserialize","","",31,[[],[["result",4],["vmstatusview",4]]]],[11,"deserialize","","",28,[[],[["result",4],["metadataview",3]]]],[11,"deserialize","diem_json_rpc::response","",4,[[],[["result",4],["jsonrpcresponse",3]]]],[11,"deserialize","diem_json_rpc::views","",12,[[],[["result",4],["eventwithproofview",3]]]],[11,"deserialize","","",6,[[],[["accountroleview",4],["result",4]]]],[11,"deserialize","","",10,[[],[["result",4],["accountview",3]]]],[11,"deserialize","","",41,[[],[["currencyinfoview",3],["result",4]]]],[11,"deserialize","","",37,[[],[["transactiondataview",4],["result",4]]]],[11,"deserialize","diem_json_rpc::errors","",2,[[],[["result",4],["errordata",4]]]],[11,"deserialize","diem_json_rpc::views","",35,[[],[["result",4],["transactionswithproofsview",3]]]],[11,"deserialize","","",13,[[],[["eventdataview",4],["result",4]]]],[11,"deserialize","","",43,[[],[["result",4],["accountstatewithproofview",3]]]],[11,"deserialize","","",40,[[],[["result",4],["scriptview",3]]]],[11,"deserialize","","",30,[[],[["moveabortexplanationview",3],["result",4]]]],[11,"deserialize","diem_json_rpc::errors","",3,[[],[["result",4],["jsonrpcerror",3]]]],[11,"deserialize","diem_json_rpc::views","",34,[[],[["transactionview",3],["result",4]]]],[11,"deserialize","","",36,[[],[["result",4],["transactionsproofsview",3]]]],[11,"deserialize","","",5,[[],[["result",4],["amountview",3]]]],[11,"deserialize","","",42,[[],[["stateproofview",3],["result",4]]]],[11,"deserialize","","",44,[[],[["accountstateproofview",3],["result",4]]]],[11,"deserialize","","",11,[[],[["result",4],["eventview",3]]]],[11,"serialize","","",29,[[],["result",4]]],[11,"serialize","","",44,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","diem_json_rpc::errors","",3,[[],["result",4]]],[11,"serialize","diem_json_rpc::views","",41,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",36,[[],["result",4]]],[11,"serialize","","",42,[[],["result",4]]],[11,"serialize","","",40,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","","",30,[[],["result",4]]],[11,"serialize","","",43,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",31,[[],["result",4]]],[11,"serialize","","",34,[[],["result",4]]],[11,"serialize","diem_json_rpc::errors","",2,[[],["result",4]]],[11,"serialize","diem_json_rpc::views","",35,[[],["result",4]]],[11,"serialize","diem_json_rpc::response","",4,[[],["result",4]]],[11,"serialize","diem_json_rpc::views","",28,[[],["result",4]]],[11,"serialize","","",37,[[],["result",4]]],[11,"default","","",40,[[],["scriptview",3]]],[11,"clone","","",34,[[],["transactionview",3]]],[11,"clone","","",35,[[],["transactionswithproofsview",3]]],[11,"clone","","",13,[[],["eventdataview",4]]],[11,"clone","","",37,[[],["transactiondataview",4]]],[11,"clone","","",42,[[],["stateproofview",3]]],[11,"clone","","",29,[[],["bytesview",3]]],[11,"clone","","",40,[[],["scriptview",3]]],[11,"clone","diem_json_rpc::response","",4,[[],["jsonrpcresponse",3]]],[11,"clone","diem_json_rpc::views","",31,[[],["vmstatusview",4]]],[11,"clone","","",44,[[],["accountstateproofview",3]]],[11,"clone","","",41,[[],["currencyinfoview",3]]],[11,"clone","","",30,[[],["moveabortexplanationview",3]]],[11,"clone","","",6,[[],["accountroleview",4]]],[11,"clone","","",12,[[],["eventwithproofview",3]]],[11,"clone","","",5,[[],["amountview",3]]],[11,"clone","","",10,[[],["accountview",3]]],[11,"clone","","",36,[[],["transactionsproofsview",3]]],[11,"clone","","",43,[[],["accountstatewithproofview",3]]],[11,"clone","diem_json_rpc::errors","",2,[[],["errordata",4]]],[11,"clone","diem_json_rpc::views","",11,[[],["eventview",3]]],[11,"clone","diem_json_rpc::errors","",3,[[],["jsonrpcerror",3]]],[11,"clone","diem_json_rpc::views","",28,[[],["metadataview",3]]],[11,"serialize","diem_json_rpc::errors","",3,[[],["value",4]]],[11,"invalid_request","","",3,[[],["jsonrpcerror",3]]],[11,"invalid_request_with_data","","",3,[[["option",4],["errordata",4]],["jsonrpcerror",3]]],[11,"invalid_request_with_msg","","",3,[[["string",3]],["jsonrpcerror",3]]],[11,"invalid_format","","",3,[[],["jsonrpcerror",3]]],[11,"invalid_params","","",3,[[["option",4],["errordata",4]],["jsonrpcerror",3]]],[11,"invalid_params_size","","",3,[[["string",3]],["jsonrpcerror",3]]],[11,"invalid_param","","",3,[[],["jsonrpcerror",3]]],[11,"method_not_found","","",3,[[],["jsonrpcerror",3]]],[11,"internal_error","","",3,[[["string",3]],["jsonrpcerror",3]]],[11,"mempool_error","","",3,[[["mempoolstatus",3]],[["result",4],["jsonrpcerror",3],["error",3]]]],[11,"vm_status","","",3,[[["statuscode",4]],["jsonrpcerror",3]]],[11,"as_status_code","","",3,[[],[["statuscode",4],["option",4]]]],[11,"new","diem_json_rpc::response","",4,[[["chainid",3]],["jsonrpcresponse",3]]],[11,"new","diem_json_rpc::views","",10,[[["accountaddress",3],["accountresource",3],["balanceresource",3],["accountrole",4],["btreemap",3],["identifier",3],["freezingbit",3]],["accountview",3]]],[11,"into_bytes","","",29,[[],[["result",4],["vec",3],["error",3]]]],[11,"unknown","","",40,[[],["scriptview",3]]]],"p":[[4,"ServerCode"],[4,"InvalidRequestCode"],[4,"ErrorData"],[3,"JsonRpcError"],[3,"JsonRpcResponse"],[3,"AmountView"],[4,"AccountRoleView"],[13,"ChildVASP"],[13,"ParentVASP"],[13,"DesignatedDealer"],[3,"AccountView"],[3,"EventView"],[3,"EventWithProofView"],[4,"EventDataView"],[13,"Burn"],[13,"CancelBurn"],[13,"Mint"],[13,"ToXDXExchangeRateUpdate"],[13,"Preburn"],[13,"ReceivedPayment"],[13,"SentPayment"],[13,"AdminTransaction"],[13,"NewEpoch"],[13,"NewBlock"],[13,"ReceivedMint"],[13,"ComplianceKeyRotation"],[13,"BaseUrlRotation"],[13,"CreateAccount"],[3,"MetadataView"],[3,"BytesView"],[3,"MoveAbortExplanationView"],[4,"VMStatusView"],[13,"MoveAbort"],[13,"ExecutionFailure"],[3,"TransactionView"],[3,"TransactionsWithProofsView"],[3,"TransactionsProofsView"],[4,"TransactionDataView"],[13,"BlockMetadata"],[13,"UserTransaction"],[3,"ScriptView"],[3,"CurrencyInfoView"],[3,"StateProofView"],[3,"AccountStateWithProofView"],[3,"AccountStateProofView"]]},\
"diem_json_rpc_client":{"doc":"","i":[[0,"errors","diem_json_rpc_client","",null,null],[7,"INTERNAL_ERRORS","diem_json_rpc_client::errors","list of server internal errors",null,null],[5,"is_internal_error","","",null,[[]]],[4,"ServerCode","","Custom JSON RPC server error codes Ranges from -32000 to …",null,null],[13,"DefaultServerError","","",0,null],[13,"VmValidationError","","",0,null],[13,"VmVerificationError","","",0,null],[13,"VmInvariantViolationError","","",0,null],[13,"VmDeserializationError","","",0,null],[13,"VmExecutionError","","",0,null],[13,"VmUnknownError","","",0,null],[13,"MempoolInvalidSeqNumber","","",0,null],[13,"MempoolIsFull","","",0,null],[13,"MempoolTooManyTransactions","","",0,null],[13,"MempoolInvalidUpdate","","",0,null],[13,"MempoolVmError","","",0,null],[13,"MempoolUnknownError","","",0,null],[4,"InvalidRequestCode","","JSON RPC server error codes for invalid request",null,null],[13,"InvalidRequest","","",1,null],[13,"MethodNotFound","","",1,null],[13,"InvalidParams","","",1,null],[13,"InvalidFormat","","",1,null],[4,"ErrorData","","",null,null],[13,"StatusCode","","",2,null],[3,"JsonRpcError","","",null,null],[12,"code","","",3,null],[12,"message","","",3,null],[12,"data","","",3,null],[0,"views","diem_json_rpc_client","",null,null],[3,"AmountView","diem_json_rpc_client::views","",null,null],[12,"amount","","",4,null],[12,"currency","","",4,null],[4,"AccountRoleView","","",null,null],[13,"Unknown","","",5,null],[13,"ChildVASP","","",5,null],[12,"parent_vasp_address","diem_json_rpc_client::views::AccountRoleView","",6,null],[13,"ParentVASP","diem_json_rpc_client::views","",5,null],[12,"human_name","diem_json_rpc_client::views::AccountRoleView","",7,null],[12,"base_url","","",7,null],[12,"expiration_time","","",7,null],[12,"compliance_key","","",7,null],[12,"num_children","","",7,null],[12,"compliance_key_rotation_events_key","","",7,null],[12,"base_url_rotation_events_key","","",7,null],[13,"DesignatedDealer","diem_json_rpc_client::views","",5,null],[12,"human_name","diem_json_rpc_client::views::AccountRoleView","",8,null],[12,"base_url","","",8,null],[12,"expiration_time","","",8,null],[12,"compliance_key","","",8,null],[12,"preburn_balances","","",8,null],[12,"received_mint_events_key","","",8,null],[12,"compliance_key_rotation_events_key","","",8,null],[12,"base_url_rotation_events_key","","",8,null],[3,"AccountView","diem_json_rpc_client::views","",null,null],[12,"address","","",9,null],[12,"balances","","",9,null],[12,"sequence_number","","",9,null],[12,"authentication_key","","",9,null],[12,"sent_events_key","","",9,null],[12,"received_events_key","","",9,null],[12,"delegated_key_rotation_capability","","",9,null],[12,"delegated_withdrawal_capability","","",9,null],[12,"is_frozen","","",9,null],[12,"role","","",9,null],[3,"EventView","","",null,null],[12,"key","","",10,null],[12,"sequence_number","","",10,null],[12,"transaction_version","","",10,null],[12,"data","","",10,null],[3,"EventWithProofView","","",null,null],[12,"event_with_proof","","",11,null],[4,"EventDataView","","",null,null],[13,"Burn","","",12,null],[12,"amount","diem_json_rpc_client::views::EventDataView","",13,null],[12,"preburn_address","","",13,null],[13,"CancelBurn","diem_json_rpc_client::views","",12,null],[12,"amount","diem_json_rpc_client::views::EventDataView","",14,null],[12,"preburn_address","","",14,null],[13,"Mint","diem_json_rpc_client::views","",12,null],[12,"amount","diem_json_rpc_client::views::EventDataView","",15,null],[13,"ToXDXExchangeRateUpdate","diem_json_rpc_client::views","",12,null],[12,"currency_code","diem_json_rpc_client::views::EventDataView","",16,null],[12,"new_to_xdx_exchange_rate","","",16,null],[13,"Preburn","diem_json_rpc_client::views","",12,null],[12,"amount","diem_json_rpc_client::views::EventDataView","",17,null],[12,"preburn_address","","",17,null],[13,"ReceivedPayment","diem_json_rpc_client::views","",12,null],[12,"amount","diem_json_rpc_client::views::EventDataView","",18,null],[12,"sender","","",18,null],[12,"receiver","","",18,null],[12,"metadata","","",18,null],[13,"SentPayment","diem_json_rpc_client::views","",12,null],[12,"amount","diem_json_rpc_client::views::EventDataView","",19,null],[12,"receiver","","",19,null],[12,"sender","","",19,null],[12,"metadata","","",19,null],[13,"AdminTransaction","diem_json_rpc_client::views","",12,null],[12,"committed_timestamp_secs","diem_json_rpc_client::views::EventDataView","",20,null],[13,"NewEpoch","diem_json_rpc_client::views","",12,null],[12,"epoch","diem_json_rpc_client::views::EventDataView","",21,null],[13,"NewBlock","diem_json_rpc_client::views","",12,null],[12,"round","diem_json_rpc_client::views::EventDataView","",22,null],[12,"proposer","","",22,null],[12,"proposed_time","","",22,null],[13,"ReceivedMint","diem_json_rpc_client::views","",12,null],[12,"amount","diem_json_rpc_client::views::EventDataView","",23,null],[12,"destination_address","","",23,null],[13,"ComplianceKeyRotation","diem_json_rpc_client::views","",12,null],[12,"new_compliance_public_key","diem_json_rpc_client::views::EventDataView","",24,null],[12,"time_rotated_seconds","","",24,null],[13,"BaseUrlRotation","diem_json_rpc_client::views","",12,null],[12,"new_base_url","diem_json_rpc_client::views::EventDataView","",25,null],[12,"time_rotated_seconds","","",25,null],[13,"CreateAccount","diem_json_rpc_client::views","",12,null],[12,"created_address","diem_json_rpc_client::views::EventDataView","",26,null],[12,"role_id","","",26,null],[13,"Unknown","diem_json_rpc_client::views","",12,null],[3,"MetadataView","","",null,null],[12,"version","","",27,null],[12,"accumulator_root_hash","","",27,null],[12,"timestamp","","",27,null],[12,"chain_id","","",27,null],[12,"script_hash_allow_list","","",27,null],[12,"module_publishing_allowed","","",27,null],[12,"diem_version","","",27,null],[12,"dual_attestation_limit","","",27,null],[3,"BytesView","","",null,null],[12,"0","","",28,null],[3,"MoveAbortExplanationView","","",null,null],[12,"category","","",29,null],[12,"category_description","","",29,null],[12,"reason","","",29,null],[12,"reason_description","","",29,null],[4,"VMStatusView","","",null,null],[13,"Executed","","",30,null],[13,"OutOfGas","","",30,null],[13,"MoveAbort","","",30,null],[12,"location","diem_json_rpc_client::views::VMStatusView","",31,null],[12,"abort_code","","",31,null],[12,"explanation","","",31,null],[13,"ExecutionFailure","diem_json_rpc_client::views","",30,null],[12,"location","diem_json_rpc_client::views::VMStatusView","",32,null],[12,"function_index","","",32,null],[12,"code_offset","","",32,null],[13,"MiscellaneousError","diem_json_rpc_client::views","",30,null],[13,"VerificationError","","",30,null],[13,"DeserializationError","","",30,null],[13,"PublishingFailure","","",30,null],[3,"TransactionView","","",null,null],[12,"version","","",33,null],[12,"transaction","","",33,null],[12,"hash","","",33,null],[12,"bytes","","",33,null],[12,"events","","",33,null],[12,"vm_status","","",33,null],[12,"gas_used","","",33,null],[3,"TransactionsWithProofsView","","",null,null],[12,"serialized_transactions","","",34,null],[12,"proofs","","",34,null],[3,"TransactionsProofsView","","",null,null],[12,"ledger_info_to_transaction_infos_proof","","",35,null],[12,"transaction_infos","","",35,null],[4,"TransactionDataView","","",null,null],[13,"BlockMetadata","","",36,null],[12,"timestamp_usecs","diem_json_rpc_client::views::TransactionDataView","",37,null],[13,"WriteSet","diem_json_rpc_client::views","",36,null],[13,"UserTransaction","","",36,null],[12,"sender","diem_json_rpc_client::views::TransactionDataView","",38,null],[12,"signature_scheme","","",38,null],[12,"signature","","",38,null],[12,"public_key","","",38,null],[12,"sequence_number","","",38,null],[12,"chain_id","","",38,null],[12,"max_gas_amount","","",38,null],[12,"gas_unit_price","","",38,null],[12,"gas_currency","","",38,null],[12,"expiration_timestamp_secs","","",38,null],[12,"script_hash","","",38,null],[12,"script_bytes","","",38,null],[12,"script","","",38,null],[13,"UnknownTransaction","diem_json_rpc_client::views","",36,null],[3,"ScriptView","","",null,null],[12,"type","","",39,null],[12,"code","","",39,null],[12,"arguments","","",39,null],[12,"type_arguments","","",39,null],[12,"receiver","","",39,null],[12,"amount","","",39,null],[12,"currency","","",39,null],[12,"metadata","","",39,null],[12,"metadata_signature","","",39,null],[3,"CurrencyInfoView","","",null,null],[12,"code","","",40,null],[12,"scaling_factor","","",40,null],[12,"fractional_part","","",40,null],[12,"to_xdx_exchange_rate","","",40,null],[12,"mint_events_key","","",40,null],[12,"burn_events_key","","",40,null],[12,"preburn_events_key","","",40,null],[12,"cancel_burn_events_key","","",40,null],[12,"exchange_rate_update_events_key","","",40,null],[3,"StateProofView","","",null,null],[12,"ledger_info_with_signatures","","",41,null],[12,"epoch_change_proof","","",41,null],[12,"ledger_consistency_proof","","",41,null],[3,"AccountStateWithProofView","","",null,null],[12,"version","","",42,null],[12,"blob","","",42,null],[12,"proof","","",42,null],[3,"AccountStateProofView","","",null,null],[12,"ledger_info_to_transaction_info_proof","","",43,null],[12,"transaction_info","","",43,null],[12,"transaction_info_to_account_proof","","",43,null],[3,"AccountAddress","diem_json_rpc_client","A struct that represents an account address.",null,null],[3,"SignedTransaction","","A transaction that has been signed.",null,null],[0,"async_client","","",null,null],[3,"JsonRpcError","diem_json_rpc_client::async_client","",null,null],[12,"code","","",3,null],[12,"message","","",3,null],[12,"data","","",3,null],[0,"types","","",null,null],[3,"Amount","diem_json_rpc_client::async_client::types","",null,null],[12,"amount","","",44,null],[12,"currency","","",44,null],[3,"Account","","",null,null],[12,"address","","hex-encoded bytes",45,null],[12,"balances","","",45,null],[12,"sequence_number","","",45,null],[12,"authentication_key","","hex-encoded bytes",45,null],[12,"sent_events_key","","hex-encoded bytes",45,null],[12,"received_events_key","","hex-encoded bytes",45,null],[12,"delegated_key_rotation_capability","","",45,null],[12,"delegated_withdrawal_capability","","",45,null],[12,"is_frozen","","",45,null],[12,"role","","",45,null],[3,"AccountRole","","",null,null],[12,"type","","",46,null],[12,"parent_vasp_address","","",46,null],[12,"human_name","","",46,null],[12,"base_url","","",46,null],[12,"expiration_time","","",46,null],[12,"compliance_key","","hex-encoded bytes",46,null],[12,"compliance_key_rotation_events_key","","hex-encoded bytes",46,null],[12,"base_url_rotation_events_key","","hex-encoded bytes",46,null],[12,"num_children","","",46,null],[12,"received_mint_events_key","","hex-encoded bytes",46,null],[12,"preburn_balances","","",46,null],[3,"Event","","",null,null],[12,"key","","",47,null],[12,"sequence_number","","",47,null],[12,"transaction_version","","",47,null],[12,"data","","",47,null],[3,"EventData","","",null,null],[12,"type","","",48,null],[12,"amount","","burn, cancelburn, mint, preburn, receivedpayment, …",48,null],[12,"preburn_address","","burn, cancelburn, preburn events hex-encoded bytes",48,null],[12,"currency_code","","to_xdx_exchange_rate_update event only",48,null],[12,"new_to_xdx_exchange_rate","","",48,null],[12,"sender","","receivedpayment and sentpayment events hex-encoded bytes",48,null],[12,"receiver","","hex-encoded bytes",48,null],[12,"metadata","","hex-encoded bytes",48,null],[12,"epoch","","newepoch event only",48,null],[12,"round","","newblock event only",48,null],[12,"proposer","","hex-encoded bytes",48,null],[12,"proposed_time","","",48,null],[12,"destination_address","","receivedmint event only hex-encoded bytes",48,null],[12,"new_compliance_public_key","","compliancekeyrotation event only hex-encoded bytes",48,null],[12,"new_base_url","","baseurlrotation event only",48,null],[12,"time_rotated_seconds","","compliancekeyrotation and baseurlrotation events",48,null],[12,"created_address","","createaccount event field. Hex-encoded account address …",48,null],[12,"role_id","","createaccount event field. Role id of the created …",48,null],[12,"committed_timestamp_secs","","admintransaction event field. The block time when this …",48,null],[3,"Metadata","","",null,null],[12,"version","","The block (ledger) version",49,null],[12,"timestamp","","The block (ledger) timestamp, unit is microsecond",49,null],[12,"chain_id","","Chain ID of the Diem network",49,null],[12,"script_hash_allow_list","","List of allowed scripts hex-encoded hash bytes, server …",49,null],[12,"module_publishing_allowed","","True for allowing publishing customized script, server …",49,null],[12,"diem_version","","Diem chain major version number.",49,null],[12,"accumulator_root_hash","","accumulator root hash of the ledger version requested",49,null],[12,"dual_attestation_limit","","The dual attestation limit on-chain. Defined in terms of …",49,null],[3,"Transaction","","",null,null],[12,"version","","",50,null],[12,"transaction","","",50,null],[12,"hash","","",50,null],[12,"bytes","","hex-encoded bcs bytes",50,null],[12,"events","","",50,null],[12,"vm_status","","",50,null],[12,"gas_used","","",50,null],[3,"MoveAbortExplaination","","",null,null],[12,"category","","",51,null],[12,"category_description","","",51,null],[12,"reason","","",51,null],[12,"reason_description","","",51,null],[3,"VmStatus","","",null,null],[12,"type","","",52,null],[12,"location","","move_abort, execution_failure",52,null],[12,"abort_code","","move_abort only",52,null],[12,"function_index","","execution_failure only",52,null],[12,"code_offset","","",52,null],[12,"explanation","","move_abort only",52,null],[3,"TransactionData","","",null,null],[12,"type","","",53,null],[12,"timestamp_usecs","","blockmetadata",53,null],[12,"sender","","user",53,null],[12,"signature_scheme","","",53,null],[12,"signature","","",53,null],[12,"public_key","","hex-encoded bytes",53,null],[12,"sequence_number","","",53,null],[12,"chain_id","","",53,null],[12,"max_gas_amount","","",53,null],[12,"gas_unit_price","","",53,null],[12,"gas_currency","","",53,null],[12,"expiration_timestamp_secs","","",53,null],[12,"script_hash","","",53,null],[12,"script_bytes","","hex-encoded bytes",53,null],[12,"script","","",53,null],[3,"Script","","",null,null],[12,"type","","Name of the script code, see …",54,null],[12,"code","","Hex-encoded compiled move script bytes.",54,null],[12,"arguments","","List of string value of the script arguments. Contains …",54,null],[12,"type_arguments","","List of type arguments, converted into string.",54,null],[12,"receiver","","hex-encoded receiver account address bytes",54,null],[12,"amount","","peer to peer transfer amount.",54,null],[12,"currency","","peer to peer transfer currency code.",54,null],[12,"metadata","","Metadata of the transaction, LCS serialized hex-encoded …",54,null],[12,"metadata_signature","","Hex-encoded metadata signature, use this to validate …",54,null],[3,"CurrencyInfo","","",null,null],[12,"code","","",55,null],[12,"scaling_factor","","",55,null],[12,"fractional_part","","",55,null],[12,"to_xdx_exchange_rate","","",55,null],[12,"mint_events_key","","hex-encoded bytes",55,null],[12,"burn_events_key","","hex-encoded bytes",55,null],[12,"preburn_events_key","","HEX-encoded bytes",55,null],[12,"cancel_burn_events_key","","hex-encoded bytes",55,null],[12,"exchange_rate_update_events_key","","hex-encoded bytes",55,null],[3,"StateProof","","This is for experimental API get_state_proof response. It …",null,null],[12,"ledger_info_with_signatures","","hex-encoded bcs bytes",56,null],[12,"epoch_change_proof","","hex-encoded bcs bytes",56,null],[12,"ledger_consistency_proof","","hex-encoded bcs bytes",56,null],[3,"AccountStateWithProof","","This is for experimental API get_account_state_with_proof …",null,null],[12,"version","","",57,null],[12,"blob","","hex-encoded bcs bytes",57,null],[12,"proof","","hex-encoded bcs bytes",57,null],[3,"AccountStateProof","","This is for experimental API get_account_state_with_proof …",null,null],[12,"ledger_info_to_transaction_info_proof","","hex-encoded bcs bytes",58,null],[12,"transaction_info","","hex-encoded bcs bytes",58,null],[12,"transaction_info_to_account_proof","","hex-encoded bcs bytes",58,null],[17,"ACCOUNT_ROLE_UNKNOWN","","",null,null],[17,"ACCOUNT_ROLE_CHILD_VASP","","",null,null],[17,"ACCOUNT_ROLE_PARENT_VASP","","",null,null],[17,"ACCOUNT_ROLE_DESIGNATED_DEALER","","",null,null],[17,"EVENT_DATA_UNKNOWN","","",null,null],[17,"EVENT_DATA_BURN","","",null,null],[17,"EVENT_DATA_CANCEL_BURN","","",null,null],[17,"EVENT_DATA_MINT","","",null,null],[17,"EVENT_DATA_TO_XDX_EXCHANGE_RATE_UPDATE","","",null,null],[17,"EVENT_DATA_PREBURN","","",null,null],[17,"EVENT_DATA_RECEIVED_PAYMENT","","",null,null],[17,"EVENT_DATA_SENT_PAYMENT","","",null,null],[17,"EVENT_DATA_NEW_EPOCH","","",null,null],[17,"EVENT_DATA_NEW_BLOCK","","",null,null],[17,"EVENT_DATA_RECEIVED_MINT","","",null,null],[17,"EVENT_DATA_COMPLIANCE_KEY_ROTATION","","",null,null],[17,"EVENT_DATA_BASE_URL_ROTATION","","",null,null],[17,"EVENT_DATA_CREATE_ACCOUNT","","",null,null],[17,"EVENT_DATA_ADMIN_TRANSACTION","","",null,null],[17,"VM_STATUS_EXECUTED","","",null,null],[17,"VM_STATUS_OUT_OF_GAS","","",null,null],[17,"VM_STATUS_MOVE_ABORT","","",null,null],[17,"VM_STATUS_EXECUTION_FAILURE","","",null,null],[17,"VM_STATUS_MISC_ERROR","","",null,null],[17,"TRANSACTION_DATA_BLOCK_METADATA","","",null,null],[17,"TRANSACTION_DATA_WRITE_SET","","",null,null],[17,"TRANSACTION_DATA_USER","","",null,null],[17,"TRANSACTION_DATA_UNKNOWN","","",null,null],[17,"SCRIPT_UNKNOWN","","",null,null],[3,"JsonRpcResponse","diem_json_rpc_client::async_client","",null,null],[12,"diem_chain_id","","",59,null],[12,"diem_ledger_version","","",59,null],[12,"diem_ledger_timestampusec","","",59,null],[12,"jsonrpc","","",59,null],[12,"id","","",59,null],[12,"result","","",59,null],[12,"error","","",59,null],[0,"defaults","","",null,null],[17,"MAX_RETRIES","diem_json_rpc_client::async_client::defaults","",null,null],[17,"WAIT_DELAY","","",null,null],[17,"TIMEOUT","","",null,null],[17,"HTTP_REQUEST_TIMEOUT","","",null,null],[3,"Client","diem_json_rpc_client::async_client","",null,null],[12,"http_client","","",60,null],[12,"retry","","",60,null],[4,"Error","","",null,null],[13,"NetworkError","","",61,null],[13,"InvalidHTTPStatus","","",61,null],[13,"InvalidHTTPResponse","","",61,null],[13,"InvalidRpcResponse","","",61,null],[13,"DeserializeResponseJsonError","","",61,null],[13,"JsonRpcError","","",61,null],[13,"ResultNotFound","","",61,null],[13,"StaleResponseError","","",61,null],[13,"ChainIdMismatch","","",61,null],[13,"ResponseTimeout","","",61,null],[13,"UnexpectedError","","",61,null],[4,"UnexpectedError","","",null,null],[13,"BCSError","","",62,null],[13,"InvalidResponseId","","",62,null],[13,"InvalidResponseIdType","","",62,null],[13,"ResponseIdNotFound","","",62,null],[13,"InvalidBatchResponse","","",62,null],[13,"DuplicatedResponseId","","",62,null],[13,"NoResponse","","",62,null],[13,"Uncategorized","","",62,null],[4,"WaitForTransactionError","","",null,null],[13,"GetTransactionError","","",63,null],[13,"TransactionHashMismatchError","","",63,null],[13,"TransactionExecutionFailed","","",63,null],[13,"Timeout","","",63,null],[13,"TransactionExpired","","",63,null],[3,"BroadcastHttpClient","","",null,null],[12,"http_client","","",64,null],[12,"urls","","",64,null],[12,"num_parallel_requests","","",64,null],[12,"state_manager","","",64,null],[8,"HttpClient","","",null,null],[10,"single_request","","",65,[[["request",3]],[["pin",3],["box",3]]]],[10,"batch_request","","",65,[[],[["box",3],["pin",3]]]],[10,"update_state","","",65,[[["state",3]]]],[10,"last_known_state","","",65,[[],[["option",4],["state",3]]]],[11,"validate","","",65,[[["jsonrpcresponse",3]],[["error",4],["result",4]]]],[3,"Request","","",null,null],[12,"method","","",66,null],[12,"params","","",66,null],[3,"Response","","",null,null],[12,"result","","",67,null],[12,"state","","",67,null],[3,"SimpleHttpClient","","",null,null],[12,"http_client","","",68,null],[12,"url","","",68,null],[12,"state_manager","","",68,null],[3,"Retry","","",null,null],[12,"max_retries","","",69,null],[12,"delay","","",69,null],[8,"RetryStrategy","","",null,null],[10,"max_retries","","",70,[[["error",4]]]],[10,"delay","","",70,[[["error",4]],["duration",3]]],[10,"is_retriable","","",70,[[["error",4]]]],[3,"State","","",null,null],[12,"chain_id","","",71,null],[12,"version","","",71,null],[12,"timestamp_usecs","","",71,null],[3,"StateManager","","",null,null],[11,"from","diem_json_rpc_client::errors","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"from","diem_json_rpc_client::async_client","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"vzip","","",3,[[]]],[11,"from","diem_json_rpc_client::views","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"test_only_hash","","",4,[[],["hashvalue",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"test_only_hash","","",9,[[],["hashvalue",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"test_only_hash","","",10,[[],["hashvalue",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"test_only_hash","","",11,[[],["hashvalue",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"test_only_hash","","",12,[[],["hashvalue",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"test_only_hash","","",27,[[],["hashvalue",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"test_only_hash","","",28,[[],["hashvalue",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"test_only_hash","","",29,[[],["hashvalue",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"test_only_hash","","",30,[[],["hashvalue",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"test_only_hash","","",33,[[],["hashvalue",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"test_only_hash","","",34,[[],["hashvalue",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"test_only_hash","","",35,[[],["hashvalue",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"test_only_hash","","",36,[[],["hashvalue",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"test_only_hash","","",39,[[],["hashvalue",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"test_only_hash","","",40,[[],["hashvalue",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"test_only_hash","","",41,[[],["hashvalue",3]]],[11,"vzip","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"test_only_hash","","",42,[[],["hashvalue",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"test_only_hash","","",43,[[],["hashvalue",3]]],[11,"vzip","","",43,[[]]],[11,"from","diem_json_rpc_client","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"to_string","","",72,[[],["string",3]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"test_only_hash","","",72,[[],["hashvalue",3]]],[11,"vzip","","",72,[[]]],[11,"encode_hex","","",72,[[]]],[11,"encode_hex_upper","","",72,[[]]],[11,"equivalent","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"test_only_hash","","",73,[[],["hashvalue",3]]],[11,"vzip","","",73,[[]]],[11,"equivalent","","",73,[[]]],[11,"from","diem_json_rpc_client::async_client::types","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"test_only_hash","","",44,[[],["hashvalue",3]]],[11,"vzip","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"test_only_hash","","",45,[[],["hashvalue",3]]],[11,"vzip","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"test_only_hash","","",46,[[],["hashvalue",3]]],[11,"vzip","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"test_only_hash","","",47,[[],["hashvalue",3]]],[11,"vzip","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"test_only_hash","","",48,[[],["hashvalue",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"test_only_hash","","",49,[[],["hashvalue",3]]],[11,"vzip","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"test_only_hash","","",50,[[],["hashvalue",3]]],[11,"vzip","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"test_only_hash","","",51,[[],["hashvalue",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"test_only_hash","","",52,[[],["hashvalue",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"test_only_hash","","",53,[[],["hashvalue",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"test_only_hash","","",54,[[],["hashvalue",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"test_only_hash","","",55,[[],["hashvalue",3]]],[11,"vzip","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"test_only_hash","","",56,[[],["hashvalue",3]]],[11,"vzip","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"test_only_hash","","",57,[[],["hashvalue",3]]],[11,"vzip","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"test_only_hash","","",58,[[],["hashvalue",3]]],[11,"vzip","","",58,[[]]],[11,"from","diem_json_rpc_client::async_client","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"test_only_hash","","",59,[[],["hashvalue",3]]],[11,"vzip","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_string","","",61,[[],["string",3]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_string","","",62,[[],["string",3]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_string","","",63,[[],["string",3]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"fmt","diem_json_rpc_client::views","",29,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",28,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",30,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc_client::async_client","",3,[[["formatter",3]],[["result",4],["error",3]]]],[11,"eq","diem_json_rpc_client::async_client::types","",48,[[["eventdata",3]]]],[11,"ne","","",48,[[["eventdata",3]]]],[11,"eq","diem_json_rpc_client::views","",28,[[["bytesview",3]]]],[11,"ne","","",28,[[["bytesview",3]]]],[11,"eq","diem_json_rpc_client::async_client::types","",52,[[["vmstatus",3]]]],[11,"ne","","",52,[[["vmstatus",3]]]],[11,"eq","","",55,[[["currencyinfo",3]]]],[11,"ne","","",55,[[["currencyinfo",3]]]],[11,"eq","","",54,[[["script",3]]]],[11,"ne","","",54,[[["script",3]]]],[11,"eq","diem_json_rpc_client::views","",4,[[["amountview",3]]]],[11,"ne","","",4,[[["amountview",3]]]],[11,"eq","","",9,[[["accountview",3]]]],[11,"ne","","",9,[[["accountview",3]]]],[11,"eq","diem_json_rpc_client::async_client::types","",58,[[["accountstateproof",3]]]],[11,"ne","","",58,[[["accountstateproof",3]]]],[11,"eq","","",56,[[["stateproof",3]]]],[11,"ne","","",56,[[["stateproof",3]]]],[11,"eq","diem_json_rpc_client::views","",10,[[["eventview",3]]]],[11,"ne","","",10,[[["eventview",3]]]],[11,"eq","","",12,[[["eventdataview",4]]]],[11,"ne","","",12,[[["eventdataview",4]]]],[11,"eq","","",41,[[["stateproofview",3]]]],[11,"ne","","",41,[[["stateproofview",3]]]],[11,"eq","","",43,[[["accountstateproofview",3]]]],[11,"ne","","",43,[[["accountstateproofview",3]]]],[11,"eq","","",11,[[["eventwithproofview",3]]]],[11,"ne","","",11,[[["eventwithproofview",3]]]],[11,"eq","","",33,[[["transactionview",3]]]],[11,"ne","","",33,[[["transactionview",3]]]],[11,"eq","","",42,[[["accountstatewithproofview",3]]]],[11,"ne","","",42,[[["accountstatewithproofview",3]]]],[11,"eq","","",29,[[["moveabortexplanationview",3]]]],[11,"ne","","",29,[[["moveabortexplanationview",3]]]],[11,"eq","","",5,[[["accountroleview",4]]]],[11,"ne","","",5,[[["accountroleview",4]]]],[11,"eq","diem_json_rpc_client::async_client::types","",44,[[["amount",3]]]],[11,"ne","","",44,[[["amount",3]]]],[11,"eq","","",57,[[["accountstatewithproof",3]]]],[11,"ne","","",57,[[["accountstatewithproof",3]]]],[11,"eq","","",50,[[["transaction",3]]]],[11,"ne","","",50,[[["transaction",3]]]],[11,"eq","diem_json_rpc_client::views","",39,[[["scriptview",3]]]],[11,"ne","","",39,[[["scriptview",3]]]],[11,"eq","","",30,[[["vmstatusview",4]]]],[11,"ne","","",30,[[["vmstatusview",4]]]],[11,"eq","diem_json_rpc_client::async_client::types","",46,[[["accountrole",3]]]],[11,"ne","","",46,[[["accountrole",3]]]],[11,"eq","","",45,[[["account",3]]]],[11,"ne","","",45,[[["account",3]]]],[11,"eq","diem_json_rpc_client::views","",40,[[["currencyinfoview",3]]]],[11,"ne","","",40,[[["currencyinfoview",3]]]],[11,"eq","diem_json_rpc_client::async_client::types","",49,[[["metadata",3]]]],[11,"ne","","",49,[[["metadata",3]]]],[11,"eq","diem_json_rpc_client::views","",34,[[["transactionswithproofsview",3]]]],[11,"ne","","",34,[[["transactionswithproofsview",3]]]],[11,"eq","","",36,[[["transactiondataview",4]]]],[11,"ne","","",36,[[["transactiondataview",4]]]],[11,"eq","","",35,[[["transactionsproofsview",3]]]],[11,"ne","","",35,[[["transactionsproofsview",3]]]],[11,"eq","diem_json_rpc_client::async_client::types","",51,[[["moveabortexplaination",3]]]],[11,"ne","","",51,[[["moveabortexplaination",3]]]],[11,"eq","diem_json_rpc_client::views","",27,[[["metadataview",3]]]],[11,"ne","","",27,[[["metadataview",3]]]],[11,"eq","diem_json_rpc_client::async_client::types","",53,[[["transactiondata",3]]]],[11,"ne","","",53,[[["transactiondata",3]]]],[11,"eq","","",47,[[["event",3]]]],[11,"ne","","",47,[[["event",3]]]],[11,"encode_raw","","",49,[[]]],[11,"merge_field","","",49,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",49,[[]]],[11,"clear","","",49,[[]]],[11,"encode_raw","","",47,[[]]],[11,"merge_field","","",47,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",47,[[]]],[11,"clear","","",47,[[]]],[11,"encode_raw","","",44,[[]]],[11,"merge_field","","",44,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",44,[[]]],[11,"clear","","",44,[[]]],[11,"encode_raw","","",54,[[]]],[11,"merge_field","","",54,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",54,[[]]],[11,"clear","","",54,[[]]],[11,"encode_raw","","",52,[[]]],[11,"merge_field","","",52,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",52,[[]]],[11,"clear","","",52,[[]]],[11,"encode_raw","","",51,[[]]],[11,"merge_field","","",51,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",51,[[]]],[11,"clear","","",51,[[]]],[11,"encode_raw","","",58,[[]]],[11,"merge_field","","",58,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",58,[[]]],[11,"clear","","",58,[[]]],[11,"encode_raw","","",48,[[]]],[11,"merge_field","","",48,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",48,[[]]],[11,"clear","","",48,[[]]],[11,"encode_raw","","",46,[[]]],[11,"merge_field","","",46,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",46,[[]]],[11,"clear","","",46,[[]]],[11,"encode_raw","","",45,[[]]],[11,"merge_field","","",45,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",45,[[]]],[11,"clear","","",45,[[]]],[11,"encode_raw","","",53,[[]]],[11,"merge_field","","",53,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",53,[[]]],[11,"clear","","",53,[[]]],[11,"encode_raw","","",57,[[]]],[11,"merge_field","","",57,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",57,[[]]],[11,"clear","","",57,[[]]],[11,"encode_raw","","",56,[[]]],[11,"merge_field","","",56,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",56,[[]]],[11,"clear","","",56,[[]]],[11,"encode_raw","","",55,[[]]],[11,"merge_field","","",55,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",55,[[]]],[11,"clear","","",55,[[]]],[11,"encode_raw","","",50,[[]]],[11,"merge_field","","",50,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",50,[[]]],[11,"clear","","",50,[[]]],[11,"from","diem_json_rpc_client::views","",5,[[["accountrole",4]],["accountroleview",4]]],[11,"from","","",28,[[["vec",3]],["bytesview",3]]],[11,"from","","",28,[[["accountaddress",3]],["bytesview",3]]],[11,"from","","",28,[[["accountaddress",3]],["bytesview",3]]],[11,"from","","",28,[[["global",3],["vec",3]],["bytesview",3]]],[11,"from","diem_json_rpc_client::async_client","",3,[[["error",3]],["jsonrpcerror",3]]],[11,"from","","",3,[[["error",3]],["jsonrpcerror",3]]],[11,"from","diem_json_rpc_client::views","",40,[[["currencyinforesource",3]],["currencyinfoview",3]]],[11,"from","","",28,[[],["bytesview",3]]],[11,"from","","",28,[[["hashvalue",3]],["bytesview",3]]],[11,"fmt","diem_json_rpc_client::async_client::types","",58,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc_client::views","",29,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",30,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",40,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc_client::async_client::types","",54,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",48,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc_client::views","",34,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc_client::async_client::types","",55,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc_client::views","",4,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc_client::async_client::types","",49,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc_client::views","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",35,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",28,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",42,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc_client::async_client","",3,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc_client::views","",10,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc_client::async_client::types","",56,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",44,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",52,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc_client::views","",43,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc_client::async_client::types","",51,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc_client::async_client","",59,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc_client::views","",27,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",36,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc_client::async_client::types","",46,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc_client::views","",33,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc_client::async_client::types","",45,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc_client::views","",41,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc_client::async_client::types","",47,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc_client::views","",5,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",11,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",39,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc_client::errors","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_json_rpc_client::async_client::types","",50,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",53,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",57,[[["formatter",3]],[["result",4],["error",3]]]],[11,"try_from","diem_json_rpc_client::views","",42,[[["accountstatewithproof",3]],[["result",4],["accountstatewithproofview",3],["error",3]]]],[11,"try_from","","",41,[[],[["result",4],["stateproofview",3]]]],[11,"try_from","","",43,[[["accountstateproof",3]],[["accountstateproofview",3],["error",3],["result",4]]]],[11,"try_from","","",10,[[],[["eventview",3],["result",4],["error",3]]]],[11,"try_from","","",12,[[["contractevent",4]],[["result",4],["error",3],["eventdataview",4]]]],[11,"deserialize","","",28,[[],[["bytesview",3],["result",4]]]],[11,"deserialize","diem_json_rpc_client::async_client::types","",49,[[],[["metadata",3],["result",4]]]],[11,"deserialize","diem_json_rpc_client::views","",30,[[],[["vmstatusview",4],["result",4]]]],[11,"deserialize","","",27,[[],[["metadataview",3],["result",4]]]],[11,"deserialize","diem_json_rpc_client::async_client","",59,[[],[["jsonrpcresponse",3],["result",4]]]],[11,"deserialize","diem_json_rpc_client::async_client::types","",46,[[],[["accountrole",3],["result",4]]]],[11,"deserialize","","",52,[[],[["result",4],["vmstatus",3]]]],[11,"deserialize","","",48,[[],[["result",4],["eventdata",3]]]],[11,"deserialize","diem_json_rpc_client::views","",11,[[],[["result",4],["eventwithproofview",3]]]],[11,"deserialize","diem_json_rpc_client::async_client::types","",51,[[],[["moveabortexplaination",3],["result",4]]]],[11,"deserialize","diem_json_rpc_client::views","",5,[[],[["accountroleview",4],["result",4]]]],[11,"deserialize","","",9,[[],[["accountview",3],["result",4]]]],[11,"deserialize","diem_json_rpc_client::async_client::types","",53,[[],[["transactiondata",3],["result",4]]]],[11,"deserialize","","",58,[[],[["accountstateproof",3],["result",4]]]],[11,"deserialize","","",54,[[],[["result",4],["script",3]]]],[11,"deserialize","diem_json_rpc_client::views","",40,[[],[["currencyinfoview",3],["result",4]]]],[11,"deserialize","","",36,[[],[["result",4],["transactiondataview",4]]]],[11,"deserialize","diem_json_rpc_client::errors","",2,[[],[["errordata",4],["result",4]]]],[11,"deserialize","diem_json_rpc_client::views","",34,[[],[["transactionswithproofsview",3],["result",4]]]],[11,"deserialize","diem_json_rpc_client::async_client::types","",45,[[],[["result",4],["account",3]]]],[11,"deserialize","diem_json_rpc_client::views","",12,[[],[["eventdataview",4],["result",4]]]],[11,"deserialize","diem_json_rpc_client::async_client::types","",44,[[],[["amount",3],["result",4]]]],[11,"deserialize","","",47,[[],[["event",3],["result",4]]]],[11,"deserialize","","",55,[[],[["result",4],["currencyinfo",3]]]],[11,"deserialize","diem_json_rpc_client::views","",42,[[],[["accountstatewithproofview",3],["result",4]]]],[11,"deserialize","","",39,[[],[["scriptview",3],["result",4]]]],[11,"deserialize","","",29,[[],[["result",4],["moveabortexplanationview",3]]]],[11,"deserialize","diem_json_rpc_client::async_client","",3,[[],[["jsonrpcerror",3],["result",4]]]],[11,"deserialize","diem_json_rpc_client::async_client::types","",50,[[],[["result",4],["transaction",3]]]],[11,"deserialize","diem_json_rpc_client::views","",33,[[],[["result",4],["transactionview",3]]]],[11,"deserialize","","",35,[[],[["result",4],["transactionsproofsview",3]]]],[11,"deserialize","","",4,[[],[["amountview",3],["result",4]]]],[11,"deserialize","","",41,[[],[["result",4],["stateproofview",3]]]],[11,"deserialize","diem_json_rpc_client::async_client::types","",56,[[],[["result",4],["stateproof",3]]]],[11,"deserialize","diem_json_rpc_client::views","",43,[[],[["accountstateproofview",3],["result",4]]]],[11,"deserialize","","",10,[[],[["result",4],["eventview",3]]]],[11,"deserialize","diem_json_rpc_client::async_client::types","",57,[[],[["result",4],["accountstatewithproof",3]]]],[11,"serialize","","",54,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::views","",28,[[],["result",4]]],[11,"serialize","","",43,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::async_client::types","",46,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::views","",10,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::async_client::types","",48,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::async_client","",3,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::views","",40,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",35,[[],["result",4]]],[11,"serialize","","",41,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::async_client::types","",56,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::views","",39,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::async_client::types","",55,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::views","",9,[[],["result",4]]],[11,"serialize","","",29,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::async_client::types","",58,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::views","",42,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::async_client::types","",57,[[],["result",4]]],[11,"serialize","","",44,[[],["result",4]]],[11,"serialize","","",45,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::views","",4,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::async_client::types","",51,[[],["result",4]]],[11,"serialize","","",47,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::views","",30,[[],["result",4]]],[11,"serialize","","",33,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::errors","",2,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::async_client::types","",52,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::views","",34,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::async_client","",59,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::async_client::types","",53,[[],["result",4]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::views","",27,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::async_client::types","",50,[[],["result",4]]],[11,"serialize","diem_json_rpc_client::views","",36,[[],["result",4]]],[11,"default","diem_json_rpc_client::async_client::types","",44,[[],["amount",3]]],[11,"default","","",58,[[],["accountstateproof",3]]],[11,"default","","",54,[[],["script",3]]],[11,"default","","",57,[[],["accountstatewithproof",3]]],[11,"default","","",55,[[],["currencyinfo",3]]],[11,"default","","",52,[[],["vmstatus",3]]],[11,"default","","",45,[[],["account",3]]],[11,"default","","",50,[[],["transaction",3]]],[11,"default","diem_json_rpc_client::views","",39,[[],["scriptview",3]]],[11,"default","diem_json_rpc_client::async_client::types","",49,[[],["metadata",3]]],[11,"default","","",53,[[],["transactiondata",3]]],[11,"default","","",48,[[],["eventdata",3]]],[11,"default","","",51,[[],["moveabortexplaination",3]]],[11,"default","","",56,[[],["stateproof",3]]],[11,"default","","",47,[[],["event",3]]],[11,"default","","",46,[[],["accountrole",3]]],[11,"clone","diem_json_rpc_client::views","",33,[[],["transactionview",3]]],[11,"clone","","",34,[[],["transactionswithproofsview",3]]],[11,"clone","","",12,[[],["eventdataview",4]]],[11,"clone","","",36,[[],["transactiondataview",4]]],[11,"clone","","",41,[[],["stateproofview",3]]],[11,"clone","","",28,[[],["bytesview",3]]],[11,"clone","diem_json_rpc_client::async_client::types","",52,[[],["vmstatus",3]]],[11,"clone","diem_json_rpc_client::views","",39,[[],["scriptview",3]]],[11,"clone","diem_json_rpc_client::async_client","",59,[[],["jsonrpcresponse",3]]],[11,"clone","diem_json_rpc_client::async_client::types","",57,[[],["accountstatewithproof",3]]],[11,"clone","diem_json_rpc_client::views","",30,[[],["vmstatusview",4]]],[11,"clone","","",43,[[],["accountstateproofview",3]]],[11,"clone","diem_json_rpc_client::async_client::types","",58,[[],["accountstateproof",3]]],[11,"clone","","",45,[[],["account",3]]],[11,"clone","","",50,[[],["transaction",3]]],[11,"clone","","",56,[[],["stateproof",3]]],[11,"clone","","",53,[[],["transactiondata",3]]],[11,"clone","diem_json_rpc_client::views","",40,[[],["currencyinfoview",3]]],[11,"clone","","",29,[[],["moveabortexplanationview",3]]],[11,"clone","","",5,[[],["accountroleview",4]]],[11,"clone","diem_json_rpc_client::async_client::types","",54,[[],["script",3]]],[11,"clone","diem_json_rpc_client::views","",11,[[],["eventwithproofview",3]]],[11,"clone","diem_json_rpc_client::async_client::types","",44,[[],["amount",3]]],[11,"clone","diem_json_rpc_client::views","",4,[[],["amountview",3]]],[11,"clone","","",9,[[],["accountview",3]]],[11,"clone","diem_json_rpc_client::async_client::types","",51,[[],["moveabortexplaination",3]]],[11,"clone","","",49,[[],["metadata",3]]],[11,"clone","diem_json_rpc_client::views","",35,[[],["transactionsproofsview",3]]],[11,"clone","diem_json_rpc_client::async_client::types","",46,[[],["accountrole",3]]],[11,"clone","diem_json_rpc_client::views","",42,[[],["accountstatewithproofview",3]]],[11,"clone","diem_json_rpc_client::async_client::types","",47,[[],["event",3]]],[11,"clone","diem_json_rpc_client::errors","",2,[[],["errordata",4]]],[11,"clone","diem_json_rpc_client::views","",10,[[],["eventview",3]]],[11,"clone","diem_json_rpc_client::async_client","",3,[[],["jsonrpcerror",3]]],[11,"clone","diem_json_rpc_client::async_client::types","",55,[[],["currencyinfo",3]]],[11,"clone","","",48,[[],["eventdata",3]]],[11,"clone","diem_json_rpc_client::views","",27,[[],["metadataview",3]]],[11,"hash","diem_json_rpc_client","",72,[[],["hashvalue",3]]],[11,"fmt","","",73,[[["formatter",3]],[["result",4],["error",3]]]],[11,"arbitrary_with","","",73,[[]]],[11,"hash","","",73,[[]]],[11,"deserialize","","",73,[[],[["result",4],["signedtransaction",3]]]],[11,"clone","","",73,[[],["signedtransaction",3]]],[11,"eq","","",73,[[["signedtransaction",3]]]],[11,"ne","","",73,[[["signedtransaction",3]]]],[11,"try_from","","",73,[[["transaction",4]],[["signedtransaction",3],["error",3],["result",4]]]],[11,"serialize","","",73,[[],["result",4]]],[11,"partial_cmp","","",72,[[["accountaddress",3]],[["ordering",4],["option",4]]]],[11,"lt","","",72,[[["accountaddress",3]]]],[11,"le","","",72,[[["accountaddress",3]]]],[11,"gt","","",72,[[["accountaddress",3]]]],[11,"ge","","",72,[[["accountaddress",3]]]],[11,"serialize","","",72,[[],["result",4]]],[11,"from_str","","",72,[[],[["accountaddress",3],["error",3],["result",4]]]],[11,"fmt","","",72,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",72,[[["formatter",3]],[["result",4],["error",3]]]],[11,"as_ref","","",72,[[]]],[11,"cmp","","",72,[[["accountaddress",3]],["ordering",4]]],[11,"deserialize","","",72,[[],[["accountaddress",3],["result",4]]]],[11,"fmt","","",72,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",72,[[["formatter",3]],[["result",4],["error",3]]]],[11,"deref","","",72,[[]]],[11,"arbitrary_with","","",72,[[]]],[11,"hash","","",72,[[]]],[11,"clone","","",72,[[],["accountaddress",3]]],[11,"eq","","",72,[[["accountaddress",3]]]],[11,"ne","","",72,[[["accountaddress",3]]]],[11,"try_from","","Tries to convert the provided byte array into Address.",72,[[],[["accountaddress",3],["error",3],["result",4]]]],[11,"try_from","","Tries to convert the provided byte buffer into Address.",72,[[["global",3],["vec",3]],[["accountaddress",3],["error",3],["result",4]]]],[11,"try_from","","",72,[[["string",3]],[["accountaddress",3],["error",3],["result",4]]]],[11,"try_from","","Tries to convert the provided byte array into Address.",72,[[],[["accountaddress",3],["error",3],["result",4]]]],[11,"max_retries","diem_json_rpc_client::async_client","",69,[[["error",4]]]],[11,"delay","","",69,[[["error",4]],["duration",3]]],[11,"is_retriable","","",69,[[["error",4]]]],[11,"single_request","","",68,[[["request",3]],[["pin",3],["box",3]]]],[11,"batch_request","","",68,[[],[["box",3],["pin",3]]]],[11,"update_state","","",68,[[["state",3]]]],[11,"last_known_state","","",68,[[],[["option",4],["state",3]]]],[11,"single_request","","",64,[[["request",3]],[["pin",3],["box",3]]]],[11,"batch_request","","",64,[[],[["box",3],["pin",3]]]],[11,"update_state","","",64,[[["state",3]]]],[11,"last_known_state","","",64,[[],[["option",4],["state",3]]]],[11,"clone","","",71,[[],["state",3]]],[11,"default","","",74,[[]]],[11,"eq","","",71,[[["state",3]]]],[11,"ne","","",71,[[["state",3]]]],[11,"partial_cmp","","",71,[[["state",3]],[["option",4],["ordering",4]]]],[11,"lt","","",71,[[["state",3]]]],[11,"le","","",71,[[["state",3]]]],[11,"gt","","",71,[[["state",3]]]],[11,"ge","","",71,[[["state",3]]]],[11,"deref","","",67,[[]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"try_from","","",67,[[["jsonrpcresponse",3]],[["error",4],["result",4]]]],[11,"source","","",61,[[],[["option",4],["error",8]]]],[11,"source","","",62,[[],[["option",4],["error",8]]]],[11,"source","","",63,[[],[["option",4],["error",8]]]],[11,"serialize","","",3,[[],["value",4]]],[11,"invalid_request","","",3,[[],["jsonrpcerror",3]]],[11,"invalid_request_with_data","","",3,[[["errordata",4],["option",4]],["jsonrpcerror",3]]],[11,"invalid_request_with_msg","","",3,[[["string",3]],["jsonrpcerror",3]]],[11,"invalid_format","","",3,[[],["jsonrpcerror",3]]],[11,"invalid_params","","",3,[[["errordata",4],["option",4]],["jsonrpcerror",3]]],[11,"invalid_params_size","","",3,[[["string",3]],["jsonrpcerror",3]]],[11,"invalid_param","","",3,[[],["jsonrpcerror",3]]],[11,"method_not_found","","",3,[[],["jsonrpcerror",3]]],[11,"internal_error","","",3,[[["string",3]],["jsonrpcerror",3]]],[11,"mempool_error","","",3,[[["mempoolstatus",3]],[["jsonrpcerror",3],["error",3],["result",4]]]],[11,"vm_status","","",3,[[["statuscode",4]],["jsonrpcerror",3]]],[11,"as_status_code","","",3,[[],[["statuscode",4],["option",4]]]],[11,"new","diem_json_rpc_client::views","",9,[[["accountaddress",3],["accountrole",4],["btreemap",3],["identifier",3],["freezingbit",3],["accountresource",3],["balanceresource",3]],["accountview",3]]],[11,"into_bytes","","",28,[[],[["result",4],["error",3],["vec",3]]]],[11,"unknown","","",39,[[],["scriptview",3]]],[11,"new","diem_json_rpc_client","",72,[[],["accountaddress",3]]],[18,"LENGTH","","The number of bytes in an address.",72,null],[18,"ZERO","","Hex address: 0x0",72,null],[11,"random","","",72,[[],["accountaddress",3]]],[11,"short_str_lossless","","",72,[[],["string",3]]],[11,"to_vec","","",72,[[],[["global",3],["vec",3]]]],[11,"to_u8","","",72,[[]]],[11,"from_hex_literal","","",72,[[],[["accountaddress",3],["error",3],["result",4]]]],[11,"new","","",73,[[["ed25519publickey",3],["ed25519signature",3],["rawtransaction",3]],["signedtransaction",3]]],[11,"new_multisig","","",73,[[["multied25519signature",3],["rawtransaction",3],["multied25519publickey",3]],["signedtransaction",3]]],[11,"authenticator","","",73,[[],["transactionauthenticator",4]]],[11,"sender","","",73,[[],["accountaddress",3]]],[11,"into_raw_transaction","","",73,[[],["rawtransaction",3]]],[11,"sequence_number","","",73,[[]]],[11,"chain_id","","",73,[[],["chainid",3]]],[11,"payload","","",73,[[],["transactionpayload",4]]],[11,"max_gas_amount","","",73,[[]]],[11,"gas_unit_price","","",73,[[]]],[11,"gas_currency_code","","",73,[[]]],[11,"expiration_timestamp_secs","","",73,[[]]],[11,"raw_txn_bytes_len","","",73,[[]]],[11,"check_signature","","Checks that the signature of given transaction. Returns …",73,[[],[["error",3],["signaturecheckedtransaction",3],["result",4]]]],[11,"format_for_client","","",73,[[],["string",3]]],[11,"new","diem_json_rpc_client::async_client","",59,[[["chainid",3]],["jsonrpcresponse",3]]],[11,"from_url","","",60,[[["intourl",8]],[["result",4],["error",3]]]],[11,"from_url_list","","",60,[[["vec",3],["intourl",8]],[["result",4],["string",3]]]],[11,"wait_for_signed_transaction","","",60,[[["option",4],["duration",3],["signedtransaction",3]]]],[11,"wait_for_transaction","","",60,[[["option",4],["duration",3],["accountaddress",3]]]],[11,"last_known_state","","",60,[[],[["option",4],["state",3]]]],[11,"get_metadata","","",60,[[]]],[11,"get_metadata_by_version","","",60,[[]]],[11,"get_account","","",60,[[["accountaddress",3]]]],[11,"get_account_transaction","","",60,[[["accountaddress",3]]]],[11,"get_account_transactions","","",60,[[["accountaddress",3]]]],[11,"get_transactions","","",60,[[]]],[11,"get_events","","",60,[[]]],[11,"get_events_with_proofs","","",60,[[]]],[11,"get_currencies","","",60,[[]]],[11,"get_state_proof","","",60,[[]]],[11,"get_account_state_with_proof","","",60,[[["option",4],["accountaddress",3]]]],[11,"submit","","",60,[[["signedtransaction",3]]]],[11,"send","","",60,[[["request",3]]]],[11,"send_opt","","",60,[[["request",3]]]],[11,"send_with_retry","","",60,[[["request",3]]]],[11,"batch_send","","Batch requests into one JSON-RPC batch request. To keep …",60,[[["vec",3],["request",3]]]],[11,"batch_send_with_retry","","",60,[[]]],[11,"unexpected_bcs_error","","",61,[[["error",4]]]],[11,"unexpected_invalid_response_id","","",61,[[["jsonrpcresponse",3]]]],[11,"unexpected_invalid_response_id_type","","",61,[[["jsonrpcresponse",3]]]],[11,"unexpected_response_id_not_found","","",61,[[["jsonrpcresponse",3]]]],[11,"unexpected_invalid_batch_response","","",61,[[["vec",3],["jsonrpcresponse",3]]]],[11,"unexpected_duplicated_response_id","","",61,[[["jsonrpcresponse",3]]]],[11,"unexpected_no_response","","",61,[[["value",4]]]],[11,"unexpected_uncategorized","","",61,[[["string",3]]]],[11,"new","","",66,[[["value",4]]]],[11,"submit","","",66,[[["signedtransaction",3]],[["result",4],["error",4]]]],[11,"get_account_state_with_proof","","",66,[[["option",4],["accountaddress",3]]]],[11,"get_state_proof","","",66,[[]]],[11,"get_currencies","","",66,[[]]],[11,"get_events","","",66,[[]]],[11,"get_events_with_proofs","","",66,[[]]],[11,"get_transactions","","",66,[[]]],[11,"get_account_transactions","","",66,[[["accountaddress",3]]]],[11,"get_account_transaction","","",66,[[["accountaddress",3]]]],[11,"get_account","","",66,[[["accountaddress",3]]]],[11,"get_metadata_by_version","","",66,[[]]],[11,"get_metadata","","",66,[[]]],[11,"to_json","","",66,[[],["value",4]]],[11,"validate","","",65,[[["jsonrpcresponse",3]],[["error",4],["result",4]]]],[11,"new","","",68,[[["intourl",8]],[["result",4],["error",3]]]],[11,"new","","",64,[[["vec",3],["intourl",8]],[["result",4],["string",3]]]],[11,"select_highest_ledger_version_response","","Select the JsonRpcResponse which has the the highest diem …",64,[[["vec",3],["jsonrpcresponse",3]],[["error",4],["result",4],["jsonrpcresponse",3]]]],[11,"select_highest_ledger_version_response_batch","","Select the Vec which has the the highest diem ledger …",64,[[["vec",3],["value",4],["vec",3],["vec",3]],[["vec",3],["error",4],["result",4]]]],[11,"default","","",69,[[]]],[11,"from_response","","",71,[[["jsonrpcresponse",3]]]],[11,"new","","",74,[[]]],[11,"last_known_state","","",74,[[],[["option",4],["state",3]]]],[11,"update_state","","",74,[[["state",3]]]]],"p":[[4,"ServerCode"],[4,"InvalidRequestCode"],[4,"ErrorData"],[3,"JsonRpcError"],[3,"AmountView"],[4,"AccountRoleView"],[13,"ChildVASP"],[13,"ParentVASP"],[13,"DesignatedDealer"],[3,"AccountView"],[3,"EventView"],[3,"EventWithProofView"],[4,"EventDataView"],[13,"Burn"],[13,"CancelBurn"],[13,"Mint"],[13,"ToXDXExchangeRateUpdate"],[13,"Preburn"],[13,"ReceivedPayment"],[13,"SentPayment"],[13,"AdminTransaction"],[13,"NewEpoch"],[13,"NewBlock"],[13,"ReceivedMint"],[13,"ComplianceKeyRotation"],[13,"BaseUrlRotation"],[13,"CreateAccount"],[3,"MetadataView"],[3,"BytesView"],[3,"MoveAbortExplanationView"],[4,"VMStatusView"],[13,"MoveAbort"],[13,"ExecutionFailure"],[3,"TransactionView"],[3,"TransactionsWithProofsView"],[3,"TransactionsProofsView"],[4,"TransactionDataView"],[13,"BlockMetadata"],[13,"UserTransaction"],[3,"ScriptView"],[3,"CurrencyInfoView"],[3,"StateProofView"],[3,"AccountStateWithProofView"],[3,"AccountStateProofView"],[3,"Amount"],[3,"Account"],[3,"AccountRole"],[3,"Event"],[3,"EventData"],[3,"Metadata"],[3,"Transaction"],[3,"MoveAbortExplaination"],[3,"VmStatus"],[3,"TransactionData"],[3,"Script"],[3,"CurrencyInfo"],[3,"StateProof"],[3,"AccountStateWithProof"],[3,"AccountStateProof"],[3,"JsonRpcResponse"],[3,"Client"],[4,"Error"],[4,"UnexpectedError"],[4,"WaitForTransactionError"],[3,"BroadcastHttpClient"],[8,"HttpClient"],[3,"Request"],[3,"Response"],[3,"SimpleHttpClient"],[3,"Retry"],[8,"RetryStrategy"],[3,"State"],[3,"AccountAddress"],[3,"SignedTransaction"],[3,"StateManager"]]},\
"diem_json_rpc_types":{"doc":"","i":[[0,"errors","diem_json_rpc_types","",null,null],[7,"INTERNAL_ERRORS","diem_json_rpc_types::errors","list of server internal errors",null,null],[5,"is_internal_error","","",null,[[]]],[4,"ServerCode","","Custom JSON RPC server error codes Ranges from -32000 to …",null,null],[13,"DefaultServerError","","",0,null],[13,"VmValidationError","","",0,null],[13,"VmVerificationError","","",0,null],[13,"VmInvariantViolationError","","",0,null],[13,"VmDeserializationError","","",0,null],[13,"VmExecutionError","","",0,null],[13,"VmUnknownError","","",0,null],[13,"MempoolInvalidSeqNumber","","",0,null],[13,"MempoolIsFull","","",0,null],[13,"MempoolTooManyTransactions","","",0,null],[13,"MempoolInvalidUpdate","","",0,null],[13,"MempoolVmError","","",0,null],[13,"MempoolUnknownError","","",0,null],[4,"InvalidRequestCode","","JSON RPC server error codes for invalid request",null,null],[13,"InvalidRequest","","",1,null],[13,"MethodNotFound","","",1,null],[13,"InvalidParams","","",1,null],[13,"InvalidFormat","","",1,null],[4,"ErrorData","","",null,null],[13,"StatusCode","","",2,null],[3,"JsonRpcError","","",null,null],[12,"code","","",3,null],[12,"message","","",3,null],[12,"data","","",3,null],[11,"serialize","","",3,[[],["value",4]]],[11,"invalid_request","","",3,[[]]],[11,"invalid_request_with_data","","",3,[[["option",4],["errordata",4]]]],[11,"invalid_request_with_msg","","",3,[[["string",3]]]],[11,"invalid_format","","",3,[[]]],[11,"invalid_params","","",3,[[["option",4],["errordata",4]]]],[11,"invalid_params_size","","",3,[[["string",3]]]],[11,"invalid_param","","",3,[[]]],[11,"method_not_found","","",3,[[]]],[11,"internal_error","","",3,[[["string",3]]]],[11,"mempool_error","","",3,[[["mempoolstatus",3]],["result",6]]],[11,"vm_status","","",3,[[["statuscode",4]]]],[11,"as_status_code","","",3,[[],[["statuscode",4],["option",4]]]],[0,"response","diem_json_rpc_types","",null,null],[17,"X_DIEM_CHAIN_ID","diem_json_rpc_types::response","",null,null],[17,"X_DIEM_VERSION_ID","","",null,null],[17,"X_DIEM_TIMESTAMP_USEC_ID","","",null,null],[3,"JsonRpcResponse","","",null,null],[12,"diem_chain_id","","",4,null],[12,"diem_ledger_version","","",4,null],[12,"diem_ledger_timestampusec","","",4,null],[12,"jsonrpc","","",4,null],[12,"id","","",4,null],[12,"result","","",4,null],[12,"error","","",4,null],[11,"new","","",4,[[["chainid",3]]]],[0,"views","diem_json_rpc_types","",null,null],[3,"AmountView","diem_json_rpc_types::views","",null,null],[12,"amount","","",5,null],[12,"currency","","",5,null],[4,"AccountRoleView","","",null,null],[13,"Unknown","","",6,null],[13,"ChildVASP","","",6,null],[12,"parent_vasp_address","diem_json_rpc_types::views::AccountRoleView","",7,null],[13,"ParentVASP","diem_json_rpc_types::views","",6,null],[12,"human_name","diem_json_rpc_types::views::AccountRoleView","",8,null],[12,"base_url","","",8,null],[12,"expiration_time","","",8,null],[12,"compliance_key","","",8,null],[12,"num_children","","",8,null],[12,"compliance_key_rotation_events_key","","",8,null],[12,"base_url_rotation_events_key","","",8,null],[13,"DesignatedDealer","diem_json_rpc_types::views","",6,null],[12,"human_name","diem_json_rpc_types::views::AccountRoleView","",9,null],[12,"base_url","","",9,null],[12,"expiration_time","","",9,null],[12,"compliance_key","","",9,null],[12,"preburn_balances","","",9,null],[12,"received_mint_events_key","","",9,null],[12,"compliance_key_rotation_events_key","","",9,null],[12,"base_url_rotation_events_key","","",9,null],[3,"AccountView","diem_json_rpc_types::views","",null,null],[12,"address","","",10,null],[12,"balances","","",10,null],[12,"sequence_number","","",10,null],[12,"authentication_key","","",10,null],[12,"sent_events_key","","",10,null],[12,"received_events_key","","",10,null],[12,"delegated_key_rotation_capability","","",10,null],[12,"delegated_withdrawal_capability","","",10,null],[12,"is_frozen","","",10,null],[12,"role","","",10,null],[11,"new","","",10,[[["btreemap",3],["freezingbit",3],["accountaddress",3],["identifier",3],["accountresource",3],["accountrole",4],["balanceresource",3]]]],[3,"EventView","","",null,null],[12,"key","","",11,null],[12,"sequence_number","","",11,null],[12,"transaction_version","","",11,null],[12,"data","","",11,null],[3,"EventWithProofView","","",null,null],[12,"event_with_proof","","",12,null],[4,"EventDataView","","",null,null],[13,"Burn","","",13,null],[12,"amount","diem_json_rpc_types::views::EventDataView","",14,null],[12,"preburn_address","","",14,null],[13,"CancelBurn","diem_json_rpc_types::views","",13,null],[12,"amount","diem_json_rpc_types::views::EventDataView","",15,null],[12,"preburn_address","","",15,null],[13,"Mint","diem_json_rpc_types::views","",13,null],[12,"amount","diem_json_rpc_types::views::EventDataView","",16,null],[13,"ToXDXExchangeRateUpdate","diem_json_rpc_types::views","",13,null],[12,"currency_code","diem_json_rpc_types::views::EventDataView","",17,null],[12,"new_to_xdx_exchange_rate","","",17,null],[13,"Preburn","diem_json_rpc_types::views","",13,null],[12,"amount","diem_json_rpc_types::views::EventDataView","",18,null],[12,"preburn_address","","",18,null],[13,"ReceivedPayment","diem_json_rpc_types::views","",13,null],[12,"amount","diem_json_rpc_types::views::EventDataView","",19,null],[12,"sender","","",19,null],[12,"receiver","","",19,null],[12,"metadata","","",19,null],[13,"SentPayment","diem_json_rpc_types::views","",13,null],[12,"amount","diem_json_rpc_types::views::EventDataView","",20,null],[12,"receiver","","",20,null],[12,"sender","","",20,null],[12,"metadata","","",20,null],[13,"AdminTransaction","diem_json_rpc_types::views","",13,null],[12,"committed_timestamp_secs","diem_json_rpc_types::views::EventDataView","",21,null],[13,"NewEpoch","diem_json_rpc_types::views","",13,null],[12,"epoch","diem_json_rpc_types::views::EventDataView","",22,null],[13,"NewBlock","diem_json_rpc_types::views","",13,null],[12,"round","diem_json_rpc_types::views::EventDataView","",23,null],[12,"proposer","","",23,null],[12,"proposed_time","","",23,null],[13,"ReceivedMint","diem_json_rpc_types::views","",13,null],[12,"amount","diem_json_rpc_types::views::EventDataView","",24,null],[12,"destination_address","","",24,null],[13,"ComplianceKeyRotation","diem_json_rpc_types::views","",13,null],[12,"new_compliance_public_key","diem_json_rpc_types::views::EventDataView","",25,null],[12,"time_rotated_seconds","","",25,null],[13,"BaseUrlRotation","diem_json_rpc_types::views","",13,null],[12,"new_base_url","diem_json_rpc_types::views::EventDataView","",26,null],[12,"time_rotated_seconds","","",26,null],[13,"CreateAccount","diem_json_rpc_types::views","",13,null],[12,"created_address","diem_json_rpc_types::views::EventDataView","",27,null],[12,"role_id","","",27,null],[13,"Unknown","diem_json_rpc_types::views","",13,null],[3,"MetadataView","","",null,null],[12,"version","","",28,null],[12,"accumulator_root_hash","","",28,null],[12,"timestamp","","",28,null],[12,"chain_id","","",28,null],[12,"script_hash_allow_list","","",28,null],[12,"module_publishing_allowed","","",28,null],[12,"diem_version","","",28,null],[12,"dual_attestation_limit","","",28,null],[3,"BytesView","","",null,null],[12,"0","","",29,null],[11,"into_bytes","","",29,[[],[["vec",3],["error",3],["result",6]]]],[3,"MoveAbortExplanationView","","",null,null],[12,"category","","",30,null],[12,"category_description","","",30,null],[12,"reason","","",30,null],[12,"reason_description","","",30,null],[4,"VMStatusView","","",null,null],[13,"Executed","","",31,null],[13,"OutOfGas","","",31,null],[13,"MoveAbort","","",31,null],[12,"location","diem_json_rpc_types::views::VMStatusView","",32,null],[12,"abort_code","","",32,null],[12,"explanation","","",32,null],[13,"ExecutionFailure","diem_json_rpc_types::views","",31,null],[12,"location","diem_json_rpc_types::views::VMStatusView","",33,null],[12,"function_index","","",33,null],[12,"code_offset","","",33,null],[13,"MiscellaneousError","diem_json_rpc_types::views","",31,null],[13,"VerificationError","","",31,null],[13,"DeserializationError","","",31,null],[13,"PublishingFailure","","",31,null],[3,"TransactionView","","",null,null],[12,"version","","",34,null],[12,"transaction","","",34,null],[12,"hash","","",34,null],[12,"bytes","","",34,null],[12,"events","","",34,null],[12,"vm_status","","",34,null],[12,"gas_used","","",34,null],[3,"TransactionsWithProofsView","","",null,null],[12,"serialized_transactions","","",35,null],[12,"proofs","","",35,null],[3,"TransactionsProofsView","","",null,null],[12,"ledger_info_to_transaction_infos_proof","","",36,null],[12,"transaction_infos","","",36,null],[4,"TransactionDataView","","",null,null],[13,"BlockMetadata","","",37,null],[12,"timestamp_usecs","diem_json_rpc_types::views::TransactionDataView","",38,null],[13,"WriteSet","diem_json_rpc_types::views","",37,null],[13,"UserTransaction","","",37,null],[12,"sender","diem_json_rpc_types::views::TransactionDataView","",39,null],[12,"signature_scheme","","",39,null],[12,"signature","","",39,null],[12,"public_key","","",39,null],[12,"sequence_number","","",39,null],[12,"chain_id","","",39,null],[12,"max_gas_amount","","",39,null],[12,"gas_unit_price","","",39,null],[12,"gas_currency","","",39,null],[12,"expiration_timestamp_secs","","",39,null],[12,"script_hash","","",39,null],[12,"script_bytes","","",39,null],[12,"script","","",39,null],[13,"UnknownTransaction","diem_json_rpc_types::views","",37,null],[3,"ScriptView","","",null,null],[12,"type","","",40,null],[12,"code","","",40,null],[12,"arguments","","",40,null],[12,"type_arguments","","",40,null],[12,"receiver","","",40,null],[12,"amount","","",40,null],[12,"currency","","",40,null],[12,"metadata","","",40,null],[12,"metadata_signature","","",40,null],[11,"unknown","","",40,[[]]],[3,"CurrencyInfoView","","",null,null],[12,"code","","",41,null],[12,"scaling_factor","","",41,null],[12,"fractional_part","","",41,null],[12,"to_xdx_exchange_rate","","",41,null],[12,"mint_events_key","","",41,null],[12,"burn_events_key","","",41,null],[12,"preburn_events_key","","",41,null],[12,"cancel_burn_events_key","","",41,null],[12,"exchange_rate_update_events_key","","",41,null],[3,"StateProofView","","",null,null],[12,"ledger_info_with_signatures","","",42,null],[12,"epoch_change_proof","","",42,null],[12,"ledger_consistency_proof","","",42,null],[3,"AccountStateWithProofView","","",null,null],[12,"version","","",43,null],[12,"blob","","",43,null],[12,"proof","","",43,null],[3,"AccountStateProofView","","",null,null],[12,"ledger_info_to_transaction_info_proof","","",44,null],[12,"transaction_info","","",44,null],[12,"transaction_info_to_account_proof","","",44,null],[0,"constants","diem_json_rpc_types","Defines constants for enum type values See the following …",null,null],[17,"ACCOUNT_ROLE_UNKNOWN","diem_json_rpc_types::constants","",null,null],[17,"ACCOUNT_ROLE_CHILD_VASP","","",null,null],[17,"ACCOUNT_ROLE_PARENT_VASP","","",null,null],[17,"ACCOUNT_ROLE_DESIGNATED_DEALER","","",null,null],[17,"EVENT_DATA_UNKNOWN","","",null,null],[17,"EVENT_DATA_BURN","","",null,null],[17,"EVENT_DATA_CANCEL_BURN","","",null,null],[17,"EVENT_DATA_MINT","","",null,null],[17,"EVENT_DATA_TO_XDX_EXCHANGE_RATE_UPDATE","","",null,null],[17,"EVENT_DATA_PREBURN","","",null,null],[17,"EVENT_DATA_RECEIVED_PAYMENT","","",null,null],[17,"EVENT_DATA_SENT_PAYMENT","","",null,null],[17,"EVENT_DATA_NEW_EPOCH","","",null,null],[17,"EVENT_DATA_NEW_BLOCK","","",null,null],[17,"EVENT_DATA_RECEIVED_MINT","","",null,null],[17,"EVENT_DATA_COMPLIANCE_KEY_ROTATION","","",null,null],[17,"EVENT_DATA_BASE_URL_ROTATION","","",null,null],[17,"EVENT_DATA_CREATE_ACCOUNT","","",null,null],[17,"EVENT_DATA_ADMIN_TRANSACTION","","",null,null],[17,"VM_STATUS_EXECUTED","","",null,null],[17,"VM_STATUS_OUT_OF_GAS","","",null,null],[17,"VM_STATUS_MOVE_ABORT","","",null,null],[17,"VM_STATUS_EXECUTION_FAILURE","","",null,null],[17,"VM_STATUS_MISC_ERROR","","",null,null],[17,"TRANSACTION_DATA_BLOCK_METADATA","","",null,null],[17,"TRANSACTION_DATA_WRITE_SET","","",null,null],[17,"TRANSACTION_DATA_USER","","",null,null],[17,"TRANSACTION_DATA_UNKNOWN","","",null,null],[17,"SCRIPT_UNKNOWN","","",null,null],[0,"proto","diem_json_rpc_types","",null,null],[0,"types","diem_json_rpc_types::proto","",null,null],[3,"Amount","diem_json_rpc_types::proto::types","",null,null],[12,"amount","","",45,null],[12,"currency","","",45,null],[3,"Account","","",null,null],[12,"address","","hex-encoded bytes",46,null],[12,"balances","","",46,null],[12,"sequence_number","","",46,null],[12,"authentication_key","","hex-encoded bytes",46,null],[12,"sent_events_key","","hex-encoded bytes",46,null],[12,"received_events_key","","hex-encoded bytes",46,null],[12,"delegated_key_rotation_capability","","",46,null],[12,"delegated_withdrawal_capability","","",46,null],[12,"is_frozen","","",46,null],[12,"role","","",46,null],[3,"AccountRole","","",null,null],[12,"type","","",47,null],[12,"parent_vasp_address","","",47,null],[12,"human_name","","",47,null],[12,"base_url","","",47,null],[12,"expiration_time","","",47,null],[12,"compliance_key","","hex-encoded bytes",47,null],[12,"compliance_key_rotation_events_key","","hex-encoded bytes",47,null],[12,"base_url_rotation_events_key","","hex-encoded bytes",47,null],[12,"num_children","","",47,null],[12,"received_mint_events_key","","hex-encoded bytes",47,null],[12,"preburn_balances","","",47,null],[3,"Event","","",null,null],[12,"key","","",48,null],[12,"sequence_number","","",48,null],[12,"transaction_version","","",48,null],[12,"data","","",48,null],[3,"EventData","","",null,null],[12,"type","","",49,null],[12,"amount","","burn, cancelburn, mint, preburn, receivedpayment, …",49,null],[12,"preburn_address","","burn, cancelburn, preburn events hex-encoded bytes",49,null],[12,"currency_code","","to_xdx_exchange_rate_update event only",49,null],[12,"new_to_xdx_exchange_rate","","",49,null],[12,"sender","","receivedpayment and sentpayment events hex-encoded bytes",49,null],[12,"receiver","","hex-encoded bytes",49,null],[12,"metadata","","hex-encoded bytes",49,null],[12,"epoch","","newepoch event only",49,null],[12,"round","","newblock event only",49,null],[12,"proposer","","hex-encoded bytes",49,null],[12,"proposed_time","","",49,null],[12,"destination_address","","receivedmint event only hex-encoded bytes",49,null],[12,"new_compliance_public_key","","compliancekeyrotation event only hex-encoded bytes",49,null],[12,"new_base_url","","baseurlrotation event only",49,null],[12,"time_rotated_seconds","","compliancekeyrotation and baseurlrotation events",49,null],[12,"created_address","","createaccount event field. Hex-encoded account address …",49,null],[12,"role_id","","createaccount event field. Role id of the created …",49,null],[12,"committed_timestamp_secs","","admintransaction event field. The block time when this …",49,null],[3,"Metadata","","",null,null],[12,"version","","The block (ledger) version",50,null],[12,"timestamp","","The block (ledger) timestamp, unit is microsecond",50,null],[12,"chain_id","","Chain ID of the Diem network",50,null],[12,"script_hash_allow_list","","List of allowed scripts hex-encoded hash bytes, server …",50,null],[12,"module_publishing_allowed","","True for allowing publishing customized script, server …",50,null],[12,"diem_version","","Diem chain major version number.",50,null],[12,"accumulator_root_hash","","accumulator root hash of the ledger version requested",50,null],[12,"dual_attestation_limit","","The dual attestation limit on-chain. Defined in terms of …",50,null],[3,"Transaction","","",null,null],[12,"version","","",51,null],[12,"transaction","","",51,null],[12,"hash","","",51,null],[12,"bytes","","hex-encoded bcs bytes",51,null],[12,"events","","",51,null],[12,"vm_status","","",51,null],[12,"gas_used","","",51,null],[3,"MoveAbortExplaination","","",null,null],[12,"category","","",52,null],[12,"category_description","","",52,null],[12,"reason","","",52,null],[12,"reason_description","","",52,null],[3,"VmStatus","","",null,null],[12,"type","","",53,null],[12,"location","","move_abort, execution_failure",53,null],[12,"abort_code","","move_abort only",53,null],[12,"function_index","","execution_failure only",53,null],[12,"code_offset","","",53,null],[12,"explanation","","move_abort only",53,null],[3,"TransactionData","","",null,null],[12,"type","","",54,null],[12,"timestamp_usecs","","blockmetadata",54,null],[12,"sender","","user",54,null],[12,"signature_scheme","","",54,null],[12,"signature","","",54,null],[12,"public_key","","hex-encoded bytes",54,null],[12,"sequence_number","","",54,null],[12,"chain_id","","",54,null],[12,"max_gas_amount","","",54,null],[12,"gas_unit_price","","",54,null],[12,"gas_currency","","",54,null],[12,"expiration_timestamp_secs","","",54,null],[12,"script_hash","","",54,null],[12,"script_bytes","","hex-encoded bytes",54,null],[12,"script","","",54,null],[3,"Script","","",null,null],[12,"type","","Name of the script code, see …",55,null],[12,"code","","Hex-encoded compiled move script bytes.",55,null],[12,"arguments","","List of string value of the script arguments. Contains …",55,null],[12,"type_arguments","","List of type arguments, converted into string.",55,null],[12,"receiver","","hex-encoded receiver account address bytes",55,null],[12,"amount","","peer to peer transfer amount.",55,null],[12,"currency","","peer to peer transfer currency code.",55,null],[12,"metadata","","Metadata of the transaction, LCS serialized hex-encoded …",55,null],[12,"metadata_signature","","Hex-encoded metadata signature, use this to validate …",55,null],[3,"CurrencyInfo","","",null,null],[12,"code","","",56,null],[12,"scaling_factor","","",56,null],[12,"fractional_part","","",56,null],[12,"to_xdx_exchange_rate","","",56,null],[12,"mint_events_key","","hex-encoded bytes",56,null],[12,"burn_events_key","","hex-encoded bytes",56,null],[12,"preburn_events_key","","HEX-encoded bytes",56,null],[12,"cancel_burn_events_key","","hex-encoded bytes",56,null],[12,"exchange_rate_update_events_key","","hex-encoded bytes",56,null],[3,"StateProof","","This is for experimental API get_state_proof response. It …",null,null],[12,"ledger_info_with_signatures","","hex-encoded bcs bytes",57,null],[12,"epoch_change_proof","","hex-encoded bcs bytes",57,null],[12,"ledger_consistency_proof","","hex-encoded bcs bytes",57,null],[3,"AccountStateWithProof","","This is for experimental API get_account_state_with_proof …",null,null],[12,"version","","",58,null],[12,"blob","","hex-encoded bcs bytes",58,null],[12,"proof","","hex-encoded bcs bytes",58,null],[3,"AccountStateProof","","This is for experimental API get_account_state_with_proof …",null,null],[12,"ledger_info_to_transaction_info_proof","","hex-encoded bcs bytes",59,null],[12,"transaction_info","","hex-encoded bcs bytes",59,null],[12,"transaction_info_to_account_proof","","hex-encoded bcs bytes",59,null],[11,"from","diem_json_rpc_types::errors","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"vzip","","",3,[[]]],[11,"from","diem_json_rpc_types::response","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"test_only_hash","","",4,[[],["hashvalue",3]]],[11,"vzip","","",4,[[]]],[11,"from","diem_json_rpc_types::views","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"test_only_hash","","",6,[[],["hashvalue",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"test_only_hash","","",10,[[],["hashvalue",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"test_only_hash","","",11,[[],["hashvalue",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"test_only_hash","","",12,[[],["hashvalue",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"test_only_hash","","",13,[[],["hashvalue",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"test_only_hash","","",28,[[],["hashvalue",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"test_only_hash","","",29,[[],["hashvalue",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"test_only_hash","","",30,[[],["hashvalue",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"test_only_hash","","",31,[[],["hashvalue",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"test_only_hash","","",34,[[],["hashvalue",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"test_only_hash","","",35,[[],["hashvalue",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"test_only_hash","","",36,[[],["hashvalue",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"test_only_hash","","",37,[[],["hashvalue",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"test_only_hash","","",40,[[],["hashvalue",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"test_only_hash","","",41,[[],["hashvalue",3]]],[11,"vzip","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"test_only_hash","","",42,[[],["hashvalue",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"test_only_hash","","",43,[[],["hashvalue",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"test_only_hash","","",44,[[],["hashvalue",3]]],[11,"vzip","","",44,[[]]],[11,"from","diem_json_rpc_types::proto::types","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"test_only_hash","","",45,[[],["hashvalue",3]]],[11,"vzip","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"test_only_hash","","",46,[[],["hashvalue",3]]],[11,"vzip","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"test_only_hash","","",47,[[],["hashvalue",3]]],[11,"vzip","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"test_only_hash","","",48,[[],["hashvalue",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"test_only_hash","","",49,[[],["hashvalue",3]]],[11,"vzip","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"test_only_hash","","",50,[[],["hashvalue",3]]],[11,"vzip","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"test_only_hash","","",51,[[],["hashvalue",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"test_only_hash","","",52,[[],["hashvalue",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"test_only_hash","","",53,[[],["hashvalue",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"test_only_hash","","",54,[[],["hashvalue",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"test_only_hash","","",55,[[],["hashvalue",3]]],[11,"vzip","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"test_only_hash","","",56,[[],["hashvalue",3]]],[11,"vzip","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"test_only_hash","","",57,[[],["hashvalue",3]]],[11,"vzip","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"test_only_hash","","",58,[[],["hashvalue",3]]],[11,"vzip","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"test_only_hash","","",59,[[],["hashvalue",3]]],[11,"vzip","","",59,[[]]],[11,"from","diem_json_rpc_types::errors","",3,[[["error",3]]]],[11,"from","","",3,[[["error",3]]]],[11,"from","diem_json_rpc_types::views","",29,[[]]],[11,"from","","",29,[[["vec",3]]]],[11,"from","","",29,[[["vec",3]]]],[11,"from","","",29,[[["accountaddress",3]]]],[11,"from","","",29,[[["accountaddress",3]]]],[11,"from","","",29,[[["hashvalue",3]]]],[11,"from","","",6,[[["accountrole",4]]]],[11,"from","","",41,[[["currencyinforesource",3]],["currencyinfoview",3]]],[11,"clone","diem_json_rpc_types::errors","",2,[[],["errordata",4]]],[11,"clone","","",3,[[],["jsonrpcerror",3]]],[11,"clone","diem_json_rpc_types::response","",4,[[],["jsonrpcresponse",3]]],[11,"clone","diem_json_rpc_types::views","",5,[[],["amountview",3]]],[11,"clone","","",6,[[],["accountroleview",4]]],[11,"clone","","",10,[[],["accountview",3]]],[11,"clone","","",11,[[],["eventview",3]]],[11,"clone","","",12,[[],["eventwithproofview",3]]],[11,"clone","","",13,[[],["eventdataview",4]]],[11,"clone","","",28,[[],["metadataview",3]]],[11,"clone","","",29,[[],["bytesview",3]]],[11,"clone","","",30,[[],["moveabortexplanationview",3]]],[11,"clone","","",31,[[],["vmstatusview",4]]],[11,"clone","","",34,[[],["transactionview",3]]],[11,"clone","","",35,[[],["transactionswithproofsview",3]]],[11,"clone","","",36,[[],["transactionsproofsview",3]]],[11,"clone","","",37,[[],["transactiondataview",4]]],[11,"clone","","",40,[[],["scriptview",3]]],[11,"clone","","",41,[[],["currencyinfoview",3]]],[11,"clone","","",42,[[],["stateproofview",3]]],[11,"clone","","",43,[[],["accountstatewithproofview",3]]],[11,"clone","","",44,[[],["accountstateproofview",3]]],[11,"clone","diem_json_rpc_types::proto::types","",45,[[],["amount",3]]],[11,"clone","","",46,[[],["account",3]]],[11,"clone","","",47,[[],["accountrole",3]]],[11,"clone","","",48,[[],["event",3]]],[11,"clone","","",49,[[],["eventdata",3]]],[11,"clone","","",50,[[],["metadata",3]]],[11,"clone","","",51,[[],["transaction",3]]],[11,"clone","","",52,[[],["moveabortexplaination",3]]],[11,"clone","","",53,[[],["vmstatus",3]]],[11,"clone","","",54,[[],["transactiondata",3]]],[11,"clone","","",55,[[],["script",3]]],[11,"clone","","",56,[[],["currencyinfo",3]]],[11,"clone","","",57,[[],["stateproof",3]]],[11,"clone","","",58,[[],["accountstatewithproof",3]]],[11,"clone","","",59,[[],["accountstateproof",3]]],[11,"default","diem_json_rpc_types::views","",40,[[],["scriptview",3]]],[11,"default","diem_json_rpc_types::proto::types","",45,[[]]],[11,"default","","",46,[[]]],[11,"default","","",47,[[]]],[11,"default","","",48,[[]]],[11,"default","","",49,[[]]],[11,"default","","",50,[[]]],[11,"default","","",51,[[]]],[11,"default","","",52,[[]]],[11,"default","","",53,[[]]],[11,"default","","",54,[[]]],[11,"default","","",55,[[]]],[11,"default","","",56,[[]]],[11,"default","","",57,[[]]],[11,"default","","",58,[[]]],[11,"default","","",59,[[]]],[11,"eq","diem_json_rpc_types::views","",5,[[["amountview",3]]]],[11,"ne","","",5,[[["amountview",3]]]],[11,"eq","","",6,[[["accountroleview",4]]]],[11,"ne","","",6,[[["accountroleview",4]]]],[11,"eq","","",10,[[["accountview",3]]]],[11,"ne","","",10,[[["accountview",3]]]],[11,"eq","","",11,[[["eventview",3]]]],[11,"ne","","",11,[[["eventview",3]]]],[11,"eq","","",12,[[["eventwithproofview",3]]]],[11,"ne","","",12,[[["eventwithproofview",3]]]],[11,"eq","","",13,[[["eventdataview",4]]]],[11,"ne","","",13,[[["eventdataview",4]]]],[11,"eq","","",28,[[["metadataview",3]]]],[11,"ne","","",28,[[["metadataview",3]]]],[11,"eq","","",29,[[["bytesview",3]]]],[11,"ne","","",29,[[["bytesview",3]]]],[11,"eq","","",30,[[["moveabortexplanationview",3]]]],[11,"ne","","",30,[[["moveabortexplanationview",3]]]],[11,"eq","","",31,[[["vmstatusview",4]]]],[11,"ne","","",31,[[["vmstatusview",4]]]],[11,"eq","","",34,[[["transactionview",3]]]],[11,"ne","","",34,[[["transactionview",3]]]],[11,"eq","","",35,[[["transactionswithproofsview",3]]]],[11,"ne","","",35,[[["transactionswithproofsview",3]]]],[11,"eq","","",36,[[["transactionsproofsview",3]]]],[11,"ne","","",36,[[["transactionsproofsview",3]]]],[11,"eq","","",37,[[["transactiondataview",4]]]],[11,"ne","","",37,[[["transactiondataview",4]]]],[11,"eq","","",40,[[["scriptview",3]]]],[11,"ne","","",40,[[["scriptview",3]]]],[11,"eq","","",41,[[["currencyinfoview",3]]]],[11,"ne","","",41,[[["currencyinfoview",3]]]],[11,"eq","","",42,[[["stateproofview",3]]]],[11,"ne","","",42,[[["stateproofview",3]]]],[11,"eq","","",43,[[["accountstatewithproofview",3]]]],[11,"ne","","",43,[[["accountstatewithproofview",3]]]],[11,"eq","","",44,[[["accountstateproofview",3]]]],[11,"ne","","",44,[[["accountstateproofview",3]]]],[11,"eq","diem_json_rpc_types::proto::types","",45,[[["amount",3]]]],[11,"ne","","",45,[[["amount",3]]]],[11,"eq","","",46,[[["account",3]]]],[11,"ne","","",46,[[["account",3]]]],[11,"eq","","",47,[[["accountrole",3]]]],[11,"ne","","",47,[[["accountrole",3]]]],[11,"eq","","",48,[[["event",3]]]],[11,"ne","","",48,[[["event",3]]]],[11,"eq","","",49,[[["eventdata",3]]]],[11,"ne","","",49,[[["eventdata",3]]]],[11,"eq","","",50,[[["metadata",3]]]],[11,"ne","","",50,[[["metadata",3]]]],[11,"eq","","",51,[[["transaction",3]]]],[11,"ne","","",51,[[["transaction",3]]]],[11,"eq","","",52,[[["moveabortexplaination",3]]]],[11,"ne","","",52,[[["moveabortexplaination",3]]]],[11,"eq","","",53,[[["vmstatus",3]]]],[11,"ne","","",53,[[["vmstatus",3]]]],[11,"eq","","",54,[[["transactiondata",3]]]],[11,"ne","","",54,[[["transactiondata",3]]]],[11,"eq","","",55,[[["script",3]]]],[11,"ne","","",55,[[["script",3]]]],[11,"eq","","",56,[[["currencyinfo",3]]]],[11,"ne","","",56,[[["currencyinfo",3]]]],[11,"eq","","",57,[[["stateproof",3]]]],[11,"ne","","",57,[[["stateproof",3]]]],[11,"eq","","",58,[[["accountstatewithproof",3]]]],[11,"ne","","",58,[[["accountstatewithproof",3]]]],[11,"eq","","",59,[[["accountstateproof",3]]]],[11,"ne","","",59,[[["accountstateproof",3]]]],[11,"fmt","diem_json_rpc_types::errors","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","diem_json_rpc_types::response","",4,[[["formatter",3]],["result",6]]],[11,"fmt","diem_json_rpc_types::views","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","diem_json_rpc_types::proto::types","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","diem_json_rpc_types::errors","",3,[[["formatter",3]],["result",6]]],[11,"fmt","diem_json_rpc_types::views","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"try_from","","",13,[[["contractevent",4]],["result",6]]],[11,"try_from","","",11,[[],["result",6]]],[11,"try_from","","",42,[[],[["result",6],["stateproofview",3]]]],[11,"try_from","","",43,[[["accountstatewithproof",3]],[["result",6],["accountstatewithproofview",3],["error",3]]]],[11,"try_from","","",44,[[["accountstateproof",3]],[["result",6],["accountstateproofview",3],["error",3]]]],[11,"deserialize","diem_json_rpc_types::errors","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","diem_json_rpc_types::response","",4,[[],["result",4]]],[11,"deserialize","diem_json_rpc_types::views","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"deserialize","","",28,[[],["result",4]]],[11,"deserialize","","",29,[[],["result",4]]],[11,"deserialize","","",30,[[],["result",4]]],[11,"deserialize","","",31,[[],["result",4]]],[11,"deserialize","","",34,[[],["result",4]]],[11,"deserialize","","",35,[[],["result",4]]],[11,"deserialize","","",36,[[],["result",4]]],[11,"deserialize","","",37,[[],["result",4]]],[11,"deserialize","","",40,[[],["result",4]]],[11,"deserialize","","",41,[[],["result",4]]],[11,"deserialize","","",42,[[],["result",4]]],[11,"deserialize","","",43,[[],["result",4]]],[11,"deserialize","","",44,[[],["result",4]]],[11,"deserialize","diem_json_rpc_types::proto::types","",45,[[],["result",4]]],[11,"deserialize","","",46,[[],["result",4]]],[11,"deserialize","","",47,[[],["result",4]]],[11,"deserialize","","",48,[[],["result",4]]],[11,"deserialize","","",49,[[],["result",4]]],[11,"deserialize","","",50,[[],["result",4]]],[11,"deserialize","","",51,[[],["result",4]]],[11,"deserialize","","",52,[[],["result",4]]],[11,"deserialize","","",53,[[],["result",4]]],[11,"deserialize","","",54,[[],["result",4]]],[11,"deserialize","","",55,[[],["result",4]]],[11,"deserialize","","",56,[[],["result",4]]],[11,"deserialize","","",57,[[],["result",4]]],[11,"deserialize","","",58,[[],["result",4]]],[11,"deserialize","","",59,[[],["result",4]]],[11,"serialize","diem_json_rpc_types::errors","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","diem_json_rpc_types::response","",4,[[],["result",4]]],[11,"serialize","diem_json_rpc_types::views","",5,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","","",28,[[],["result",4]]],[11,"serialize","","",29,[[],["result",4]]],[11,"serialize","","",30,[[],["result",4]]],[11,"serialize","","",31,[[],["result",4]]],[11,"serialize","","",34,[[],["result",4]]],[11,"serialize","","",35,[[],["result",4]]],[11,"serialize","","",36,[[],["result",4]]],[11,"serialize","","",37,[[],["result",4]]],[11,"serialize","","",40,[[],["result",4]]],[11,"serialize","","",41,[[],["result",4]]],[11,"serialize","","",42,[[],["result",4]]],[11,"serialize","","",43,[[],["result",4]]],[11,"serialize","","",44,[[],["result",4]]],[11,"serialize","diem_json_rpc_types::proto::types","",45,[[],["result",4]]],[11,"serialize","","",46,[[],["result",4]]],[11,"serialize","","",47,[[],["result",4]]],[11,"serialize","","",48,[[],["result",4]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","","",50,[[],["result",4]]],[11,"serialize","","",51,[[],["result",4]]],[11,"serialize","","",52,[[],["result",4]]],[11,"serialize","","",53,[[],["result",4]]],[11,"serialize","","",54,[[],["result",4]]],[11,"serialize","","",55,[[],["result",4]]],[11,"serialize","","",56,[[],["result",4]]],[11,"serialize","","",57,[[],["result",4]]],[11,"serialize","","",58,[[],["result",4]]],[11,"serialize","","",59,[[],["result",4]]],[11,"encode_raw","","",45,[[]]],[11,"merge_field","","",45,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",45,[[]]],[11,"clear","","",45,[[]]],[11,"encode_raw","","",46,[[]]],[11,"merge_field","","",46,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",46,[[]]],[11,"clear","","",46,[[]]],[11,"encode_raw","","",47,[[]]],[11,"merge_field","","",47,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",47,[[]]],[11,"clear","","",47,[[]]],[11,"encode_raw","","",48,[[]]],[11,"merge_field","","",48,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",48,[[]]],[11,"clear","","",48,[[]]],[11,"encode_raw","","",49,[[]]],[11,"merge_field","","",49,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",49,[[]]],[11,"clear","","",49,[[]]],[11,"encode_raw","","",50,[[]]],[11,"merge_field","","",50,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",50,[[]]],[11,"clear","","",50,[[]]],[11,"encode_raw","","",51,[[]]],[11,"merge_field","","",51,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",51,[[]]],[11,"clear","","",51,[[]]],[11,"encode_raw","","",52,[[]]],[11,"merge_field","","",52,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",52,[[]]],[11,"clear","","",52,[[]]],[11,"encode_raw","","",53,[[]]],[11,"merge_field","","",53,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",53,[[]]],[11,"clear","","",53,[[]]],[11,"encode_raw","","",54,[[]]],[11,"merge_field","","",54,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",54,[[]]],[11,"clear","","",54,[[]]],[11,"encode_raw","","",55,[[]]],[11,"merge_field","","",55,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",55,[[]]],[11,"clear","","",55,[[]]],[11,"encode_raw","","",56,[[]]],[11,"merge_field","","",56,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",56,[[]]],[11,"clear","","",56,[[]]],[11,"encode_raw","","",57,[[]]],[11,"merge_field","","",57,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",57,[[]]],[11,"clear","","",57,[[]]],[11,"encode_raw","","",58,[[]]],[11,"merge_field","","",58,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",58,[[]]],[11,"clear","","",58,[[]]],[11,"encode_raw","","",59,[[]]],[11,"merge_field","","",59,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",59,[[]]],[11,"clear","","",59,[[]]]],"p":[[4,"ServerCode"],[4,"InvalidRequestCode"],[4,"ErrorData"],[3,"JsonRpcError"],[3,"JsonRpcResponse"],[3,"AmountView"],[4,"AccountRoleView"],[13,"ChildVASP"],[13,"ParentVASP"],[13,"DesignatedDealer"],[3,"AccountView"],[3,"EventView"],[3,"EventWithProofView"],[4,"EventDataView"],[13,"Burn"],[13,"CancelBurn"],[13,"Mint"],[13,"ToXDXExchangeRateUpdate"],[13,"Preburn"],[13,"ReceivedPayment"],[13,"SentPayment"],[13,"AdminTransaction"],[13,"NewEpoch"],[13,"NewBlock"],[13,"ReceivedMint"],[13,"ComplianceKeyRotation"],[13,"BaseUrlRotation"],[13,"CreateAccount"],[3,"MetadataView"],[3,"BytesView"],[3,"MoveAbortExplanationView"],[4,"VMStatusView"],[13,"MoveAbort"],[13,"ExecutionFailure"],[3,"TransactionView"],[3,"TransactionsWithProofsView"],[3,"TransactionsProofsView"],[4,"TransactionDataView"],[13,"BlockMetadata"],[13,"UserTransaction"],[3,"ScriptView"],[3,"CurrencyInfoView"],[3,"StateProofView"],[3,"AccountStateWithProofView"],[3,"AccountStateProofView"],[3,"Amount"],[3,"Account"],[3,"AccountRole"],[3,"Event"],[3,"EventData"],[3,"Metadata"],[3,"Transaction"],[3,"MoveAbortExplaination"],[3,"VmStatus"],[3,"TransactionData"],[3,"Script"],[3,"CurrencyInfo"],[3,"StateProof"],[3,"AccountStateWithProof"],[3,"AccountStateProof"]]},\
"diem_key_manager":{"doc":"The purpose of KeyManager is to rotate consensus key (and …","i":[[0,"counters","diem_key_manager","",null,null],[17,"KEYS_STILL_FRESH","diem_key_manager::counters","Metric counter states.",null,null],[17,"LIVENESS_ERROR_ENCOUNTERED","","",null,null],[17,"ROTATED_IN_STORAGE","","",null,null],[17,"SUBMITTED_ROTATION_TRANSACTION","","",null,null],[17,"WAITING_ON_RECONFIGURATION","","",null,null],[17,"WAITING_ON_TRANSACTION_EXECUTION","","",null,null],[17,"UNEXPECTED_ERROR_ENCOUNTERED","","",null,null],[5,"initialize_all_metric_counters","","Initializes all metric counter states.",null,[[]]],[5,"increment_metric_counter","","Increments a metric counter state.",null,[[]]],[0,"diem_interface","diem_key_manager","",null,null],[8,"DiemInterface","diem_key_manager::diem_interface","This defines a generic trait used to interact with the …",null,null],[10,"diem_timestamp","","Retrieves the current time from the blockchain, this is …",0,[[],[["error",4],["result",4]]]],[10,"last_reconfiguration","","Retrieves the last reconfiguration time from the …",0,[[],[["error",4],["result",4]]]],[10,"retrieve_sequence_number","","Retrieve current sequence number for the provided account.",0,[[["accountaddress",3]],[["error",4],["result",4]]]],[10,"submit_transaction","","Submits a transaction to the block chain and returns …",0,[[["transaction",4]],[["result",4],["error",4]]]],[10,"retrieve_validator_config","","Retrieves the ValidatorConfig at the specified …",0,[[["accountaddress",3]],[["error",4],["result",4],["validatorconfig",3]]]],[10,"retrieve_validator_info","","Retrieves the ValidatorInfo for the specified account …",0,[[["accountaddress",3]],[["error",4],["validatorinfo",3],["result",4]]]],[10,"retrieve_account_state","","Fetches the AccountState associated with a specific …",0,[[["accountaddress",3]],[["accountstate",3],["error",4],["result",4]]]],[3,"JsonRpcDiemInterface","","This implements the DiemInterface by talking directly to …",null,null],[11,"new","","",1,[[["string",3]]]],[0,"logging","diem_key_manager","",null,null],[3,"LogSchema","diem_key_manager::logging","",null,null],[11,"name","","",2,[[["logentry",4]]]],[11,"event","","",2,[[["logevent",4]]]],[11,"consensus_key","","",2,[[["ed25519publickey",3]]]],[11,"json_rpc_endpoint","","",2,[[]]],[11,"liveness_error","","",2,[[["error",4]]]],[11,"sleep_duration","","",2,[[]]],[11,"unexpected_error","","",2,[[["error",4]]]],[11,"new","","",2,[[["logentry",4]]]],[4,"LogEntry","","",null,null],[13,"CheckKeyStatus","","",3,null],[13,"FullKeyRotation","","",3,null],[13,"Initialized","","",3,null],[13,"KeyRotatedInStorage","","",3,null],[13,"KeyStillFresh","","",3,null],[13,"Sleep","","",3,null],[13,"TransactionResubmission","","",3,null],[13,"TransactionSubmitted","","",3,null],[13,"WaitForReconfiguration","","",3,null],[13,"WaitForTransactionExecution","","",3,null],[4,"LogEvent","","",null,null],[13,"Error","","",4,null],[13,"Pending","","",4,null],[13,"Success","","",4,null],[4,"Action","diem_key_manager","Defines actions that KeyManager should perform after a …",null,null],[13,"NoAction","","There is no need to perform a rotation (keys are still …",5,null],[13,"FullKeyRotation","","Sufficient time has passed for another key rotation (keys …",5,null],[13,"SubmitKeyRotationTransaction","","Storage and the blockchain are inconsistent, submit a new …",5,null],[13,"WaitForReconfiguration","","The validator config and the validator set are …",5,null],[13,"WaitForTransactionExecution","","Storage and the blockchain are inconsistent, wait for …",5,null],[4,"Error","","",null,null],[13,"ConfigInfoKeyMismatch","","",6,null],[13,"ConfigStorageKeyMismatch","","",6,null],[13,"DataDoesNotExist","","",6,null],[13,"LivenessError","","",6,null],[13,"MissingAccountAddress","","",6,null],[13,"StorageError","","",6,null],[13,"ValidatorInfoNotFound","","",6,null],[13,"UnknownError","","",6,null],[3,"KeyManager","","",null,null],[11,"new","","",7,[[["chainid",3],["timeservice",4]]]],[11,"execute","","Begins execution of the key manager by running an …",7,[[],[["result",4],["error",4]]]],[11,"execute_once","","Checks the current state of the validator keys and …",7,[[],[["result",4],["error",4]]]],[11,"compare_storage_to_config","","",7,[[],[["result",4],["error",4]]]],[11,"compare_info_to_config","","",7,[[],[["result",4],["error",4]]]],[11,"last_reconfiguration","","",7,[[],[["error",4],["result",4]]]],[11,"last_rotation","","",7,[[],[["error",4],["result",4]]]],[11,"diem_timestamp","","",7,[[],[["error",4],["result",4]]]],[11,"resubmit_consensus_key_transaction","","",7,[[],[["result",4],["error",4]]]],[11,"rotate_consensus_key","","",7,[[],[["result",4],["ed25519publickey",3],["error",4]]]],[11,"submit_key_rotation_transaction","","",7,[[["ed25519publickey",3]],[["result",4],["ed25519publickey",3],["error",4]]]],[11,"evaluate_status","","Evaluates the current status of the key manager by …",7,[[],[["error",4],["action",4],["result",4]]]],[11,"perform_action","","",7,[[["action",4]],[["result",4],["error",4]]]],[5,"build_rotation_transaction","","",null,[[["vec",3],["chainid",3],["ed25519publickey",3],["accountaddress",3]],["rawtransaction",3]]],[11,"from","diem_key_manager::diem_interface","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","diem_key_manager::logging","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"vzip","","",3,[[]]],[11,"erased_serialize","","",3,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"test_only_hash","","",4,[[],["hashvalue",3]]],[11,"vzip","","",4,[[]]],[11,"erased_serialize","","",4,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"from","diem_key_manager","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"diem_timestamp","diem_key_manager::diem_interface","",1,[[],[["error",4],["result",4]]]],[11,"last_reconfiguration","","",1,[[],[["error",4],["result",4]]]],[11,"retrieve_sequence_number","","",1,[[["accountaddress",3]],[["error",4],["result",4]]]],[11,"submit_transaction","","",1,[[["transaction",4]],[["result",4],["error",4]]]],[11,"retrieve_validator_config","","",1,[[["accountaddress",3]],[["error",4],["result",4],["validatorconfig",3]]]],[11,"retrieve_validator_info","","",1,[[["accountaddress",3]],[["error",4],["validatorinfo",3],["result",4]]]],[11,"retrieve_account_state","","",1,[[["accountaddress",3]],[["accountstate",3],["error",4],["result",4]]]],[11,"from","diem_key_manager","",6,[[["error",3]]]],[11,"from","","",6,[[["error",3]]]],[11,"from","","",6,[[["error",4]]]],[11,"from","","",6,[[["error",4]]]],[11,"clone","diem_key_manager::diem_interface","",1,[[],["jsonrpcdieminterface",3]]],[11,"clone","diem_key_manager::logging","",3,[[],["logentry",4]]],[11,"clone","","",4,[[],["logevent",4]]],[11,"eq","diem_key_manager","",5,[[["action",4]]]],[11,"eq","","",6,[[["error",4]]]],[11,"ne","","",6,[[["error",4]]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"serialize","diem_key_manager::logging","",3,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"visit","","",2,[[["visitor",8]]]]],"p":[[8,"DiemInterface"],[3,"JsonRpcDiemInterface"],[3,"LogSchema"],[4,"LogEntry"],[4,"LogEvent"],[4,"Action"],[4,"Error"],[3,"KeyManager"]]},\
"diem_log_derive":{"doc":"","i":[[24,"Schema","diem_log_derive","",null,null]],"p":[]},\
"diem_logger":{"doc":"This crates provides an API for logging in diem.","i":[[24,"Schema","diem_logger","",null,null],[0,"prelude","","",null,null],[3,"FileWriter","diem_logger::prelude","A struct for writing logs to a file",null,null],[4,"SecurityEvent","","",null,null],[13,"InvalidTransactionMempool","","Mempool received a transaction from another peer with an …",0,null],[13,"InvalidNetworkEventMempool","","Mempool received an invalid network event",0,null],[13,"ConsensusInvalidMessage","","Consensus received an invalid message (not well-formed, …",0,null],[13,"ConsensusEquivocatingVote","","Consensus received an equivocating vote",0,null],[13,"InvalidConsensusProposal","","Consensus received an invalid proposal",0,null],[13,"InvalidConsensusRound","","Consensus received an invalid new round message",0,null],[13,"InvalidSyncInfoMsg","","Consensus received an invalid sync info message",0,null],[13,"InvalidRetrievedBlock","","A received block is invalid",0,null],[13,"InvalidBlock","","A block being committed or executed is invalid",0,null],[13,"StateSyncInvalidChunk","","Invalid chunk of transactions received",0,null],[13,"InvalidNetworkEventHC","","HealthChecker received an invalid network event",0,null],[13,"InvalidHealthCheckerMsg","","HealthChecker received an invalid message",0,null],[13,"InvalidNetworkEvent","","Network received an invalid message from a remote peer",0,null],[13,"NoiseHandshake","","A failed noise handshake that\'s either a clear bug or …",0,null],[0,"json_log","diem_logger","",null,null],[3,"JsonLogEntry","diem_logger::json_log","",null,null],[12,"name","","",1,null],[12,"timestamp","","",1,null],[12,"json","","",1,null],[11,"new","","",1,[[["value",4]]]],[5,"send_json_log","","Sends event to event stream.",null,[[["jsonlogentry",3]]]],[5,"pop_last_entries","","Get up to MAX_EVENTS_IN_QUEUE last events and clears the …",null,[[],[["vec",3],["jsonlogentry",3]]]],[11,"new","diem_logger::prelude","",2,[[["pathbuf",3]]]],[0,"sample","diem_logger","Periodic sampling for logs, metrics, and other use cases …",null,null],[4,"SampleRate","diem_logger::sample","The rate at which a <code>sample!</code> macro will run it\'s given …",null,null],[13,"Duration","","Only sample a single time during a window of time. This …",3,null],[13,"Frequency","","Sample based on the frequency of the event. The provided …",3,null],[13,"Always","","Always Sample",3,null],[3,"Sampling","","An internal struct that can be checked if a sample is …",null,null],[11,"new","","",4,[[["samplerate",4]]]],[11,"sample","","",4,[[]]],[3,"DiemLogger","diem_logger","",null,null],[3,"Logger","","",null,null],[3,"DiemLoggerBuilder","","A builder for a <code>DiemLogger</code>, configures what, where, and …",null,null],[8,"Writer","","An trait encapsulating the operations required for …",null,null],[10,"write","","Write the log.",5,[[["string",3]]]],[17,"CHANNEL_SIZE","","Default size of log write channel, if the channel is …",null,null],[3,"Event","","An individual structured logging event from a log line.  …",null,null],[3,"Filter","","A logging filter to determine which logs to keep or …",null,null],[4,"LevelFilter","","A definition of the most verbose <code>Level</code> allowed, or …",null,null],[13,"Off","","",6,null],[13,"Error","","",6,null],[13,"Warn","","",6,null],[13,"Info","","",6,null],[13,"Debug","","",6,null],[13,"Trace","","",6,null],[5,"flush","","Flush the global <code>Logger</code>",null,[[]]],[4,"Level","","Logging levels, used for stratifying logs, and disabling …",null,null],[13,"Error","","The \\\"error\\\" level.",7,null],[13,"Warn","","The \\\"warn\\\" level.",7,null],[13,"Info","","The \\\"info\\\" level.",7,null],[13,"Debug","","The \\\"debug\\\" level.",7,null],[13,"Trace","","The \\\"trace\\\" level.",7,null],[3,"Metadata","","Associated metadata with every log to identify what kind …",null,null],[3,"Key","","The key part of a logging key value pair e.g. …",null,null],[3,"KeyValue","","The logging key value pair e.g. <code>info!(key = value)</code>",null,null],[8,"Schema","","A schema of key-value pairs.",null,null],[10,"visit","","Visit key-value pairs.",8,[[["visitor",8]]]],[4,"Value","","The value part of a logging key value pair e.g. …",null,null],[13,"Debug","","",9,null],[13,"Display","","",9,null],[13,"Serde","","",9,null],[8,"Visitor","","A visitor for the key-value pairs in a <code>Schema</code>.",null,null],[10,"visit_pair","","Visit a key-value pair.",10,[[["key",3],["value",4]]]],[4,"SecurityEvent","","",null,null],[13,"InvalidTransactionMempool","","Mempool received a transaction from another peer with an …",0,null],[13,"InvalidNetworkEventMempool","","Mempool received an invalid network event",0,null],[13,"ConsensusInvalidMessage","","Consensus received an invalid message (not well-formed, …",0,null],[13,"ConsensusEquivocatingVote","","Consensus received an equivocating vote",0,null],[13,"InvalidConsensusProposal","","Consensus received an invalid proposal",0,null],[13,"InvalidConsensusRound","","Consensus received an invalid new round message",0,null],[13,"InvalidSyncInfoMsg","","Consensus received an invalid sync info message",0,null],[13,"InvalidRetrievedBlock","","A received block is invalid",0,null],[13,"InvalidBlock","","A block being committed or executed is invalid",0,null],[13,"StateSyncInvalidChunk","","Invalid chunk of transactions received",0,null],[13,"InvalidNetworkEventHC","","HealthChecker received an invalid network event",0,null],[13,"InvalidHealthCheckerMsg","","HealthChecker received an invalid message",0,null],[13,"InvalidNetworkEvent","","Network received an invalid message from a remote peer",0,null],[13,"NoiseHandshake","","A failed noise handshake that\'s either a clear bug or …",0,null],[14,"event","","Writes event to event stream Example: event!(\\\"committed\\\", …",null,null],[14,"log","","Log at the given level, it\'s recommended to use a …",null,null],[14,"trace","","Log at the <code>trace</code> level",null,null],[14,"debug","","Log at the <code>debug</code> level",null,null],[14,"info","","Log at the <code>info</code> level",null,null],[14,"warn","","Log at the <code>warn</code> level",null,null],[14,"error","","Log at the <code>error</code> level",null,null],[14,"sample","","Samples a given function at a <code>SampleRate</code>, useful for …",null,null],[11,"from","diem_logger::prelude","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","diem_logger::json_log","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","diem_logger","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"equivalent","","",6,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"equivalent","","",15,[[]]],[11,"erased_serialize","","",15,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"erased_serialize","","",17,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"equivalent","","",7,[[]]],[11,"erased_serialize","","",7,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","diem_logger::sample","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"write","diem_logger::prelude","Write to file",2,[[["string",3]]]],[11,"visit","diem_logger","",16,[[["visitor",8]]]],[11,"visit","diem_logger::prelude","",0,[[["visitor",8]]]],[11,"from","diem_logger","",6,[[["level",4]]]],[11,"clone","diem_logger::json_log","",1,[[],["jsonlogentry",3]]],[11,"clone","diem_logger","",6,[[],["levelfilter",4]]],[11,"clone","","",15,[[],["key",3]]],[11,"clone","","",9,[[],["value",4]]],[11,"clone","","",16,[[],["keyvalue",3]]],[11,"clone","","",17,[[],["metadata",3]]],[11,"clone","","",7,[[],["level",4]]],[11,"clone","diem_logger::prelude","",0,[[],["securityevent",4]]],[11,"cmp","diem_logger","",6,[[["levelfilter",4]],["ordering",4]]],[11,"cmp","","",15,[[["key",3]],["ordering",4]]],[11,"cmp","","",7,[[["level",4]],["ordering",4]]],[11,"eq","","",6,[[["levelfilter",4]]]],[11,"eq","","",15,[[["key",3]]]],[11,"ne","","",15,[[["key",3]]]],[11,"eq","","",7,[[["level",4]]]],[11,"partial_cmp","","",6,[[["levelfilter",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",15,[[["key",3]],[["option",4],["ordering",4]]]],[11,"lt","","",15,[[["key",3]]]],[11,"le","","",15,[[["key",3]]]],[11,"gt","","",15,[[["key",3]]]],[11,"ge","","",15,[[["key",3]]]],[11,"partial_cmp","","",7,[[["level",4]],[["option",4],["ordering",4]]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","diem_logger::sample","",3,[[["formatter",3]],["result",6]]],[11,"fmt","diem_logger::prelude","",0,[[["formatter",3]],["result",6]]],[11,"fmt","diem_logger","",7,[[["formatter",3]],["result",6]]],[11,"hash","","",15,[[]]],[11,"hash","","",7,[[]]],[11,"from_str","","",6,[[],["result",4]]],[11,"from_str","","",7,[[],[["level",4],["result",4]]]],[11,"serialize","diem_logger::json_log","",1,[[],["result",4]]],[11,"serialize","diem_logger","",15,[[],["result",4]]],[11,"serialize","","",17,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","diem_logger::prelude","",0,[[],["result",4]]],[11,"deserialize","diem_logger::json_log","",1,[[],["result",4]]],[11,"deserialize","diem_logger","",17,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","diem_logger::prelude","",0,[[],["result",4]]],[11,"new","diem_logger","",11,[[]]],[11,"address","","",11,[[["string",3]]]],[11,"read_env","","",11,[[]]],[11,"level","","",11,[[["level",4]]]],[11,"remote_level","","",11,[[["level",4]]]],[11,"channel_size","","",11,[[]]],[11,"printer","","",11,[[["box",3],["writer",8]]]],[11,"is_async","","",11,[[]]],[11,"custom_format","","",11,[[]]],[11,"init","","",11,[[]]],[11,"build","","",11,[[],[["arc",3],["diemlogger",3]]]],[11,"builder","","",12,[[],["diemloggerbuilder",3]]],[11,"new","","",12,[[],["diemloggerbuilder",3]]],[11,"init_for_testing","","",12,[[]]],[11,"set_filter","","",12,[[["filter",3]]]],[11,"set_remote_filter","","",12,[[["filter",3]]]],[11,"dispatch","","",13,[[["metadata",3],["option",4],["arguments",3]]]],[11,"metadata","","",13,[[],["metadata",3]]],[11,"message","","",13,[[],[["option",4],["arguments",3]]]],[11,"keys_and_values","","",13,[[]]],[11,"max","","Returns the most verbose logging level filter.",6,[[]]],[11,"builder","","",14,[[],["builder",3]]],[11,"enabled","","",14,[[["metadata",3]]]],[11,"new","","",15,[[]]],[11,"as_str","","",15,[[]]],[11,"from_serde","","Get a value from a debuggable type.",9,[[]]],[11,"from_debug","","Get a value from a debuggable type.",9,[[]]],[11,"from_display","","Get a value from a displayable type.",9,[[]]],[11,"new","","",16,[[["value",4]]]],[11,"new","","",17,[[["level",4]]]],[11,"enabled","","",17,[[]]],[11,"level","","",17,[[],["level",4]]],[11,"target","","",17,[[]]],[11,"module_path","","",17,[[]]],[11,"file","","",17,[[]]],[11,"line","","",17,[[]]],[11,"location","","",17,[[]]]],"p":[[4,"SecurityEvent"],[3,"JsonLogEntry"],[3,"FileWriter"],[4,"SampleRate"],[3,"Sampling"],[8,"Writer"],[4,"LevelFilter"],[4,"Level"],[8,"Schema"],[4,"Value"],[8,"Visitor"],[3,"DiemLoggerBuilder"],[3,"DiemLogger"],[3,"Event"],[3,"Filter"],[3,"Key"],[3,"KeyValue"],[3,"Metadata"]]},\
"diem_management":{"doc":"","i":[[0,"config","diem_management","",null,null],[3,"Config","diem_management::config","A config file for working with management tooling.",null,null],[12,"chain_id","","",0,null],[12,"json_server","","",0,null],[12,"shared_backend","","",0,null],[12,"validator_backend","","",0,null],[11,"load","","",0,[[["pathbuf",3]],[["result",4],["config",3],["error",4]]]],[11,"override_chain_id","","",0,[[["chainid",3],["option",4]]]],[11,"override_json_server","","",0,[[["option",4]]]],[11,"override_shared_backend","","",0,[[["option",4]],[["result",4],["error",4]]]],[11,"override_validator_backend","","",0,[[["option",4]],[["result",4],["error",4]]]],[11,"shared_backend","","",0,[[],["storagewrapper",3]]],[11,"shared_backend_with_namespace","","",0,[[["string",3]],["storagewrapper",3]]],[11,"validator_backend","","",0,[[],["storagewrapper",3]]],[3,"ConfigPath","","",null,null],[11,"load","","",1,[[],[["result",4],["config",3],["error",4]]]],[0,"error","diem_management","",null,null],[4,"Error","diem_management::error","",null,null],[13,"BackendInvalidKeyValue","","",2,null],[13,"BackendMissingBackendKey","","",2,null],[13,"BackendParsingError","","",2,null],[13,"CommandArgumentError","","",2,null],[13,"ConfigError","","",2,null],[13,"IO","","",2,null],[13,"BCS","","",2,null],[13,"JsonRpcReadError","","",2,null],[13,"JsonRpcWriteError","","",2,null],[13,"NetworkAddressDecodeError","","",2,null],[13,"StorageUnavailable","","",2,null],[13,"StorageReadError","","",2,null],[13,"StorageSigningError","","",2,null],[13,"StorageWriteError","","",2,null],[13,"UnableToParse","","",2,null],[13,"UnableToParseFile","","",2,null],[13,"UnableToReadFile","","",2,null],[13,"UnexpectedCommand","","",2,null],[13,"UnexpectedError","","",2,null],[0,"secure_backend","diem_management","",null,null],[17,"BACKEND","diem_management::secure_backend","",null,null],[17,"DISK","","",null,null],[17,"GITHUB","","",null,null],[17,"MEMORY","","",null,null],[17,"VAULT","","",null,null],[3,"SecureBackend","","SecureBackend is a parameter that is stored as set of …",null,null],[12,"backend","","",3,null],[12,"parameters","","",3,null],[3,"ValidatorBackend","","",null,null],[12,"validator_backend","","",4,null],[3,"SharedBackend","","",null,null],[12,"shared_backend","","",5,null],[0,"storage","diem_management","",null,null],[3,"StorageWrapper","diem_management::storage","A helper to handle common error handling and …",null,null],[11,"encryptor","","",6,[[],["encryptor",3]]],[11,"value","","",6,[[],[["error",4],["result",4],["deserializeowned",8]]]],[11,"account_address","","",6,[[],[["accountaddress",3],["result",4],["error",4]]]],[11,"string","","",6,[[],[["string",3],["error",4],["result",4]]]],[11,"transaction","","",6,[[],[["result",4],["transaction",4],["error",4]]]],[11,"u64","","",6,[[],[["result",4],["error",4]]]],[11,"waypoint","","",6,[[],[["result",4],["waypoint",3],["error",4]]]],[11,"ed25519_key","","Retrieves the Public key, that is stored as a public key",6,[[],[["ed25519publickey",3],["error",4],["result",4]]]],[11,"x25519_key","","Retrieves the Public key that is stored as a public key",6,[[],[["publickey",3],["result",4],["error",4]]]],[11,"rotate_key","","",6,[[],[["ed25519publickey",3],["error",4],["result",4]]]],[11,"ed25519_public_from_private","","Retrieves public key from the stored private key",6,[[],[["ed25519publickey",3],["error",4],["result",4]]]],[11,"ed25519_public_from_private_previous_version","","Retrieves the previous public key from the stored private …",6,[[],[["ed25519publickey",3],["error",4],["result",4]]]],[11,"ed25519_private","","Retrieves public key from the stored private key",6,[[],[["result",4],["error",4],["ed25519privatekey",3]]]],[11,"x25519_public_from_private","","Retrieves public key from the stored private key",6,[[],[["publickey",3],["result",4],["error",4]]]],[11,"set","","",6,[[["serialize",8]],[["result",4],["error",4]]]],[11,"sign","","Sign a transaction",6,[[["rawtransaction",3]],[["signedtransaction",3],["error",4],["result",4]]]],[11,"sign_using_version","","Sign a transaction with the given version",6,[[["ed25519publickey",3],["rawtransaction",3]],[["signedtransaction",3],["error",4],["result",4]]]],[5,"to_x25519","","",null,[[["ed25519publickey",3]],[["publickey",3],["result",4],["error",4]]]],[0,"transaction","diem_management","",null,null],[5,"build_raw_transaction","diem_management::transaction","Builds a <code>RawTransaction</code> to handle common transaction …",null,[[["chainid",3],["accountaddress",3],["script",3]],["rawtransaction",3]]],[0,"validator_config","diem_management","",null,null],[3,"ValidatorConfig","diem_management::validator_config","",null,null],[12,"config","","",7,null],[12,"chain_id","","",7,null],[12,"validator_backend","","",7,null],[11,"config","","",7,[[],[["result",4],["config",3],["error",4]]]],[11,"build_transaction","","",7,[[["networkaddress",3]],[["result",4],["transaction",4],["error",4]]]],[5,"validate_address","","Validates an address to have a DNS/IP and a port, as well …",null,[[["networkaddress",3]],[["result",4],["error",4]]]],[0,"waypoint","diem_management","",null,null],[3,"InsertWaypoint","diem_management::waypoint","",null,null],[12,"config","","",8,null],[11,"execute","","",8,[[],[["result",4],["error",4]]]],[0,"constants","diem_management","",null,null],[17,"COMMON_NS","diem_management::constants","",null,null],[17,"LAYOUT","","",null,null],[17,"VALIDATOR_CONFIG","","",null,null],[17,"VALIDATOR_OPERATOR","","",null,null],[17,"GAS_UNIT_PRICE","","",null,null],[17,"MAX_GAS_AMOUNT","","",null,null],[17,"GAS_CURRENCY_CODE","","",null,null],[17,"TXN_EXPIRATION_SECS","","",null,null],[5,"read_key_from_file","diem_management","Reads a given ed25519 public key from file. Attempts to …",null,[[["pathbuf",3]],[["ed25519publickey",3],["result",4],["string",3]]]],[14,"secure_backend","","",null,null],[14,"execute_command","","",null,null],[11,"from","diem_management::config","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","diem_management::error","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","diem_management::secure_backend","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","diem_management::storage","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","diem_management::validator_config","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","diem_management::waypoint","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"clone","diem_management::config","",0,[[],["config",3]]],[11,"clone","","",1,[[],["configpath",3]]],[11,"clone","diem_management::secure_backend","",3,[[],["securebackend",3]]],[11,"clone","","",4,[[],["validatorbackend",3]]],[11,"clone","","",5,[[],["sharedbackend",3]]],[11,"clone","diem_management::validator_config","",7,[[],["validatorconfig",3]]],[11,"default","diem_management::config","",0,[[]]],[11,"default","","",1,[[],["configpath",3]]],[11,"eq","","",0,[[["config",3]]]],[11,"ne","","",0,[[["config",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","diem_management::error","",2,[[["formatter",3]],["result",6]]],[11,"fmt","diem_management::secure_backend","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","diem_management::validator_config","",7,[[["formatter",3]],["result",6]]],[11,"fmt","diem_management::waypoint","",8,[[["formatter",3]],["result",6]]],[11,"fmt","diem_management::error","",2,[[["formatter",3]],["result",6]]],[11,"try_from","diem_management::secure_backend","",3,[[],[["result",4],["error",4]]]],[11,"from_str","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],[["securebackend",4],["error",4],["result",4]]]],[11,"source","diem_management::error","",2,[[],[["option",4],["error",8]]]],[11,"deserialize","diem_management::config","",0,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"clap","","",1,[[],["app",3]]],[11,"from_clap","","",1,[[["argmatches",3]]]],[11,"clap","diem_management::secure_backend","",4,[[],["app",3]]],[11,"from_clap","","",4,[[["argmatches",3]]]],[11,"clap","","",5,[[],["app",3]]],[11,"from_clap","","",5,[[["argmatches",3]]]],[11,"clap","diem_management::validator_config","",7,[[],["app",3]]],[11,"from_clap","","",7,[[["argmatches",3]]]],[11,"clap","diem_management::waypoint","",8,[[],["app",3]]],[11,"from_clap","","",8,[[["argmatches",3]]]],[11,"augment_clap","diem_management::config","",1,[[["app",3]],["app",3]]],[11,"is_subcommand","","",1,[[]]],[11,"augment_clap","diem_management::secure_backend","",4,[[["app",3]],["app",3]]],[11,"is_subcommand","","",4,[[]]],[11,"augment_clap","","",5,[[["app",3]],["app",3]]],[11,"is_subcommand","","",5,[[]]],[11,"augment_clap","diem_management::validator_config","",7,[[["app",3]],["app",3]]],[11,"is_subcommand","","",7,[[]]],[11,"augment_clap","diem_management::waypoint","",8,[[["app",3]],["app",3]]],[11,"is_subcommand","","",8,[[]]]],"p":[[3,"Config"],[3,"ConfigPath"],[4,"Error"],[3,"SecureBackend"],[3,"ValidatorBackend"],[3,"SharedBackend"],[3,"StorageWrapper"],[3,"ValidatorConfig"],[3,"InsertWaypoint"]]},\
"diem_mempool":{"doc":"Mempool is used to hold transactions that have been …","i":[[0,"network","diem_mempool","Interface between Mempool and Network layers.",null,null],[4,"MempoolSyncMsg","diem_mempool::network","Container for exchanging transactions with other Mempools.",null,null],[13,"BroadcastTransactionsRequest","","Broadcast request issued by the sender.",0,null],[12,"request_id","diem_mempool::network::MempoolSyncMsg","Unique id of sync request. Can be used by sender for …",1,null],[12,"transactions","","",1,null],[13,"BroadcastTransactionsResponse","diem_mempool::network","Broadcast ack issued by the receiver.",0,null],[12,"request_id","diem_mempool::network::MempoolSyncMsg","",2,null],[12,"retry","","Retry signal from recipient if there are txns in …",2,null],[12,"backoff","","A backpressure signal from the recipient when it is …",2,null],[17,"MEMPOOL_DIRECT_SEND_PROTOCOL","diem_mempool::network","Protocol id for mempool direct-send calls.",null,null],[6,"MempoolNetworkEvents","","The interface from Network to Mempool layer.",null,null],[3,"MempoolNetworkSender","","The interface from Mempool to Networking layer.",null,null],[5,"network_endpoint_config","","Create a new Sender that only sends for the …",null,[[]]],[0,"fuzzing","diem_mempool","",null,null],[5,"mempool_incoming_transactions_strategy","diem_mempool::fuzzing","",null,[[]]],[5,"test_mempool_process_incoming_transactions_impl","","",null,[[["vec",3],["signedtransaction",3],["timelinestate",4]]]],[0,"mocks","diem_mempool","",null,null],[3,"MockSharedMempool","diem_mempool::mocks","Mock of a running instance of shared mempool.",null,null],[12,"ac_client","","",3,null],[12,"mempool","","",3,null],[12,"consensus_sender","","",3,null],[12,"state_sync_sender","","",3,null],[11,"send_to","diem_mempool::network","",4,[[["peerid",3],["mempoolsyncmsg",4]],[["result",4],["networkerror",3]]]],[5,"bootstrap","diem_mempool","",null,[[["receiver",3],["onchainconfigpayload",3],["dbreader",8],["receiver",3],["arc",3],["nodeconfig",3],["consensusrequest",4],["vec",3],["receiver",3],["commitnotification",3],["receiver",3]],["runtime",3]]],[5,"gen_mempool_reconfig_subscription","","",null,[[]]],[3,"CommitNotification","","Notification from state sync to mempool of commit event. …",null,null],[12,"transactions","","",5,null],[12,"block_timestamp_usecs","","Timestamp of committed block.",5,null],[12,"callback","","",5,null],[3,"CommitResponse","","",null,null],[12,"success","","",6,null],[12,"error_message","","The error message if <code>success</code> is false.",6,null],[3,"CommittedTransaction","","Successfully executed and committed txn",null,null],[12,"sender","","",7,null],[12,"sequence_number","","",7,null],[4,"ConsensusRequest","","Message sent from consensus to mempool.",null,null],[13,"GetBlockRequest","","Request to pull block to submit to consensus.",8,null],[13,"RejectNotification","","Notifications about <em>rejected</em> committed txns.",8,null],[4,"ConsensusResponse","","Response sent from mempool to consensus.",null,null],[13,"GetBlockResponse","","Block to submit to consensus",9,null],[13,"CommitResponse","","",9,null],[6,"MempoolClientSender","","",null,null],[6,"SubmissionStatus","","",null,null],[3,"TransactionExclusion","","",null,null],[12,"sender","","",10,null],[12,"sequence_number","","",10,null],[11,"from","diem_mempool::mocks","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","diem_mempool::network","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","diem_mempool","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"clone","diem_mempool::network","",0,[[],["mempoolsyncmsg",4]]],[11,"clone","","",4,[[],["mempoolnetworksender",3]]],[11,"clone","diem_mempool","",10,[[],["transactionexclusion",3]]],[11,"fmt","diem_mempool::network","",0,[[["formatter",3]],["result",6]]],[11,"fmt","diem_mempool","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"deserialize","diem_mempool::network","",0,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"new","","",4,[[["peermanagerrequestsender",3],["connectionrequestsender",3]]]],[11,"new","diem_mempool::mocks","Creates a mock of a running instance of shared mempool. …",3,[[["option",4],["receiver",3]]]],[11,"add_txns","","",3,[[["vec",3],["signedtransaction",3]],["result",6]]],[11,"read_timeline","","True if all the given txns are in mempool, else false.",3,[[],[["vec",3],["signedtransaction",3]]]],[11,"success","diem_mempool","",6,[[]]],[11,"error","","",6,[[["string",3]]]]],"p":[[4,"MempoolSyncMsg"],[13,"BroadcastTransactionsRequest"],[13,"BroadcastTransactionsResponse"],[3,"MockSharedMempool"],[3,"MempoolNetworkSender"],[3,"CommitNotification"],[3,"CommitResponse"],[3,"CommittedTransaction"],[4,"ConsensusRequest"],[4,"ConsensusResponse"],[3,"TransactionExclusion"]]},\
"diem_metrics":{"doc":"MetricsCountersUsed to measure values that are added to …","i":[[14,"register_histogram","diem_metrics","Create a [<code>Histogram</code>] and registers to default registry.",null,null],[14,"register_histogram_vec","","Create a [<code>HistogramVec</code>] and registers to default registry.",null,null],[14,"register_int_counter","","Create an [<code>IntCounter</code>] and registers to default registry.",null,null],[14,"register_int_counter_vec","","Create an [<code>IntCounterVec</code>] and registers to default …",null,null],[14,"register_int_gauge","","Create an [<code>IntGauge</code>] and registers to default registry.",null,null],[14,"register_int_gauge_vec","","Create an [<code>IntGaugeVec</code>] and registers to default registry.",null,null],[3,"Histogram","","A [<code>Metric</code>] counts individual observations from an event …",null,null],[3,"HistogramTimer","","Timer to measure and record the duration of an event.",null,null],[6,"HistogramVec","","A [<code>Collector</code>] that bundles a set of Histograms that all …",null,null],[6,"IntCounter","","The integer version of [<code>Counter</code>]. Provides better …",null,null],[6,"IntCounterVec","","The integer version of [<code>CounterVec</code>]. Provides better …",null,null],[6,"IntGauge","","The integer version of [<code>Gauge</code>]. Provides better …",null,null],[6,"IntGaugeVec","","The integer version of [<code>GaugeVec</code>]. Provides better …",null,null],[0,"metric_server","","",null,null],[5,"start_server","diem_metrics::metric_server","",null,[[["string",3]]]],[3,"DurationHistogram","diem_metrics","A small wrapper around Histogram to handle the special …",null,null],[3,"OpMetrics","","",null,null],[7,"NUM_METRICS","","",null,null],[5,"gather_metrics","","",null,[[],[["vec",3],["metricfamily",3]]]],[5,"get_all_metrics","","",null,[[],[["string",3],["hashmap",3]]]],[5,"dump_all_metrics_to_file_periodically","","",null,[[]]],[14,"monitor","","Helper function to record metrics for external calls. …",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"clone","","",0,[[],["histogram",3]]],[11,"metric","","",0,[[],["metric",3]]],[11,"desc","","",0,[[],[["global",3],["vec",3],["desc",3]]]],[11,"collect","","",0,[[],[["global",3],["vec",3],["metricfamily",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"drop","","",1,[[]]],[11,"clone","","",3,[[],["opmetrics",3]]],[11,"desc","","",3,[[],[["vec",3],["desc",3]]]],[11,"collect","","",3,[[],[["vec",3],["metricfamily",3]]]],[11,"with_opts","","<code>with_opts</code> creates a [<code>Histogram</code>] with the <code>opts</code> options.",0,[[["histogramopts",3]],[["error",4],["result",4],["histogram",3]]]],[11,"observe","","Add a single observation to the [<code>Histogram</code>].",0,[[]]],[11,"start_timer","","Return a [<code>HistogramTimer</code>] to track a duration.",0,[[],["histogramtimer",3]]],[11,"observe_closure_duration","","Observe execution time of a closure, in second.",0,[[]]],[11,"local","","Return a [<code>LocalHistogram</code>] for single thread usage.",0,[[],["localhistogram",3]]],[11,"get_sample_sum","","Return accumulated sum of all samples.",0,[[]]],[11,"get_sample_count","","Return count of all samples.",0,[[]]],[11,"observe_duration","","Observe and record timer duration (in seconds).",1,[[]]],[11,"stop_and_record","","Observe, record and return timer duration (in seconds).",1,[[]]],[11,"stop_and_discard","","Observe and return timer duration (in seconds).",1,[[]]],[11,"new","","",2,[[["histogram",3]],["durationhistogram",3]]],[11,"observe_duration","","",2,[[["duration",3]]]],[11,"start_timer","","",2,[[],["histogramtimer",3]]],[11,"new","","",3,[[["string",3],["into",8]],["opmetrics",3]]],[11,"new_and_registered","","",3,[[["string",3],["into",8]],["opmetrics",3]]],[11,"gauge","","",3,[[],["intgauge",6]]],[11,"peer_gauge","","",3,[[],["intgauge",6]]],[11,"inc","","",3,[[]]],[11,"inc_by","","",3,[[]]],[11,"set","","",3,[[]]],[11,"observe","","",3,[[]]],[11,"observe_duration","","",3,[[["duration",3]]]],[11,"timer","","",3,[[],["histogramtimer",3]]]],"p":[[3,"Histogram"],[3,"HistogramTimer"],[3,"DurationHistogram"],[3,"OpMetrics"]]},\
"diem_metrics_core":{"doc":"","i":[[5,"gather","diem_metrics_core","Return all <code>MetricFamily</code> of <code>DEFAULT_REGISTRY</code>.",null,[[],[["global",3],["vec",3],["metricfamily",3]]]],[14,"register_histogram","","Create a [<code>Histogram</code>] and registers to default registry.",null,null],[14,"register_histogram_vec","","Create a [<code>HistogramVec</code>] and registers to default registry.",null,null],[14,"register_int_counter","","Create an [<code>IntCounter</code>] and registers to default registry.",null,null],[14,"register_int_counter_vec","","Create an [<code>IntCounterVec</code>] and registers to default …",null,null],[14,"register_int_gauge","","Create an [<code>IntGauge</code>] and registers to default registry.",null,null],[14,"register_int_gauge_vec","","Create an [<code>IntGaugeVec</code>] and registers to default registry.",null,null],[8,"Encoder","","An interface for encoding metric families into an …",null,null],[10,"encode","","<code>encode</code> converts a slice of MetricFamily proto messages …",0,[[],[["result",4],["error",4]]]],[10,"format_type","","<code>format_type</code> returns target format.",0,[[]]],[3,"Histogram","","A [<code>Metric</code>] counts individual observations from an event …",null,null],[3,"HistogramTimer","","Timer to measure and record the duration of an event.",null,null],[6,"HistogramVec","","A [<code>Collector</code>] that bundles a set of Histograms that all …",null,null],[6,"IntCounter","","The integer version of [<code>Counter</code>]. Provides better …",null,null],[6,"IntCounterVec","","The integer version of [<code>CounterVec</code>]. Provides better …",null,null],[6,"IntGauge","","The integer version of [<code>Gauge</code>]. Provides better …",null,null],[6,"IntGaugeVec","","The integer version of [<code>GaugeVec</code>]. Provides better …",null,null],[3,"TextEncoder","","An implementation of an [<code>Encoder</code>] that converts a […",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"default","","",3,[[],["textencoder",3]]],[11,"clone","","",1,[[],["histogram",3]]],[11,"encode","","",3,[[],[["result",4],["error",4]]]],[11,"format_type","","",3,[[]]],[11,"metric","","",1,[[],["metric",3]]],[11,"desc","","",1,[[],[["desc",3],["vec",3],["global",3]]]],[11,"collect","","",1,[[],[["global",3],["vec",3],["metricfamily",3]]]],[11,"fmt","","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",3,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"drop","","",2,[[]]],[11,"with_opts","","<code>with_opts</code> creates a [<code>Histogram</code>] with the <code>opts</code> options.",1,[[["histogramopts",3]],[["result",4],["histogram",3],["error",4]]]],[11,"observe","","Add a single observation to the [<code>Histogram</code>].",1,[[]]],[11,"start_timer","","Return a [<code>HistogramTimer</code>] to track a duration.",1,[[],["histogramtimer",3]]],[11,"observe_closure_duration","","Observe execution time of a closure, in second.",1,[[]]],[11,"local","","Return a [<code>LocalHistogram</code>] for single thread usage.",1,[[],["localhistogram",3]]],[11,"get_sample_sum","","Return accumulated sum of all samples.",1,[[]]],[11,"get_sample_count","","Return count of all samples.",1,[[]]],[11,"observe_duration","","Observe and record timer duration (in seconds).",2,[[]]],[11,"stop_and_record","","Observe, record and return timer duration (in seconds).",2,[[]]],[11,"stop_and_discard","","Observe and return timer duration (in seconds).",2,[[]]],[11,"new","","Create a new text encoder.",3,[[],["textencoder",3]]]],"p":[[8,"Encoder"],[3,"Histogram"],[3,"HistogramTimer"],[3,"TextEncoder"]]},\
"diem_network_address_encryption":{"doc":"","i":[[4,"Error","diem_network_address_encryption","",null,null],[13,"AddressDeserialization","","",0,null],[13,"DecryptionError","","",0,null],[13,"BCSError","","",0,null],[13,"ParseError","","",0,null],[13,"StorageError","","",0,null],[13,"VersionNotFound","","",0,null],[3,"Encryptor","","",null,null],[11,"new","","",1,[[["storage",4]]]],[11,"for_testing","","This generates an Encryptor for use in default / testing …",1,[[]]],[11,"add_key","","",1,[[["keyversion",6],["key",6]],[["result",4],["error",4]]]],[11,"set_current_version","","",1,[[["keyversion",6]],[["result",4],["error",4]]]],[11,"current_version","","",1,[[],[["result",4],["keyversion",6],["error",4]]]],[11,"encrypt","","",1,[[["accountaddress",3]],[["vec",3],["result",4],["error",4]]]],[11,"decrypt","","",1,[[["accountaddress",3]],[["result",4],["error",4],["vec",3]]]],[11,"initialize","","",1,[[],[["result",4],["error",4]]]],[11,"initialize_for_testing","","",1,[[],[["result",4],["error",4]]]],[5,"to_base64","","",null,[[],["result",4]]],[5,"from_base64","","",null,[[],[["result",4],["key",6]]]],[3,"ValidatorKeys","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","","",0,[[["parseerror",4]]]],[11,"from","","",0,[[["storageerror",4]]]],[11,"clone","","",2,[[],["validatorkeys",3]]],[11,"default","","",2,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["option",4],["error",8]]]],[11,"serialize","","",2,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]]],"p":[[4,"Error"],[3,"Encryptor"],[3,"ValidatorKeys"]]},\
"diem_nibble":{"doc":"<code>Nibble</code> represents a four-bit unsigned integer.","i":[[3,"Nibble","diem_nibble","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",0,[[]]],[11,"clone","","",0,[[],["nibble",3]]],[11,"cmp","","",0,[[["nibble",3]],["ordering",4]]],[11,"eq","","",0,[[["nibble",3]]]],[11,"ne","","",0,[[["nibble",3]]]],[11,"partial_cmp","","",0,[[["nibble",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["nibble",3]]]],[11,"le","","",0,[[["nibble",3]]]],[11,"gt","","",0,[[["nibble",3]]]],[11,"ge","","",0,[[["nibble",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"arbitrary_with","","",0,[[]]],[11,"serialize","","",0,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]]],"p":[[3,"Nibble"]]},\
"diem_node":{"doc":"","i":[[3,"DiemHandle","diem_node","",null,null],[5,"start","","",null,[[["pathbuf",3],["option",4],["nodeconfig",3]]]],[5,"load_test_environment","","",null,[[["option",4],["pathbuf",3]]]],[5,"setup_environment","","",null,[[["arc",3],["option",4],["nodeconfig",3]],["diemhandle",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]]],"p":[[3,"DiemHandle"]]},\
"diem_operational_tool":{"doc":"","i":[[0,"command","diem_operational_tool","",null,null],[4,"Command","diem_operational_tool::command","",null,null],[13,"AccountResource","","",0,null],[13,"AddValidator","","",0,null],[13,"CheckEndpoint","","",0,null],[13,"CheckValidatorSetEndpoints","","",0,null],[13,"CreateValidator","","",0,null],[13,"CreateValidatorOperator","","",0,null],[13,"ExtractPrivateKey","","",0,null],[13,"ExtractPublicKey","","",0,null],[13,"InsertWaypoint","","",0,null],[13,"PrintAccount","","",0,null],[13,"PrintKey","","",0,null],[13,"PrintXKey","","",0,null],[13,"PrintWaypoint","","",0,null],[13,"RemoveValidator","","",0,null],[13,"RotateConsensusKey","","",0,null],[13,"RotateFullNodeNetworkKey","","",0,null],[13,"RotateOperatorKey","","",0,null],[13,"RotateValidatorNetworkKey","","",0,null],[13,"SetValidatorConfig","","",0,null],[13,"SetValidatorOperator","","",0,null],[13,"ValidateTransaction","","",0,null],[13,"ValidatorConfig","","",0,null],[13,"ValidatorSet","","",0,null],[4,"CommandName","","",null,null],[13,"AccountResource","","",1,null],[13,"AddValidator","","",1,null],[13,"CheckEndpoint","","",1,null],[13,"CheckValidatorSetEndpoints","","",1,null],[13,"CreateValidator","","",1,null],[13,"CreateValidatorOperator","","",1,null],[13,"ExtractPrivateKey","","",1,null],[13,"ExtractPublicKey","","",1,null],[13,"InsertWaypoint","","",1,null],[13,"PrintAccount","","",1,null],[13,"PrintKey","","",1,null],[13,"PrintXKey","","",1,null],[13,"PrintWaypoint","","",1,null],[13,"RemoveValidator","","",1,null],[13,"RotateConsensusKey","","",1,null],[13,"RotateOperatorKey","","",1,null],[13,"RotateFullNodeNetworkKey","","",1,null],[13,"RotateValidatorNetworkKey","","",1,null],[13,"SetValidatorConfig","","",1,null],[13,"SetValidatorOperator","","",1,null],[13,"ValidateTransaction","","",1,null],[13,"ValidatorConfig","","",1,null],[13,"ValidatorSet","","",1,null],[11,"execute","","",0,[[],[["error",4],["result",4],["string",3]]]],[11,"print_transaction_context","","Show the transaction context and validation result in a …",0,[[["transactioncontext",3],["result",4],["error",4]],[["error",4],["result",4],["string",3]]]],[11,"account_resource","","",0,[[],[["error",4],["result",4],["simplifiedaccountresource",3]]]],[11,"add_validator","","",0,[[],[["transactioncontext",3],["result",4],["error",4]]]],[11,"check_endpoint","","",0,[[],[["error",4],["result",4],["string",3]]]],[11,"check_validator_set_endpoints","","",0,[[],[["error",4],["result",4],["string",3]]]],[11,"create_validator","","",0,[[],[["result",4],["error",4]]]],[11,"create_validator_operator","","",0,[[],[["result",4],["error",4]]]],[11,"extract_private_key","","",0,[[],[["result",4],["error",4]]]],[11,"extract_public_key","","",0,[[],[["result",4],["error",4]]]],[11,"insert_waypoint","","",0,[[],[["result",4],["error",4]]]],[11,"print_account","","",0,[[],[["accountaddress",3],["result",4],["error",4]]]],[11,"print_key","","",0,[[],[["result",4],["ed25519publickey",3],["error",4]]]],[11,"print_x_key","","",0,[[],[["publickey",3],["error",4],["result",4]]]],[11,"print_waypoint","","",0,[[],[["error",4],["result",4],["waypoint",3]]]],[11,"remove_validator","","",0,[[],[["transactioncontext",3],["result",4],["error",4]]]],[11,"rotate_consensus_key","","",0,[[],[["result",4],["error",4]]]],[11,"rotate_operator_key","","",0,[[],[["result",4],["error",4]]]],[11,"rotate_fullnode_network_key","","",0,[[],[["error",4],["result",4]]]],[11,"rotate_validator_network_key","","",0,[[],[["error",4],["result",4]]]],[11,"set_validator_config","","",0,[[],[["transactioncontext",3],["result",4],["error",4]]]],[11,"set_validator_operator","","",0,[[],[["transactioncontext",3],["result",4],["error",4]]]],[11,"validate_transaction","","",0,[[],[["transactioncontext",3],["result",4],["error",4]]]],[11,"validator_config","","",0,[[],[["result",4],["decryptedvalidatorconfig",3],["error",4]]]],[11,"validator_set","","",0,[[],[["result",4],["vec",3],["error",4]]]],[4,"ResultWrapper","","A result wrapper for displaying either a correct …",null,null],[13,"Result","","",2,null],[13,"Error","","",2,null],[0,"json_rpc","diem_operational_tool","",null,null],[3,"JsonRpcClientWrapper","diem_operational_tool::json_rpc","A wrapper around JSON RPC for error handling",null,null],[11,"new","","",3,[[["string",3]],["jsonrpcclientwrapper",3]]],[11,"submit_transaction","","",3,[[["signedtransaction",3]],[["transactioncontext",3],["result",4],["error",4]]]],[11,"account_state","","",3,[[["accountaddress",3]],[["accountstate",3],["result",4],["error",4]]]],[11,"validator_config","","",3,[[["accountaddress",3]],[["validatorconfigresource",3],["result",4],["error",4]]]],[11,"validator_set","","This method returns all validator infos currently …",3,[[["accountaddress",3],["option",4]],[["error",4],["result",4],["vec",3]]]],[11,"account_resource","","",3,[[["accountaddress",3]],[["accountresource",3],["result",4],["error",4]]]],[11,"sequence_number","","",3,[[["accountaddress",3]],[["result",4],["error",4]]]],[11,"transaction_status","","",3,[[["accountaddress",3]],[["result",4],["error",4],["option",4]]]],[0,"test_helper","diem_operational_tool","",null,null],[3,"OperationalTool","diem_operational_tool::test_helper","A helper to test the operational tool in tests",null,null],[11,"new","","",4,[[["string",3],["chainid",3]],["operationaltool",3]]],[11,"account_resource","","",4,[[["accountaddress",3]],[["error",4],["result",4],["simplifiedaccountresource",3]]]],[11,"check_endpoint","","",4,[[["networkaddress",3]],[["error",4],["result",4],["string",3]]]],[11,"create_account","","",4,[[["securebackend",4],["commandname",4]],[["result",4],["error",4]]]],[11,"create_validator","","",4,[[["securebackend",4]],[["result",4],["error",4]]]],[11,"create_validator_operator","","",4,[[["securebackend",4]],[["result",4],["error",4]]]],[11,"extract_public_key","","",4,[[["securebackend",4]],[["result",4],["error",4]]]],[11,"extract_private_key","","",4,[[["securebackend",4]],[["result",4],["error",4]]]],[11,"insert_waypoint","","",4,[[["securebackend",4],["waypoint",3]],[["result",4],["error",4]]]],[11,"print_account","","",4,[[["securebackend",4]],[["accountaddress",3],["result",4],["error",4]]]],[11,"print_key","","",4,[[["securebackend",4]],[["result",4],["ed25519publickey",3],["error",4]]]],[11,"print_waypoint","","",4,[[["securebackend",4]],[["error",4],["result",4],["waypoint",3]]]],[11,"set_validator_config","","",4,[[["securebackend",4],["option",4],["networkaddress",3]],[["transactioncontext",3],["result",4],["error",4]]]],[11,"rotate_consensus_key","","",4,[[["securebackend",4]],[["result",4],["error",4]]]],[11,"rotate_operator_key","","",4,[[["securebackend",4]],[["result",4],["error",4]]]],[11,"rotate_operator_key_with_custom_validation","","",4,[[["securebackend",4],["option",4]],[["result",4],["error",4]]]],[11,"rotate_validator_network_key","","",4,[[["securebackend",4]],[["error",4],["result",4]]]],[11,"rotate_fullnode_network_key","","",4,[[["securebackend",4]],[["error",4],["result",4]]]],[11,"validate_transaction","","",4,[[["accountaddress",3]],[["transactioncontext",3],["result",4],["error",4]]]],[11,"set_validator_operator","","",4,[[["accountaddress",3],["securebackend",4]],[["transactioncontext",3],["result",4],["error",4]]]],[11,"validator_config","","",4,[[["accountaddress",3],["securebackend",4]],[["result",4],["decryptedvalidatorconfig",3],["error",4]]]],[11,"validator_set","","",4,[[["accountaddress",3],["option",4],["securebackend",4]],[["result",4],["vec",3],["error",4]]]],[11,"add_validator","","",4,[[["accountaddress",3],["securebackend",4]],[["transactioncontext",3],["result",4],["error",4]]]],[11,"remove_validator","","",4,[[["accountaddress",3],["securebackend",4]],[["transactioncontext",3],["result",4],["error",4]]]],[3,"TransactionContext","diem_operational_tool","Information for validating a transaction after it\'s been …",null,null],[12,"address","","",5,null],[12,"sequence_number","","",5,null],[12,"execution_result","","",5,null],[11,"new","","",5,[[["accountaddress",3]],["transactioncontext",3]]],[11,"new_with_validation","","",5,[[["accountaddress",3],["vmstatusview",4],["option",4]],["transactioncontext",3]]],[11,"from","diem_operational_tool::command","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","diem_operational_tool::json_rpc","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","diem_operational_tool::test_helper","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","diem_operational_tool","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"erased_serialize","","",5,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","diem_operational_tool::command","",1,[[["command",4]]]],[11,"eq","","",1,[[["commandname",4]]]],[11,"eq","diem_operational_tool","",5,[[["transactioncontext",3]]]],[11,"ne","","",5,[[["transactioncontext",3]]]],[11,"fmt","diem_operational_tool::command","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","diem_operational_tool","",5,[[["formatter",3]],["result",6]]],[11,"fmt","diem_operational_tool::command","",1,[[["formatter",3]],["result",6]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","diem_operational_tool","",5,[[],["result",4]]],[11,"clap","diem_operational_tool::command","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"from_subcommand","","",0,[[],["option",4]]],[11,"is_subcommand","","",0,[[]]]],"p":[[4,"Command"],[4,"CommandName"],[4,"ResultWrapper"],[3,"JsonRpcClientWrapper"],[3,"OperationalTool"],[3,"TransactionContext"]]},\
"diem_proptest_helpers":{"doc":"","i":[[3,"GrowingSubset","diem_proptest_helpers","A set of elements, each with an associated key, that …",null,null],[3,"RepeatVec","","An efficient representation of a vector with repeated …",null,null],[3,"ValueGenerator","","Context for generating single values out of strategies.",null,null],[5,"with_stack_size","","Creates a new thread with a larger stack size.",null,[[],[["result",4],["box",3]]]],[5,"pick_idxs","","Given a maximum value <code>max</code> and a list of <code>Index</code> instances, …",null,[[],["vec",3]]],[5,"pick_slice_idxs","","Given a maximum value <code>max</code> and a slice of <code>Index</code> instances, …",null,[[],["vec",3]]],[3,"Index","","Wrapper for <code>proptest</code>\'s [<code>Index</code>][proptest::sample::Index] …",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"as_ref","","",3,[[],["propindex",3]]],[11,"clone","","",0,[[],["growingsubset",3]]],[11,"clone","","",1,[[],["repeatvec",3]]],[11,"clone","","",3,[[],["index",3]]],[11,"default","","",1,[[],["repeatvec",3]]],[11,"default","","",2,[[],["valuegenerator",3]]],[11,"eq","","",1,[[["repeatvec",3]]]],[11,"ne","","",1,[[["repeatvec",3]]]],[11,"deref","","",3,[[],["propindex",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"hash","","",1,[[]]],[11,"from_iter","","",0,[[]]],[11,"arbitrary_with","","",3,[[]]],[11,"len","","Returns the number of elements in the <em>current subset</em>.",0,[[]]],[11,"is_empty","","Returns <code>true</code> if the <em>current subset</em> contains no elements.",0,[[]]],[11,"total_len","","Returns the total number of elements in the universal set.",0,[[]]],[11,"current","","Returns a slice containing the items in the <em>current subset</em>…",0,[[]]],[11,"pick_item","","Chooses an (index, value) pair from the <em>current subset</em> …",0,[[["index",3]]]],[11,"pick_value","","Chooses a value from the <em>current subset</em> using the provided…",0,[[["index",3]]]],[11,"advance_to","","Advances the valid subset to the provided index. After …",0,[[]]],[11,"new","","Creates a new, empty <code>RepeatVec</code>.",1,[[]]],[11,"with_capacity","","Creates a new, empty <code>RepeatVec</code> with the specified …",1,[[]]],[11,"len","","Returns the <em>logical</em> number of elements in this <code>RepeatVec</code>.",1,[[]]],[11,"is_empty","","Returns <code>true</code> if this <code>RepeatVec</code> has no <em>logical</em> elements.",1,[[]]],[11,"extend","","Extends this <code>RepeatVec</code> by logically adding <code>size</code> copies of …",1,[[]]],[11,"remove","","Removes the item specified by the given <em>logical</em> index, …",1,[[]]],[11,"remove_all","","Removes the items specified by the given <em>logical</em> indexes, …",1,[[]]],[11,"get","","Returns the item at location <code>at</code>. The return value is a …",1,[[],["option",4]]],[11,"pick_uniform_indexes","","Picks out indexes uniformly randomly from this <code>RepeatVec</code>, …",1,[[],["vec",3]]],[11,"pick_uniform","","Picks out elements uniformly randomly from this <code>RepeatVec</code>…",1,[[],["vec",3]]],[11,"new","","Creates a new value generator with the default RNG.",2,[[]]],[11,"new_with_rng","","Creates a new value generator with provided RNG",2,[[["testrng",3]]]],[11,"deterministic","","Creates a new value generator with a deterministic RNG.",2,[[]]],[11,"generate","","Generates a single value for this strategy.",2,[[["strategy",8]]]]],"p":[[3,"GrowingSubset"],[3,"RepeatVec"],[3,"ValueGenerator"],[3,"Index"]]},\
"diem_rate_limiter":{"doc":"","i":[[0,"async_lib","diem_rate_limiter","",null,null],[3,"AsyncRateLimiter","diem_rate_limiter::async_lib","A rate limiter for <code>AsyncRead</code> or <code>AsyncWrite</code> interfaces to …",null,null],[11,"new","","",0,[[["sharedbucket",6],["option",4]]]],[0,"rate_limit","diem_rate_limiter","",null,null],[6,"SharedBucket","diem_rate_limiter::rate_limit","",null,null],[3,"TokenBucketRateLimiter","","A generic token bucket filter",null,null],[11,"new","","",1,[[["histogramvec",6],["option",4],["string",3]]]],[11,"test","","",1,[[]]],[11,"open","","Used for testing and to not have a rate limiter",1,[[]]],[11,"bucket","","Retrieve bucket, or create a new one",1,[[],["sharedbucket",6]]],[11,"try_garbage_collect_key","","Garbage collects a single key, if we know what it is",1,[[]]],[3,"Bucket","","A token bucket object that keeps track of everything …",null,null],[11,"new","","",2,[[["histogramvec",6],["option",4],["string",3]]]],[11,"open","","A fully open rate limiter, to allow for ignoring rate …",2,[[["string",3]]]],[11,"acquire_all_tokens","","Determine if an entire batch can be passed through This …",2,[[],[["result",4],["option",4]]]],[11,"acquire_tokens","","Returns <code>usize</code> of tokens allowed.  May be less than …",2,[[],[["instant",3],["result",4]]]],[11,"time_of_next_refill","","Tells us when the next refill is",2,[[],["instant",3]]],[11,"time_of_tokens_needed","","Tells us when an entire batch will make it through.  …",2,[[],[["option",4],["instant",3]]]],[11,"return_tokens","","Returns tokens that were unused",2,[[]]],[11,"from","diem_rate_limiter::async_lib","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","diem_rate_limiter::rate_limit","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"poll_read","diem_rate_limiter::async_lib","",0,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",0,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",0,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_close","","",0,[[["context",3],["pin",3]],[["poll",4],["result",6]]]]],"p":[[3,"AsyncRateLimiter"],[3,"TokenBucketRateLimiter"],[3,"Bucket"]]},\
"diem_retrier":{"doc":"","i":[[5,"retry","diem_retrier","Given an operation retries it successfully sleeping …",null,[[],["result",4]]],[5,"retry_async","","",null,[[]]],[5,"fixed_retry_strategy","","",null,[[]]],[5,"exp_retry_strategy","","",null,[[]]],[3,"FixedDelay","","An iterator which uses a fixed delay",null,null],[3,"ExponentWithLimitDelay","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"next","","",0,[[],[["option",4],["duration",3]]]],[11,"next","","",1,[[],[["option",4],["duration",3]]]]],"p":[[3,"FixedDelay"],[3,"ExponentWithLimitDelay"]]},\
"diem_secure_net":{"doc":"This provides a simple networking substrate between a …","i":[[4,"Error","diem_secure_net","",null,null],[13,"AlreadyShutdown","","",0,null],[13,"DataTooLarge","","",0,null],[13,"NetworkError","","",0,null],[13,"NoActiveStream","","",0,null],[13,"RemoteStreamClosed","","",0,null],[3,"NetworkClient","","",null,null],[11,"new","","",1,[[["socketaddr",4]]]],[11,"read","","Blocking read until able to successfully read an entire …",1,[[],[["result",4],["vec",3],["error",4]]]],[11,"shutdown","","Shutdown the internal network stream",1,[[],[["result",4],["error",4]]]],[11,"write","","Blocking write until able to successfully send an entire …",1,[[],[["result",4],["error",4]]]],[3,"NetworkServer","","",null,null],[11,"new","","",2,[[["socketaddr",4]]]],[11,"read","","If there isn\'t already a downstream client, it accepts. …",2,[[],[["result",4],["vec",3],["error",4]]]],[11,"shutdown","","Shutdown the internal network stream",2,[[],[["result",4],["error",4]]]],[11,"write","","If there isn\'t already a downstream client, it accepts. …",2,[[],[["result",4],["error",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",0,[[["error",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["error",8],["option",4]]]]],"p":[[4,"Error"],[3,"NetworkClient"],[3,"NetworkServer"]]},\
"diem_secure_push_metrics":{"doc":"","i":[[14,"register_histogram","diem_secure_push_metrics","Create a [<code>Histogram</code>] and registers to default registry.",null,null],[14,"register_histogram_vec","","Create a [<code>HistogramVec</code>] and registers to default registry.",null,null],[14,"register_int_counter","","Create an [<code>IntCounter</code>] and registers to default registry.",null,null],[14,"register_int_counter_vec","","Create an [<code>IntCounterVec</code>] and registers to default …",null,null],[14,"register_int_gauge","","Create an [<code>IntGauge</code>] and registers to default registry.",null,null],[14,"register_int_gauge_vec","","Create an [<code>IntGaugeVec</code>] and registers to default registry.",null,null],[3,"Histogram","","A [<code>Metric</code>] counts individual observations from an event …",null,null],[3,"HistogramTimer","","Timer to measure and record the duration of an event.",null,null],[6,"HistogramVec","","A [<code>Collector</code>] that bundles a set of Histograms that all …",null,null],[6,"IntCounter","","The integer version of [<code>Counter</code>]. Provides better …",null,null],[6,"IntCounterVec","","The integer version of [<code>CounterVec</code>]. Provides better …",null,null],[6,"IntGauge","","The integer version of [<code>Gauge</code>]. Provides better …",null,null],[6,"IntGaugeVec","","The integer version of [<code>GaugeVec</code>]. Provides better …",null,null],[3,"MetricsPusher","","MetricsPusher provides a function to push a list of …",null,null],[11,"start","","start starts a new thread and periodically pushes the …",0,[[]]],[11,"join","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",1,[[],["histogram",3]]],[11,"metric","","",1,[[],["metric",3]]],[11,"desc","","",1,[[],[["desc",3],["global",3],["vec",3]]]],[11,"collect","","",1,[[],[["metricfamily",3],["vec",3],["global",3]]]],[11,"fmt","","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"drop","","",2,[[]]],[11,"drop","","",0,[[]]],[11,"with_opts","","<code>with_opts</code> creates a [<code>Histogram</code>] with the <code>opts</code> options.",1,[[["histogramopts",3]],[["result",4],["error",4],["histogram",3]]]],[11,"observe","","Add a single observation to the [<code>Histogram</code>].",1,[[]]],[11,"start_timer","","Return a [<code>HistogramTimer</code>] to track a duration.",1,[[],["histogramtimer",3]]],[11,"observe_closure_duration","","Observe execution time of a closure, in second.",1,[[]]],[11,"local","","Return a [<code>LocalHistogram</code>] for single thread usage.",1,[[],["localhistogram",3]]],[11,"get_sample_sum","","Return accumulated sum of all samples.",1,[[]]],[11,"get_sample_count","","Return count of all samples.",1,[[]]],[11,"observe_duration","","Observe and record timer duration (in seconds).",2,[[]]],[11,"stop_and_record","","Observe, record and return timer duration (in seconds).",2,[[]]],[11,"stop_and_discard","","Observe and return timer duration (in seconds).",2,[[]]]],"p":[[3,"MetricsPusher"],[3,"Histogram"],[3,"HistogramTimer"]]},\
"diem_secure_storage":{"doc":"","i":[[8,"CryptoKVStorage","diem_secure_storage","CryptoKVStorage offers a CryptoStorage implementation by …",null,null],[8,"CryptoStorage","","CryptoStorage provides an abstraction for secure …",null,null],[10,"create_key","","Securely generates a new named Ed25519 private key. The …",0,[[],[["ed25519publickey",3],["error",4],["result",4]]]],[10,"export_private_key","","Returns the Ed25519 private key stored at \'name\'.",0,[[],[["error",4],["ed25519privatekey",3],["result",4]]]],[10,"import_private_key","","An optional API that allows importing private keys and …",0,[[["ed25519privatekey",3]],[["result",4],["error",4]]]],[10,"export_private_key_for_version","","Returns the Ed25519 private key stored at \'name\' and …",0,[[["ed25519publickey",3]],[["error",4],["ed25519privatekey",3],["result",4]]]],[10,"get_public_key","","Returns the Ed25519 public key stored at \'name\'.",0,[[],[["result",4],["publickeyresponse",3],["error",4]]]],[10,"get_public_key_previous_version","","Returns the previous version of the Ed25519 public key …",0,[[],[["ed25519publickey",3],["error",4],["result",4]]]],[10,"rotate_key","","Rotates an Ed25519 private key. Future calls without …",0,[[],[["ed25519publickey",3],["error",4],["result",4]]]],[10,"sign","","Signs the provided securely-hashable struct, using the …",0,[[],[["result",4],["error",4],["ed25519signature",3]]]],[10,"sign_using_version","","Signs the provided securely-hashable struct, using the …",0,[[["ed25519publickey",3]],[["result",4],["error",4],["ed25519signature",3]]]],[3,"PublicKeyResponse","","",null,null],[12,"last_update","","Time since Unix Epoch in seconds.",1,null],[12,"public_key","","Ed25519PublicKey stored at the provided key",1,null],[4,"Error","","",null,null],[13,"EntropyError","","",2,null],[13,"InternalError","","",2,null],[13,"KeyAlreadyExists","","",2,null],[13,"KeyNotSet","","",2,null],[13,"PermissionDenied","","",2,null],[13,"SerializationError","","",2,null],[13,"KeyVersionNotFound","","",2,null],[3,"GitHubStorage","","GitHubStorage leverages a GitHub repository to provide a …",null,null],[3,"InMemoryStorage","","InMemoryStorage represents a key value store that is …",null,null],[3,"GetResponse","","A container for a get response that contains relevant …",null,null],[12,"last_update","","Time since Unix Epoch in seconds.",3,null],[12,"value","","Value stored at the provided key",3,null],[8,"KVStorage","","A secure key/value storage engine. Create takes a policy …",null,null],[10,"available","","Returns an error if the backend service is not online and …",4,[[],[["result",4],["error",4]]]],[10,"get","","Retrieves a value from storage and fails if the backend …",4,[[],[["result",4],["getresponse",3],["error",4]]]],[10,"set","","Sets a value in storage and fails if the backend is …",4,[[["serialize",8]],[["result",4],["error",4]]]],[10,"reset_and_clear","","Resets and clears all data held in the storage engine. …",4,[[],[["result",4],["error",4]]]],[3,"NamespacedStorage","","This provides a light wrapper around KV storages to …",null,null],[3,"OnDiskStorage","","OnDiskStorage represents a key value store that is …",null,null],[4,"Capability","","Represents actions",null,null],[13,"Export","","",5,null],[13,"Read","","",5,null],[13,"Rotate","","",5,null],[13,"Sign","","",5,null],[13,"Write","","",5,null],[4,"Identity","","Id represents a Diem internal identifier for a given …",null,null],[13,"User","","",6,null],[13,"Anyone","","",6,null],[13,"NoOne","","",6,null],[3,"Permission","","Maps an identity to a set of capabilities",null,null],[12,"id","","",7,null],[12,"capabilities","","",7,null],[3,"Policy","","Dictates a set of permissions",null,null],[12,"permissions","","",8,null],[4,"Storage","","This is the Diem interface into secure storage. Any …",null,null],[13,"GitHubStorage","","",9,null],[13,"VaultStorage","","",9,null],[13,"InMemoryStorage","","",9,null],[13,"NamespacedStorage","","",9,null],[13,"OnDiskStorage","","",9,null],[3,"VaultStorage","","VaultStorage utilizes Vault for maintaining encrypted, …",null,null],[5,"to_base64","","",null,[[],["result",4]]],[5,"from_base64","","",null,[[],[["result",4],["vec",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"vzip","","",1,[[]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"vzip","","",3,[[]]],[11,"erased_serialize","","",3,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"test_only_hash","","",8,[[],["hashvalue",3]]],[11,"vzip","","",8,[[]]],[11,"erased_serialize","","",8,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"test_only_hash","","",7,[[],["hashvalue",3]]],[11,"vzip","","",7,[[]]],[11,"erased_serialize","","",7,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"test_only_hash","","",6,[[],["hashvalue",3]]],[11,"vzip","","",6,[[]]],[11,"erased_serialize","","",6,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"erased_serialize","","",5,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"create_key","","Securely generates a new named Ed25519 private key. The …",9,[[],[["ed25519publickey",3],["error",4],["result",4]]]],[11,"export_private_key","","Returns the Ed25519 private key stored at \'name\'.",9,[[],[["error",4],["ed25519privatekey",3],["result",4]]]],[11,"import_private_key","","An optional API that allows importing private keys and …",9,[[["ed25519privatekey",3]],[["result",4],["error",4]]]],[11,"export_private_key_for_version","","Returns the Ed25519 private key stored at \'name\' and …",9,[[["ed25519publickey",3]],[["error",4],["ed25519privatekey",3],["result",4]]]],[11,"get_public_key","","Returns the Ed25519 public key stored at \'name\'.",9,[[],[["result",4],["publickeyresponse",3],["error",4]]]],[11,"get_public_key_previous_version","","Returns the previous version of the Ed25519 public key …",9,[[],[["ed25519publickey",3],["error",4],["result",4]]]],[11,"rotate_key","","Rotates an Ed25519 private key. Future calls without …",9,[[],[["ed25519publickey",3],["error",4],["result",4]]]],[11,"sign","","Signs the provided securely-hashable struct, using the …",9,[[],[["result",4],["error",4],["ed25519signature",3]]]],[11,"sign_using_version","","Signs the provided securely-hashable struct, using the …",9,[[["ed25519publickey",3]],[["result",4],["error",4],["ed25519signature",3]]]],[11,"create_key","","",14,[[],[["ed25519publickey",3],["error",4],["result",4]]]],[11,"export_private_key","","",14,[[],[["error",4],["ed25519privatekey",3],["result",4]]]],[11,"export_private_key_for_version","","",14,[[["ed25519publickey",3]],[["error",4],["ed25519privatekey",3],["result",4]]]],[11,"import_private_key","","",14,[[["ed25519privatekey",3]],[["result",4],["error",4]]]],[11,"get_public_key","","",14,[[],[["result",4],["publickeyresponse",3],["error",4]]]],[11,"get_public_key_previous_version","","",14,[[],[["ed25519publickey",3],["error",4],["result",4]]]],[11,"rotate_key","","",14,[[],[["ed25519publickey",3],["error",4],["result",4]]]],[11,"sign","","",14,[[],[["result",4],["error",4],["ed25519signature",3]]]],[11,"sign_using_version","","",14,[[["ed25519publickey",3]],[["result",4],["error",4],["ed25519signature",3]]]],[11,"available","","",10,[[],[["result",4],["error",4]]]],[11,"get","","",10,[[],[["result",4],["getresponse",3],["error",4]]]],[11,"set","","",10,[[["serialize",8]],[["result",4],["error",4]]]],[11,"reset_and_clear","","",10,[[],[["result",4],["error",4]]]],[11,"available","","",11,[[],[["result",4],["error",4]]]],[11,"get","","",11,[[],[["result",4],["getresponse",3],["error",4]]]],[11,"set","","",11,[[["serialize",8]],[["result",4],["error",4]]]],[11,"reset_and_clear","","",11,[[],[["result",4],["error",4]]]],[11,"available","","",12,[[],[["result",4],["error",4]]]],[11,"get","","",12,[[],[["result",4],["getresponse",3],["error",4]]]],[11,"set","","",12,[[["serialize",8]],[["result",4],["error",4]]]],[11,"reset_and_clear","","Note: This is not a namespace function",12,[[],[["result",4],["error",4]]]],[11,"available","","",13,[[],[["result",4],["error",4]]]],[11,"get","","",13,[[],[["result",4],["getresponse",3],["error",4]]]],[11,"set","","",13,[[["serialize",8]],[["result",4],["error",4]]]],[11,"reset_and_clear","","",13,[[],[["result",4],["error",4]]]],[11,"available","","Returns an error if the backend service is not online and …",9,[[],[["result",4],["error",4]]]],[11,"get","","Retrieves a value from storage and fails if the backend …",9,[[],[["result",4],["getresponse",3],["error",4]]]],[11,"set","","Sets a value in storage and fails if the backend is …",9,[[["serialize",8]],[["result",4],["error",4]]]],[11,"reset_and_clear","","Resets and clears all data held in the storage engine. …",9,[[],[["result",4],["error",4]]]],[11,"available","","",14,[[],[["result",4],["error",4]]]],[11,"get","","",14,[[],[["result",4],["getresponse",3],["error",4]]]],[11,"set","","",14,[[["serialize",8]],[["result",4],["error",4]]]],[11,"reset_and_clear","","",14,[[],[["result",4],["error",4]]]],[11,"from","","",2,[[["decodeerror",4]]]],[11,"from","","",2,[[["parseerror",3]]]],[11,"from","","",2,[[["error",3]]]],[11,"from","","",2,[[["error",4]]]],[11,"from","","",2,[[["error",3]]]],[11,"from","","",2,[[["error",4]]]],[11,"from","","",2,[[["error",4]]]],[11,"from","","",9,[[["githubstorage",3]],["storage",4]]],[11,"from","","",9,[[["vaultstorage",3]],["storage",4]]],[11,"from","","",9,[[["inmemorystorage",3]],["storage",4]]],[11,"from","","",9,[[["namespacedstorage",3]],["storage",4]]],[11,"from","","",9,[[["ondiskstorage",3]],["storage",4]]],[11,"default","","",11,[[],["inmemorystorage",3]]],[11,"default","","",8,[[],["policy",3]]],[11,"eq","","",1,[[["publickeyresponse",3]]]],[11,"ne","","",1,[[["publickeyresponse",3]]]],[11,"eq","","",2,[[["error",4]]]],[11,"ne","","",2,[[["error",4]]]],[11,"eq","","",3,[[["getresponse",3]]]],[11,"ne","","",3,[[["getresponse",3]]]],[11,"eq","","",8,[[["policy",3]]]],[11,"ne","","",8,[[["policy",3]]]],[11,"eq","","",7,[[["permission",3]]]],[11,"ne","","",7,[[["permission",3]]]],[11,"eq","","",6,[[["identity",4]]]],[11,"ne","","",6,[[["identity",4]]]],[11,"eq","","",5,[[["capability",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"try_into","","",9,[[],[["result",4],["githubstorage",3]]]],[11,"try_into","","",9,[[],[["vaultstorage",3],["result",4]]]],[11,"try_into","","",9,[[],[["result",4],["inmemorystorage",3]]]],[11,"try_into","","",9,[[],[["namespacedstorage",3],["result",4]]]],[11,"try_into","","",9,[[],[["ondiskstorage",3],["result",4]]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"new","","",10,[[["string",3]]]],[11,"new","","",11,[[]]],[11,"new_with_time_service","","",11,[[["timeservice",4]]]],[11,"new","","Creates a GetResponse",3,[[]]],[11,"new","","",12,[[["storage",4],["string",3]]]],[11,"new","","",13,[[["pathbuf",3]]]],[11,"new","","",8,[[["permission",3],["vec",3]]]],[11,"public","","",8,[[]]],[11,"new","","",7,[[["vec",3],["capability",4],["identity",4]]]],[11,"new","","",14,[[["option",4],["option",4],["option",4],["string",3]]]],[11,"revoke_token_self","","",14,[[],[["result",4],["error",4]]]],[11,"get_all_key_versions","","",14,[[],[["vec",3],["result",4],["error",4]]]],[11,"create_token","","Creates a token but uses the namespace for policies",14,[[["vec",3]],[["error",4],["string",3],["result",4]]]],[11,"set_policy","","Create a new policy in Vault, see the explanation for …",14,[[["vaultengine",4]],[["result",4],["error",4]]]],[11,"set_policies","","",14,[[["vaultengine",4],["policy",3]],[["result",4],["error",4]]]]],"p":[[8,"CryptoStorage"],[3,"PublicKeyResponse"],[4,"Error"],[3,"GetResponse"],[8,"KVStorage"],[4,"Capability"],[4,"Identity"],[3,"Permission"],[3,"Policy"],[4,"Storage"],[3,"GitHubStorage"],[3,"InMemoryStorage"],[3,"NamespacedStorage"],[3,"OnDiskStorage"],[3,"VaultStorage"]]},\
"diem_smoke_test_attribute":{"doc":"","i":[[23,"smoke_test","diem_smoke_test_attribute","This macro allows tests to be defined using the …",null,null]],"p":[]},\
"diem_state_view":{"doc":"This crate defines <code>trait StateView</code>.","i":[[8,"StateView","diem_state_view","<code>StateView</code> is a trait that defines a read-only snapshot of …",null,null],[11,"id","","For logging and debugging purpose, identifies what this …",0,[[],["stateviewid",4]]],[10,"get","","Gets the state for a single access path.",0,[[["accesspath",3]],[["result",6],["option",4]]]],[10,"multi_get","","Gets states for a list of access paths.",0,[[],[["vec",3],["result",6]]]],[10,"is_genesis","","VM needs this method to know whether the current state …",0,[[]]],[4,"StateViewId","","",null,null],[13,"ChunkExecution","","State-sync applying a chunk of transactions.",1,null],[12,"first_version","diem_state_view::StateViewId","",2,null],[13,"BlockExecution","diem_state_view","LEC applying a block.",1,null],[12,"block_id","diem_state_view::StateViewId","",3,null],[13,"TransactionValidation","diem_state_view","VmValidator verifying incoming transaction.",1,null],[12,"base_version","diem_state_view::StateViewId","",4,null],[13,"Miscellaneous","diem_state_view","For test, db-bootstrapper, etc. Usually not aimed to pass …",1,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"clone","","",1,[[],["stateviewid",4]]]],"p":[[8,"StateView"],[4,"StateViewId"],[13,"ChunkExecution"],[13,"BlockExecution"],[13,"TransactionValidation"]]},\
"diem_swarm":{"doc":"","i":[[0,"client","diem_swarm","",null,null],[3,"InteractiveClient","diem_swarm::client","",null,null],[11,"new_with_inherit_io","","",0,[[["path",3],["waypoint",3]]]],[11,"new_with_inherit_io_faucet","","",0,[[["path",3],["string",3],["waypoint",3]]]],[11,"output","","",0,[[],[["output",3],["result",6]]]],[0,"faucet","diem_swarm","",null,null],[3,"Process","diem_swarm::faucet","",null,null],[11,"start","","",1,[[["path",3]]]],[11,"mint_url","","",1,[[],["string",3]]],[11,"health_check_url","","",1,[[],["url",3]]],[11,"wait_for_connectivity","","",1,[[],["result",6]]],[0,"swarm","diem_swarm","",null,null],[3,"DiemNode","diem_swarm::swarm","",null,null],[12,"log","","",2,null],[11,"launch","","",2,[[["pathbuf",3],["string",3],["roletype",4],["path",3]],["result",6]]],[11,"validator_peer_id","","",2,[[],[["accountaddress",3],["option",4]]]],[11,"port","","",2,[[]]],[11,"get_log_contents","","",2,[[],[["result",6],["string",3]]]],[11,"get_metric","","",2,[[],["option",4]]],[11,"check_connectivity","","",2,[[]]],[11,"health_check","","",2,[[],["healthstatus",4]]],[4,"HealthStatus","","",null,null],[13,"Healthy","","",3,null],[13,"Crashed","","",3,null],[13,"RpcFailure","","",3,null],[4,"DiemSwarmDir","","A wrapper that unifies PathBuf and TempPath.",null,null],[13,"Persistent","","",4,null],[13,"Temporary","","",4,null],[3,"DiemSwarm","","Struct holding instances and information of Diem Swarm",null,null],[12,"dir","","",5,null],[12,"nodes","","",5,null],[12,"config","","",5,null],[12,"role","","",5,null],[4,"SwarmLaunchFailure","","",null,null],[13,"LaunchTimeout","","Timeout while waiting for nodes to start",6,null],[13,"NodeCrash","","Node return status indicates a crash",6,null],[13,"ConnectivityTimeout","","Timeout while waiting for the nodes to report that …",6,null],[13,"IoError","","",6,null],[11,"configure_fn_swarm","","",5,[[["swarmconfig",3],["fullnodetype",4],["string",3],["nodeconfig",3],["path",3],["option",4],["option",4]],[["result",6],["diemswarm",3]]]],[11,"configure_validator_swarm","","",5,[[["string",3],["nodeconfig",3],["path",3],["option",4],["option",4]],[["result",6],["diemswarm",3]]]],[11,"launch","","",5,[[]]],[11,"launch_attempt","","",5,[[],[["result",6],["swarmlaunchfailure",4]]]],[11,"wait_for_all_nodes_to_catchup","","This function first checks the last committed round of …",5,[[]]],[11,"get_client_port","","A specific public JSON RPC port of a validator or a full …",5,[[]]],[11,"get_validators_ids","","Vector with the peer ids of the validators in the swarm.",5,[[],[["vec",3],["string",3]]]],[11,"get_validators_debug_ports","","Vector with the debug ports of all the validators in the …",5,[[],["vec",3]]],[11,"get_validator","","",5,[[],[["option",4],["diemnode",3]]]],[11,"kill_node","","",5,[[]]],[11,"add_node","","",5,[[],[["result",6],["swarmlaunchfailure",4]]]],[11,"from","diem_swarm::client","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","diem_swarm::faucet","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","diem_swarm::swarm","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"drop","diem_swarm::client","",0,[[]]],[11,"drop","diem_swarm::faucet","",1,[[]]],[11,"drop","diem_swarm::swarm","",2,[[]]],[11,"drop","","",5,[[]]],[11,"as_ref","","",4,[[],["path",3]]],[11,"from","","",6,[[["error",3]]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"source","","",6,[[],[["error",8],["option",4]]]]],"p":[[3,"InteractiveClient"],[3,"Process"],[3,"DiemNode"],[4,"HealthStatus"],[4,"DiemSwarmDir"],[3,"DiemSwarm"],[4,"SwarmLaunchFailure"]]},\
"diem_temppath":{"doc":"","i":[[3,"TempPath","diem_temppath","A simple wrapper for creating a temporary directory that …",null,null],[11,"new","","Create new, uninitialized temporary path in the system …",0,[[]]],[11,"new_with_temp_dir","","Create new, uninitialized temporary path in the specified …",0,[[["pathbuf",3]]]],[11,"path","","Return the underlying path to this temporary directory.",0,[[],["path",3]]],[11,"persist","","Keep the temp path",0,[[]]],[11,"create_as_file","","",0,[[],["result",6]]],[11,"create_as_dir","","",0,[[],["result",6]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"as_ref","","",0,[[],["path",3]]],[11,"default","","",0,[[]]],[11,"eq","","",0,[[["temppath",3]]]],[11,"ne","","",0,[[["temppath",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"TempPath"]]},\
"diem_time_service":{"doc":"Abstract time service","i":[[0,"interval","diem_time_service","",null,null],[3,"Interval","diem_time_service::interval","Stream returned by <code>TimeService::interval</code>.",null,null],[11,"new","","",0,[[["duration",3],["sleep",4]]]],[0,"mock","diem_time_service","",null,null],[3,"MockTimeService","diem_time_service::mock","A <code>TimeService</code> that simulates time and allows for …",null,null],[3,"MockSleep","","A [<code>Future</code>] that resolves when the simulated time in the […",null,null],[11,"new","","Create a new <code>MockTimeService</code> with no auto advance. Time …",1,[[]]],[11,"new_auto_advance","","Create a new <code>MockTimeService</code> that will auto advance …",1,[[]]],[11,"new_auto_advance_for","","Create a new <code>MockTimeService</code> that will auto advance until …",1,[[["duration",3]]]],[11,"num_waiters","","Return the number of pending <code>Sleep</code> waiters.",1,[[]]],[11,"advance_next","","Advance time to the next pending waiter, wake it up, and …",1,[[],[["duration",3],["option",4]]]],[11,"advance","","Advance time by <code>duration</code> and wake any pending waiters …",1,[[["duration",3]]]],[11,"advance_secs","","Advance time by <code>duration</code> seconds. See <code>advance</code>.",1,[[]]],[11,"advance_ms","","Advance time by <code>duration</code> milliseconds. See <code>advance</code>.",1,[[]]],[11,"advance_next_async","","Advance time to the next pending waiter, wake it up, and …",1,[[]]],[11,"advance_async","","Advance time by <code>duration</code> and wake any pending waiters …",1,[[["duration",3]]]],[11,"advance_secs_async","","Advance time by <code>duration</code> seconds. See <code>advance_async</code>.",1,[[]]],[11,"advance_ms_async","","Advance time by <code>duration</code> milliseconds. See <code>advance_async</code>.",1,[[]]],[0,"real","diem_time_service","",null,null],[3,"RealTimeService","diem_time_service::real","The real production tokio <code>TimeService</code>.",null,null],[6,"RealSleep","","",null,null],[11,"new","","",2,[[]]],[0,"timeout","diem_time_service","",null,null],[3,"Elapsed","diem_time_service::timeout","Error returned by [<code>Timeout</code>].",null,null],[3,"Timeout","","Future returned by <code>TimeService::timeout</code>.",null,null],[11,"new","","",3,[[["sleep",4]]]],[11,"into_inner","","Consumes this timeout, returning the underlying value.",3,[[]]],[4,"TimeService","diem_time_service","<code>TimeService</code> abstracts all time-related operations in one …",null,null],[13,"RealTimeService","","",4,null],[13,"MockTimeService","","",4,null],[11,"real","","Create a new real, production time service that actually …",4,[[]]],[11,"mock","","Create a mock, simulated time service that does not query …",4,[[]]],[11,"into_mock","","",4,[[],["mocktimeservice",3]]],[8,"TimeServiceTrait","","",null,null],[10,"now","","Query a monotonically nondecreasing clock. Returns an …",5,[[],["instant",3]]],[10,"now_unix_time","","Query the current unix timestamp as a <code>Duration</code>.",5,[[],["duration",3]]],[11,"now_secs","","Query the current unix timestamp in seconds.",5,[[]]],[10,"sleep","","Return a [<code>Future</code>] that waits until <code>duration</code> has passed.",5,[[["duration",3]],["sleep",4]]],[11,"sleep_until","","Return a [<code>Future</code>] that waits until the <code>deadline</code>.",5,[[["instant",3]],["sleep",4]]],[10,"sleep_blocking","","Blocks the current thread until <code>duration</code> time has passed.",5,[[["duration",3]]]],[11,"interval","","Creates a new [<code>Interval</code>] that yields with interval of …",5,[[["duration",3]],["interval",3]]],[11,"interval_at","","Creates a new [<code>Interval</code>] that yields with interval of …",5,[[["instant",3],["duration",3]],["interval",3]]],[11,"timeout","","Require a [<code>Future</code>] to complete before the specified …",5,[[["future",8],["duration",3]],[["future",8],["timeout",3]]]],[11,"timeout_at","","Require a [<code>Future</code>] to complete before the <code>deadline</code>.",5,[[["future",8],["instant",3]],[["future",8],["timeout",3]]]],[4,"Sleep","","A [<code>Future</code>] that resolves after some time has elapsed …",null,null],[13,"RealSleep","","",6,null],[13,"MockSleep","","",6,null],[8,"SleepTrait","","",null,null],[10,"is_elapsed","","Returns <code>true</code> if this <code>Sleep</code>\'s requested wait duration has …",7,[[]]],[10,"reset","","Resets this <code>Sleep</code> to wait again for <code>duration</code>.",7,[[["duration",3],["pin",3]]]],[10,"reset_until","","Reset this <code>Sleep</code> to wait again until the <code>deadline</code>.",7,[[["instant",3],["pin",3]]]],[11,"from","diem_time_service::interval","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","diem_time_service::mock","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_future","","",8,[[]]],[11,"from","diem_time_service::real","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","diem_time_service::timeout","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_future","","",3,[[]]],[11,"try_poll","","",3,[[["pin",3],["context",3]],["poll",4]]],[11,"from","diem_time_service","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_future","","",6,[[]]],[11,"is_elapsed","diem_time_service::mock","",8,[[]]],[11,"reset","","",8,[[["duration",3],["pin",3]]]],[11,"reset_until","","",8,[[["instant",3],["pin",3]]]],[11,"is_elapsed","diem_time_service","",10,[[]]],[11,"reset","","",10,[[["duration",3],["pin",3]]]],[11,"reset_until","","",10,[[["instant",3],["pin",3]]]],[11,"is_elapsed","","",6,[[]]],[11,"reset","","",6,[[["duration",3],["pin",3]]]],[11,"reset_until","","",6,[[["instant",3],["pin",3]]]],[11,"now","diem_time_service::mock","",1,[[],["instant",3]]],[11,"now_unix_time","","",1,[[],["duration",3]]],[11,"sleep","","",1,[[["duration",3]],["sleep",4]]],[11,"sleep_blocking","","",1,[[["duration",3]]]],[11,"now","diem_time_service::real","",2,[[],["instant",3]]],[11,"now_unix_time","","",2,[[],["duration",3]]],[11,"sleep","","",2,[[["duration",3]],["sleep",4]]],[11,"sleep_blocking","","",2,[[["duration",3]]]],[11,"now","diem_time_service","Query a monotonically nondecreasing clock. Returns an …",4,[[],["instant",3]]],[11,"now_unix_time","","Query the current unix timestamp as a <code>Duration</code>.",4,[[],["duration",3]]],[11,"now_secs","","Query the current unix timestamp in seconds.",4,[[]]],[11,"sleep","","Return a [<code>Future</code>] that waits until <code>duration</code> has passed.",4,[[["duration",3]],["sleep",4]]],[11,"sleep_until","","Return a [<code>Future</code>] that waits until the <code>deadline</code>.",4,[[["instant",3]],["sleep",4]]],[11,"sleep_blocking","","Blocks the current thread until <code>duration</code> time has passed.",4,[[["duration",3]]]],[11,"interval","","Creates a new [<code>Interval</code>] that yields with interval of …",4,[[["duration",3]],["interval",3]]],[11,"interval_at","","Creates a new [<code>Interval</code>] that yields with interval of …",4,[[["instant",3],["duration",3]],["interval",3]]],[11,"timeout","","Require a [<code>Future</code>] to complete before the specified …",4,[[["future",8],["duration",3]],[["future",8],["timeout",3]]]],[11,"timeout_at","","Require a [<code>Future</code>] to complete before the <code>deadline</code>.",4,[[["future",8],["instant",3]],[["future",8],["timeout",3]]]],[11,"drop","diem_time_service::mock","",8,[[]]],[11,"from","diem_time_service","",4,[[["realtimeservice",3]],["timeservice",4]]],[11,"from","","",4,[[["mocktimeservice",3]],["timeservice",4]]],[11,"from","","",6,[[["realsleep",6]]]],[11,"from","","",6,[[["mocksleep",3]]]],[11,"clone","diem_time_service::mock","",1,[[],["mocktimeservice",3]]],[11,"clone","diem_time_service::real","",2,[[],["realtimeservice",3]]],[11,"clone","diem_time_service","",4,[[],["timeservice",4]]],[11,"default","diem_time_service::real","",2,[[],["realtimeservice",3]]],[11,"default","diem_time_service","",4,[[]]],[11,"eq","diem_time_service::timeout","",9,[[["elapsed",3]]]],[11,"fmt","diem_time_service::interval","",0,[[["formatter",3]],["result",6]]],[11,"fmt","diem_time_service::mock","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","diem_time_service::real","",2,[[["formatter",3]],["result",6]]],[11,"fmt","diem_time_service::timeout","",9,[[["formatter",3]],["result",6]]],[11,"fmt","diem_time_service","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","diem_time_service::timeout","",9,[[["formatter",3]],["result",6]]],[11,"try_into","diem_time_service","",4,[[],[["realtimeservice",3],["result",4]]]],[11,"try_into","","",4,[[],[["mocktimeservice",3],["result",4]]]],[11,"poll","diem_time_service::mock","",8,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","diem_time_service::timeout","",3,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","diem_time_service","",6,[[["context",3],["pin",3]],["poll",4]]],[11,"is_terminated","diem_time_service::interval","We implement [<code>FusedStream</code>] here to make it more …",0,[[]]],[11,"poll_next","","",0,[[["context",3],["pin",3]],[["poll",4],["option",4]]]]],"p":[[3,"Interval"],[3,"MockTimeService"],[3,"RealTimeService"],[3,"Timeout"],[4,"TimeService"],[8,"TimeServiceTrait"],[4,"Sleep"],[8,"SleepTrait"],[3,"MockSleep"],[3,"Elapsed"],[6,"RealSleep"]]},\
"diem_trace":{"doc":"","i":[[0,"counters","diem_trace","",null,null],[7,"TRACE_EVENT_COUNT","diem_trace::counters","Count of the trace_event logged.",null,null],[0,"trace","diem_trace","",null,null],[17,"TRACE_EVENT","diem_trace::trace","",null,null],[17,"TRACE_EDGE","","",null,null],[17,"DIEM_TRACE","","",null,null],[3,"TraceBlockGuard","","",null,null],[11,"new_entered","","",0,[[["string",3]],["traceblockguard",3]]],[5,"random_node","","",null,[[],[["option",4],["string",3]]]],[5,"collect_all_nodes","","",null,[[],["vec",3]]],[5,"find_peer_with_stage","","",null,[[],["option",4]]],[5,"trace_node","","",null,[[]]],[5,"set_diem_trace","","Sets diem trace config.",null,[[["hashmap",3]],["result",6]]],[5,"diem_trace_set","","Checks if diem trace is enabled",null,[[]]],[5,"is_selected","","",null,[[]]],[0,"prelude","diem_trace","",null,null],[3,"DiemTraceClient","","",null,null],[11,"new","","Create DiemTraceClient from a valid socket address.",1,[[["asref",8]]]],[11,"get_diem_trace","","",1,[[["datetime",3],["duration",3],["utc",3]]]],[14,"trace_event","","",null,null],[14,"node_sampling_data","","",null,null],[14,"send_logs","","",null,null],[14,"trace_code_block","","",null,null],[14,"end_trace","","",null,null],[14,"trace_edge","","",null,null],[14,"format_node","","",null,null],[14,"__trace_fmt_gen","","",null,null],[11,"from","diem_trace::trace","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","diem_trace","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"drop","diem_trace::trace","",0,[[]]]],"p":[[3,"TraceBlockGuard"],[3,"DiemTraceClient"]]},\
"diem_transaction_replay":{"doc":"","i":[[3,"DiemDebugger","diem_transaction_replay","",null,null],[11,"new","","",0,[[["diemvalidatorinterface",8],["box",3]]]],[11,"json_rpc","","",0,[[],["result",6]]],[11,"db","","",0,[[["path",3],["clone",8],["asref",8]],["result",6]]],[11,"execute_transactions_at_version","","",0,[[["vec",3],["version",6],["transaction",4]],[["vec",3],["result",6]]]],[11,"execute_past_transactions","","",0,[[["version",6]],[["vec",3],["result",6]]]],[11,"execute_transactions_by_epoch","","",0,[[["vec",3],["version",6],["transaction",4]],[["vec",3],["result",6]]]],[11,"execute_writeset_at_version","","",0,[[["writesetpayload",4],["version",6]],[["transactionoutput",3],["result",6]]]],[11,"get_diem_framework_modules_at_version","","",0,[[["version",6]],[["result",6],["vec",3]]]],[11,"annotate_account_state_at_version","","",0,[[["accountaddress",3],["version",6]],[["option",4],["result",6]]]],[11,"annotate_key_accounts_at_version","","",0,[[["version",6]],[["vec",3],["result",6]]]],[11,"get_latest_version","","",0,[[],[["result",6],["version",6]]]],[11,"get_version_by_account_sequence","","",0,[[["accountaddress",3]],[["option",4],["result",6]]]],[11,"run_session_at_version","","",0,[[["option",4],["version",6],["movechanges",3]],[["changeset",3],["result",6]]]],[11,"bisect_transactions_by_script","","",0,[[["movechanges",3],["option",4],["accountaddress",3],["version",6]],[["option",4],["result",6]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]]],"p":[[3,"DiemDebugger"]]},\
"diem_types":{"doc":"","i":[[3,"PeerId","diem_types","A struct that represents an account address.",null,null],[0,"access_path","","Suppose we have the following data structure in a smart …",null,null],[3,"AccessPath","diem_types::access_path","",null,null],[12,"address","","",0,null],[12,"path","","",0,null],[4,"Path","","",null,null],[13,"Code","","",1,null],[13,"Resource","","",1,null],[11,"new","","",0,[[["vec",3],["accountaddress",3]]]],[11,"resource_access_vec","","",0,[[["structtag",3]],["vec",3]]],[11,"resource_access_path","","Convert Accesses into a byte offset which would be used …",0,[[["resourcekey",3]],["accesspath",3]]],[11,"code_access_path","","",0,[[["moduleid",3]],["accesspath",3]]],[11,"get_path","","Extract the structured resource or module <code>Path</code> from <code>self</code>",0,[[],["path",4]]],[11,"get_struct_tag","","Extract a StructTag from <code>self</code>. Returns Some if this is a …",0,[[],[["option",4],["structtag",3]]]],[0,"account_address","diem_types","",null,null],[3,"AccountAddress","diem_types::account_address","A struct that represents an account address.",null,null],[5,"from_public_key","","",null,[[["ed25519publickey",3]],["accountaddress",3]]],[5,"from_identity_public_key","","",null,[[["publickey",3]],["accountaddress",3]]],[8,"HashAccountAddress","","",null,null],[10,"hash","","",2,[[],["hashvalue",3]]],[0,"account_config","diem_types","",null,null],[0,"constants","diem_types::account_config","",null,null],[0,"account","diem_types::account_config::constants","",null,null],[7,"ACCOUNT_MODULE","diem_types::account_config::constants::account","The ModuleId for the Account module.",null,null],[7,"ACCOUNT_MODULE_IDENTIFIER","","The Identifier for the Account module.",null,null],[17,"ACCOUNT_MODULE_NAME","","The name of the Account module.",null,null],[0,"addresses","diem_types::account_config::constants","",null,null],[17,"CORE_CODE_ADDRESS","diem_types::account_config::constants::addresses","",null,null],[5,"diem_root_address","","",null,[[],["accountaddress",3]]],[5,"validator_set_address","","",null,[[],["accountaddress",3]]],[5,"treasury_compliance_account_address","","",null,[[],["accountaddress",3]]],[5,"reserved_vm_address","","",null,[[],["accountaddress",3]]],[5,"testnet_dd_account_address","","",null,[[],["accountaddress",3]]],[0,"coins","diem_types::account_config::constants","",null,null],[17,"XDX_NAME","diem_types::account_config::constants::coins","",null,null],[17,"XUS_NAME","","",null,null],[5,"xus_tag","","",null,[[],["typetag",4]]],[7,"XDX_MODULE","","",null,null],[7,"XDX_STRUCT_NAME","","",null,null],[5,"xdx_type_tag","","",null,[[],["typetag",4]]],[5,"coin_name","","Return <code>Some(struct_name)</code> if <code>t</code> is a <code>StructTag</code> representing …",null,[[["typetag",4]],[["option",4],["string",3]]]],[0,"diem","diem_types::account_config::constants","",null,null],[17,"DIEM_MODULE_NAME","diem_types::account_config::constants::diem","",null,null],[7,"COIN_MODULE","","",null,null],[5,"type_tag_for_currency_code","","",null,[[["identifier",3]],["typetag",4]]],[5,"allowed_currency_code_string","","In addition to the constraints for valid Move …",null,[[]]],[5,"from_currency_code_string","","",null,[[],[["identifier",3],["result",6]]]],[0,"event","diem_types::account_config::constants","",null,null],[7,"EVENT_MODULE","diem_types::account_config::constants::event","",null,null],[5,"event_module_name","","",null,[[],["identstr",3]]],[5,"event_handle_generator_struct_name","","",null,[[],["identstr",3]]],[5,"event_handle_struct_name","","",null,[[],["identstr",3]]],[5,"event_handle_generator_struct_tag","","",null,[[],["structtag",3]]],[0,"events","diem_types::account_config","",null,null],[0,"admin_transaction","diem_types::account_config::events","",null,null],[3,"AdminTransactionEvent","diem_types::account_config::events::admin_transaction","Struct that represents a AdminEvent.",null,null],[11,"committed_timestamp_secs","","Get the applied writeset.",3,[[]]],[11,"try_from_bytes","","",3,[[],["result",6]]],[0,"base_url_rotation","diem_types::account_config::events","",null,null],[3,"BaseUrlRotationEvent","diem_types::account_config::events::base_url_rotation","Struct that represents a BaseUrlRotationEvent.",null,null],[11,"new_base_url","","Get the new base url",4,[[]]],[11,"time_rotated_seconds","","Get the (blockchain) time in seconds when the url was …",4,[[]]],[11,"try_from_bytes","","",4,[[],["result",6]]],[0,"burn","diem_types::account_config::events","",null,null],[3,"BurnEvent","diem_types::account_config::events::burn","Struct that represents a BurnEvent.",null,null],[11,"amount","","Get the amount burned",5,[[]]],[11,"currency_code","","Return the code for the currency that was burned",5,[[],["identstr",3]]],[11,"preburn_address","","Return the address whose Preburn resource formerly held …",5,[[],["accountaddress",3]]],[11,"try_from_bytes","","",5,[[],["result",6]]],[0,"cancel_burn","diem_types::account_config::events","",null,null],[3,"CancelBurnEvent","diem_types::account_config::events::cancel_burn","Struct that represents a CancelBurnEvent.",null,null],[11,"amount","","Get the amount canceled",6,[[]]],[11,"currency_code","","Return the code for the currency that was returned",6,[[],["identstr",3]]],[11,"preburn_address","","Return the address whose Preburn resource formerly held …",6,[[],["accountaddress",3]]],[11,"try_from_bytes","","",6,[[],["result",6]]],[0,"compliance_key_rotation","diem_types::account_config::events","",null,null],[3,"ComplianceKeyRotationEvent","diem_types::account_config::events::compliance_key_rotation","Struct that represents a ComplianceKeyRotationEvent.",null,null],[11,"new_compliance_public_key","","Get the new compliance public key",7,[[]]],[11,"time_rotated_seconds","","Get the (blockchain) time in seconds when the url was …",7,[[]]],[11,"try_from_bytes","","",7,[[],["result",6]]],[0,"create_account","diem_types::account_config::events","",null,null],[3,"CreateAccountEvent","diem_types::account_config::events::create_account","",null,null],[11,"created","","",8,[[],["accountaddress",3]]],[11,"role_id","","",8,[[]]],[11,"try_from_bytes","","",8,[[],["result",6]]],[11,"event_key","","",8,[[],["eventkey",3]]],[0,"exchange_rate_update","diem_types::account_config::events","",null,null],[3,"ToXDXExchangeRateUpdateEvent","diem_types::account_config::events::exchange_rate_update","Struct that represents a ToXDXExchangeRateUpdateEvent",null,null],[11,"new_to_xdx_exchange_rate","","Exchange rates are represented as 32|32 fixed-point …",9,[[]]],[11,"currency_code","","Return the code for the currency whose exchange rate was …",9,[[],["identstr",3]]],[11,"try_from_bytes","","",9,[[],["result",6]]],[0,"mint","diem_types::account_config::events","",null,null],[3,"MintEvent","diem_types::account_config::events::mint","Struct that represents a MintEvent.",null,null],[11,"amount","","Get the amount minted",10,[[]]],[11,"currency_code","","Return the code for the currency that was minted",10,[[],["identstr",3]]],[11,"try_from_bytes","","",10,[[],["result",6]]],[0,"new_block","diem_types::account_config::events","",null,null],[3,"NewBlockEvent","diem_types::account_config::events::new_block","Struct that represents a NewBlockEvent.",null,null],[11,"round","","",11,[[]]],[11,"proposer","","",11,[[],["accountaddress",3]]],[11,"proposed_time","","",11,[[]]],[11,"try_from_bytes","","",11,[[],["result",6]]],[11,"new","","",11,[[["accountaddress",3],["vec",3]]]],[0,"new_epoch","diem_types::account_config::events","",null,null],[3,"NewEpochEvent","diem_types::account_config::events::new_epoch","Struct that represents a NewEpochEvent.",null,null],[11,"epoch","","",12,[[]]],[11,"try_from_bytes","","",12,[[],["result",6]]],[11,"event_key","","",12,[[],["eventkey",3]]],[0,"preburn","diem_types::account_config::events","",null,null],[3,"PreburnEvent","diem_types::account_config::events::preburn","Struct that represents a PreburnEvent.",null,null],[11,"amount","","Get the amount preburned",13,[[]]],[11,"currency_code","","Return the code for the currency that was preburned",13,[[],["identstr",3]]],[11,"preburn_address","","Return the address whose Preburn now holds the funds",13,[[],["accountaddress",3]]],[11,"try_from_bytes","","",13,[[],["result",6]]],[0,"received_mint","diem_types::account_config::events","",null,null],[3,"ReceivedMintEvent","diem_types::account_config::events::received_mint","Struct that represents a ReceivedMintEvent.",null,null],[11,"amount","","Get the amount minted",14,[[]]],[11,"destination_address","","Return the address who received the mint",14,[[],["accountaddress",3]]],[11,"currency_code","","Return the code for the currency that was minted",14,[[],["identstr",3]]],[11,"try_from_bytes","","",14,[[],["result",6]]],[0,"received_payment","diem_types::account_config::events","",null,null],[7,"ACCOUNT_RECEIVED_EVENT_PATH","diem_types::account_config::events::received_payment","Returns the path to the received event counter for an …",null,null],[3,"ReceivedPaymentEvent","","Struct that represents a ReceivedPaymentEvent.",null,null],[11,"try_from_bytes","","",15,[[],["result",6]]],[11,"sender","","Get the receiver of this transaction event.",15,[[],["accountaddress",3]]],[11,"amount","","Get the amount sent or received",15,[[]]],[11,"metadata","","Get the metadata associated with this event",15,[[],["vec",3]]],[11,"currency_code","","Return the currency code that the payment was made in.",15,[[],["identstr",3]]],[0,"sent_payment","diem_types::account_config::events","",null,null],[7,"ACCOUNT_SENT_EVENT_PATH","diem_types::account_config::events::sent_payment","The path to the sent event counter for an Account …",null,null],[3,"SentPaymentEvent","","Struct that represents a SentPaymentEvent.",null,null],[11,"new","","",16,[[["vec",3],["identifier",3],["accountaddress",3]]]],[11,"try_from_bytes","","",16,[[],["result",6]]],[11,"receiver","","Get the sender of this transaction event.",16,[[],["accountaddress",3]]],[11,"amount","","Get the amount sent or received",16,[[]]],[11,"metadata","","Get the metadata associated with this event",16,[[],["vec",3]]],[11,"currency_code","","Return the currency currency_code symbol that the payment …",16,[[],["identstr",3]]],[0,"resources","diem_types::account_config","",null,null],[0,"account","diem_types::account_config::resources","",null,null],[3,"AccountResource","diem_types::account_config::resources::account","A Rust representation of an Account resource. This is not …",null,null],[11,"new","","Constructs an Account resource.",17,[[["vec",3],["eventhandle",3],["option",4],["keyrotationcapabilityresource",3],["option",4],["withdrawcapabilityresource",3]]]],[11,"sequence_number","","Return the sequence_number field for the given …",17,[[]]],[11,"has_delegated_withdrawal_capability","","Returns if this account has delegated its withdrawal …",17,[[]]],[11,"has_delegated_key_rotation_capability","","Returns if this account has delegated its key rotation …",17,[[]]],[11,"authentication_key","","Return the authentication_key field for the given …",17,[[]]],[11,"sent_events","","Return the sent_events handle for the given …",17,[[],["eventhandle",3]]],[11,"received_events","","Return the received_events handle for the given …",17,[[],["eventhandle",3]]],[0,"balance","diem_types::account_config::resources","",null,null],[3,"BalanceResource","diem_types::account_config::resources::balance","The balance resource held under an account.",null,null],[11,"new","","",18,[[]]],[11,"coin","","",18,[[]]],[11,"struct_tag_for_currency","","",18,[[["typetag",4]],["structtag",3]]],[11,"access_path_for","","",18,[[["typetag",4]],["vec",3]]],[0,"chain_id","diem_types::account_config::resources","",null,null],[3,"ChainIdResource","diem_types::account_config::resources::chain_id","",null,null],[11,"chain_id","","",19,[[],["chainid",3]]],[0,"currency_info","diem_types::account_config::resources","",null,null],[3,"CurrencyInfoResource","diem_types::account_config::resources::currency_info","Struct that represents a CurrencyInfo resource",null,null],[11,"new","","",20,[[["identifier",3],["eventhandle",3]]]],[11,"currency_code","","",20,[[],["identstr",3]]],[11,"scaling_factor","","",20,[[]]],[11,"total_value","","",20,[[]]],[11,"preburn_value","","",20,[[]]],[11,"fractional_part","","",20,[[]]],[11,"exchange_rate","","",20,[[]]],[11,"convert_to_xdx","","",20,[[]]],[11,"struct_tag_for","","",20,[[["identifier",3]],["structtag",3]]],[11,"resource_path_for","","",20,[[["identifier",3]],["accesspath",3]]],[11,"try_from_bytes","","",20,[[],["result",6]]],[11,"mint_events","","",20,[[],["eventhandle",3]]],[11,"burn_events","","",20,[[],["eventhandle",3]]],[11,"preburn_events","","",20,[[],["eventhandle",3]]],[11,"cancel_burn_events","","",20,[[],["eventhandle",3]]],[11,"exchange_rate_update_events","","",20,[[],["eventhandle",3]]],[0,"designated_dealer","diem_types::account_config::resources","",null,null],[3,"DesignatedDealer","diem_types::account_config::resources::designated_dealer","",null,null],[11,"received_mint_events","","Return the received_mint_events handle for the given …",21,[[],["eventhandle",3]]],[0,"dual_attestation","diem_types::account_config::resources","",null,null],[3,"Credential","diem_types::account_config::resources::dual_attestation","",null,null],[11,"human_name","","",22,[[]]],[11,"base_url","","",22,[[]]],[11,"expiration_date","","",22,[[]]],[11,"compliance_public_key","","",22,[[]]],[11,"compliance_key_rotation_events","","",22,[[],["eventhandle",3]]],[11,"base_url_rotation_events","","",22,[[],["eventhandle",3]]],[3,"Limit","","Defines the dual attest limit in microDiem XDX",null,null],[12,"micro_xdx_limit","","",23,null],[0,"freezing_bit","diem_types::account_config::resources","",null,null],[3,"FreezingBit","diem_types::account_config::resources::freezing_bit","",null,null],[11,"is_frozen","","",24,[[]]],[0,"key_rotation_capability","diem_types::account_config::resources","",null,null],[3,"KeyRotationCapabilityResource","diem_types::account_config::resources::key_rotation_capability","",null,null],[0,"preburn_balance","diem_types::account_config::resources","",null,null],[3,"PreburnResource","diem_types::account_config::resources::preburn_balance","The preburn balance held under an account.",null,null],[11,"new","","",25,[[]]],[11,"coin","","",25,[[]]],[11,"struct_tag_for_currency","","",25,[[["typetag",4]],["structtag",3]]],[11,"access_path_for","","",25,[[["typetag",4]],["vec",3]]],[0,"role","diem_types::account_config::resources","",null,null],[4,"AccountRole","diem_types::account_config::resources::role","A enum that captures the collection of role-specific …",null,null],[13,"ParentVASP","","",26,null],[12,"vasp","diem_types::account_config::resources::role::AccountRole","",27,null],[12,"credential","","",27,null],[13,"ChildVASP","diem_types::account_config::resources::role","",26,null],[13,"DesignatedDealer","","",26,null],[12,"dd_credential","diem_types::account_config::resources::role::AccountRole","",28,null],[12,"preburn_balances","","",28,null],[12,"designated_dealer","","",28,null],[13,"Unknown","diem_types::account_config::resources::role","",26,null],[0,"role_id","diem_types::account_config::resources","",null,null],[3,"RoleId","diem_types::account_config::resources::role_id","",null,null],[11,"role_id","","",29,[[]]],[0,"vasp","diem_types::account_config::resources","",null,null],[3,"ParentVASP","diem_types::account_config::resources::vasp","",null,null],[11,"num_children","","",30,[[]]],[3,"ChildVASP","","",null,null],[11,"parent_vasp_addr","","",31,[[],["accountaddress",3]]],[0,"withdraw_capability","diem_types::account_config::resources","",null,null],[3,"WithdrawCapabilityResource","diem_types::account_config::resources::withdraw_capability","",null,null],[0,"account_state","diem_types","",null,null],[3,"AccountState","diem_types::account_state","",null,null],[11,"get_account_address","","",32,[[],[["option",4],["result",6]]]],[11,"get_account_resource","","",32,[[],[["result",6],["option",4]]]],[11,"get_balance_resources","","",32,[[],[["btreemap",3],["result",6]]]],[11,"get_preburn_balances","","",32,[[],[["btreemap",3],["result",6]]]],[11,"get_chain_id_resource","","",32,[[],[["result",6],["option",4]]]],[11,"get_configuration_resource","","",32,[[],[["result",6],["option",4]]]],[11,"get_diem_timestamp_resource","","",32,[[],[["result",6],["option",4]]]],[11,"get_validator_config_resource","","",32,[[],[["option",4],["result",6]]]],[11,"get_validator_operator_config_resource","","",32,[[],[["option",4],["result",6]]]],[11,"get_freezing_bit","","",32,[[],[["option",4],["result",6]]]],[11,"get_account_role","","",32,[[],[["option",4],["result",6]]]],[11,"get_validator_set","","",32,[[],[["result",6],["option",4]]]],[11,"get_diem_version","","",32,[[],[["option",4],["result",6]]]],[11,"get_vm_publishing_option","","",32,[[],[["option",4],["result",6]]]],[11,"get_registered_currency_info_resources","","",32,[[],[["result",6],["vec",3]]]],[11,"get_diem_block_resource","","",32,[[],[["result",6],["option",4]]]],[11,"get","","",32,[[],[["option",4],["vec",3]]]],[11,"get_resource_impl","","",32,[[],[["result",6],["option",4]]]],[11,"insert","","",32,[[["vec",3]],[["option",4],["vec",3]]]],[11,"remove","","",32,[[],[["option",4],["vec",3]]]],[11,"iter","","",32,[[]]],[11,"get_config","","",32,[[],[["result",6],["option",4]]]],[11,"get_resource","","",32,[[],[["result",6],["option",4]]]],[11,"get_modules","","Return an iterator over the module values stored under …",32,[[]]],[0,"account_state_blob","diem_types","",null,null],[3,"AccountStateBlob","diem_types::account_state_blob","",null,null],[3,"AccountStateBlobHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[3,"AccountStateWithProof","","",null,null],[12,"version","","The transaction version at which this account state is …",33,null],[12,"blob","","Blob value representing the account state. If this field …",33,null],[12,"proof","","The proof the client can use to authenticate the value.",33,null],[11,"new","","Constructor.",33,[[["version",6],["option",4],["accountstateproof",3],["accountstateblob",3]]]],[11,"verify","","Verifies the the account state blob with the proof, both …",33,[[["version",6],["accountaddress",3],["ledgerinfo",3]],["result",6]]],[0,"block_info","diem_types","",null,null],[6,"Round","diem_types::block_info","The round of a block is a consensus-internal counter, …",null,null],[17,"GENESIS_EPOCH","","",null,null],[17,"GENESIS_ROUND","","",null,null],[17,"GENESIS_VERSION","","",null,null],[17,"GENESIS_TIMESTAMP_USECS","","",null,null],[3,"BlockInfo","","This structure contains all the information needed for …",null,null],[11,"new","","",34,[[["version",6],["round",6],["option",4],["epochstate",3],["hashvalue",3]]]],[11,"empty","","",34,[[]]],[11,"random","","",34,[[["round",6]]]],[11,"genesis","","Create a new genesis block. The genesis block is …",34,[[["validatorset",3],["hashvalue",3]]]],[11,"mock_genesis","","Create a mock genesis <code>BlockInfo</code> with an empty state tree …",34,[[["validatorset",3],["option",4]]]],[11,"next_block_epoch","","The epoch after this block committed",34,[[]]],[11,"epoch","","",34,[[]]],[11,"executed_state_id","","",34,[[],["hashvalue",3]]],[11,"has_reconfiguration","","",34,[[]]],[11,"id","","",34,[[],["hashvalue",3]]],[11,"next_epoch_state","","",34,[[],[["option",4],["epochstate",3]]]],[11,"round","","",34,[[],["round",6]]],[11,"timestamp_usecs","","",34,[[]]],[11,"version","","",34,[[],["version",6]]],[0,"block_metadata","diem_types","",null,null],[3,"BlockMetadata","diem_types::block_metadata","Struct that will be persisted on chain to store the …",null,null],[11,"new","","",35,[[["vec",3],["accountaddress",3],["hashvalue",3]]]],[11,"id","","",35,[[],["hashvalue",3]]],[11,"into_inner","","",35,[[]]],[11,"timestamp_usec","","",35,[[]]],[11,"proposer","","",35,[[],["accountaddress",3]]],[5,"new_block_event_key","","",null,[[],["eventkey",3]]],[7,"NEW_BLOCK_EVENT_PATH","","The path to the new block event handle under a …",null,null],[3,"DiemBlockResource","","",null,null],[11,"new_block_events","","",36,[[],["eventhandle",3]]],[3,"NewBlockEvent","","",null,null],[11,"new","","",37,[[["accountaddress",3],["vec",3]]]],[11,"round","","",37,[[]]],[11,"proposer","","",37,[[],["accountaddress",3]]],[11,"votes","","",37,[[],[["accountaddress",3],["vec",3]]]],[0,"chain_id","diem_types","",null,null],[4,"NamedChain","diem_types::chain_id","A registry of named chain IDs Its main purpose is to …",null,null],[13,"MAINNET","","Users might accidentally initialize the ChainId field to …",38,null],[13,"TESTNET","","",38,null],[13,"DEVNET","","",38,null],[13,"TESTING","","",38,null],[13,"PREMAINNET","","",38,null],[11,"id","","",38,[[]]],[11,"from_chain_id","","",38,[[["chainid",3]],[["namedchain",4],["string",3],["result",6]]]],[3,"ChainId","","Note: u7 in a u8 is uleb-compatible, and any usage of …",null,null],[5,"deserialize_config_chain_id","","",null,[[],[["chainid",3],["result",4]]]],[11,"new","","",39,[[]]],[11,"id","","",39,[[]]],[11,"test","","",39,[[]]],[0,"contract_event","diem_types","",null,null],[4,"ContractEvent","diem_types::contract_event","Support versioning of the data structure.",null,null],[13,"V0","","",40,null],[3,"ContractEventHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[11,"new","","",40,[[["vec",3],["eventkey",3],["typetag",4]]]],[3,"ContractEventV0","","Entry produced via a call to the <code>emit_event</code> builtin.",null,null],[3,"ContractEventV0Hasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[11,"new","","",41,[[["vec",3],["eventkey",3],["typetag",4]]]],[11,"key","","",41,[[],["eventkey",3]]],[11,"sequence_number","","",41,[[]]],[11,"event_data","","",41,[[]]],[11,"type_tag","","",41,[[],["typetag",4]]],[3,"EventWithProof","","",null,null],[12,"transaction_version","","",42,null],[12,"event_index","","",42,null],[12,"event","","",42,null],[12,"proof","","",42,null],[11,"new","","Constructor.",42,[[["version",6],["eventproof",3],["contractevent",4]]]],[11,"verify","","Verifies the event with the proof, both carried by <code>self</code>.",42,[[["eventkey",3],["version",6],["ledgerinfo",3]],["result",6]]],[0,"diem_timestamp","diem_types","",null,null],[3,"DiemTimestampResource","diem_types::diem_timestamp","",null,null],[12,"diem_timestamp","","",43,null],[3,"DiemTimestamp","","",null,null],[12,"microseconds","","",44,null],[0,"epoch_change","diem_types","",null,null],[8,"Verifier","diem_types::epoch_change","The verification of the epoch change proof starts with …",null,null],[10,"verify","","Verify if the ledger_info is trust worthy.",45,[[["ledgerinfowithsignatures",4]],["result",6]]],[10,"epoch_change_verification_required","","Returns true in case the given epoch is larger than the …",45,[[]]],[10,"is_ledger_info_stale","","Returns true if the given [<code>LedgerInfo</code>] is stale and …",45,[[["ledgerinfo",3]]]],[3,"EpochChangeProof","","A vector of LedgerInfo with contiguous increasing epoch …",null,null],[12,"ledger_info_with_sigs","","",46,null],[12,"more","","",46,null],[11,"new","","",46,[[["vec",3],["ledgerinfowithsignatures",4]]]],[11,"epoch","","The first/lowest epoch of the proof to indicate which …",46,[[],["result",6]]],[11,"verify","","Verify the proof is correctly chained with known epoch …",46,[[["verifier",8]],[["result",6],["ledgerinfowithsignatures",4]]]],[0,"epoch_state","diem_types","",null,null],[3,"EpochState","diem_types::epoch_state","EpochState represents a trusted validator set to validate …",null,null],[12,"epoch","","",47,null],[12,"verifier","","",47,null],[11,"empty","","",47,[[]]],[0,"event","diem_types","",null,null],[3,"EventKey","diem_types::event","A struct that represents a globally unique id for an …",null,null],[11,"new","","Construct a new EventKey from a byte array slice.",48,[[]]],[18,"LENGTH","","The number of bytes in an EventKey.",48,null],[11,"as_bytes","","Get the byte representation of the event key.",48,[[]]],[11,"to_vec","","Convert event key into a byte array.",48,[[],["vec",3]]],[11,"get_creator_address","","Get the account address part in this event key",48,[[],["accountaddress",3]]],[11,"get_creation_number","","If this is the <code>ith</code> EventKey<code>created by</code>get_creator_address()…",48,[[]]],[11,"random","","Create a random event key for testing",48,[[]]],[11,"new_from_address","","Create a unique handle by using an AccountAddress and a …",48,[[["accountaddress",3]]]],[3,"EventHandle","","A Rust representation of an Event Handle Resource.",null,null],[11,"new","","Constructs a new Event Handle",49,[[["eventkey",3]]]],[11,"key","","Return the key to where this event is stored in …",49,[[],["eventkey",3]]],[11,"count","","Return the counter for the handle",49,[[]]],[11,"count_mut","","",49,[[]]],[11,"random_handle","","Create a random event handle for testing",49,[[]]],[11,"new_from_address","","Derive a unique handle by using an AccountAddress and a …",49,[[["accountaddress",3]]]],[0,"ledger_info","diem_types","",null,null],[3,"LedgerInfo","diem_types::ledger_info","This structure serves a dual purpose.",null,null],[3,"LedgerInfoHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[11,"new","","Constructs a <code>LedgerInfo</code> object based on the given commit …",50,[[["blockinfo",3],["hashvalue",3]]]],[11,"genesis","","Create a new LedgerInfo at genesis with the given genesis …",50,[[["validatorset",3],["hashvalue",3]]]],[11,"mock_genesis","","",50,[[["validatorset",3],["option",4]]]],[11,"commit_info","","The <code>BlockInfo</code> of a committed block.",50,[[],["blockinfo",3]]],[11,"epoch","","A series of wrapper functions for the data stored in the …",50,[[]]],[11,"next_block_epoch","","",50,[[]]],[11,"round","","",50,[[],["round",6]]],[11,"consensus_block_id","","",50,[[],["hashvalue",3]]],[11,"transaction_accumulator_hash","","",50,[[],["hashvalue",3]]],[11,"version","","",50,[[],["version",6]]],[11,"timestamp_usecs","","",50,[[]]],[11,"next_epoch_state","","",50,[[],[["option",4],["epochstate",3]]]],[11,"ends_epoch","","",50,[[]]],[11,"consensus_data_hash","","Returns hash of consensus voting data in this <code>LedgerInfo</code>.",50,[[],["hashvalue",3]]],[11,"set_consensus_data_hash","","",50,[[["hashvalue",3]]]],[4,"LedgerInfoWithSignatures","","Wrapper around LedgerInfoWithScheme to support future …",null,null],[13,"V0","","",51,null],[11,"new","","",51,[[["ledgerinfo",3],["ed25519signature",3],["accountaddress",3],["btreemap",3]]]],[11,"genesis","","",51,[[["validatorset",3],["hashvalue",3]]]],[3,"LedgerInfoWithV0","","The validator node returns this structure which includes …",null,null],[11,"new","","",52,[[["ledgerinfo",3],["ed25519signature",3],["accountaddress",3],["btreemap",3]]]],[11,"genesis","","Create a new <code>LedgerInfoWithEd25519</code> at genesis with the …",52,[[["validatorset",3],["hashvalue",3]]]],[11,"ledger_info","","",52,[[],["ledgerinfo",3]]],[11,"add_signature","","",52,[[["accountaddress",3],["ed25519signature",3]]]],[11,"remove_signature","","",52,[[["accountaddress",3]]]],[11,"signatures","","",52,[[],["btreemap",3]]],[11,"verify_signatures","","",52,[[["validatorverifier",3]],[["result",4],["verifyerror",4]]]],[0,"mempool_status","diem_types","",null,null],[3,"MempoolStatus","diem_types::mempool_status","A <code>MempoolStatus</code> is represented as a required status code …",null,null],[12,"code","","insertion status code",53,null],[12,"message","","optional message",53,null],[11,"new","","",53,[[["mempoolstatuscode",4]]]],[11,"with_message","","Adds a message to the Mempool status.",53,[[["string",3]]]],[4,"MempoolStatusCode","","",null,null],[13,"Accepted","","",54,null],[13,"InvalidSeqNumber","","",54,null],[13,"MempoolIsFull","","",54,null],[13,"TooManyTransactions","","",54,null],[13,"InvalidUpdate","","",54,null],[13,"VmError","","",54,null],[13,"UnknownStatus","","",54,null],[0,"move_resource","diem_types","",null,null],[8,"MoveStorage","diem_types::move_resource","",null,null],[10,"batch_fetch_resources","","Returns a vector of Move resources as serialized byte …",55,[[["accesspath",3],["vec",3]],[["result",6],["vec",3]]]],[10,"batch_fetch_resources_by_version","","Returns a vector of Move resources as serialized byte …",55,[[["accesspath",3],["version",6],["vec",3]],[["result",6],["vec",3]]]],[10,"fetch_synced_version","","Get the version on the latest transaction info.",55,[[],[["version",6],["result",6]]]],[0,"network_address","diem_types","",null,null],[0,"encrypted","diem_types::network_address","",null,null],[17,"AES_GCM_TAG_LEN","diem_types::network_address::encrypted","The length in bytes of the AES-256-GCM authentication tag.",null,null],[17,"AES_GCM_NONCE_LEN","","The length in bytes of the AES-256-GCM nonce.",null,null],[17,"KEY_LEN","","The length in bytes of the <code>shared_val_netaddr_key</code> and …",null,null],[6,"Key","","Convenient type alias for the <code>shared_val_netaddr_key</code> as …",null,null],[6,"KeyVersion","","",null,null],[17,"TEST_SHARED_VAL_NETADDR_KEY","","Constant key + version so we can push <code>EncNetworkAddress</code> …",null,null],[17,"TEST_SHARED_VAL_NETADDR_KEY_VERSION","","",null,null],[17,"HKDF_SALT","","We salt the HKDF for deriving the account keys to provide …",null,null],[3,"EncNetworkAddress","","An encrypted [<code>NetworkAddress</code>].",null,null],[11,"encrypt","","Panicsencrypt will panic if <code>addr</code> length > 64 GiB.",56,[[["key",6],["keyversion",6],["accountaddress",3],["networkaddress",3]],[["result",4],["parseerror",4]]]],[11,"decrypt","","",56,[[["key",6],["accountaddress",3]],[["networkaddress",3],["parseerror",4],["result",4]]]],[11,"key_version","","",56,[[],["keyversion",6]]],[11,"seq_num","","",56,[[]]],[3,"NetworkAddress","diem_types::network_address","OverviewDiem <code>NetworkAddress</code> is a compact, efficient, …",null,null],[4,"Protocol","","A single protocol in the [<code>NetworkAddress</code>] protocol stack.",null,null],[13,"Ip4","","",57,null],[13,"Ip6","","",57,null],[13,"Dns","","",57,null],[13,"Dns4","","",57,null],[13,"Dns6","","",57,null],[13,"Tcp","","",57,null],[13,"Memory","","",57,null],[13,"NoiseIK","","",57,null],[13,"Handshake","","",57,null],[3,"DnsName","","A minimally parsed DNS name. We don\'t really do any …",null,null],[4,"ParseError","","Possible errors when parsing a human-readable […",null,null],[13,"UnknownProtocolType","","",58,null],[13,"UnexpectedEnd","","",58,null],[13,"ParseAddrError","","",58,null],[13,"ParseIntError","","",58,null],[13,"ParseX25519PubkeyError","","",58,null],[13,"EmptyProtocolString","","",58,null],[13,"InvalidProtocolString","","",58,null],[13,"EmptyDnsNameString","","",58,null],[13,"InvalidDnsNameCharacter","","",58,null],[13,"DnsNameTooLong","","",58,null],[13,"DecryptError","","",58,null],[13,"BCSError","","",58,null],[3,"EmptyError","","",null,null],[11,"as_slice","","",59,[[]]],[11,"push","","",59,[[["protocol",4]]]],[11,"extend_from_slice","","",59,[[]]],[11,"encrypt","","See [<code>EncNetworkAddress::encrypt</code>].",59,[[["key",6],["keyversion",6],["accountaddress",3]],[["parseerror",4],["encnetworkaddress",3],["result",4]]]],[11,"append_prod_protos","","Given a base <code>NetworkAddress</code>, append production protocols …",59,[[["publickey",3]]]],[11,"is_diemnet_addr","","Check that a <code>NetworkAddress</code> looks like a typical DiemNet …",59,[[]]],[11,"find_ip_addr","","Retrieves the IP address from the network address",59,[[],[["ipaddr",4],["option",4]]]],[11,"find_noise_proto","","A temporary, hacky function to parse out the first …",59,[[],[["option",4],["publickey",3]]]],[11,"rotate_noise_public_key","","A function to rotate public keys for <code>NoiseIK</code> protocols",59,[[["publickey",3]]]],[11,"mock","","",59,[[]]],[5,"arb_diemnet_addr","","",null,[[]]],[5,"parse_memory","","parse the <code>&[Protocol]</code> into the <code>\\\"/memory/<port>\\\"</code> prefix …",null,[[],["option",4]]],[5,"parse_ip_tcp","","parse the <code>&[Protocol]</code> into the <code>\\\"/ip4/<addr>/tcp/<port>\\\"</code> or…",null,[[],["option",4]]],[4,"IpFilter","","",null,null],[13,"Any","","",60,null],[13,"OnlyIp4","","",60,null],[13,"OnlyIp6","","",60,null],[11,"matches","","",60,[[["ipaddr",4]]]],[5,"parse_dns_tcp","","parse the <code>&[Protocol]</code> into the <code>\\\"/dns/<domain>/tcp/<port>\\\"</code>,…",null,[[],["option",4]]],[5,"parse_tcp","","",null,[[],["option",4]]],[5,"parse_noise_ik","","parse the <code>&[Protocol]</code> into the <code>\\\"/ln-noise-ik/<pubkey>\\\"</code> …",null,[[],["option",4]]],[5,"parse_handshake","","parse the <code>&[Protocol]</code> into the <code>\\\"/ln-handshake/<version>\\\"</code> …",null,[[],["option",4]]],[0,"on_chain_config","diem_types","",null,null],[3,"DiemVersion","diem_types::on_chain_config","Defines the version of Diem Validator software.",null,null],[12,"major","","",61,null],[3,"RegisteredCurrencies","","",null,null],[3,"ValidatorSet","","",null,null],[3,"VMConfig","","Defines all the on chain configuration data needed by VM.",null,null],[12,"gas_schedule","","",62,null],[3,"VMPublishingOption","","Defines and holds the publishing policies for the VM. …",null,null],[12,"script_allow_list","","",63,null],[12,"is_open_module","","",63,null],[3,"ConfigID","","To register an on-chain config in Rust:",null,null],[5,"config_address","","",null,[[],["accountaddress",3]]],[11,"access_path","","",64,[[],["accesspath",3]]],[17,"ON_CHAIN_CONFIG_REGISTRY","","State sync will panic if the value of any config in this …",null,null],[3,"OnChainConfigPayload","","",null,null],[11,"new","","",65,[[["arc",3],["hashmap",3]]]],[11,"epoch","","",65,[[]]],[11,"get","","",65,[[],[["result",6],["onchainconfig",8]]]],[11,"configs","","",65,[[],["hashmap",3]]],[8,"ConfigStorage","","Trait to be implemented by a storage type from which to …",null,null],[10,"fetch_config","","",66,[[["accesspath",3]],[["option",4],["vec",3]]]],[8,"OnChainConfig","","Trait to be implemented by a Rust struct representation …",null,null],[18,"ADDRESS","","",67,null],[18,"IDENTIFIER","","",67,null],[18,"CONFIG_ID","","",67,null],[11,"deserialize_default_impl","","",67,[[],["result",6]]],[11,"deserialize_into_config","","",67,[[],["result",6]]],[11,"fetch_config","","",67,[[],["option",4]]],[5,"new_epoch_event_key","","",null,[[],["eventkey",3]]],[5,"access_path_for_config","","",null,[[["identifier",3],["accountaddress",3]],["accesspath",3]]],[3,"ConfigurationResource","","",null,null],[11,"epoch","","",68,[[]]],[11,"last_reconfiguration_time","","",68,[[]]],[11,"events","","",68,[[],["eventhandle",3]]],[11,"bump_epoch_for_test","","",68,[[]]],[0,"proof","diem_types","",null,null],[0,"accumulator","diem_types::proof","This module implements an in-memory Merkle Accumulator …",null,null],[3,"InMemoryAccumulator","diem_types::proof::accumulator","The Accumulator implementation.",null,null],[11,"new","","Constructs a new accumulator with roots of existing …",69,[[["leafcount",6],["vec",3],["hashvalue",3]],["result",6]]],[11,"from_leaves","","Constructs a new accumulator with given leaves.",69,[[]]],[11,"append","","Appends a list of new leaves to an existing accumulator. …",69,[[]]],[11,"append_subtrees","","Appends a list of new subtrees to the existing …",69,[[["leafcount",6]],["result",6]]],[11,"root_hash","","Returns the root hash of the accumulator.",69,[[],["hashvalue",3]]],[11,"version","","",69,[[]]],[11,"frozen_subtree_roots","","Returns the set of frozen subtree roots in this …",69,[[],["vec",3]]],[11,"num_leaves","","Returns the total number of leaves in this accumulator.",69,[[],["leafcount",6]]],[0,"definition","diem_types::proof","This module has definition of various proofs.",null,null],[3,"AccumulatorProof","diem_types::proof::definition","A proof that can be used authenticate an element in an …",null,null],[6,"LeafCount","","Because leaves can only take half the space in the tree, …",null,null],[17,"MAX_ACCUMULATOR_PROOF_DEPTH","","",null,null],[17,"MAX_ACCUMULATOR_LEAVES","","",null,null],[11,"new","","Constructs a new <code>AccumulatorProof</code> using a list of …",70,[[["vec",3],["hashvalue",3]]]],[11,"siblings","","Returns the list of siblings in this proof.",70,[[]]],[11,"verify","","Verifies an element whose hash is <code>element_hash</code> and …",70,[[["hashvalue",3]],["result",6]]],[6,"TransactionAccumulatorProof","","",null,null],[6,"EventAccumulatorProof","","",null,null],[6,"TestAccumulatorProof","","",null,null],[3,"SparseMerkleProof","","A proof that can be used to authenticate an element in a …",null,null],[11,"new","","Constructs a new <code>SparseMerkleProof</code> using leaf and a list …",71,[[["sparsemerkleleafnode",3],["hashvalue",3],["vec",3],["option",4]]]],[11,"leaf","","Returns the leaf node in this proof.",71,[[],[["sparsemerkleleafnode",3],["option",4]]]],[11,"siblings","","Returns the list of siblings in this proof.",71,[[]]],[11,"verify","","If <code>element_value</code> is present, verifies an element whose …",71,[[["option",4],["hashvalue",3]],["result",6]]],[3,"AccumulatorConsistencyProof","","A proof that can be used to show that two Merkle …",null,null],[11,"new","","Constructs a new <code>AccumulatorConsistencyProof</code> using given …",72,[[["vec",3],["hashvalue",3]]]],[11,"subtrees","","Returns the subtrees.",72,[[]]],[3,"AccumulatorRangeProof","","A proof that is similar to <code>AccumulatorProof</code>, but can be …",null,null],[11,"new","","Constructs a new <code>AccumulatorRangeProof</code> using <code>left_siblings</code>…",73,[[["vec",3],["hashvalue",3]]]],[11,"new_empty","","Constructs a new <code>AccumulatorRangeProof</code> for an empty list …",73,[[]]],[11,"left_siblings","","Get all the left siblngs.",73,[[],["vec",3]]],[11,"right_siblings","","Get all the right siblngs.",73,[[],["vec",3]]],[11,"verify","","Verifies the proof is correct. The verifier needs to have …",73,[[["option",4],["hashvalue",3]],["result",6]]],[6,"TransactionAccumulatorRangeProof","","",null,null],[6,"TestAccumulatorRangeProof","","",null,null],[3,"SparseMerkleRangeProof","","A proof that can be used authenticate a range of …",null,null],[11,"new","","Constructs a new <code>SparseMerkleRangeProof</code>.",74,[[["vec",3],["hashvalue",3]]]],[11,"right_siblings","","Returns the siblings.",74,[[]]],[3,"TransactionInfoWithProof","","<code>TransactionInfo</code> and a <code>TransactionAccumulatorProof</code> …",null,null],[11,"new","","Constructs a new <code>TransactionWithProof</code> object using given …",75,[[["transactionaccumulatorproof",6],["transactioninfo",3]]]],[11,"ledger_info_to_transaction_info_proof","","Returns the <code>ledger_info_to_transaction_info_proof</code> object …",75,[[],["transactionaccumulatorproof",6]]],[11,"transaction_info","","Returns the <code>transaction_info</code> object in this proof.",75,[[],["transactioninfo",3]]],[11,"verify","","Verifies that the <code>TransactionInfo</code> exists in the ledger …",75,[[["version",6],["ledgerinfo",3]],["result",6]]],[3,"AccountStateProof","","The complete proof used to authenticate the state of an …",null,null],[11,"new","","Constructs a new <code>AccountStateProof</code> using given …",76,[[["transactioninfowithproof",3],["sparsemerkleproof",3],["accountstateblob",3]]]],[11,"transaction_info_with_proof","","Returns the <code>transaction_info_with_proof</code> object in this …",76,[[],["transactioninfowithproof",3]]],[11,"transaction_info_to_account_proof","","Returns the <code>transaction_info_to_account_proof</code> object in …",76,[[],["sparsemerkleproof",3]]],[11,"verify","","Verifies that the state of an account at version …",76,[[["version",6],["ledgerinfo",3],["accountstateblob",3],["option",4],["hashvalue",3]],["result",6]]],[3,"EventProof","","The complete proof used to authenticate a contract event. …",null,null],[11,"new","","Constructs a new <code>EventProof</code> using given …",77,[[["transactioninfowithproof",3],["eventaccumulatorproof",6]]]],[11,"transaction_info_with_proof","","Returns the <code>transaction_info_with_proof</code> object in this …",77,[[],["transactioninfowithproof",3]]],[11,"verify","","Verifies that a given event is correct using provided …",77,[[["version",6],["ledgerinfo",3],["hashvalue",3]],["result",6]]],[3,"TransactionListProof","","The complete proof used to authenticate a list of …",null,null],[11,"new","","Constructs a new <code>TransactionListProof</code> using …",78,[[["transactionaccumulatorrangeproof",6],["vec",3],["transactioninfo",3]]]],[11,"new_empty","","Constructs a proof for an empty list of transactions.",78,[[]]],[11,"transaction_infos","","Returns the list of <code>TransactionInfo</code> objects.",78,[[]]],[11,"left_siblings","","",78,[[],["vec",3]]],[11,"unpack","","",78,[[]]],[11,"verify","","Verifies the list of transactions are correct using the …",78,[[["version",6],["option",4],["ledgerinfo",3]],["result",6]]],[3,"AccumulatorExtensionProof","","A proof that first verifies that establishes correct …",null,null],[11,"new","","",79,[[["vec",3],["leafcount",6],["hashvalue",3]]]],[11,"verify","","",79,[[["hashvalue",3]],[["result",6],["inmemoryaccumulator",3]]]],[0,"position","diem_types::proof","This module provides an abstraction for positioning a …",null,null],[3,"Position","diem_types::proof::position","",null,null],[4,"NodeDirection","","",null,null],[13,"Left","","",80,null],[13,"Right","","",80,null],[11,"level","","What level is this node in the tree, 0 if the node is a …",81,[[]]],[11,"from_level_and_pos","","pos count start from 0 on each level",81,[[]]],[11,"from_inorder_index","","",81,[[]]],[11,"to_inorder_index","","",81,[[]]],[11,"from_postorder_index","","",81,[[],["result",6]]],[11,"to_postorder_index","","",81,[[]]],[11,"parent","","What is the parent of this node?",81,[[]]],[11,"left_child","","What is the left node of this node? Will overflow if the …",81,[[]]],[11,"right_child","","What is the right node of this node? Will overflow if the …",81,[[]]],[11,"is_left_child","","Whether this position is a left child of its parent.  The …",81,[[]]],[11,"is_right_child","","",81,[[]]],[11,"from_leaf_index","","",81,[[]]],[11,"sibling","","This method takes in a node position and return its …",81,[[]]],[11,"root_from_leaf_index","","This method calculates the index of the smallest root …",81,[[]]],[11,"root_from_leaf_count","","",81,[[["leafcount",6]]]],[11,"root_level_from_leaf_count","","",81,[[["leafcount",6]]]],[11,"right_most_child","","Given a node, find its right most child in its subtree. …",81,[[]]],[11,"left_most_child","","Given a node, find its left most child in its subtree …",81,[[]]],[11,"is_freezable","","",81,[[]]],[11,"is_placeholder","","",81,[[]]],[11,"iter_ancestor","","Creates an <code>AncestorIterator</code> using this position.",81,[[],["ancestoriterator",3]]],[11,"iter_ancestor_sibling","","Creates an <code>AncestorSiblingIterator</code> using this position.",81,[[],["ancestorsiblingiterator",3]]],[3,"AncestorSiblingIterator","","<code>AncestorSiblingIterator</code> generates current sibling …",null,null],[3,"AncestorIterator","","<code>AncestorIterator</code> generates current position and moves …",null,null],[3,"FrozenSubTreeIterator","","Traverse leaves from left to right in groups that forms …",null,null],[11,"new","","",82,[[["leafcount",6]]]],[3,"FrozenSubtreeSiblingIterator","","Given an accumulator of size <code>current_num_leaves</code>, …",null,null],[11,"new","","Constructs a new <code>FrozenSubtreeSiblingIterator</code> given the …",83,[[["leafcount",6]]]],[5,"inorder_to_postorder","","Given <code>node</code>, an index in an in-order traversal of a …",null,[[]]],[5,"postorder_to_inorder","","",null,[[]]],[0,"proptest_proof","diem_types::proof","All proofs generated in this module are not valid proofs. …",null,null],[3,"MerkleTreeInternalNode","","",null,null],[11,"new","","",84,[[["hashvalue",3]]]],[6,"SparseMerkleInternalNode","","",null,null],[6,"TransactionAccumulatorInternalNode","","",null,null],[6,"EventAccumulatorInternalNode","","",null,null],[6,"TestAccumulatorInternalNode","","",null,null],[3,"SparseMerkleLeafNode","","",null,null],[3,"SparseMerkleLeafNodeHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[11,"new","","",85,[[["hashvalue",3]]]],[11,"key","","",85,[[],["hashvalue",3]]],[11,"value_hash","","",85,[[],["hashvalue",3]]],[0,"proptest_types","diem_types","",null,null],[3,"AccountInfoUniverse","diem_types::proptest_types","",null,null],[11,"get_validator_set","","",86,[[]]],[3,"RawTransactionGen","","",null,null],[11,"materialize","","",87,[[["index",3],["accountinfouniverse",3]],["rawtransaction",3]]],[3,"SignatureCheckedTransactionGen","","",null,null],[11,"materialize","","",88,[[["index",3],["accountinfouniverse",3]],["signaturecheckedtransaction",3]]],[3,"ContractEventGen","","",null,null],[11,"materialize","","",89,[[["index",3],["accountinfouniverse",3]],["contractevent",4]]],[3,"AccountResourceGen","","",null,null],[11,"materialize","","",90,[[["index",3],["accountinfouniverse",3]],["accountresource",3]]],[3,"BalanceResourceGen","","",null,null],[11,"materialize","","",91,[[],["balanceresource",3]]],[3,"AccountStateBlobGen","","",null,null],[11,"materialize","","",92,[[["index",3],["accountinfouniverse",3]],["accountstateblob",3]]],[11,"strategy_impl","diem_types::event","",49,[[]]],[11,"strategy_impl","diem_types::contract_event","",40,[[]]],[3,"TransactionToCommitGen","diem_types::proptest_types","Represents information already determined for generating …",null,null],[11,"materialize","","Materialize considering current states in the universe.",93,[[["accountinfouniverse",3]],["transactiontocommit",3]]],[3,"BlockInfoGen","","",null,null],[11,"materialize","","",94,[[["accountinfouniverse",3]],["blockinfo",3]]],[3,"LedgerInfoGen","","",null,null],[11,"materialize","","",95,[[["accountinfouniverse",3]],["ledgerinfo",3]]],[3,"LedgerInfoWithSignaturesGen","","",null,null],[11,"materialize","","",96,[[["accountinfouniverse",3]],["ledgerinfowithsignatures",4]]],[5,"arb_json_value","","",null,[[]]],[0,"test_helpers","diem_types","",null,null],[0,"transaction_test_helpers","diem_types::test_helpers","",null,null],[5,"get_test_signed_module_publishing_transaction","diem_types::test_helpers::transaction_test_helpers","",null,[[["module",3],["ed25519privatekey",3],["accountaddress",3],["ed25519publickey",3]],["signedtransaction",3]]],[5,"get_test_signed_transaction","","",null,[[["option",4],["option",4],["script",3],["string",3],["ed25519privatekey",3],["accountaddress",3],["ed25519publickey",3]],["signedtransaction",3]]],[5,"get_test_unchecked_transaction","","",null,[[["option",4],["option",4],["script",3],["string",3],["ed25519privatekey",3],["accountaddress",3],["ed25519publickey",3]],["signedtransaction",3]]],[5,"get_test_signed_txn","","",null,[[["option",4],["script",3],["ed25519privatekey",3],["accountaddress",3],["ed25519publickey",3]],["signedtransaction",3]]],[5,"get_test_unchecked_txn","","",null,[[["option",4],["script",3],["ed25519privatekey",3],["accountaddress",3],["ed25519publickey",3]],["signedtransaction",3]]],[5,"get_test_txn_with_chain_id","","",null,[[["chainid",3],["ed25519privatekey",3],["accountaddress",3],["ed25519publickey",3]],["signedtransaction",3]]],[5,"get_write_set_txn","","",null,[[["writeset",3],["option",4],["ed25519privatekey",3],["accountaddress",3],["ed25519publickey",3]],["signaturecheckedtransaction",3]]],[0,"transaction","diem_types","",null,null],[5,"parse_transaction_argument","diem_types::transaction","",null,[[],[["transactionargument",4],["error",3],["result",4]]]],[4,"TransactionArgument","","",null,null],[13,"U8","","",97,null],[13,"U64","","",97,null],[13,"U128","","",97,null],[13,"Address","","",97,null],[13,"U8Vector","","",97,null],[13,"Bool","","",97,null],[0,"authenticator","","",null,null],[4,"Scheme","diem_types::transaction::authenticator","A <code>TransactionAuthenticator</code> is an an abstraction of a …",null,null],[13,"Ed25519","","",98,null],[13,"MultiEd25519","","",98,null],[4,"TransactionAuthenticator","","",null,null],[13,"Ed25519","","Single signature",99,null],[12,"public_key","diem_types::transaction::authenticator::TransactionAuthenticator","",100,null],[12,"signature","","",100,null],[13,"MultiEd25519","diem_types::transaction::authenticator","K-of-N multisignature",99,null],[12,"public_key","diem_types::transaction::authenticator::TransactionAuthenticator","",101,null],[12,"signature","","",101,null],[11,"scheme","diem_types::transaction::authenticator","Unique identifier for the signature scheme",99,[[],["scheme",4]]],[11,"ed25519","","Create a single-signature ed25519 authenticator",99,[[["ed25519publickey",3],["ed25519signature",3]]]],[11,"multi_ed25519","","Create a multisignature ed25519 authenticator",99,[[["multied25519signature",3],["multied25519publickey",3]]]],[11,"verify","","Return Ok if the authenticator\'s public key matches its …",99,[[],["result",6]]],[11,"public_key_bytes","","Return the raw bytes of <code>self.public_key</code>",99,[[],["vec",3]]],[11,"signature_bytes","","Return the raw bytes of <code>self.signature</code>",99,[[],["vec",3]]],[11,"authentication_key_preimage","","Return an authentication key preimage derived from <code>self</code>\'s …",99,[[],["authenticationkeypreimage",3]]],[11,"authentication_key","","Return an authentication key derived from <code>self</code>\'s public …",99,[[],["authenticationkey",3]]],[3,"AuthenticationKey","","A struct that represents an account authentication key. …",null,null],[3,"AuthenticationKeyHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[11,"new","","Create an authentication key from <code>bytes</code>",102,[[]]],[18,"LENGTH","","The number of bytes in an authentication key.",102,null],[11,"from_preimage","","Create an authentication key from a preimage by taking …",102,[[["authenticationkeypreimage",3]],["authenticationkey",3]]],[11,"ed25519","","Create an authentication key from an Ed25519 public key",102,[[["ed25519publickey",3]],["authenticationkey",3]]],[11,"multi_ed25519","","Create an authentication key from a MultiEd25519 public …",102,[[["multied25519publickey",3]]]],[11,"derived_address","","Return an address derived from the last …",102,[[],["accountaddress",3]]],[11,"prefix","","Return the first AccountAddress::LENGTH bytes of this …",102,[[]]],[11,"to_vec","","Construct a vector from this authentication key",102,[[],["vec",3]]],[11,"random","","Create a random authentication key. For testing only",102,[[]]],[3,"AuthenticationKeyPreimage","","A value that can be hashed to produce an authentication …",null,null],[11,"ed25519","","Construct a preimage from an Ed25519 public key",103,[[["ed25519publickey",3]],["authenticationkeypreimage",3]]],[11,"multi_ed25519","","Construct a preimage from a MultiEd25519 public key",103,[[["multied25519publickey",3]],["authenticationkeypreimage",3]]],[11,"into_vec","","Construct a vector from this authentication key",103,[[],["vec",3]]],[0,"helpers","diem_types::transaction","",null,null],[5,"create_unsigned_txn","diem_types::transaction::helpers","",null,[[["chainid",3],["string",3],["transactionpayload",4],["accountaddress",3]],["rawtransaction",3]]],[8,"TransactionSigner","","",null,null],[10,"sign_txn","","",104,[[["rawtransaction",3]],[["result",6],["signedtransaction",3]]]],[5,"create_user_txn","","Craft a transaction request.",null,[[["chainid",3],["string",3],["transactionpayload",4],["accountaddress",3]],[["result",6],["signedtransaction",3]]]],[0,"metadata","diem_types::transaction","This file implements Diem transaction metadata types to …",null,null],[4,"Metadata","diem_types::transaction::metadata","List of all supported metadata types",null,null],[13,"Undefined","","",105,null],[13,"GeneralMetadata","","",105,null],[13,"TravelRuleMetadata","","",105,null],[13,"UnstructuredBytesMetadata","","",105,null],[13,"RefundMetadata","","",105,null],[13,"CoinTradeMetadata","","",105,null],[4,"GeneralMetadata","","List of supported transaction metadata format versions …",null,null],[13,"GeneralMetadataVersion0","","",106,null],[3,"GeneralMetadataV0","","Transaction metadata for regular addressing with optional …",null,null],[11,"new","","",107,[[["option",4],["vec",3],["option",4]]]],[11,"to_subaddress","","",107,[[],["option",4]]],[11,"from_subaddress","","",107,[[],["option",4]]],[11,"referenced_event","","",107,[[],["option",4]]],[4,"TravelRuleMetadata","","List of supported transaction metadata format versions …",null,null],[13,"TravelRuleMetadataVersion0","","",108,null],[3,"TravelRuleMetadataV0","","Transaction metadata format for transactions subject to …",null,null],[3,"UnstructuredBytesMetadata","","Opaque binary transaction metadata",null,null],[4,"RefundMetadata","","List of supported transaction metadata format versions …",null,null],[13,"RefundMetadataV0","","",109,null],[3,"RefundMetadataV0","","Transaction metadata format for transactions subject to …",null,null],[12,"transaction_version","","Transaction version that is refunded",110,null],[12,"reason","","The reason of the refund",110,null],[4,"RefundReason","","",null,null],[13,"OtherReason","","",111,null],[13,"InvalidSubaddress","","",111,null],[13,"UserInitiatedPartialRefund","","",111,null],[13,"UserInitiatedFullRefund","","",111,null],[4,"CoinTradeMetadata","","List of supported transaction metadata format versions …",null,null],[13,"CoinTradeMetadataV0","","",112,null],[3,"CoinTradeMetadataV0","","Transaction metadata format for coin trades …",null,null],[12,"trade_ids","","A list of trade_ids this transaction wants to settle",113,null],[3,"ChangeSet","diem_types::transaction","",null,null],[3,"Module","","",null,null],[3,"ArgumentABI","","The description of a (regular) argument in a script.",null,null],[3,"Script","","Call a Move script.",null,null],[3,"ScriptABI","","How to call a particular Move script (aka. an \\\"ABI\\\").",null,null],[3,"TypeArgumentABI","","The description of a type argument in a script.",null,null],[17,"SCRIPT_HASH_LENGTH","","",null,null],[6,"Version","","",null,null],[17,"PRE_GENESIS_VERSION","","",null,null],[3,"RawTransaction","","RawTransaction is the portion of a transaction that a …",null,null],[3,"RawTransactionHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[11,"new","","Create a new <code>RawTransaction</code> with a payload.",114,[[["chainid",3],["string",3],["transactionpayload",4],["accountaddress",3]]]],[11,"new_script","","Create a new <code>RawTransaction</code> with a script.",114,[[["chainid",3],["string",3],["script",3],["accountaddress",3]]]],[11,"new_module","","Create a new <code>RawTransaction</code> with a module to publish.",114,[[["chainid",3],["string",3],["module",3],["accountaddress",3]]]],[11,"new_write_set","","",114,[[["chainid",3],["accountaddress",3],["writeset",3]]]],[11,"new_change_set","","",114,[[["chainid",3],["changeset",3],["accountaddress",3]]]],[11,"new_writeset_script","","",114,[[["chainid",3],["accountaddress",3],["script",3]]]],[11,"sign","","Signs the given <code>RawTransaction</code>. Note that this consumes …",114,[[["ed25519privatekey",3],["ed25519publickey",3]],[["result",6],["signaturecheckedtransaction",3]]]],[11,"multi_sign_for_testing","","",114,[[["ed25519privatekey",3],["ed25519publickey",3]],[["result",6],["signaturecheckedtransaction",3]]]],[11,"into_payload","","",114,[[],["transactionpayload",4]]],[11,"format_for_client","","",114,[[],["string",3]]],[11,"sender","","Return the sender of this transaction.",114,[[],["accountaddress",3]]],[4,"TransactionPayload","","Different kinds of transactions.",null,null],[13,"WriteSet","","A system maintenance transaction.",115,null],[13,"Script","","A transaction that executes code.",115,null],[13,"Module","","A transaction that publishes code.",115,null],[11,"should_trigger_reconfiguration_by_default","","",115,[[]]],[4,"WriteSetPayload","","Two different kinds of WriteSet transactions.",null,null],[13,"Direct","","Directly passing in the WriteSet.",116,null],[13,"Script","","Generate the WriteSet by running a script.",116,null],[12,"execute_as","diem_types::transaction::WriteSetPayload","Execute the script as the designated signer.",117,null],[12,"script","","Script body that gets executed.",117,null],[11,"should_trigger_reconfiguration_by_default","diem_types::transaction","",116,[[]]],[3,"SignedTransaction","","A transaction that has been signed.",null,null],[3,"SignatureCheckedTransaction","","A transaction for which the signature has been verified. …",null,null],[11,"into_inner","","Returns the <code>SignedTransaction</code> within.",118,[[],["signedtransaction",3]]],[11,"into_raw_transaction","","Returns the <code>RawTransaction</code> within.",118,[[],["rawtransaction",3]]],[11,"new","","",119,[[["ed25519publickey",3],["rawtransaction",3],["ed25519signature",3]],["signedtransaction",3]]],[11,"new_multisig","","",119,[[["multied25519signature",3],["rawtransaction",3],["multied25519publickey",3]],["signedtransaction",3]]],[11,"authenticator","","",119,[[],["transactionauthenticator",4]]],[11,"sender","","",119,[[],["accountaddress",3]]],[11,"into_raw_transaction","","",119,[[],["rawtransaction",3]]],[11,"sequence_number","","",119,[[]]],[11,"chain_id","","",119,[[],["chainid",3]]],[11,"payload","","",119,[[],["transactionpayload",4]]],[11,"max_gas_amount","","",119,[[]]],[11,"gas_unit_price","","",119,[[]]],[11,"gas_currency_code","","",119,[[]]],[11,"expiration_timestamp_secs","","",119,[[]]],[11,"raw_txn_bytes_len","","",119,[[]]],[11,"check_signature","","Checks that the signature of given transaction. Returns …",119,[[],[["result",6],["signaturecheckedtransaction",3]]]],[11,"format_for_client","","",119,[[],["string",3]]],[3,"TransactionWithProof","","",null,null],[12,"version","","",120,null],[12,"transaction","","",120,null],[12,"events","","",120,null],[12,"proof","","",120,null],[11,"new","","",120,[[["version",6],["transactioninfowithproof",3],["option",4],["vec",3],["transaction",4]]]],[11,"verify_user_txn","","Verifies the transaction with the proof, both carried by …",120,[[["version",6],["accountaddress",3],["ledgerinfo",3]],["result",6]]],[4,"TransactionStatus","","The status of executing a transaction. The VM decides …",null,null],[13,"Discard","","Discard the transaction output",121,null],[13,"Keep","","Keep the transaction output",121,null],[13,"Retry","","Retry the transaction, e.g., after a reconfiguration",121,null],[11,"status","","",121,[[],[["keptvmstatus",4],["result",6],["statuscode",4]]]],[11,"is_discarded","","",121,[[]]],[4,"GovernanceRole","","",null,null],[13,"DiemRoot","","",122,null],[13,"TreasuryCompliance","","",122,null],[13,"Validator","","",122,null],[13,"ValidatorOperator","","",122,null],[13,"DesignatedDealer","","",122,null],[13,"NonGovernanceRole","","",122,null],[11,"from_role_id","","",122,[[]]],[11,"priority","","The higher the number that is returned, the greater …",122,[[]]],[3,"VMValidatorResult","","The result of running the transaction through the VM …",null,null],[11,"new","","",123,[[["option",4],["governancerole",4],["discardedvmstatus",6]]]],[11,"status","","",123,[[],[["discardedvmstatus",6],["option",4]]]],[11,"score","","",123,[[]]],[11,"governance_role","","",123,[[],["governancerole",4]]],[3,"TransactionOutput","","The output of executing a transaction.",null,null],[11,"new","","",124,[[["transactionstatus",4],["vec",3],["contractevent",4],["writeset",3]]]],[11,"into","","",124,[[]]],[11,"write_set","","",124,[[],["writeset",3]]],[11,"events","","",124,[[]]],[11,"gas_used","","",124,[[]]],[11,"status","","",124,[[],["transactionstatus",4]]],[3,"TransactionInfo","","<code>TransactionInfo</code> is the object we store in the transaction …",null,null],[3,"TransactionInfoHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[11,"new","","Constructs a new <code>TransactionInfo</code> object using transaction …",125,[[["keptvmstatus",4],["hashvalue",3]],["transactioninfo",3]]],[11,"transaction_hash","","Returns the hash of this transaction.",125,[[],["hashvalue",3]]],[11,"state_root_hash","","Returns root hash of Sparse Merkle Tree describing the …",125,[[],["hashvalue",3]]],[11,"event_root_hash","","Returns the root hash of Merkle Accumulator storing all …",125,[[],["hashvalue",3]]],[11,"gas_used","","Returns the amount of gas used by this transaction.",125,[[]]],[11,"status","","",125,[[],["keptvmstatus",4]]],[3,"TransactionToCommit","","",null,null],[11,"new","","",126,[[["keptvmstatus",4],["vec",3],["hashmap",3],["contractevent",4],["transaction",4],["accountaddress",3],["accountstateblob",3]]]],[11,"transaction","","",126,[[],["transaction",4]]],[11,"account_states","","",126,[[],["hashmap",3]]],[11,"events","","",126,[[]]],[11,"gas_used","","",126,[[]]],[11,"status","","",126,[[],["keptvmstatus",4]]],[3,"TransactionListWithProof","","The list may have three states:",null,null],[12,"transactions","","",127,null],[12,"events","","",127,null],[12,"first_transaction_version","","",127,null],[12,"proof","","",127,null],[11,"new","","Constructor.",127,[[["version",6],["transactionlistproof",3],["vec",3],["option",4],["vec",3],["transaction",4],["option",4]]]],[11,"new_empty","","Creates an empty transaction list.",127,[[]]],[11,"verify","","Verifies the transaction list with the proofs, both …",127,[[["version",6],["option",4],["ledgerinfo",3]],["result",6]]],[11,"is_empty","","",127,[[]]],[11,"len","","",127,[[]]],[4,"Transaction","","<code>Transaction</code> will be the transaction type used internally …",null,null],[13,"UserTransaction","","Transaction submitted by the user. e.g: P2P payment …",128,null],[13,"GenesisTransaction","","Transaction that applies a WriteSet to the current …",128,null],[13,"BlockMetadata","","Transaction to update the block metadata resource at the …",128,null],[3,"TransactionHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[11,"as_signed_user_txn","","",128,[[],[["result",6],["signedtransaction",3]]]],[11,"format_for_client","","",128,[[],["string",3]]],[0,"trusted_state","diem_types","",null,null],[3,"TrustedState","diem_types::trusted_state","<code>TrustedState</code> keeps track of our latest trusted state, …",null,null],[4,"TrustedStateChange","","<code>TrustedStateChange</code> is the result of attempting to ratchet …",null,null],[13,"Version","","We have a newer <code>TrustedState</code> but it\'s still in the same …",129,null],[12,"new_state","diem_types::trusted_state::TrustedStateChange","",130,null],[13,"Epoch","diem_types::trusted_state","We have a newer <code>TrustedState</code> and there was at least one …",129,null],[12,"new_state","diem_types::trusted_state::TrustedStateChange","",131,null],[12,"latest_epoch_change_li","","",131,null],[13,"NoChange","diem_types::trusted_state","The latest ledger info is at the same version as the …",129,null],[11,"verify_and_ratchet","","Verify and ratchet forward our trusted state using a …",132,[[["ledgerinfowithsignatures",4],["epochchangeproof",3]],[["trustedstatechange",4],["result",6]]]],[11,"latest_version","","",132,[[],["version",6]]],[0,"validator_config","diem_types","",null,null],[3,"ValidatorConfigResource","diem_types::validator_config","",null,null],[12,"validator_config","","",133,null],[12,"delegated_account","","",133,null],[12,"human_name","","",133,null],[3,"ValidatorOperatorConfigResource","","",null,null],[12,"human_name","","",134,null],[3,"ValidatorConfig","","",null,null],[12,"consensus_public_key","","",135,null],[12,"validator_network_addresses","","This is an bcs serialized Vec",135,null],[12,"fullnode_network_addresses","","This is an bcs serialized Vec",135,null],[11,"new","","",135,[[["vec",3],["ed25519publickey",3]]]],[11,"fullnode_network_addresses","","",135,[[],[["result",4],["vec",3],["error",4]]]],[11,"validator_network_addresses","","",135,[[],[["result",4],["error",4],["vec",3]]]],[0,"validator_info","diem_types","",null,null],[3,"ValidatorInfo","diem_types::validator_info","After executing a special transaction indicates a change …",null,null],[11,"new","","",136,[[["accountaddress",3],["validatorconfig",3]]]],[11,"new_with_test_network_keys","","",136,[[["ed25519publickey",3],["accountaddress",3]]]],[11,"account_address","","Returns the id of this validator (hash of the current …",136,[[],["accountaddress",3]]],[11,"consensus_public_key","","Returns the key for validating signed messages from this …",136,[[],["ed25519publickey",3]]],[11,"consensus_voting_power","","Returns the voting power for this validator",136,[[]]],[11,"config","","Returns the validator\'s config",136,[[],["validatorconfig",3]]],[11,"into_config","","Returns the validator\'s config, consuming self",136,[[],["validatorconfig",3]]],[0,"validator_signer","diem_types","",null,null],[0,"proptests","diem_types::validator_signer","",null,null],[5,"arb_signing_key","diem_types::validator_signer::proptests","",null,[[]]],[5,"signer_strategy","","",null,[[]]],[5,"rand_signer","","",null,[[]]],[5,"arb_signer","","",null,[[]]],[5,"mostly_in_keypair_pool","","",null,[[["ed25519privatekey",3],["vec",3]]]],[3,"ValidatorSigner","diem_types::validator_signer","ValidatorSigner associates an author with public and …",null,null],[11,"new","","",137,[[["ed25519privatekey",3],["accountaddress",3]]]],[11,"sign","","Constructs a signature for <code>message</code> using <code>private_key</code>.",137,[[],["ed25519signature",3]]],[11,"author","","Returns the author associated with this signer.",137,[[],["accountaddress",3]]],[11,"public_key","","Returns the public key associated with this signer.",137,[[],["ed25519publickey",3]]],[11,"private_key","","Returns the private key associated with this signer. Only …",137,[[],["ed25519privatekey",3]]],[11,"random","","Generate a random set of public and private keys and …",137,[[]]],[11,"from_int","","For test only - makes signer with nicely looking account …",137,[[]]],[0,"validator_verifier","diem_types","",null,null],[4,"VerifyError","diem_types::validator_verifier","Errors possible during signature verification.",null,null],[13,"UnknownAuthor","","The author for this signature is unknown by this …",138,null],[13,"TooLittleVotingPower","","",138,null],[12,"voting_power","diem_types::validator_verifier::VerifyError","",139,null],[12,"quorum_voting_power","","",139,null],[13,"TooManySignatures","diem_types::validator_verifier","",138,null],[12,"num_of_signatures","diem_types::validator_verifier::VerifyError","",140,null],[12,"num_of_authors","","",140,null],[13,"InvalidSignature","diem_types::validator_verifier","The signature does not match the hash.",138,null],[3,"ValidatorConsensusInfo","","Helper struct to manage validator information for …",null,null],[11,"new","","",141,[[["ed25519publickey",3]]]],[3,"ValidatorVerifier","","Supports validation of signatures for known authors with …",null,null],[11,"new","","Initialize with a map of account address to validator …",142,[[["btreemap",3],["accountaddress",3],["validatorconsensusinfo",3]]]],[11,"new_with_quorum_voting_power","","Initializes a validator verifier with a specified quorum …",142,[[["btreemap",3],["accountaddress",3],["validatorconsensusinfo",3]],["result",6]]],[11,"new_for_testing","","Initializes a validator verifier with a specified quorum …",142,[[["btreemap",3],["accountaddress",3],["validatorconsensusinfo",3]]]],[11,"new_single","","Helper method to initialize with a single author and …",142,[[["ed25519publickey",3],["accountaddress",3]]]],[11,"verify","","Verify the correctness of a signature of a message by a …",142,[[["accountaddress",3],["ed25519signature",3]],[["verifyerror",4],["result",4]]]],[11,"verify_aggregated_struct_signature","","This function will successfully return when at least …",142,[[["btreemap",3]],[["verifyerror",4],["result",4]]]],[11,"batch_verify_aggregated_signatures","","This function will try batch signature verification and …",142,[[["btreemap",3]],[["verifyerror",4],["result",4]]]],[11,"check_voting_power","","Ensure there is at least quorum_voting_power in the …",142,[[],[["verifyerror",4],["result",4]]]],[11,"get_public_key","","Returns the public key for this address.",142,[[["accountaddress",3]],[["ed25519publickey",3],["option",4]]]],[11,"get_voting_power","","Returns the voting power for this address.",142,[[["accountaddress",3]],["option",4]]],[11,"get_ordered_account_addresses_iter","","Returns an ordered list of account addresses as an …",142,[[]]],[11,"len","","Returns the number of authors to be validated.",142,[[]]],[11,"is_empty","","Is there at least one author?",142,[[]]],[11,"quorum_voting_power","","Returns quorum voting power.",142,[[]]],[5,"random_validator_verifier","","Helper function to get random validator signers and a …",null,[[["option",4]]]],[0,"vm_status","diem_types","",null,null],[0,"known_locations","diem_types::vm_status","",null,null],[17,"ACCOUNT_MODULE_NAME","diem_types::vm_status::known_locations","The name of the Account module.",null,null],[7,"ACCOUNT_MODULE_IDENTIFIER","","The Identifier for the Account module.",null,null],[7,"ACCOUNT_MODULE","","The ModuleId for the Account module.",null,null],[5,"account_module_abort","","Location for an abort in the Account module",null,[[],["abortlocation",4]]],[17,"DIEM_MODULE_NAME","","The name of the Diem module.",null,null],[7,"DIEM_MODULE_IDENTIFIER","","The Identifier for the Diem module.",null,null],[7,"DIEM_MODULE","","The ModuleId for the Diem module.",null,null],[5,"diem_module_abort","","",null,[[],["abortlocation",4]]],[17,"DESIGNATED_DEALER_MODULE_NAME","","The name of the Designated Dealer module.",null,null],[7,"DESIGNATED_DEALER_MODULE_IDENTIFIER","","The Identifier for the Designated Dealer module.",null,null],[7,"DESIGNATED_DEALER_MODULE","","The ModuleId for the Designated Dealer module.",null,null],[5,"designated_dealer_module_abort","","",null,[[],["abortlocation",4]]],[0,"sub_status","diem_types::vm_status","",null,null],[17,"NFE_VECTOR_ERROR_BASE","diem_types::vm_status::sub_status","",null,null],[17,"NFE_BCS_SERIALIZATION_FAILURE","","",null,null],[4,"AbortLocation","diem_types::vm_status","An <code>AbortLocation</code> specifies where a Move program <code>abort</code> …",null,null],[13,"Module","","Indicates <code>abort</code> occurred in the specified module",143,null],[13,"Script","","Indicates the <code>abort</code> occurred in a script",143,null],[6,"DiscardedVMStatus","","",null,null],[4,"KeptVMStatus","","",null,null],[13,"Executed","","",144,null],[13,"OutOfGas","","",144,null],[13,"MoveAbort","","",144,null],[13,"ExecutionFailure","","",144,null],[12,"location","diem_types::vm_status::KeptVMStatus","",145,null],[12,"function","","",145,null],[12,"code_offset","","",145,null],[13,"MiscellaneousError","diem_types::vm_status","",144,null],[4,"StatusCode","","We don\'t derive Arbitrary on this enum because it is too …",null,null],[13,"UNKNOWN_VALIDATION_STATUS","","",146,null],[13,"INVALID_SIGNATURE","","",146,null],[13,"INVALID_AUTH_KEY","","",146,null],[13,"SEQUENCE_NUMBER_TOO_OLD","","",146,null],[13,"SEQUENCE_NUMBER_TOO_NEW","","",146,null],[13,"INSUFFICIENT_BALANCE_FOR_TRANSACTION_FEE","","",146,null],[13,"TRANSACTION_EXPIRED","","",146,null],[13,"SENDING_ACCOUNT_DOES_NOT_EXIST","","",146,null],[13,"REJECTED_WRITE_SET","","",146,null],[13,"INVALID_WRITE_SET","","",146,null],[13,"EXCEEDED_MAX_TRANSACTION_SIZE","","",146,null],[13,"UNKNOWN_SCRIPT","","",146,null],[13,"UNKNOWN_MODULE","","",146,null],[13,"MAX_GAS_UNITS_EXCEEDS_MAX_GAS_UNITS_BOUND","","",146,null],[13,"MAX_GAS_UNITS_BELOW_MIN_TRANSACTION_GAS_UNITS","","",146,null],[13,"GAS_UNIT_PRICE_BELOW_MIN_BOUND","","",146,null],[13,"GAS_UNIT_PRICE_ABOVE_MAX_BOUND","","",146,null],[13,"INVALID_GAS_SPECIFIER","","",146,null],[13,"SENDING_ACCOUNT_FROZEN","","",146,null],[13,"UNABLE_TO_DESERIALIZE_ACCOUNT","","",146,null],[13,"CURRENCY_INFO_DOES_NOT_EXIST","","",146,null],[13,"INVALID_MODULE_PUBLISHER","","",146,null],[13,"NO_ACCOUNT_ROLE","","",146,null],[13,"BAD_CHAIN_ID","","",146,null],[13,"SEQUENCE_NUMBER_TOO_BIG","","",146,null],[13,"BAD_TRANSACTION_FEE_CURRENCY","","",146,null],[13,"UNKNOWN_VERIFICATION_ERROR","","",146,null],[13,"INDEX_OUT_OF_BOUNDS","","",146,null],[13,"INVALID_SIGNATURE_TOKEN","","",146,null],[13,"RECURSIVE_STRUCT_DEFINITION","","",146,null],[13,"FIELD_MISSING_TYPE_ABILITY","","",146,null],[13,"INVALID_FALL_THROUGH","","",146,null],[13,"NEGATIVE_STACK_SIZE_WITHIN_BLOCK","","",146,null],[13,"INVALID_MAIN_FUNCTION_SIGNATURE","","",146,null],[13,"DUPLICATE_ELEMENT","","",146,null],[13,"INVALID_MODULE_HANDLE","","",146,null],[13,"UNIMPLEMENTED_HANDLE","","",146,null],[13,"LOOKUP_FAILED","","",146,null],[13,"TYPE_MISMATCH","","",146,null],[13,"MISSING_DEPENDENCY","","",146,null],[13,"POP_WITHOUT_DROP_ABILITY","","",146,null],[13,"BR_TYPE_MISMATCH_ERROR","","",146,null],[13,"ABORT_TYPE_MISMATCH_ERROR","","",146,null],[13,"STLOC_TYPE_MISMATCH_ERROR","","",146,null],[13,"STLOC_UNSAFE_TO_DESTROY_ERROR","","",146,null],[13,"UNSAFE_RET_LOCAL_OR_RESOURCE_STILL_BORROWED","","",146,null],[13,"RET_TYPE_MISMATCH_ERROR","","",146,null],[13,"RET_BORROWED_MUTABLE_REFERENCE_ERROR","","",146,null],[13,"FREEZEREF_TYPE_MISMATCH_ERROR","","",146,null],[13,"FREEZEREF_EXISTS_MUTABLE_BORROW_ERROR","","",146,null],[13,"BORROWFIELD_TYPE_MISMATCH_ERROR","","",146,null],[13,"BORROWFIELD_BAD_FIELD_ERROR","","",146,null],[13,"BORROWFIELD_EXISTS_MUTABLE_BORROW_ERROR","","",146,null],[13,"COPYLOC_UNAVAILABLE_ERROR","","",146,null],[13,"COPYLOC_WITHOUT_COPY_ABILITY","","",146,null],[13,"COPYLOC_EXISTS_BORROW_ERROR","","",146,null],[13,"MOVELOC_UNAVAILABLE_ERROR","","",146,null],[13,"MOVELOC_EXISTS_BORROW_ERROR","","",146,null],[13,"BORROWLOC_REFERENCE_ERROR","","",146,null],[13,"BORROWLOC_UNAVAILABLE_ERROR","","",146,null],[13,"BORROWLOC_EXISTS_BORROW_ERROR","","",146,null],[13,"CALL_TYPE_MISMATCH_ERROR","","",146,null],[13,"CALL_BORROWED_MUTABLE_REFERENCE_ERROR","","",146,null],[13,"PACK_TYPE_MISMATCH_ERROR","","",146,null],[13,"UNPACK_TYPE_MISMATCH_ERROR","","",146,null],[13,"READREF_TYPE_MISMATCH_ERROR","","",146,null],[13,"READREF_WITHOUT_COPY_ABILITY","","",146,null],[13,"READREF_EXISTS_MUTABLE_BORROW_ERROR","","",146,null],[13,"WRITEREF_TYPE_MISMATCH_ERROR","","",146,null],[13,"WRITEREF_WITHOUT_DROP_ABILITY","","",146,null],[13,"WRITEREF_EXISTS_BORROW_ERROR","","",146,null],[13,"WRITEREF_NO_MUTABLE_REFERENCE_ERROR","","",146,null],[13,"INTEGER_OP_TYPE_MISMATCH_ERROR","","",146,null],[13,"BOOLEAN_OP_TYPE_MISMATCH_ERROR","","",146,null],[13,"EQUALITY_OP_TYPE_MISMATCH_ERROR","","",146,null],[13,"EXISTS_WITHOUT_KEY_ABILITY_OR_BAD_ARGUMENT","","",146,null],[13,"BORROWGLOBAL_TYPE_MISMATCH_ERROR","","",146,null],[13,"BORROWGLOBAL_WITHOUT_KEY_ABILITY","","",146,null],[13,"MOVEFROM_TYPE_MISMATCH_ERROR","","",146,null],[13,"MOVEFROM_WITHOUT_KEY_ABILITY","","",146,null],[13,"MOVETO_TYPE_MISMATCH_ERROR","","",146,null],[13,"MOVETO_WITHOUT_KEY_ABILITY","","",146,null],[13,"MODULE_ADDRESS_DOES_NOT_MATCH_SENDER","","",146,null],[13,"NO_MODULE_HANDLES","","",146,null],[13,"POSITIVE_STACK_SIZE_AT_BLOCK_END","","",146,null],[13,"MISSING_ACQUIRES_ANNOTATION","","",146,null],[13,"EXTRANEOUS_ACQUIRES_ANNOTATION","","",146,null],[13,"DUPLICATE_ACQUIRES_ANNOTATION","","",146,null],[13,"INVALID_ACQUIRES_ANNOTATION","","",146,null],[13,"GLOBAL_REFERENCE_ERROR","","",146,null],[13,"CONSTRAINT_NOT_SATISFIED","","",146,null],[13,"NUMBER_OF_TYPE_ARGUMENTS_MISMATCH","","",146,null],[13,"LOOP_IN_INSTANTIATION_GRAPH","","",146,null],[13,"ZERO_SIZED_STRUCT","","",146,null],[13,"LINKER_ERROR","","",146,null],[13,"INVALID_CONSTANT_TYPE","","",146,null],[13,"MALFORMED_CONSTANT_DATA","","",146,null],[13,"EMPTY_CODE_UNIT","","",146,null],[13,"INVALID_LOOP_SPLIT","","",146,null],[13,"INVALID_LOOP_BREAK","","",146,null],[13,"INVALID_LOOP_CONTINUE","","",146,null],[13,"UNSAFE_RET_UNUSED_VALUES_WITHOUT_DROP","","",146,null],[13,"TOO_MANY_LOCALS","","",146,null],[13,"GENERIC_MEMBER_OPCODE_MISMATCH","","",146,null],[13,"FUNCTION_RESOLUTION_FAILURE","","",146,null],[13,"INVALID_OPERATION_IN_SCRIPT","","",146,null],[13,"DUPLICATE_MODULE_NAME","","",146,null],[13,"BACKWARD_INCOMPATIBLE_MODULE_UPDATE","","",146,null],[13,"CYCLIC_MODULE_DEPENDENCY","","",146,null],[13,"NUMBER_OF_ARGUMENTS_MISMATCH","","",146,null],[13,"INVALID_PARAM_TYPE_FOR_DESERIALIZATION","","",146,null],[13,"FAILED_TO_DESERIALIZE_ARGUMENT","","",146,null],[13,"NUMBER_OF_SIGNER_ARGUMENTS_MISMATCH","","",146,null],[13,"CALLED_SCRIPT_VISIBLE_FROM_NON_SCRIPT_VISIBLE","","",146,null],[13,"EXECUTE_SCRIPT_FUNCTION_CALLED_ON_NON_SCRIPT_VISIBLE","","",146,null],[13,"INVALID_FRIEND_DECL_WITH_SELF","","",146,null],[13,"INVALID_FRIEND_DECL_WITH_MODULES_OUTSIDE_ACCOUNT_ADDRESS","","",146,null],[13,"INVALID_FRIEND_DECL_WITH_MODULES_IN_DEPENDENCIES","","",146,null],[13,"CYCLIC_MODULE_FRIENDSHIP","","",146,null],[13,"UNKNOWN_INVARIANT_VIOLATION_ERROR","","",146,null],[13,"EMPTY_VALUE_STACK","","",146,null],[13,"PC_OVERFLOW","","",146,null],[13,"VERIFICATION_ERROR","","",146,null],[13,"STORAGE_ERROR","","",146,null],[13,"INTERNAL_TYPE_ERROR","","",146,null],[13,"EVENT_KEY_MISMATCH","","",146,null],[13,"UNREACHABLE","","",146,null],[13,"VM_STARTUP_FAILURE","","",146,null],[13,"UNEXPECTED_ERROR_FROM_KNOWN_MOVE_FUNCTION","","",146,null],[13,"VERIFIER_INVARIANT_VIOLATION","","",146,null],[13,"UNEXPECTED_VERIFIER_ERROR","","",146,null],[13,"UNEXPECTED_DESERIALIZATION_ERROR","","",146,null],[13,"FAILED_TO_SERIALIZE_WRITE_SET_CHANGES","","",146,null],[13,"FAILED_TO_DESERIALIZE_RESOURCE","","",146,null],[13,"TYPE_RESOLUTION_FAILURE","","",146,null],[13,"UNKNOWN_BINARY_ERROR","","",146,null],[13,"MALFORMED","","",146,null],[13,"BAD_MAGIC","","",146,null],[13,"UNKNOWN_VERSION","","",146,null],[13,"UNKNOWN_TABLE_TYPE","","",146,null],[13,"UNKNOWN_SIGNATURE_TYPE","","",146,null],[13,"UNKNOWN_SERIALIZED_TYPE","","",146,null],[13,"UNKNOWN_OPCODE","","",146,null],[13,"BAD_HEADER_TABLE","","",146,null],[13,"UNEXPECTED_SIGNATURE_TYPE","","",146,null],[13,"DUPLICATE_TABLE","","",146,null],[13,"UNKNOWN_ABILITY","","",146,null],[13,"UNKNOWN_NATIVE_STRUCT_FLAG","","",146,null],[13,"BAD_U64","","",146,null],[13,"BAD_U128","","",146,null],[13,"VALUE_SERIALIZATION_ERROR","","",146,null],[13,"VALUE_DESERIALIZATION_ERROR","","",146,null],[13,"CODE_DESERIALIZATION_ERROR","","",146,null],[13,"INVALID_FLAG_BITS","","",146,null],[13,"UNKNOWN_RUNTIME_STATUS","","",146,null],[13,"EXECUTED","","",146,null],[13,"OUT_OF_GAS","","",146,null],[13,"RESOURCE_DOES_NOT_EXIST","","",146,null],[13,"RESOURCE_ALREADY_EXISTS","","",146,null],[13,"MISSING_DATA","","",146,null],[13,"DATA_FORMAT_ERROR","","",146,null],[13,"ABORTED","","",146,null],[13,"ARITHMETIC_ERROR","","",146,null],[13,"EXECUTION_STACK_OVERFLOW","","",146,null],[13,"CALL_STACK_OVERFLOW","","",146,null],[13,"VM_MAX_TYPE_DEPTH_REACHED","","",146,null],[13,"VM_MAX_VALUE_DEPTH_REACHED","","",146,null],[13,"UNKNOWN_STATUS","","",146,null],[4,"StatusType","","A status type is one of 5 different variants, along with …",null,null],[13,"Validation","","",147,null],[13,"Verification","","",147,null],[13,"InvariantViolation","","",147,null],[13,"Deserialization","","",147,null],[13,"Execution","","",147,null],[13,"Unknown","","",147,null],[4,"VMStatus","","A <code>VMStatus</code> is represented as either",null,null],[13,"Executed","","The VM status corresponding to an EXECUTED status code",148,null],[13,"Error","","Indicates an error from the VM, e.g. OUT_OF_GAS, …",148,null],[13,"MoveAbort","","Indicates an <code>abort</code> from inside Move code. Contains the …",148,null],[13,"ExecutionFailure","","Indicates an failure from inside Move code, where the VM …",148,null],[12,"status_code","diem_types::vm_status::VMStatus","",149,null],[12,"location","","",149,null],[12,"function","","",149,null],[12,"code_offset","","",149,null],[0,"waypoint","diem_types","",null,null],[3,"Waypoint","diem_types::waypoint","Waypoint keeps information about the LedgerInfo on a …",null,null],[11,"new_any","","Generate a new waypoint given any LedgerInfo.",150,[[["ledgerinfo",3]]]],[11,"new_epoch_boundary","","Generates a new waypoint given the epoch change …",150,[[["ledgerinfo",3]],["result",6]]],[11,"version","","",150,[[],["version",6]]],[11,"value","","",150,[[],["hashvalue",3]]],[11,"verify","","Errors in case the given ledger info does not match the …",150,[[["ledgerinfo",3]],["result",6]]],[3,"Ledger2WaypointConverterHasher","","Cryptographic hasher for an BCS-serializable #item",null,null],[0,"write_set","diem_types","For each transaction the VM executes, the VM will output …",null,null],[4,"WriteOp","diem_types::write_set","",null,null],[13,"Deletion","","",151,null],[13,"Value","","",151,null],[11,"is_deletion","","",151,[[]]],[3,"WriteSet","","<code>WriteSet</code> contains all access paths that one transaction …",null,null],[11,"is_empty","","",152,[[]]],[11,"iter","","",152,[[],["iter",3]]],[11,"into_mut","","",152,[[],["writesetmut",3]]],[3,"WriteSetMut","","A mutable version of <code>WriteSet</code>.",null,null],[11,"new","","",153,[[["vec",3]]]],[11,"push","","",153,[[]]],[11,"is_empty","","",153,[[]]],[11,"freeze","","",153,[[],[["result",6],["writeset",3]]]],[11,"from","diem_types::account_address","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"to_string","","",154,[[],["string",3]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"test_only_hash","","",154,[[],["hashvalue",3]]],[11,"vzip","","",154,[[]]],[11,"encode_hex","","",154,[[]]],[11,"encode_hex_upper","","",154,[[]]],[11,"equivalent","","",154,[[]]],[11,"from","diem_types::access_path","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"equivalent","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"vzip","","",1,[[]]],[11,"equivalent","","",1,[[]]],[11,"from","diem_types::account_config::events::admin_transaction","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"vzip","","",3,[[]]],[11,"from","diem_types::account_config::events::base_url_rotation","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"test_only_hash","","",4,[[],["hashvalue",3]]],[11,"vzip","","",4,[[]]],[11,"from","diem_types::account_config::events::burn","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"from","diem_types::account_config::events::cancel_burn","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"test_only_hash","","",6,[[],["hashvalue",3]]],[11,"vzip","","",6,[[]]],[11,"from","diem_types::account_config::events::compliance_key_rotation","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"test_only_hash","","",7,[[],["hashvalue",3]]],[11,"vzip","","",7,[[]]],[11,"from","diem_types::account_config::events::create_account","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"test_only_hash","","",8,[[],["hashvalue",3]]],[11,"vzip","","",8,[[]]],[11,"from","diem_types::account_config::events::exchange_rate_update","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"test_only_hash","","",9,[[],["hashvalue",3]]],[11,"vzip","","",9,[[]]],[11,"from","diem_types::account_config::events::mint","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"test_only_hash","","",10,[[],["hashvalue",3]]],[11,"vzip","","",10,[[]]],[11,"from","diem_types::account_config::events::new_block","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"test_only_hash","","",11,[[],["hashvalue",3]]],[11,"vzip","","",11,[[]]],[11,"from","diem_types::account_config::events::new_epoch","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"test_only_hash","","",12,[[],["hashvalue",3]]],[11,"vzip","","",12,[[]]],[11,"from","diem_types::account_config::events::preburn","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"test_only_hash","","",13,[[],["hashvalue",3]]],[11,"vzip","","",13,[[]]],[11,"from","diem_types::account_config::events::received_mint","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"test_only_hash","","",14,[[],["hashvalue",3]]],[11,"vzip","","",14,[[]]],[11,"from","diem_types::account_config::events::received_payment","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"test_only_hash","","",15,[[],["hashvalue",3]]],[11,"vzip","","",15,[[]]],[11,"from","diem_types::account_config::events::sent_payment","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"test_only_hash","","",16,[[],["hashvalue",3]]],[11,"vzip","","",16,[[]]],[11,"from","diem_types::account_config::resources::account","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"test_only_hash","","",17,[[],["hashvalue",3]]],[11,"vzip","","",17,[[]]],[11,"from","diem_types::account_config::resources::balance","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"test_only_hash","","",18,[[],["hashvalue",3]]],[11,"vzip","","",18,[[]]],[11,"from","diem_types::account_config::resources::chain_id","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","diem_types::account_config::resources::currency_info","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"test_only_hash","","",20,[[],["hashvalue",3]]],[11,"vzip","","",20,[[]]],[11,"from","diem_types::account_config::resources::designated_dealer","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"test_only_hash","","",21,[[],["hashvalue",3]]],[11,"vzip","","",21,[[]]],[11,"from","diem_types::account_config::resources::dual_attestation","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"test_only_hash","","",22,[[],["hashvalue",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"test_only_hash","","",23,[[],["hashvalue",3]]],[11,"vzip","","",23,[[]]],[11,"from","diem_types::account_config::resources::freezing_bit","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"test_only_hash","","",24,[[],["hashvalue",3]]],[11,"vzip","","",24,[[]]],[11,"from","diem_types::account_config::resources::key_rotation_capability","",155,[[]]],[11,"into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"test_only_hash","","",155,[[],["hashvalue",3]]],[11,"vzip","","",155,[[]]],[11,"from","diem_types::account_config::resources::preburn_balance","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"test_only_hash","","",25,[[],["hashvalue",3]]],[11,"vzip","","",25,[[]]],[11,"from","diem_types::account_config::resources::role","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"test_only_hash","","",26,[[],["hashvalue",3]]],[11,"vzip","","",26,[[]]],[11,"from","diem_types::account_config::resources::role_id","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"test_only_hash","","",29,[[],["hashvalue",3]]],[11,"vzip","","",29,[[]]],[11,"from","diem_types::account_config::resources::vasp","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"test_only_hash","","",30,[[],["hashvalue",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"test_only_hash","","",31,[[],["hashvalue",3]]],[11,"vzip","","",31,[[]]],[11,"from","diem_types::account_config::resources::withdraw_capability","",156,[[]]],[11,"into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"test_only_hash","","",156,[[],["hashvalue",3]]],[11,"vzip","","",156,[[]]],[11,"from","diem_types::account_state","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"test_only_hash","","",32,[[],["hashvalue",3]]],[11,"vzip","","",32,[[]]],[11,"from","diem_types::account_state_blob","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"test_only_hash","","",157,[[],["hashvalue",3]]],[11,"vzip","","",157,[[]]],[11,"encode_hex","","",157,[[]]],[11,"encode_hex_upper","","",157,[[]]],[11,"equivalent","","",157,[[]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"vzip","","",158,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"test_only_hash","","",33,[[],["hashvalue",3]]],[11,"vzip","","",33,[[]]],[11,"equivalent","","",33,[[]]],[11,"from","diem_types::block_info","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"test_only_hash","","",34,[[],["hashvalue",3]]],[11,"vzip","","",34,[[]]],[11,"equivalent","","",34,[[]]],[11,"from","diem_types::block_metadata","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"test_only_hash","","",35,[[],["hashvalue",3]]],[11,"vzip","","",35,[[]]],[11,"equivalent","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"test_only_hash","","",36,[[],["hashvalue",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"test_only_hash","","",37,[[],["hashvalue",3]]],[11,"vzip","","",37,[[]]],[11,"from","diem_types::chain_id","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"to_string","","",38,[[],["string",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"to_string","","",39,[[],["string",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"test_only_hash","","",39,[[],["hashvalue",3]]],[11,"vzip","","",39,[[]]],[11,"equivalent","","",39,[[]]],[11,"from","diem_types::contract_event","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"test_only_hash","","",40,[[],["hashvalue",3]]],[11,"vzip","","",40,[[]]],[11,"equivalent","","",40,[[]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"vzip","","",159,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"test_only_hash","","",41,[[],["hashvalue",3]]],[11,"vzip","","",41,[[]]],[11,"equivalent","","",41,[[]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"vzip","","",160,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"to_string","","",42,[[],["string",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"test_only_hash","","",42,[[],["hashvalue",3]]],[11,"vzip","","",42,[[]]],[11,"equivalent","","",42,[[]]],[11,"from","diem_types::diem_timestamp","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"test_only_hash","","",43,[[],["hashvalue",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"test_only_hash","","",44,[[],["hashvalue",3]]],[11,"vzip","","",44,[[]]],[11,"from","diem_types::epoch_change","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"test_only_hash","","",46,[[],["hashvalue",3]]],[11,"vzip","","",46,[[]]],[11,"equivalent","","",46,[[]]],[11,"from","diem_types::epoch_state","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"test_only_hash","","",47,[[],["hashvalue",3]]],[11,"vzip","","",47,[[]]],[11,"equivalent","","",47,[[]]],[11,"from","diem_types::event","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"to_string","","",48,[[],["string",3]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"test_only_hash","","",48,[[],["hashvalue",3]]],[11,"vzip","","",48,[[]]],[11,"equivalent","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"test_only_hash","","",49,[[],["hashvalue",3]]],[11,"vzip","","",49,[[]]],[11,"equivalent","","",49,[[]]],[11,"from","diem_types::ledger_info","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"test_only_hash","","",50,[[],["hashvalue",3]]],[11,"vzip","","",50,[[]]],[11,"equivalent","","",50,[[]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"vzip","","",161,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"to_string","","",51,[[],["string",3]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"test_only_hash","","",51,[[],["hashvalue",3]]],[11,"vzip","","",51,[[]]],[11,"equivalent","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"to_string","","",52,[[],["string",3]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"test_only_hash","","",52,[[],["hashvalue",3]]],[11,"vzip","","",52,[[]]],[11,"equivalent","","",52,[[]]],[11,"from","diem_types::mempool_status","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"equivalent","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"to_string","","",54,[[],["string",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"equivalent","","",54,[[]]],[11,"from","diem_types::network_address::encrypted","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"test_only_hash","","",56,[[],["hashvalue",3]]],[11,"vzip","","",56,[[]]],[11,"equivalent","","",56,[[]]],[11,"from","diem_types::network_address","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"to_string","","",59,[[],["string",3]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"test_only_hash","","",59,[[],["hashvalue",3]]],[11,"vzip","","",59,[[]]],[11,"equivalent","","",59,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"to_string","","",57,[[],["string",3]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"test_only_hash","","",57,[[],["hashvalue",3]]],[11,"vzip","","",57,[[]]],[11,"equivalent","","",57,[[]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"to_string","","",162,[[],["string",3]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"test_only_hash","","",162,[[],["hashvalue",3]]],[11,"vzip","","",162,[[]]],[11,"equivalent","","",162,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_string","","",58,[[],["string",3]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_string","","",163,[[],["string",3]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"vzip","","",163,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"equivalent","","",60,[[]]],[11,"from","diem_types::on_chain_config","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"test_only_hash","","",61,[[],["hashvalue",3]]],[11,"vzip","","",61,[[]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"to_string","","",164,[[],["string",3]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"test_only_hash","","",164,[[],["hashvalue",3]]],[11,"vzip","","",164,[[]]],[11,"equivalent","","",164,[[]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"to_string","","",165,[[],["string",3]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"test_only_hash","","",165,[[],["hashvalue",3]]],[11,"vzip","","",165,[[]]],[11,"equivalent","","",165,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"test_only_hash","","",62,[[],["hashvalue",3]]],[11,"vzip","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"test_only_hash","","",63,[[],["hashvalue",3]]],[11,"vzip","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"to_string","","",64,[[],["string",3]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"equivalent","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"to_string","","",65,[[],["string",3]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"test_only_hash","","",68,[[],["hashvalue",3]]],[11,"vzip","","",68,[[]]],[11,"from","diem_types::proof::accumulator","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"from","diem_types::proof::definition","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"test_only_hash","","",70,[[],["hashvalue",3]]],[11,"vzip","","",70,[[]]],[11,"equivalent","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"test_only_hash","","",71,[[],["hashvalue",3]]],[11,"vzip","","",71,[[]]],[11,"equivalent","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"test_only_hash","","",72,[[],["hashvalue",3]]],[11,"vzip","","",72,[[]]],[11,"equivalent","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"test_only_hash","","",73,[[],["hashvalue",3]]],[11,"vzip","","",73,[[]]],[11,"equivalent","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"test_only_hash","","",74,[[],["hashvalue",3]]],[11,"vzip","","",74,[[]]],[11,"equivalent","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"test_only_hash","","",75,[[],["hashvalue",3]]],[11,"vzip","","",75,[[]]],[11,"equivalent","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"test_only_hash","","",76,[[],["hashvalue",3]]],[11,"vzip","","",76,[[]]],[11,"equivalent","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"test_only_hash","","",77,[[],["hashvalue",3]]],[11,"vzip","","",77,[[]]],[11,"equivalent","","",77,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"test_only_hash","","",78,[[],["hashvalue",3]]],[11,"vzip","","",78,[[]]],[11,"equivalent","","",78,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"test_only_hash","","",79,[[],["hashvalue",3]]],[11,"vzip","","",79,[[]]],[11,"equivalent","","",79,[[]]],[11,"from","diem_types::proof::position","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"to_string","","",81,[[],["string",3]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"equivalent","","",81,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"equivalent","","",80,[[]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"into_iter","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"vzip","","",166,[[]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"into_iter","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"vzip","","",167,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"into_iter","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"into_iter","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"from","diem_types::proof","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"test_only_hash","","",85,[[],["hashvalue",3]]],[11,"vzip","","",85,[[]]],[11,"equivalent","","",85,[[]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"vzip","","",168,[[]]],[11,"from","diem_types::proptest_types","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"vzip","","",96,[[]]],[11,"from","diem_types::transaction","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"test_only_hash","","",97,[[],["hashvalue",3]]],[11,"vzip","","",97,[[]]],[11,"equivalent","","",97,[[]]],[11,"from","diem_types::transaction::authenticator","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_string","","",98,[[],["string",3]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"to_string","","",99,[[],["string",3]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"test_only_hash","","",99,[[],["hashvalue",3]]],[11,"vzip","","",99,[[]]],[11,"equivalent","","",99,[[]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"to_string","","",102,[[],["string",3]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"test_only_hash","","",102,[[],["hashvalue",3]]],[11,"vzip","","",102,[[]]],[11,"encode_hex","","",102,[[]]],[11,"encode_hex_upper","","",102,[[]]],[11,"equivalent","","",102,[[]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"vzip","","",169,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"vzip","","",103,[[]]],[11,"from","diem_types::transaction","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"test_only_hash","","",170,[[],["hashvalue",3]]],[11,"vzip","","",170,[[]]],[11,"equivalent","","",170,[[]]],[11,"from","diem_types::transaction::metadata","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"test_only_hash","","",105,[[],["hashvalue",3]]],[11,"vzip","","",105,[[]]],[11,"equivalent","","",105,[[]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"test_only_hash","","",106,[[],["hashvalue",3]]],[11,"vzip","","",106,[[]]],[11,"equivalent","","",106,[[]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"test_only_hash","","",107,[[],["hashvalue",3]]],[11,"vzip","","",107,[[]]],[11,"equivalent","","",107,[[]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"test_only_hash","","",108,[[],["hashvalue",3]]],[11,"vzip","","",108,[[]]],[11,"equivalent","","",108,[[]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"test_only_hash","","",171,[[],["hashvalue",3]]],[11,"vzip","","",171,[[]]],[11,"equivalent","","",171,[[]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"test_only_hash","","",172,[[],["hashvalue",3]]],[11,"vzip","","",172,[[]]],[11,"equivalent","","",172,[[]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"test_only_hash","","",109,[[],["hashvalue",3]]],[11,"vzip","","",109,[[]]],[11,"equivalent","","",109,[[]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"test_only_hash","","",110,[[],["hashvalue",3]]],[11,"vzip","","",110,[[]]],[11,"equivalent","","",110,[[]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"test_only_hash","","",111,[[],["hashvalue",3]]],[11,"vzip","","",111,[[]]],[11,"equivalent","","",111,[[]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"test_only_hash","","",112,[[],["hashvalue",3]]],[11,"vzip","","",112,[[]]],[11,"equivalent","","",112,[[]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"test_only_hash","","",113,[[],["hashvalue",3]]],[11,"vzip","","",113,[[]]],[11,"equivalent","","",113,[[]]],[11,"from","diem_types::transaction","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"test_only_hash","","",173,[[],["hashvalue",3]]],[11,"vzip","","",173,[[]]],[11,"equivalent","","",173,[[]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"test_only_hash","","",174,[[],["hashvalue",3]]],[11,"vzip","","",174,[[]]],[11,"equivalent","","",174,[[]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"test_only_hash","","",175,[[],["hashvalue",3]]],[11,"vzip","","",175,[[]]],[11,"equivalent","","",175,[[]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"test_only_hash","","",176,[[],["hashvalue",3]]],[11,"vzip","","",176,[[]]],[11,"equivalent","","",176,[[]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"test_only_hash","","",177,[[],["hashvalue",3]]],[11,"vzip","","",177,[[]]],[11,"equivalent","","",177,[[]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"test_only_hash","","",114,[[],["hashvalue",3]]],[11,"vzip","","",114,[[]]],[11,"equivalent","","",114,[[]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"vzip","","",178,[[]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"test_only_hash","","",115,[[],["hashvalue",3]]],[11,"vzip","","",115,[[]]],[11,"equivalent","","",115,[[]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"test_only_hash","","",116,[[],["hashvalue",3]]],[11,"vzip","","",116,[[]]],[11,"equivalent","","",116,[[]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"test_only_hash","","",119,[[],["hashvalue",3]]],[11,"vzip","","",119,[[]]],[11,"equivalent","","",119,[[]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"vzip","","",118,[[]]],[11,"equivalent","","",118,[[]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"test_only_hash","","",120,[[],["hashvalue",3]]],[11,"vzip","","",120,[[]]],[11,"equivalent","","",120,[[]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"test_only_hash","","",121,[[],["hashvalue",3]]],[11,"vzip","","",121,[[]]],[11,"equivalent","","",121,[[]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"vzip","","",122,[[]]],[11,"equivalent","","",122,[[]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"vzip","","",123,[[]]],[11,"equivalent","","",123,[[]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"vzip","","",124,[[]]],[11,"equivalent","","",124,[[]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"to_string","","",125,[[],["string",3]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"test_only_hash","","",125,[[],["hashvalue",3]]],[11,"vzip","","",125,[[]]],[11,"equivalent","","",125,[[]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"vzip","","",179,[[]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"test_only_hash","","",126,[[],["hashvalue",3]]],[11,"vzip","","",126,[[]]],[11,"equivalent","","",126,[[]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"test_only_hash","","",127,[[],["hashvalue",3]]],[11,"vzip","","",127,[[]]],[11,"equivalent","","",127,[[]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"test_only_hash","","",128,[[],["hashvalue",3]]],[11,"vzip","","",128,[[]]],[11,"equivalent","","",128,[[]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"vzip","","",180,[[]]],[11,"from","diem_types::trusted_state","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"vzip","","",132,[[]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"vzip","","",129,[[]]],[11,"from","diem_types::validator_config","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"test_only_hash","","",133,[[],["hashvalue",3]]],[11,"vzip","","",133,[[]]],[11,"equivalent","","",133,[[]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"test_only_hash","","",134,[[],["hashvalue",3]]],[11,"vzip","","",134,[[]]],[11,"equivalent","","",134,[[]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"test_only_hash","","",135,[[],["hashvalue",3]]],[11,"vzip","","",135,[[]]],[11,"equivalent","","",135,[[]]],[11,"from","diem_types::validator_info","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"to_string","","",136,[[],["string",3]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"test_only_hash","","",136,[[],["hashvalue",3]]],[11,"vzip","","",136,[[]]],[11,"equivalent","","",136,[[]]],[11,"from","diem_types::validator_signer","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"vzip","","",137,[[]]],[11,"from","diem_types::validator_verifier","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_string","","",138,[[],["string",3]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"vzip","","",138,[[]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"test_only_hash","","",141,[[],["hashvalue",3]]],[11,"vzip","","",141,[[]]],[11,"equivalent","","",141,[[]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"to_string","","",142,[[],["string",3]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"test_only_hash","","",142,[[],["hashvalue",3]]],[11,"vzip","","",142,[[]]],[11,"equivalent","","",142,[[]]],[11,"from","diem_types::vm_status","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"to_string","","",143,[[],["string",3]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"test_only_hash","","",143,[[],["hashvalue",3]]],[11,"vzip","","",143,[[]]],[11,"equivalent","","",143,[[]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"to_string","","",144,[[],["string",3]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"test_only_hash","","",144,[[],["hashvalue",3]]],[11,"vzip","","",144,[[]]],[11,"equivalent","","",144,[[]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"test_only_hash","","",146,[[],["hashvalue",3]]],[11,"vzip","","",146,[[]]],[11,"equivalent","","",146,[[]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"to_string","","",147,[[],["string",3]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"vzip","","",147,[[]]],[11,"equivalent","","",147,[[]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"to_string","","",148,[[],["string",3]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"test_only_hash","","",148,[[],["hashvalue",3]]],[11,"vzip","","",148,[[]]],[11,"equivalent","","",148,[[]]],[11,"from","diem_types::waypoint","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"to_string","","",150,[[],["string",3]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"test_only_hash","","",150,[[],["hashvalue",3]]],[11,"vzip","","",150,[[]]],[11,"equivalent","","",150,[[]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"vzip","","",181,[[]]],[11,"from","diem_types::write_set","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"test_only_hash","","",151,[[],["hashvalue",3]]],[11,"vzip","","",151,[[]]],[11,"equivalent","","",151,[[]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"test_only_hash","","",152,[[],["hashvalue",3]]],[11,"vzip","","",152,[[]]],[11,"equivalent","","",152,[[]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"test_only_hash","","",153,[[],["hashvalue",3]]],[11,"vzip","","",153,[[]]],[11,"equivalent","","",153,[[]]],[11,"partial_cmp","diem_types::account_address","",154,[[["accountaddress",3]],[["ordering",4],["option",4]]]],[11,"lt","","",154,[[["accountaddress",3]]]],[11,"le","","",154,[[["accountaddress",3]]]],[11,"gt","","",154,[[["accountaddress",3]]]],[11,"ge","","",154,[[["accountaddress",3]]]],[11,"partial_cmp","diem_types::vm_status","",146,[[["statuscode",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",143,[[["abortlocation",4]],[["ordering",4],["option",4]]]],[11,"lt","","",143,[[["abortlocation",4]]]],[11,"le","","",143,[[["abortlocation",4]]]],[11,"gt","","",143,[[["abortlocation",4]]]],[11,"ge","","",143,[[["abortlocation",4]]]],[11,"partial_cmp","","",148,[[["vmstatus",4]],[["ordering",4],["option",4]]]],[11,"lt","","",148,[[["vmstatus",4]]]],[11,"le","","",148,[[["vmstatus",4]]]],[11,"gt","","",148,[[["vmstatus",4]]]],[11,"ge","","",148,[[["vmstatus",4]]]],[11,"partial_cmp","","",144,[[["keptvmstatus",4]],[["ordering",4],["option",4]]]],[11,"lt","","",144,[[["keptvmstatus",4]]]],[11,"le","","",144,[[["keptvmstatus",4]]]],[11,"gt","","",144,[[["keptvmstatus",4]]]],[11,"ge","","",144,[[["keptvmstatus",4]]]],[11,"serialize","diem_types::account_address","",154,[[],["result",4]]],[11,"serialize","diem_types::vm_status","",146,[[],["result",4]]],[11,"serialize","","",143,[[],["result",4]]],[11,"serialize","diem_types::transaction","",97,[[],["result",4]]],[11,"serialize","diem_types::vm_status","",144,[[],["result",4]]],[11,"serialize","","",148,[[],["result",4]]],[11,"from_str","diem_types::account_address","",154,[[],[["error",3],["accountaddress",3],["result",4]]]],[11,"fmt","","",154,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",154,[[["formatter",3]],[["result",4],["error",3]]]],[11,"as_ref","","",154,[[]]],[11,"cmp","diem_types::vm_status","",143,[[["abortlocation",4]],["ordering",4]]],[11,"cmp","diem_types::account_address","",154,[[["accountaddress",3]],["ordering",4]]],[11,"cmp","diem_types::vm_status","",146,[[["statuscode",4]],["ordering",4]]],[11,"cmp","","",148,[[["vmstatus",4]],["ordering",4]]],[11,"cmp","","",144,[[["keptvmstatus",4]],["ordering",4]]],[11,"deserialize","diem_types::account_address","",154,[[],[["result",4],["accountaddress",3]]]],[11,"deserialize","diem_types::vm_status","",143,[[],[["abortlocation",4],["result",4]]]],[11,"deserialize","","",146,[[],[["result",4],["statuscode",4]]]],[11,"deserialize","","",144,[[],[["keptvmstatus",4],["result",4]]]],[11,"deserialize","diem_types::transaction","",97,[[],[["transactionargument",4],["result",4]]]],[11,"deserialize","diem_types::vm_status","",148,[[],[["result",4],["vmstatus",4]]]],[11,"fmt","","",144,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",146,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_types::transaction","",97,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_types::vm_status","",147,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",143,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_types::account_address","",154,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_types::vm_status","",148,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",143,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",147,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",144,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",148,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","diem_types::account_address","",154,[[["formatter",3]],[["result",4],["error",3]]]],[11,"deref","","",154,[[]]],[11,"arbitrary_with","","",154,[[]]],[11,"arbitrary_with","diem_types::vm_status","",144,[[]]],[11,"arbitrary_with","","",148,[[]]],[11,"arbitrary_with","diem_types::transaction","",97,[[]]],[11,"arbitrary_with","diem_types::vm_status","",143,[[]]],[11,"arbitrary_with","","",146,[[]]],[11,"hash","","",148,[[]]],[11,"hash","diem_types::account_address","",154,[[]]],[11,"hash","diem_types::vm_status","",143,[[]]],[11,"hash","diem_types::transaction","",97,[[]]],[11,"hash","diem_types::vm_status","",146,[[]]],[11,"hash","","",144,[[]]],[11,"hash","","",147,[[]]],[11,"clone","","",148,[[],["vmstatus",4]]],[11,"clone","","",146,[[],["statuscode",4]]],[11,"clone","","",143,[[],["abortlocation",4]]],[11,"clone","","",144,[[],["keptvmstatus",4]]],[11,"clone","diem_types::account_address","",154,[[],["accountaddress",3]]],[11,"clone","diem_types::vm_status","",147,[[],["statustype",4]]],[11,"clone","diem_types::transaction","",97,[[],["transactionargument",4]]],[11,"eq","diem_types::vm_status","",144,[[["keptvmstatus",4]]]],[11,"ne","","",144,[[["keptvmstatus",4]]]],[11,"eq","","",148,[[["vmstatus",4]]]],[11,"ne","","",148,[[["vmstatus",4]]]],[11,"eq","diem_types::account_address","",154,[[["accountaddress",3]]]],[11,"ne","","",154,[[["accountaddress",3]]]],[11,"eq","diem_types::vm_status","",147,[[["statustype",4]]]],[11,"eq","diem_types::transaction","",97,[[["transactionargument",4]]]],[11,"ne","","",97,[[["transactionargument",4]]]],[11,"eq","diem_types::vm_status","",143,[[["abortlocation",4]]]],[11,"ne","","",143,[[["abortlocation",4]]]],[11,"eq","","",146,[[["statuscode",4]]]],[11,"try_from","diem_types::account_address","Tries to convert the provided byte array into Address.",154,[[],[["error",3],["accountaddress",3],["result",4]]]],[11,"try_from","diem_types::vm_status","",146,[[],[["statuscode",4],["result",4]]]],[11,"try_from","diem_types::account_address","Tries to convert the provided byte buffer into Address.",154,[[["vec",3],["global",3]],[["error",3],["accountaddress",3],["result",4]]]],[11,"try_from","","",154,[[["string",3]],[["error",3],["accountaddress",3],["result",4]]]],[11,"try_from","","Tries to convert the provided byte array into Address.",154,[[],[["error",3],["accountaddress",3],["result",4]]]],[11,"hash","","",154,[[],["hashvalue",3]]],[11,"verify","diem_types::epoch_state","",47,[[["ledgerinfowithsignatures",4]],["result",6]]],[11,"epoch_change_verification_required","","",47,[[]]],[11,"is_ledger_info_stale","","",47,[[["ledgerinfo",3]]]],[11,"verify","diem_types::waypoint","",150,[[["ledgerinfowithsignatures",4]],["result",6]]],[11,"epoch_change_verification_required","","",150,[[]]],[11,"is_ledger_info_stale","","",150,[[["ledgerinfo",3]]]],[11,"deserialize_into_config","diem_types::on_chain_config","",62,[[],["result",6]]],[11,"deserialize_into_config","","",63,[[],["result",6]]],[11,"as_ref","diem_types::account_state_blob","",157,[[]]],[11,"as_ref","diem_types::network_address","",162,[[]]],[11,"as_ref","diem_types::transaction::authenticator","",102,[[]]],[11,"from","diem_types::access_path","",0,[[["moduleid",3]],["accesspath",3]]],[11,"from","diem_types::account_state_blob","",157,[[["vec",3]],["accountstateblob",3]]],[11,"from","diem_types::network_address","",58,[[["addrparseerror",3]]]],[11,"from","","",58,[[["parseinterror",3]]]],[11,"from","","",58,[[["cryptomaterialerror",4]]]],[11,"from","","",58,[[["error",4]]]],[11,"from","","",59,[[["protocol",4]],["networkaddress",3]]],[11,"from","","",59,[[["socketaddr",4]],["networkaddress",3]]],[11,"from","","",57,[[["ipaddr",4]],["protocol",4]]],[11,"from","diem_types::transaction","",121,[[["vmstatus",4]]]],[11,"from","diem_types::trusted_state","",132,[[["waypoint",3]]]],[11,"from","diem_types::validator_verifier","",142,[[["validatorset",3]]]],[11,"from","diem_types::on_chain_config","",165,[[["validatorverifier",3]]]],[11,"into","diem_types::network_address","",162,[[],["string",3]]],[11,"into_iter","","",59,[[]]],[11,"into_iter","diem_types::on_chain_config","",165,[[]]],[11,"into_iter","diem_types::write_set","",152,[[]]],[11,"next","diem_types::proof::position","",166,[[],[["option",4],["position",3]]]],[11,"next","","",167,[[],[["option",4],["position",3]]]],[11,"next","","",82,[[],[["option",4],["position",3]]]],[11,"next","","",83,[[],["option",4]]],[11,"clone","diem_types::access_path","",0,[[],["accesspath",3]]],[11,"clone","","",1,[[],["path",4]]],[11,"clone","diem_types::account_config::resources::currency_info","",20,[[],["currencyinforesource",3]]],[11,"clone","diem_types::account_config::resources::dual_attestation","",23,[[],["limit",3]]],[11,"clone","diem_types::account_state_blob","",157,[[],["accountstateblob",3]]],[11,"clone","","",158,[[],["accountstateblobhasher",3]]],[11,"clone","","",33,[[],["accountstatewithproof",3]]],[11,"clone","diem_types::block_info","",34,[[],["blockinfo",3]]],[11,"clone","diem_types::block_metadata","",35,[[],["blockmetadata",3]]],[11,"clone","","",37,[[],["newblockevent",3]]],[11,"clone","diem_types::chain_id","",38,[[],["namedchain",4]]],[11,"clone","","",39,[[],["chainid",3]]],[11,"clone","diem_types::contract_event","",40,[[],["contractevent",4]]],[11,"clone","","",159,[[],["contracteventhasher",3]]],[11,"clone","","",41,[[],["contracteventv0",3]]],[11,"clone","","",160,[[],["contracteventv0hasher",3]]],[11,"clone","","",42,[[],["eventwithproof",3]]],[11,"clone","diem_types::diem_timestamp","",44,[[],["diemtimestamp",3]]],[11,"clone","diem_types::epoch_change","",46,[[],["epochchangeproof",3]]],[11,"clone","diem_types::epoch_state","",47,[[],["epochstate",3]]],[11,"clone","diem_types::event","",48,[[],["eventkey",3]]],[11,"clone","","",49,[[],["eventhandle",3]]],[11,"clone","diem_types::ledger_info","",50,[[],["ledgerinfo",3]]],[11,"clone","","",161,[[],["ledgerinfohasher",3]]],[11,"clone","","",51,[[],["ledgerinfowithsignatures",4]]],[11,"clone","","",52,[[],["ledgerinfowithv0",3]]],[11,"clone","diem_types::mempool_status","",53,[[],["mempoolstatus",3]]],[11,"clone","","",54,[[],["mempoolstatuscode",4]]],[11,"clone","diem_types::network_address::encrypted","",56,[[],["encnetworkaddress",3]]],[11,"clone","diem_types::network_address","",59,[[],["networkaddress",3]]],[11,"clone","","",57,[[],["protocol",4]]],[11,"clone","","",162,[[],["dnsname",3]]],[11,"clone","","",60,[[],["ipfilter",4]]],[11,"clone","diem_types::on_chain_config","",61,[[],["diemversion",3]]],[11,"clone","","",164,[[],["registeredcurrencies",3]]],[11,"clone","","",165,[[],["validatorset",3]]],[11,"clone","","",62,[[],["vmconfig",3]]],[11,"clone","","",63,[[],["vmpublishingoption",3]]],[11,"clone","","",64,[[],["configid",3]]],[11,"clone","","",65,[[],["onchainconfigpayload",3]]],[11,"clone","diem_types::proof::definition","",70,[[],["accumulatorproof",3]]],[11,"clone","","",71,[[],["sparsemerkleproof",3]]],[11,"clone","","",72,[[],["accumulatorconsistencyproof",3]]],[11,"clone","","",73,[[],["accumulatorrangeproof",3]]],[11,"clone","","",74,[[],["sparsemerklerangeproof",3]]],[11,"clone","","",75,[[],["transactioninfowithproof",3]]],[11,"clone","","",76,[[],["accountstateproof",3]]],[11,"clone","","",77,[[],["eventproof",3]]],[11,"clone","","",78,[[],["transactionlistproof",3]]],[11,"clone","","",79,[[],["accumulatorextensionproof",3]]],[11,"clone","diem_types::proof::position","",81,[[],["position",3]]],[11,"clone","diem_types::proof","",85,[[],["sparsemerkleleafnode",3]]],[11,"clone","","",168,[[],["sparsemerkleleafnodehasher",3]]],[11,"clone","diem_types::transaction::authenticator","",99,[[],["transactionauthenticator",4]]],[11,"clone","","",102,[[],["authenticationkey",3]]],[11,"clone","","",169,[[],["authenticationkeyhasher",3]]],[11,"clone","diem_types::transaction","",170,[[],["changeset",3]]],[11,"clone","diem_types::transaction::metadata","",105,[[],["metadata",4]]],[11,"clone","","",106,[[],["generalmetadata",4]]],[11,"clone","","",107,[[],["generalmetadatav0",3]]],[11,"clone","","",108,[[],["travelrulemetadata",4]]],[11,"clone","","",171,[[],["travelrulemetadatav0",3]]],[11,"clone","","",172,[[],["unstructuredbytesmetadata",3]]],[11,"clone","","",109,[[],["refundmetadata",4]]],[11,"clone","","",110,[[],["refundmetadatav0",3]]],[11,"clone","","",111,[[],["refundreason",4]]],[11,"clone","","",112,[[],["cointrademetadata",4]]],[11,"clone","","",113,[[],["cointrademetadatav0",3]]],[11,"clone","diem_types::transaction","",173,[[],["module",3]]],[11,"clone","","",174,[[],["script",3]]],[11,"clone","","",175,[[],["scriptabi",3]]],[11,"clone","","",176,[[],["argumentabi",3]]],[11,"clone","","",177,[[],["typeargumentabi",3]]],[11,"clone","","",114,[[],["rawtransaction",3]]],[11,"clone","","",178,[[],["rawtransactionhasher",3]]],[11,"clone","","",115,[[],["transactionpayload",4]]],[11,"clone","","",116,[[],["writesetpayload",4]]],[11,"clone","","",119,[[],["signedtransaction",3]]],[11,"clone","","",118,[[],["signaturecheckedtransaction",3]]],[11,"clone","","",120,[[],["transactionwithproof",3]]],[11,"clone","","",121,[[],["transactionstatus",4]]],[11,"clone","","",122,[[],["governancerole",4]]],[11,"clone","","",123,[[],["vmvalidatorresult",3]]],[11,"clone","","",124,[[],["transactionoutput",3]]],[11,"clone","","",125,[[],["transactioninfo",3]]],[11,"clone","","",179,[[],["transactioninfohasher",3]]],[11,"clone","","",126,[[],["transactiontocommit",3]]],[11,"clone","","",127,[[],["transactionlistwithproof",3]]],[11,"clone","","",128,[[],["transaction",4]]],[11,"clone","","",180,[[],["transactionhasher",3]]],[11,"clone","diem_types::trusted_state","",132,[[],["trustedstate",3]]],[11,"clone","","",129,[[],["trustedstatechange",4]]],[11,"clone","diem_types::validator_config","",133,[[],["validatorconfigresource",3]]],[11,"clone","","",134,[[],["validatoroperatorconfigresource",3]]],[11,"clone","","",135,[[],["validatorconfig",3]]],[11,"clone","diem_types::validator_info","",136,[[],["validatorinfo",3]]],[11,"clone","diem_types::validator_signer","",137,[[],["validatorsigner",3]]],[11,"clone","diem_types::validator_verifier","",141,[[],["validatorconsensusinfo",3]]],[11,"clone","","",142,[[],["validatorverifier",3]]],[11,"clone","diem_types::waypoint","",150,[[],["waypoint",3]]],[11,"clone","","",181,[[],["ledger2waypointconverterhasher",3]]],[11,"clone","diem_types::write_set","",151,[[],["writeop",4]]],[11,"clone","","",152,[[],["writeset",3]]],[11,"clone","","",153,[[],["writesetmut",3]]],[11,"default","diem_types::account_state","",32,[[],["accountstate",3]]],[11,"default","diem_types::account_state_blob","",158,[[]]],[11,"default","diem_types::chain_id","",39,[[]]],[11,"default","diem_types::contract_event","",159,[[]]],[11,"default","","",160,[[]]],[11,"default","diem_types::ledger_info","",161,[[]]],[11,"default","diem_types::on_chain_config","",68,[[]]],[11,"default","diem_types::proof::accumulator","",69,[[]]],[11,"default","diem_types::proof","",168,[[]]],[11,"default","diem_types::transaction::authenticator","",169,[[]]],[11,"default","diem_types::transaction","",178,[[]]],[11,"default","","",179,[[]]],[11,"default","","",180,[[]]],[11,"default","diem_types::validator_config","",133,[[],["validatorconfigresource",3]]],[11,"default","","",134,[[],["validatoroperatorconfigresource",3]]],[11,"default","diem_types::waypoint","",150,[[],["waypoint",3]]],[11,"default","","",181,[[]]],[11,"default","diem_types::write_set","",152,[[],["writeset",3]]],[11,"default","","",153,[[],["writesetmut",3]]],[11,"cmp","diem_types::access_path","",0,[[["accesspath",3]],["ordering",4]]],[11,"cmp","","",1,[[["path",4]],["ordering",4]]],[11,"cmp","diem_types::event","",48,[[["eventkey",3]],["ordering",4]]],[11,"cmp","diem_types::mempool_status","",53,[[["mempoolstatus",3]],["ordering",4]]],[11,"cmp","","",54,[[["mempoolstatuscode",4]],["ordering",4]]],[11,"cmp","diem_types::transaction::authenticator","",102,[[["authenticationkey",3]],["ordering",4]]],[11,"cmp","diem_types::transaction","",122,[[["governancerole",4]],["ordering",4]]],[11,"eq","diem_types::access_path","",0,[[["accesspath",3]]]],[11,"ne","","",0,[[["accesspath",3]]]],[11,"eq","","",1,[[["path",4]]]],[11,"ne","","",1,[[["path",4]]]],[11,"eq","diem_types::account_config::resources::dual_attestation","",23,[[["limit",3]]]],[11,"ne","","",23,[[["limit",3]]]],[11,"eq","diem_types::account_state","",32,[[["accountstate",3]]]],[11,"ne","","",32,[[["accountstate",3]]]],[11,"eq","diem_types::account_state_blob","",157,[[["accountstateblob",3]]]],[11,"ne","","",157,[[["accountstateblob",3]]]],[11,"eq","","",33,[[["accountstatewithproof",3]]]],[11,"ne","","",33,[[["accountstatewithproof",3]]]],[11,"eq","diem_types::block_info","",34,[[["blockinfo",3]]]],[11,"ne","","",34,[[["blockinfo",3]]]],[11,"eq","diem_types::block_metadata","",35,[[["blockmetadata",3]]]],[11,"ne","","",35,[[["blockmetadata",3]]]],[11,"eq","diem_types::chain_id","",39,[[["chainid",3]]]],[11,"ne","","",39,[[["chainid",3]]]],[11,"eq","diem_types::contract_event","",40,[[["contractevent",4]]]],[11,"ne","","",40,[[["contractevent",4]]]],[11,"eq","","",41,[[["contracteventv0",3]]]],[11,"ne","","",41,[[["contracteventv0",3]]]],[11,"eq","","",42,[[["eventwithproof",3]]]],[11,"ne","","",42,[[["eventwithproof",3]]]],[11,"eq","diem_types::epoch_change","",46,[[["epochchangeproof",3]]]],[11,"ne","","",46,[[["epochchangeproof",3]]]],[11,"eq","diem_types::epoch_state","",47,[[["epochstate",3]]]],[11,"ne","","",47,[[["epochstate",3]]]],[11,"eq","diem_types::event","",48,[[["eventkey",3]]]],[11,"ne","","",48,[[["eventkey",3]]]],[11,"eq","","",49,[[["eventhandle",3]]]],[11,"ne","","",49,[[["eventhandle",3]]]],[11,"eq","diem_types::ledger_info","",50,[[["ledgerinfo",3]]]],[11,"ne","","",50,[[["ledgerinfo",3]]]],[11,"eq","","",51,[[["ledgerinfowithsignatures",4]]]],[11,"ne","","",51,[[["ledgerinfowithsignatures",4]]]],[11,"eq","","",52,[[["ledgerinfowithv0",3]]]],[11,"ne","","",52,[[["ledgerinfowithv0",3]]]],[11,"eq","diem_types::mempool_status","",53,[[["mempoolstatus",3]]]],[11,"ne","","",53,[[["mempoolstatus",3]]]],[11,"eq","","",54,[[["mempoolstatuscode",4]]]],[11,"eq","diem_types::network_address::encrypted","",56,[[["encnetworkaddress",3]]]],[11,"ne","","",56,[[["encnetworkaddress",3]]]],[11,"eq","diem_types::network_address","",59,[[["networkaddress",3]]]],[11,"ne","","",59,[[["networkaddress",3]]]],[11,"eq","","",57,[[["protocol",4]]]],[11,"ne","","",57,[[["protocol",4]]]],[11,"eq","","",162,[[["dnsname",3]]]],[11,"ne","","",162,[[["dnsname",3]]]],[11,"eq","","",60,[[["ipfilter",4]]]],[11,"eq","diem_types::on_chain_config","",61,[[["diemversion",3]]]],[11,"ne","","",61,[[["diemversion",3]]]],[11,"eq","","",164,[[["registeredcurrencies",3]]]],[11,"ne","","",164,[[["registeredcurrencies",3]]]],[11,"eq","","",165,[[["validatorset",3]]]],[11,"ne","","",165,[[["validatorset",3]]]],[11,"eq","","",62,[[["vmconfig",3]]]],[11,"ne","","",62,[[["vmconfig",3]]]],[11,"eq","","",63,[[["vmpublishingoption",3]]]],[11,"ne","","",63,[[["vmpublishingoption",3]]]],[11,"eq","","",64,[[["configid",3]]]],[11,"ne","","",64,[[["configid",3]]]],[11,"eq","","",65,[[["onchainconfigpayload",3]]]],[11,"ne","","",65,[[["onchainconfigpayload",3]]]],[11,"eq","diem_types::proof::definition","",70,[[]]],[11,"eq","","",71,[[["sparsemerkleproof",3]]]],[11,"ne","","",71,[[["sparsemerkleproof",3]]]],[11,"eq","","",72,[[["accumulatorconsistencyproof",3]]]],[11,"ne","","",72,[[["accumulatorconsistencyproof",3]]]],[11,"eq","","",73,[[]]],[11,"eq","","",74,[[["sparsemerklerangeproof",3]]]],[11,"ne","","",74,[[["sparsemerklerangeproof",3]]]],[11,"eq","","",75,[[["transactioninfowithproof",3]]]],[11,"ne","","",75,[[["transactioninfowithproof",3]]]],[11,"eq","","",76,[[["accountstateproof",3]]]],[11,"ne","","",76,[[["accountstateproof",3]]]],[11,"eq","","",77,[[["eventproof",3]]]],[11,"ne","","",77,[[["eventproof",3]]]],[11,"eq","","",78,[[["transactionlistproof",3]]]],[11,"ne","","",78,[[["transactionlistproof",3]]]],[11,"eq","","",79,[[["accumulatorextensionproof",3]]]],[11,"ne","","",79,[[["accumulatorextensionproof",3]]]],[11,"eq","diem_types::proof::position","",81,[[["position",3]]]],[11,"ne","","",81,[[["position",3]]]],[11,"eq","","",80,[[["nodedirection",4]]]],[11,"eq","diem_types::proof","",85,[[["sparsemerkleleafnode",3]]]],[11,"ne","","",85,[[["sparsemerkleleafnode",3]]]],[11,"eq","diem_types::transaction::authenticator","",99,[[["transactionauthenticator",4]]]],[11,"ne","","",99,[[["transactionauthenticator",4]]]],[11,"eq","","",102,[[["authenticationkey",3]]]],[11,"ne","","",102,[[["authenticationkey",3]]]],[11,"eq","diem_types::transaction","",170,[[["changeset",3]]]],[11,"ne","","",170,[[["changeset",3]]]],[11,"eq","diem_types::transaction::metadata","",105,[[["metadata",4]]]],[11,"ne","","",105,[[["metadata",4]]]],[11,"eq","","",106,[[["generalmetadata",4]]]],[11,"ne","","",106,[[["generalmetadata",4]]]],[11,"eq","","",107,[[["generalmetadatav0",3]]]],[11,"ne","","",107,[[["generalmetadatav0",3]]]],[11,"eq","","",108,[[["travelrulemetadata",4]]]],[11,"ne","","",108,[[["travelrulemetadata",4]]]],[11,"eq","","",171,[[["travelrulemetadatav0",3]]]],[11,"ne","","",171,[[["travelrulemetadatav0",3]]]],[11,"eq","","",172,[[["unstructuredbytesmetadata",3]]]],[11,"ne","","",172,[[["unstructuredbytesmetadata",3]]]],[11,"eq","","",109,[[["refundmetadata",4]]]],[11,"ne","","",109,[[["refundmetadata",4]]]],[11,"eq","","",110,[[["refundmetadatav0",3]]]],[11,"ne","","",110,[[["refundmetadatav0",3]]]],[11,"eq","","",111,[[["refundreason",4]]]],[11,"eq","","",112,[[["cointrademetadata",4]]]],[11,"ne","","",112,[[["cointrademetadata",4]]]],[11,"eq","","",113,[[["cointrademetadatav0",3]]]],[11,"ne","","",113,[[["cointrademetadatav0",3]]]],[11,"eq","diem_types::transaction","",173,[[["module",3]]]],[11,"ne","","",173,[[["module",3]]]],[11,"eq","","",174,[[["script",3]]]],[11,"ne","","",174,[[["script",3]]]],[11,"eq","","",175,[[["scriptabi",3]]]],[11,"ne","","",175,[[["scriptabi",3]]]],[11,"eq","","",176,[[["argumentabi",3]]]],[11,"ne","","",176,[[["argumentabi",3]]]],[11,"eq","","",177,[[["typeargumentabi",3]]]],[11,"ne","","",177,[[["typeargumentabi",3]]]],[11,"eq","","",114,[[["rawtransaction",3]]]],[11,"ne","","",114,[[["rawtransaction",3]]]],[11,"eq","","",115,[[["transactionpayload",4]]]],[11,"ne","","",115,[[["transactionpayload",4]]]],[11,"eq","","",116,[[["writesetpayload",4]]]],[11,"ne","","",116,[[["writesetpayload",4]]]],[11,"eq","","",119,[[["signedtransaction",3]]]],[11,"ne","","",119,[[["signedtransaction",3]]]],[11,"eq","","",118,[[["signaturecheckedtransaction",3]]]],[11,"ne","","",118,[[["signaturecheckedtransaction",3]]]],[11,"eq","","",120,[[["transactionwithproof",3]]]],[11,"ne","","",120,[[["transactionwithproof",3]]]],[11,"eq","","",121,[[["transactionstatus",4]]]],[11,"ne","","",121,[[["transactionstatus",4]]]],[11,"eq","","",122,[[["governancerole",4]]]],[11,"eq","","",123,[[["vmvalidatorresult",3]]]],[11,"ne","","",123,[[["vmvalidatorresult",3]]]],[11,"eq","","",124,[[["transactionoutput",3]]]],[11,"ne","","",124,[[["transactionoutput",3]]]],[11,"eq","","",125,[[["transactioninfo",3]]]],[11,"ne","","",125,[[["transactioninfo",3]]]],[11,"eq","","",126,[[["transactiontocommit",3]]]],[11,"ne","","",126,[[["transactiontocommit",3]]]],[11,"eq","","",127,[[["transactionlistwithproof",3]]]],[11,"ne","","",127,[[["transactionlistwithproof",3]]]],[11,"eq","","",128,[[["transaction",4]]]],[11,"ne","","",128,[[["transaction",4]]]],[11,"eq","diem_types::validator_config","",133,[[["validatorconfigresource",3]]]],[11,"ne","","",133,[[["validatorconfigresource",3]]]],[11,"eq","","",134,[[["validatoroperatorconfigresource",3]]]],[11,"ne","","",134,[[["validatoroperatorconfigresource",3]]]],[11,"eq","","",135,[[["validatorconfig",3]]]],[11,"ne","","",135,[[["validatorconfig",3]]]],[11,"eq","diem_types::validator_info","",136,[[["validatorinfo",3]]]],[11,"ne","","",136,[[["validatorinfo",3]]]],[11,"eq","diem_types::validator_verifier","",138,[[["verifyerror",4]]]],[11,"ne","","",138,[[["verifyerror",4]]]],[11,"eq","","",141,[[["validatorconsensusinfo",3]]]],[11,"ne","","",141,[[["validatorconsensusinfo",3]]]],[11,"eq","","",142,[[["validatorverifier",3]]]],[11,"ne","","",142,[[["validatorverifier",3]]]],[11,"eq","diem_types::waypoint","",150,[[["waypoint",3]]]],[11,"ne","","",150,[[["waypoint",3]]]],[11,"eq","diem_types::write_set","",151,[[["writeop",4]]]],[11,"ne","","",151,[[["writeop",4]]]],[11,"eq","","",152,[[["writeset",3]]]],[11,"ne","","",152,[[["writeset",3]]]],[11,"eq","","",153,[[["writesetmut",3]]]],[11,"ne","","",153,[[["writesetmut",3]]]],[11,"partial_cmp","diem_types::access_path","",0,[[["accesspath",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["accesspath",3]]]],[11,"le","","",0,[[["accesspath",3]]]],[11,"gt","","",0,[[["accesspath",3]]]],[11,"ge","","",0,[[["accesspath",3]]]],[11,"partial_cmp","","",1,[[["path",4]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["path",4]]]],[11,"le","","",1,[[["path",4]]]],[11,"gt","","",1,[[["path",4]]]],[11,"ge","","",1,[[["path",4]]]],[11,"partial_cmp","diem_types::event","",48,[[["eventkey",3]],[["option",4],["ordering",4]]]],[11,"lt","","",48,[[["eventkey",3]]]],[11,"le","","",48,[[["eventkey",3]]]],[11,"gt","","",48,[[["eventkey",3]]]],[11,"ge","","",48,[[["eventkey",3]]]],[11,"partial_cmp","diem_types::mempool_status","",53,[[["mempoolstatus",3]],[["option",4],["ordering",4]]]],[11,"lt","","",53,[[["mempoolstatus",3]]]],[11,"le","","",53,[[["mempoolstatus",3]]]],[11,"gt","","",53,[[["mempoolstatus",3]]]],[11,"ge","","",53,[[["mempoolstatus",3]]]],[11,"partial_cmp","","",54,[[["mempoolstatuscode",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","diem_types::transaction::authenticator","",102,[[["authenticationkey",3]],[["option",4],["ordering",4]]]],[11,"lt","","",102,[[["authenticationkey",3]]]],[11,"le","","",102,[[["authenticationkey",3]]]],[11,"gt","","",102,[[["authenticationkey",3]]]],[11,"ge","","",102,[[["authenticationkey",3]]]],[11,"partial_cmp","diem_types::transaction","",122,[[["governancerole",4]],[["option",4],["ordering",4]]]],[11,"deref","diem_types::contract_event","",40,[[]]],[11,"deref","diem_types::ledger_info","",51,[[],["ledgerinfowithv0",3]]],[11,"deref","diem_types::transaction","",118,[[]]],[11,"deref_mut","diem_types::ledger_info","",51,[[],["ledgerinfowithv0",3]]],[11,"fmt","diem_types::access_path","",0,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::admin_transaction","",3,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::base_url_rotation","",4,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::burn","",5,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::cancel_burn","",6,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::compliance_key_rotation","",7,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::create_account","",8,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::exchange_rate_update","",9,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::mint","",10,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::new_block","",11,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::new_epoch","",12,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::preburn","",13,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::received_mint","",14,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::received_payment","",15,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::events::sent_payment","",16,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::resources::account","",17,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::resources::balance","",18,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::resources::currency_info","",20,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::resources::designated_dealer","",21,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::resources::dual_attestation","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::resources::freezing_bit","",24,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::resources::key_rotation_capability","",155,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::resources::preburn_balance","",25,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::resources::role","",26,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::resources::role_id","",29,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::resources::vasp","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_config::resources::withdraw_capability","",156,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_state","",32,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::account_state_blob","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::block_info","",34,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::block_metadata","",35,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::chain_id","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::contract_event","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::diem_timestamp","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::epoch_change","",46,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::epoch_state","",47,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::event","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::ledger_info","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::mempool_status","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::network_address::encrypted","",56,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::network_address","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",162,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",163,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::on_chain_config","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",164,[[["formatter",3]],["result",6]]],[11,"fmt","","",165,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::proof::accumulator","",69,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::proof::definition","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::proof::position","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",166,[[["formatter",3]],["result",6]]],[11,"fmt","","",167,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::proof","",85,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::proptest_types","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::transaction::authenticator","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::transaction","",170,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::transaction::metadata","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",171,[[["formatter",3]],["result",6]]],[11,"fmt","","",172,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::transaction","",173,[[["formatter",3]],["result",6]]],[11,"fmt","","",174,[[["formatter",3]],["result",6]]],[11,"fmt","","",175,[[["formatter",3]],["result",6]]],[11,"fmt","","",176,[[["formatter",3]],["result",6]]],[11,"fmt","","",177,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::trusted_state","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::validator_config","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::validator_info","",136,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::validator_signer","",137,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::validator_verifier","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::waypoint","",150,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::write_set","",151,[[["formatter",3]],["result",6]]],[11,"fmt","","",152,[[["formatter",3]],["result",6]]],[11,"fmt","","",153,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::access_path","",0,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::block_info","",34,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::chain_id","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::contract_event","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::epoch_state","",47,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::event","",48,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::ledger_info","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::mempool_status","",54,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::network_address","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",163,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",162,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::on_chain_config","",164,[[["formatter",3]],["result",6]]],[11,"fmt","","",165,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::proof::position","",81,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::transaction::authenticator","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::transaction","",125,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::validator_info","",136,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::validator_verifier","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::waypoint","",150,[[["formatter",3]],["result",6]]],[11,"hash","diem_types::access_path","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","diem_types::chain_id","",39,[[]]],[11,"hash","diem_types::contract_event","",40,[[]]],[11,"hash","","",41,[[]]],[11,"hash","diem_types::event","",48,[[]]],[11,"hash","diem_types::mempool_status","",53,[[]]],[11,"hash","","",54,[[]]],[11,"hash","diem_types::network_address","",59,[[]]],[11,"hash","","",57,[[]]],[11,"hash","","",162,[[]]],[11,"hash","diem_types::on_chain_config","",64,[[]]],[11,"hash","diem_types::proof::position","",81,[[]]],[11,"hash","diem_types::transaction::authenticator","",99,[[]]],[11,"hash","","",102,[[]]],[11,"hash","diem_types::transaction","",170,[[]]],[11,"hash","","",173,[[]]],[11,"hash","","",174,[[]]],[11,"hash","","",175,[[]]],[11,"hash","","",176,[[]]],[11,"hash","","",177,[[]]],[11,"hash","","",114,[[]]],[11,"hash","","",115,[[]]],[11,"hash","","",116,[[]]],[11,"hash","","",119,[[]]],[11,"hash","","",118,[[]]],[11,"hash","","",122,[[]]],[11,"hash","diem_types::write_set","",151,[[]]],[11,"hash","","",152,[[]]],[11,"hash","","",153,[[]]],[11,"try_from","diem_types::access_path","",1,[[],["result",4]]],[11,"try_from","","",1,[[["vec",3]],["result",4]]],[11,"try_from","diem_types::account_state","",32,[[],["result",6]]],[11,"try_from","diem_types::account_state_blob","",157,[[["accountstate",3]],["result",6]]],[11,"try_from","diem_types::account_state","",32,[[["accountstateblob",3]],["result",6]]],[11,"try_from","diem_types::account_state_blob","",157,[[],["result",6]]],[11,"try_from","diem_types::account_config::resources::account","",17,[[["accountstateblob",3]],["result",6]]],[11,"try_from","diem_types::account_config::events::sent_payment","",16,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::account_config::events::received_payment","",15,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::account_config::events::exchange_rate_update","",9,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::account_config::events::mint","",10,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::account_config::events::received_mint","",14,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::account_config::events::burn","",5,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::account_config::events::preburn","",13,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::account_config::events::cancel_burn","",6,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::account_config::events::admin_transaction","",3,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::account_config::events::new_block","",11,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::account_config::events::new_epoch","",12,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::account_config::events::compliance_key_rotation","",7,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::account_config::events::base_url_rotation","",4,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::account_config::events::create_account","",8,[[["contractevent",4]],["result",6]]],[11,"try_from","diem_types::event","Tries to convert the provided byte array into Event Key.",48,[[],[["eventkey",3],["result",6]]]],[11,"try_from","diem_types::mempool_status","",54,[[],["result",6]]],[11,"try_from","diem_types::network_address","",59,[[["protocol",4],["vec",3]],["result",4]]],[11,"try_from","","",162,[[["string",3]],["result",4]]],[11,"try_from","diem_types::transaction::authenticator","",102,[[],[["cryptomaterialerror",4],["result",4],["authenticationkey",3]]]],[11,"try_from","","",102,[[["vec",3]],[["cryptomaterialerror",4],["result",4],["authenticationkey",3]]]],[11,"try_from","diem_types::transaction","",119,[[["transaction",4]],["result",6]]],[11,"try_from","diem_types::trusted_state","",132,[[["ledgerinfo",3]],["result",6]]],[11,"from_str","diem_types::chain_id","",39,[[],["result",6]]],[11,"from_str","diem_types::event","",48,[[],["result",6]]],[11,"from_str","diem_types::network_address","",59,[[],["result",4]]],[11,"from_str","","",162,[[],["result",4]]],[11,"from_str","diem_types::transaction::authenticator","",102,[[],["result",6]]],[11,"from_str","diem_types::waypoint","",150,[[],["result",6]]],[11,"from_iter","diem_types::write_set","",153,[[["intoiterator",8]]]],[11,"fmt","diem_types::event","",48,[[["formatter",3]],["result",6]]],[11,"fmt","diem_types::transaction::authenticator","",102,[[["formatter",3]],["result",6]]],[11,"source","diem_types::network_address","",58,[[],[["error",8],["option",4]]]],[11,"write","diem_types::account_state_blob","",158,[[],["result",6]]],[11,"flush","","",158,[[],["result",6]]],[11,"write","diem_types::contract_event","",159,[[],["result",6]]],[11,"flush","","",159,[[],["result",6]]],[11,"write","","",160,[[],["result",6]]],[11,"flush","","",160,[[],["result",6]]],[11,"write","diem_types::ledger_info","",161,[[],["result",6]]],[11,"flush","","",161,[[],["result",6]]],[11,"write","diem_types::proof","",168,[[],["result",6]]],[11,"flush","","",168,[[],["result",6]]],[11,"write","diem_types::transaction::authenticator","",169,[[],["result",6]]],[11,"flush","","",169,[[],["result",6]]],[11,"write","diem_types::transaction","",178,[[],["result",6]]],[11,"flush","","",178,[[],["result",6]]],[11,"write","","",179,[[],["result",6]]],[11,"flush","","",179,[[],["result",6]]],[11,"write","","",180,[[],["result",6]]],[11,"flush","","",180,[[],["result",6]]],[11,"write","diem_types::waypoint","",181,[[],["result",6]]],[11,"flush","","",181,[[],["result",6]]],[11,"to_socket_addrs","diem_types::network_address","",59,[[],[["result",4],["error",3]]]],[11,"hash","diem_types::account_state_blob","",157,[[],["hashvalue",3]]],[11,"hash","diem_types::contract_event","",40,[[],["hashvalue",3]]],[11,"hash","diem_types::ledger_info","",50,[[],["hashvalue",3]]],[11,"hash","diem_types::proof","",84,[[],["hashvalue",3]]],[11,"hash","","",85,[[],["hashvalue",3]]],[11,"hash","diem_types::transaction","",114,[[],["hashvalue",3]]],[11,"hash","","",125,[[],["hashvalue",3]]],[11,"hash","","",128,[[],["hashvalue",3]]],[11,"seed","diem_types::account_state_blob","",158,[[]]],[11,"update","","",158,[[]]],[11,"finish","","",158,[[],["hashvalue",3]]],[11,"seed","diem_types::contract_event","",159,[[]]],[11,"update","","",159,[[]]],[11,"finish","","",159,[[],["hashvalue",3]]],[11,"seed","","",160,[[]]],[11,"update","","",160,[[]]],[11,"finish","","",160,[[],["hashvalue",3]]],[11,"seed","diem_types::ledger_info","",161,[[]]],[11,"update","","",161,[[]]],[11,"finish","","",161,[[],["hashvalue",3]]],[11,"seed","diem_types::proof","",168,[[]]],[11,"update","","",168,[[]]],[11,"finish","","",168,[[],["hashvalue",3]]],[11,"seed","diem_types::transaction::authenticator","",169,[[]]],[11,"update","","",169,[[]]],[11,"finish","","",169,[[],["hashvalue",3]]],[11,"seed","diem_types::transaction","",178,[[]]],[11,"update","","",178,[[]]],[11,"finish","","",178,[[],["hashvalue",3]]],[11,"seed","","",179,[[]]],[11,"update","","",179,[[]]],[11,"finish","","",179,[[],["hashvalue",3]]],[11,"seed","","",180,[[]]],[11,"update","","",180,[[]]],[11,"finish","","",180,[[],["hashvalue",3]]],[11,"seed","diem_types::waypoint","",181,[[]]],[11,"update","","",181,[[]]],[11,"finish","","",181,[[],["hashvalue",3]]],[11,"serialize","diem_types::access_path","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::admin_transaction","",3,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::base_url_rotation","",4,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::burn","",5,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::cancel_burn","",6,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::compliance_key_rotation","",7,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::create_account","",8,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::exchange_rate_update","",9,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::mint","",10,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::new_block","",11,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::new_epoch","",12,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::preburn","",13,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::received_mint","",14,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::received_payment","",15,[[],["result",4]]],[11,"serialize","diem_types::account_config::events::sent_payment","",16,[[],["result",4]]],[11,"serialize","diem_types::account_config::resources::account","",17,[[],["result",4]]],[11,"serialize","diem_types::account_config::resources::balance","",18,[[],["result",4]]],[11,"serialize","diem_types::account_config::resources::currency_info","",20,[[],["result",4]]],[11,"serialize","diem_types::account_config::resources::designated_dealer","",21,[[],["result",4]]],[11,"serialize","diem_types::account_config::resources::dual_attestation","",22,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"serialize","diem_types::account_config::resources::freezing_bit","",24,[[],["result",4]]],[11,"serialize","diem_types::account_config::resources::key_rotation_capability","",155,[[],["result",4]]],[11,"serialize","diem_types::account_config::resources::preburn_balance","",25,[[],["result",4]]],[11,"serialize","diem_types::account_config::resources::role","",26,[[],["result",4]]],[11,"serialize","diem_types::account_config::resources::role_id","",29,[[],["result",4]]],[11,"serialize","diem_types::account_config::resources::vasp","",30,[[],["result",4]]],[11,"serialize","","",31,[[],["result",4]]],[11,"serialize","diem_types::account_config::resources::withdraw_capability","",156,[[],["result",4]]],[11,"serialize","diem_types::account_state","",32,[[],["result",4]]],[11,"serialize","diem_types::account_state_blob","",157,[[],["result",4]]],[11,"serialize","","",33,[[],["result",4]]],[11,"serialize","diem_types::block_info","",34,[[],["result",4]]],[11,"serialize","diem_types::block_metadata","",35,[[],["result",4]]],[11,"serialize","","",36,[[],["result",4]]],[11,"serialize","","",37,[[],["result",4]]],[11,"serialize","diem_types::chain_id","",39,[[],["result",4]]],[11,"serialize","diem_types::contract_event","",40,[[],["result",4]]],[11,"serialize","","",41,[[],["result",4]]],[11,"serialize","","",42,[[],["result",4]]],[11,"serialize","diem_types::diem_timestamp","",43,[[],["result",4]]],[11,"serialize","","",44,[[],["result",4]]],[11,"serialize","diem_types::epoch_change","",46,[[],["result",4]]],[11,"serialize","diem_types::epoch_state","",47,[[],["result",4]]],[11,"serialize","diem_types::event","",48,[[],["result",4]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","diem_types::ledger_info","",50,[[],["result",4]]],[11,"serialize","","",51,[[],["result",4]]],[11,"serialize","","",52,[[],["result",4]]],[11,"serialize","diem_types::network_address::encrypted","",56,[[],["result",4]]],[11,"serialize","diem_types::network_address","",57,[[],["result",4]]],[11,"serialize","","",162,[[],["result",4]]],[11,"serialize","","",59,[[],["result",4]]],[11,"serialize","diem_types::on_chain_config","",61,[[],["result",4]]],[11,"serialize","","",164,[[],["result",4]]],[11,"serialize","","",165,[[],["result",4]]],[11,"serialize","","",62,[[],["result",4]]],[11,"serialize","","",63,[[],["result",4]]],[11,"serialize","","",68,[[],["result",4]]],[11,"serialize","diem_types::proof::definition","",70,[[],["result",4]]],[11,"serialize","","",71,[[],["result",4]]],[11,"serialize","","",72,[[],["result",4]]],[11,"serialize","","",73,[[],["result",4]]],[11,"serialize","","",74,[[],["result",4]]],[11,"serialize","","",75,[[],["result",4]]],[11,"serialize","","",76,[[],["result",4]]],[11,"serialize","","",77,[[],["result",4]]],[11,"serialize","","",78,[[],["result",4]]],[11,"serialize","","",79,[[],["result",4]]],[11,"serialize","diem_types::proof","",85,[[],["result",4]]],[11,"serialize","diem_types::transaction::authenticator","",99,[[],["result",4]]],[11,"serialize","","",102,[[],["result",4]]],[11,"serialize","diem_types::transaction","",170,[[],["result",4]]],[11,"serialize","diem_types::transaction::metadata","",105,[[],["result",4]]],[11,"serialize","","",106,[[],["result",4]]],[11,"serialize","","",107,[[],["result",4]]],[11,"serialize","","",108,[[],["result",4]]],[11,"serialize","","",171,[[],["result",4]]],[11,"serialize","","",172,[[],["result",4]]],[11,"serialize","","",109,[[],["result",4]]],[11,"serialize","","",110,[[],["result",4]]],[11,"serialize","","",111,[[],["result",4]]],[11,"serialize","","",112,[[],["result",4]]],[11,"serialize","","",113,[[],["result",4]]],[11,"serialize","diem_types::transaction","",173,[[],["result",4]]],[11,"serialize","","",174,[[],["result",4]]],[11,"serialize","","",175,[[],["result",4]]],[11,"serialize","","",176,[[],["result",4]]],[11,"serialize","","",177,[[],["result",4]]],[11,"serialize","","",114,[[],["result",4]]],[11,"serialize","","",115,[[],["result",4]]],[11,"serialize","","",116,[[],["result",4]]],[11,"serialize","","",119,[[],["result",4]]],[11,"serialize","","",120,[[],["result",4]]],[11,"serialize","","",121,[[],["result",4]]],[11,"serialize","","",125,[[],["result",4]]],[11,"serialize","","",126,[[],["result",4]]],[11,"serialize","","",127,[[],["result",4]]],[11,"serialize","","",128,[[],["result",4]]],[11,"serialize","diem_types::validator_config","",133,[[],["result",4]]],[11,"serialize","","",134,[[],["result",4]]],[11,"serialize","","",135,[[],["result",4]]],[11,"serialize","diem_types::validator_info","",136,[[],["result",4]]],[11,"serialize","diem_types::validator_verifier","",141,[[],["result",4]]],[11,"serialize","","",142,[[],["result",4]]],[11,"serialize","diem_types::waypoint","",150,[[],["result",4]]],[11,"serialize","diem_types::write_set","",151,[[],["result",4]]],[11,"serialize","","",152,[[],["result",4]]],[11,"serialize","","",153,[[],["result",4]]],[11,"deserialize","diem_types::access_path","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::admin_transaction","",3,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::base_url_rotation","",4,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::burn","",5,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::cancel_burn","",6,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::compliance_key_rotation","",7,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::create_account","",8,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::exchange_rate_update","",9,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::mint","",10,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::new_block","",11,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::new_epoch","",12,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::preburn","",13,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::received_mint","",14,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::received_payment","",15,[[],["result",4]]],[11,"deserialize","diem_types::account_config::events::sent_payment","",16,[[],["result",4]]],[11,"deserialize","diem_types::account_config::resources::account","",17,[[],["result",4]]],[11,"deserialize","diem_types::account_config::resources::balance","",18,[[],["result",4]]],[11,"deserialize","diem_types::account_config::resources::chain_id","",19,[[],["result",4]]],[11,"deserialize","diem_types::account_config::resources::currency_info","",20,[[],["result",4]]],[11,"deserialize","diem_types::account_config::resources::designated_dealer","",21,[[],["result",4]]],[11,"deserialize","diem_types::account_config::resources::dual_attestation","",22,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"deserialize","diem_types::account_config::resources::freezing_bit","",24,[[],["result",4]]],[11,"deserialize","diem_types::account_config::resources::key_rotation_capability","",155,[[],["result",4]]],[11,"deserialize","diem_types::account_config::resources::preburn_balance","",25,[[],["result",4]]],[11,"deserialize","diem_types::account_config::resources::role","",26,[[],["result",4]]],[11,"deserialize","diem_types::account_config::resources::role_id","",29,[[],["result",4]]],[11,"deserialize","diem_types::account_config::resources::vasp","",30,[[],["result",4]]],[11,"deserialize","","",31,[[],["result",4]]],[11,"deserialize","diem_types::account_config::resources::withdraw_capability","",156,[[],["result",4]]],[11,"deserialize","diem_types::account_state","",32,[[],["result",4]]],[11,"deserialize","diem_types::account_state_blob","",157,[[],["result",4]]],[11,"deserialize","","",33,[[],["result",4]]],[11,"deserialize","diem_types::block_info","",34,[[],["result",4]]],[11,"deserialize","diem_types::block_metadata","",35,[[],["result",4]]],[11,"deserialize","","",36,[[],["result",4]]],[11,"deserialize","","",37,[[],["result",4]]],[11,"deserialize","diem_types::chain_id","",39,[[],["result",4]]],[11,"deserialize","diem_types::contract_event","",40,[[],["result",4]]],[11,"deserialize","","",41,[[],["result",4]]],[11,"deserialize","","",42,[[],["result",4]]],[11,"deserialize","diem_types::diem_timestamp","",43,[[],["result",4]]],[11,"deserialize","","",44,[[],["result",4]]],[11,"deserialize","diem_types::epoch_change","",46,[[],["result",4]]],[11,"deserialize","diem_types::epoch_state","",47,[[],["result",4]]],[11,"deserialize","diem_types::event","",48,[[],["result",4]]],[11,"deserialize","","",49,[[],["result",4]]],[11,"deserialize","diem_types::ledger_info","",50,[[],["result",4]]],[11,"deserialize","","",51,[[],["result",4]]],[11,"deserialize","","",52,[[],["result",4]]],[11,"deserialize","diem_types::network_address::encrypted","",56,[[],["result",4]]],[11,"deserialize","diem_types::network_address","",57,[[],["result",4]]],[11,"deserialize","","",59,[[],["result",4]]],[11,"deserialize","","",162,[[],["result",4]]],[11,"deserialize","diem_types::on_chain_config","",61,[[],["result",4]]],[11,"deserialize","","",164,[[],["result",4]]],[11,"deserialize","","",165,[[],["result",4]]],[11,"deserialize","","",62,[[],["result",4]]],[11,"deserialize","","",63,[[],["result",4]]],[11,"deserialize","","",68,[[],["result",4]]],[11,"deserialize","diem_types::proof::definition","",70,[[],["result",4]]],[11,"deserialize","","",71,[[],["result",4]]],[11,"deserialize","","",72,[[],["result",4]]],[11,"deserialize","","",73,[[],["result",4]]],[11,"deserialize","","",74,[[],["result",4]]],[11,"deserialize","","",75,[[],["result",4]]],[11,"deserialize","","",76,[[],["result",4]]],[11,"deserialize","","",77,[[],["result",4]]],[11,"deserialize","","",78,[[],["result",4]]],[11,"deserialize","","",79,[[],["result",4]]],[11,"deserialize","diem_types::proof","",85,[[],["result",4]]],[11,"deserialize","diem_types::transaction::authenticator","",99,[[],["result",4]]],[11,"deserialize","","",102,[[],["result",4]]],[11,"deserialize","diem_types::transaction","",170,[[],["result",4]]],[11,"deserialize","diem_types::transaction::metadata","",105,[[],["result",4]]],[11,"deserialize","","",106,[[],["result",4]]],[11,"deserialize","","",107,[[],["result",4]]],[11,"deserialize","","",108,[[],["result",4]]],[11,"deserialize","","",171,[[],["result",4]]],[11,"deserialize","","",172,[[],["result",4]]],[11,"deserialize","","",109,[[],["result",4]]],[11,"deserialize","","",110,[[],["result",4]]],[11,"deserialize","","",111,[[],["result",4]]],[11,"deserialize","","",112,[[],["result",4]]],[11,"deserialize","","",113,[[],["result",4]]],[11,"deserialize","diem_types::transaction","",173,[[],["result",4]]],[11,"deserialize","","",174,[[],["result",4]]],[11,"deserialize","","",175,[[],["result",4]]],[11,"deserialize","","",176,[[],["result",4]]],[11,"deserialize","","",177,[[],["result",4]]],[11,"deserialize","","",114,[[],["result",4]]],[11,"deserialize","","",115,[[],["result",4]]],[11,"deserialize","","",116,[[],["result",4]]],[11,"deserialize","","",119,[[],["result",4]]],[11,"deserialize","","",120,[[],["result",4]]],[11,"deserialize","","",121,[[],["result",4]]],[11,"deserialize","","",125,[[],["result",4]]],[11,"deserialize","","",126,[[],["result",4]]],[11,"deserialize","","",127,[[],["result",4]]],[11,"deserialize","","",128,[[],["result",4]]],[11,"deserialize","diem_types::validator_config","",133,[[],["result",4]]],[11,"deserialize","","",134,[[],["result",4]]],[11,"deserialize","","",135,[[],["result",4]]],[11,"deserialize","diem_types::validator_info","",136,[[],["result",4]]],[11,"deserialize","diem_types::validator_verifier","",141,[[],["result",4]]],[11,"deserialize","","",142,[[],["result",4]]],[11,"deserialize","diem_types::waypoint","",150,[[],["result",4]]],[11,"deserialize","diem_types::write_set","",151,[[],["result",4]]],[11,"deserialize","","",152,[[],["result",4]]],[11,"deserialize","","",153,[[],["result",4]]],[11,"arbitrary_with","diem_types::access_path","",0,[[]]],[11,"arbitrary_with","diem_types::account_config::resources::account","",17,[[]]],[11,"arbitrary_with","diem_types::account_config::resources::balance","",18,[[]]],[11,"arbitrary_with","diem_types::account_config::resources::key_rotation_capability","",155,[[]]],[11,"arbitrary_with","diem_types::account_config::resources::preburn_balance","",25,[[]]],[11,"arbitrary_with","diem_types::account_config::resources::vasp","",31,[[]]],[11,"arbitrary_with","diem_types::account_config::resources::withdraw_capability","",156,[[]]],[11,"arbitrary_with","diem_types::account_state_blob","",157,[[]]],[11,"arbitrary_with","","",33,[[]]],[11,"arbitrary_with","diem_types::block_info","",34,[[]]],[11,"arbitrary_with","diem_types::contract_event","",42,[[]]],[11,"arbitrary_with","diem_types::epoch_change","",46,[[]]],[11,"arbitrary_with","diem_types::epoch_state","",47,[[]]],[11,"arbitrary_with","diem_types::event","",48,[[]]],[11,"arbitrary_with","diem_types::ledger_info","",50,[[]]],[11,"arbitrary_with","","",52,[[]]],[11,"arbitrary_with","diem_types::mempool_status","",53,[[]]],[11,"arbitrary_with","","",54,[[]]],[11,"arbitrary_with","diem_types::network_address::encrypted","",56,[[]]],[11,"arbitrary_with","diem_types::network_address","",57,[[]]],[11,"arbitrary_with","","",59,[[]]],[11,"arbitrary_with","","",162,[[]]],[11,"arbitrary_with","diem_types::on_chain_config","",165,[[]]],[11,"arbitrary_with","diem_types::proof::definition","",75,[[]]],[11,"arbitrary_with","","",76,[[]]],[11,"arbitrary_with","","",77,[[]]],[11,"arbitrary_with","","",78,[[]]],[11,"arbitrary_with","","",70,[[]]],[11,"arbitrary_with","","",71,[[]]],[11,"arbitrary_with","","",72,[[]]],[11,"arbitrary_with","","",73,[[]]],[11,"arbitrary_with","","",74,[[]]],[11,"arbitrary_with","diem_types::proof","",85,[[]]],[11,"arbitrary_with","diem_types::write_set","",151,[[]]],[11,"arbitrary_with","diem_types::transaction","",116,[[]]],[11,"arbitrary_with","diem_types::write_set","",152,[[]]],[11,"arbitrary_with","diem_types::transaction","",170,[[]]],[11,"arbitrary_with","diem_types::proptest_types","",86,[[]]],[11,"arbitrary","","",86,[[]]],[11,"arbitrary_with","","",87,[[]]],[11,"arbitrary_with","diem_types::transaction","",114,[[]]],[11,"arbitrary_with","diem_types::proptest_types","",88,[[]]],[11,"arbitrary_with","diem_types::transaction","",118,[[]]],[11,"arbitrary_with","","",119,[[]]],[11,"arbitrary_with","","",121,[[]]],[11,"arbitrary_with","","",115,[[]]],[11,"arbitrary_with","","",174,[[]]],[11,"arbitrary_with","","",173,[[]]],[11,"arbitrary_with","diem_types::ledger_info","",51,[[]]],[11,"arbitrary_with","diem_types::proptest_types","",89,[[]]],[11,"arbitrary_with","","",90,[[]]],[11,"arbitrary_with","","",91,[[]]],[11,"arbitrary_with","","",92,[[]]],[11,"arbitrary_with","diem_types::event","",49,[[]]],[11,"arbitrary_with","diem_types::contract_event","",40,[[]]],[11,"arbitrary_with","diem_types::transaction","",126,[[]]],[11,"arbitrary_with","diem_types::proptest_types","",93,[[]]],[11,"arbitrary_with","diem_types::transaction","",127,[[]]],[11,"arbitrary_with","diem_types::block_metadata","",35,[[]]],[11,"arbitrary_with","diem_types::proptest_types","",94,[[]]],[11,"arbitrary_with","","",95,[[]]],[11,"arbitrary_with","","",96,[[]]],[11,"arbitrary_with","diem_types::transaction::authenticator","",102,[[]]],[11,"arbitrary_with","diem_types::transaction","",120,[[]]],[11,"arbitrary_with","","",125,[[]]],[11,"arbitrary_with","","",128,[[]]],[11,"arbitrary_with","diem_types::validator_config","",135,[[]]],[11,"arbitrary_with","diem_types::validator_info","",136,[[]]],[11,"arbitrary_with","diem_types::validator_verifier","",141,[[]]],[11,"arbitrary_with","","",142,[[]]],[11,"to_bytes","diem_types::transaction::authenticator","",102,[[],["vec",3]]],[11,"type_params","diem_types::account_config::resources::balance","",18,[[],[["vec",3],["typetag",4]]]],[11,"type_params","diem_types::account_config::resources::preburn_balance","",25,[[],[["vec",3],["typetag",4]]]],[11,"new","diem_types::account_address","",154,[[],["accountaddress",3]]],[18,"LENGTH","","The number of bytes in an address.",154,null],[18,"ZERO","","Hex address: 0x0",154,null],[11,"random","","",154,[[],["accountaddress",3]]],[11,"short_str_lossless","","",154,[[],["string",3]]],[11,"to_vec","","",154,[[],[["vec",3],["global",3]]]],[11,"to_u8","","",154,[[]]],[11,"from_hex_literal","","",154,[[],[["error",3],["accountaddress",3],["result",4]]]],[11,"currency_codes","diem_types::on_chain_config","",164,[[]]],[11,"from_bytes","","",164,[[],["result",6]]],[11,"new","","Constructs a ValidatorSet resource.",165,[[["vec",3],["validatorinfo",3]]]],[11,"payload","","",165,[[]]],[11,"empty","","",165,[[]]],[11,"locked","","",63,[[["vec",3]]]],[11,"custom_scripts","","",63,[[]]],[11,"open","","",63,[[]]],[11,"is_open_module","","",63,[[]]],[11,"is_open_script","","",63,[[]]],[11,"value_strategy","diem_types::write_set","",151,[[]]],[11,"deletion_strategy","","",151,[[]]],[11,"script_strategy","diem_types::transaction","",118,[[]]],[11,"module_strategy","","",118,[[]]],[11,"write_set_strategy","","",118,[[]]],[11,"genesis_strategy","","",118,[[]]],[11,"script_strategy","","",115,[[]]],[11,"module_strategy","","",115,[[]]],[11,"write_set_strategy","","",115,[[]]],[11,"genesis_strategy","","Similar to <code>write_set_strategy</code> except generates a valid …",115,[[]]],[11,"new","","",170,[[["contractevent",4],["vec",3],["writeset",3]]]],[11,"into_inner","","",170,[[]]],[11,"write_set","","",170,[[],["writeset",3]]],[11,"events","","",170,[[]]],[11,"new","","",173,[[["vec",3]],["module",3]]],[11,"code","","",173,[[]]],[11,"new","","",174,[[["vec",3],["typetag",4],["vec",3],["vec",3],["transactionargument",4]]]],[11,"code","","",174,[[]]],[11,"ty_args","","",174,[[]]],[11,"args","","",174,[[]]],[11,"into_inner","","",174,[[]]],[11,"new","","",175,[[["vec",3],["vec",3],["string",3],["typeargumentabi",3],["vec",3],["argumentabi",3]]]],[11,"name","","",175,[[]]],[11,"doc","","",175,[[]]],[11,"code","","",175,[[]]],[11,"ty_args","","",175,[[]]],[11,"args","","",175,[[]]],[11,"new","","",176,[[["string",3],["typetag",4]]]],[11,"name","","",176,[[]]],[11,"type_tag","","",176,[[],["typetag",4]]],[11,"new","","",177,[[["string",3]]]],[11,"name","","",177,[[]]],[11,"status_type","diem_types::vm_status","Return the status type for this status code",146,[[],["statustype",4]]],[11,"status_code","","Return the status code for the <code>VMStatus</code>",148,[[],["statuscode",4]]],[11,"move_abort_code","","Returns the Move abort code if the status is <code>MoveAbort</code>, …",148,[[],["option",4]]],[11,"status_type","","Return the status type for this <code>VMStatus</code>. This is solely …",148,[[],["statustype",4]]],[11,"keep_or_discard","","Returns <code>Ok</code> with a recorded status if it should be kept, …",148,[[],[["result",4],["keptvmstatus",4],["statuscode",4]]]]],"p":[[3,"AccessPath"],[4,"Path"],[8,"HashAccountAddress"],[3,"AdminTransactionEvent"],[3,"BaseUrlRotationEvent"],[3,"BurnEvent"],[3,"CancelBurnEvent"],[3,"ComplianceKeyRotationEvent"],[3,"CreateAccountEvent"],[3,"ToXDXExchangeRateUpdateEvent"],[3,"MintEvent"],[3,"NewBlockEvent"],[3,"NewEpochEvent"],[3,"PreburnEvent"],[3,"ReceivedMintEvent"],[3,"ReceivedPaymentEvent"],[3,"SentPaymentEvent"],[3,"AccountResource"],[3,"BalanceResource"],[3,"ChainIdResource"],[3,"CurrencyInfoResource"],[3,"DesignatedDealer"],[3,"Credential"],[3,"Limit"],[3,"FreezingBit"],[3,"PreburnResource"],[4,"AccountRole"],[13,"ParentVASP"],[13,"DesignatedDealer"],[3,"RoleId"],[3,"ParentVASP"],[3,"ChildVASP"],[3,"AccountState"],[3,"AccountStateWithProof"],[3,"BlockInfo"],[3,"BlockMetadata"],[3,"DiemBlockResource"],[3,"NewBlockEvent"],[4,"NamedChain"],[3,"ChainId"],[4,"ContractEvent"],[3,"ContractEventV0"],[3,"EventWithProof"],[3,"DiemTimestampResource"],[3,"DiemTimestamp"],[8,"Verifier"],[3,"EpochChangeProof"],[3,"EpochState"],[3,"EventKey"],[3,"EventHandle"],[3,"LedgerInfo"],[4,"LedgerInfoWithSignatures"],[3,"LedgerInfoWithV0"],[3,"MempoolStatus"],[4,"MempoolStatusCode"],[8,"MoveStorage"],[3,"EncNetworkAddress"],[4,"Protocol"],[4,"ParseError"],[3,"NetworkAddress"],[4,"IpFilter"],[3,"DiemVersion"],[3,"VMConfig"],[3,"VMPublishingOption"],[3,"ConfigID"],[3,"OnChainConfigPayload"],[8,"ConfigStorage"],[8,"OnChainConfig"],[3,"ConfigurationResource"],[3,"InMemoryAccumulator"],[3,"AccumulatorProof"],[3,"SparseMerkleProof"],[3,"AccumulatorConsistencyProof"],[3,"AccumulatorRangeProof"],[3,"SparseMerkleRangeProof"],[3,"TransactionInfoWithProof"],[3,"AccountStateProof"],[3,"EventProof"],[3,"TransactionListProof"],[3,"AccumulatorExtensionProof"],[4,"NodeDirection"],[3,"Position"],[3,"FrozenSubTreeIterator"],[3,"FrozenSubtreeSiblingIterator"],[3,"MerkleTreeInternalNode"],[3,"SparseMerkleLeafNode"],[3,"AccountInfoUniverse"],[3,"RawTransactionGen"],[3,"SignatureCheckedTransactionGen"],[3,"ContractEventGen"],[3,"AccountResourceGen"],[3,"BalanceResourceGen"],[3,"AccountStateBlobGen"],[3,"TransactionToCommitGen"],[3,"BlockInfoGen"],[3,"LedgerInfoGen"],[3,"LedgerInfoWithSignaturesGen"],[4,"TransactionArgument"],[4,"Scheme"],[4,"TransactionAuthenticator"],[13,"Ed25519"],[13,"MultiEd25519"],[3,"AuthenticationKey"],[3,"AuthenticationKeyPreimage"],[8,"TransactionSigner"],[4,"Metadata"],[4,"GeneralMetadata"],[3,"GeneralMetadataV0"],[4,"TravelRuleMetadata"],[4,"RefundMetadata"],[3,"RefundMetadataV0"],[4,"RefundReason"],[4,"CoinTradeMetadata"],[3,"CoinTradeMetadataV0"],[3,"RawTransaction"],[4,"TransactionPayload"],[4,"WriteSetPayload"],[13,"Script"],[3,"SignatureCheckedTransaction"],[3,"SignedTransaction"],[3,"TransactionWithProof"],[4,"TransactionStatus"],[4,"GovernanceRole"],[3,"VMValidatorResult"],[3,"TransactionOutput"],[3,"TransactionInfo"],[3,"TransactionToCommit"],[3,"TransactionListWithProof"],[4,"Transaction"],[4,"TrustedStateChange"],[13,"Version"],[13,"Epoch"],[3,"TrustedState"],[3,"ValidatorConfigResource"],[3,"ValidatorOperatorConfigResource"],[3,"ValidatorConfig"],[3,"ValidatorInfo"],[3,"ValidatorSigner"],[4,"VerifyError"],[13,"TooLittleVotingPower"],[13,"TooManySignatures"],[3,"ValidatorConsensusInfo"],[3,"ValidatorVerifier"],[4,"AbortLocation"],[4,"KeptVMStatus"],[13,"ExecutionFailure"],[4,"StatusCode"],[4,"StatusType"],[4,"VMStatus"],[13,"ExecutionFailure"],[3,"Waypoint"],[4,"WriteOp"],[3,"WriteSet"],[3,"WriteSetMut"],[3,"AccountAddress"],[3,"KeyRotationCapabilityResource"],[3,"WithdrawCapabilityResource"],[3,"AccountStateBlob"],[3,"AccountStateBlobHasher"],[3,"ContractEventHasher"],[3,"ContractEventV0Hasher"],[3,"LedgerInfoHasher"],[3,"DnsName"],[3,"EmptyError"],[3,"RegisteredCurrencies"],[3,"ValidatorSet"],[3,"AncestorSiblingIterator"],[3,"AncestorIterator"],[3,"SparseMerkleLeafNodeHasher"],[3,"AuthenticationKeyHasher"],[3,"ChangeSet"],[3,"TravelRuleMetadataV0"],[3,"UnstructuredBytesMetadata"],[3,"Module"],[3,"Script"],[3,"ScriptABI"],[3,"ArgumentABI"],[3,"TypeArgumentABI"],[3,"RawTransactionHasher"],[3,"TransactionInfoHasher"],[3,"TransactionHasher"],[3,"Ledger2WaypointConverterHasher"]]},\
"diem_validator_interface":{"doc":"","i":[[3,"DBDebuggerInterface","diem_validator_interface","",null,null],[3,"JsonRpcDebuggerInterface","","",null,null],[8,"DiemValidatorInterface","","",null,null],[10,"get_account_state_by_version","","",0,[[["version",6],["accountaddress",3]],[["result",6],["option",4]]]],[10,"get_committed_transactions","","",0,[[["version",6]],[["vec",3],["result",6]]]],[10,"get_latest_version","","",0,[[],[["version",6],["result",6]]]],[10,"get_version_by_account_sequence","","",0,[[["accountaddress",3]],[["option",4],["result",6]]]],[11,"get_diem_framework_modules_by_version","","",0,[[["version",6]],[["result",6],["vec",3]]]],[11,"get_admin_accounts","","Get the account states of the most critical accounts, …",0,[[["version",6]],[["result",6],["vec",3]]]],[3,"DebuggerStateView","","",null,null],[11,"new","","",1,[[["diemvalidatorinterface",8],["version",6]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"get_account_state_by_version","","",2,[[["version",6],["accountaddress",3]],[["result",6],["option",4]]]],[11,"get_committed_transactions","","",2,[[["version",6]],[["vec",3],["result",6]]]],[11,"get_latest_version","","",2,[[],[["version",6],["result",6]]]],[11,"get_version_by_account_sequence","","",2,[[["accountaddress",3]],[["option",4],["result",6]]]],[11,"get_account_state_by_version","","",3,[[["version",6],["accountaddress",3]],[["result",6],["option",4]]]],[11,"get_committed_transactions","","",3,[[["version",6]],[["vec",3],["result",6]]]],[11,"get_latest_version","","",3,[[],[["version",6],["result",6]]]],[11,"get_version_by_account_sequence","","",3,[[["accountaddress",3]],[["option",4],["result",6]]]],[11,"get","","",1,[[["accesspath",3]],[["result",6],["option",4]]]],[11,"multi_get","","",1,[[],[["vec",3],["result",6]]]],[11,"is_genesis","","",1,[[]]],[11,"new","","",2,[[],["result",6]]],[11,"open","","",3,[[["asref",8],["path",3],["clone",8]],["result",6]]]],"p":[[8,"DiemValidatorInterface"],[3,"DebuggerStateView"],[3,"JsonRpcDebuggerInterface"],[3,"DBDebuggerInterface"]]},\
"diem_vault_client":{"doc":"","i":[[0,"dev","diem_vault_client","",null,null],[5,"test_host_safe","diem_vault_client::dev","This will return the vault host, if vault was started …",null,[[],[["string",3],["option",4]]]],[5,"test_host","","This will return the vault host or panic.",null,[[],["string",3]]],[17,"ROOT_TOKEN","","",null,null],[3,"VaultRunner","","Provide an instance of Vault if vault is installed on the …",null,null],[11,"run","","Instantiates a new instance of Vault if one is available …",0,[[],[["string",3],["result",4]]]],[11,"host","","",0,[[]]],[11,"root_token","","",0,[[]]],[11,"client","","",0,[[],["client",3]]],[0,"fuzzing","diem_vault_client","",null,null],[5,"arb_generic_response","diem_vault_client::fuzzing","",null,[[]]],[5,"arb_policy_list_response","","",null,[[]]],[5,"arb_secret_list_response","","",null,[[]]],[5,"arb_secret_read_response","","",null,[[]]],[5,"arb_token_create_response","","",null,[[]]],[5,"arb_token_renew_response","","",null,[[]]],[5,"arb_transit_create_response","","",null,[[]]],[5,"arb_transit_export_response","","",null,[[]]],[5,"arb_transit_list_response","","",null,[[]]],[5,"arb_transit_read_key","","",null,[[]]],[5,"arb_transit_read_response","","",null,[[]]],[5,"arb_transit_sign_response","","",null,[[]]],[5,"arb_unsealed_response","","",null,[[]]],[4,"Error","diem_vault_client","",null,null],[13,"HttpError","","",1,null],[13,"InternalError","","",1,null],[13,"MissingField","","",1,null],[13,"NotFound","","",1,null],[13,"SerializationError","","",1,null],[13,"SyntheticError","","",1,null],[3,"Client","","Client provides a client around the restful interface to …",null,null],[11,"new","","",2,[[["string",3],["option",4],["option",4]]]],[11,"delete_policy","","",2,[[],[["result",4],["error",4]]]],[11,"list_policies","","",2,[[],[["vec",3],["error",4],["result",4]]]],[11,"read_policy","","Retrieves the policy at the given policy name.",2,[[],[["result",4],["error",4],["policy",3]]]],[11,"set_policy","","Create a new policy in Vault, see the explanation for …",2,[[["policy",3]],[["result",4],["error",4]]]],[11,"create_token","","Creates a new token or identity for accessing Vault. The …",2,[[["vec",3]],[["string",3],["result",4],["error",4]]]],[11,"renew_token_self","","",2,[[["option",4]],[["result",4],["error",4]]]],[11,"revoke_token_self","","",2,[[],[["result",4],["error",4]]]],[11,"list_secrets","","List all stored secrets",2,[[],[["vec",3],["error",4],["result",4]]]],[11,"delete_secret","","Delete a specific secret store",2,[[],[["result",4],["error",4]]]],[11,"read_secret","","Read a key/value pair from a given secret store.",2,[[],[["result",4],["error",4],["readresponse",3]]]],[11,"create_ed25519_key","","",2,[[],[["result",4],["error",4]]]],[11,"delete_key","","",2,[[],[["result",4],["error",4]]]],[11,"export_ed25519_key","","",2,[[["option",4]],[["ed25519privatekey",3],["result",4],["error",4]]]],[11,"import_ed25519_key","","",2,[[["ed25519privatekey",3]],[["result",4],["error",4]]]],[11,"list_keys","","",2,[[],[["vec",3],["error",4],["result",4]]]],[11,"read_ed25519_key","","",2,[[],[["error",4],["result",4],["vec",3]]]],[11,"rotate_key","","",2,[[],[["result",4],["error",4]]]],[11,"trim_key_versions","","Trims the number of key versions held in vault storage. …",2,[[],[["ed25519publickey",3],["error",4],["result",4]]]],[11,"sign_ed25519","","",2,[[["option",4]],[["result",4],["ed25519signature",3],["error",4]]]],[11,"write_secret","","Create or update a key/value pair in a given secret store.",2,[[["option",4],["value",4]],[["result",4],["error",4]]]],[11,"unsealed","","Returns whether or not the vault is unsealed (can be read …",2,[[],[["error",4],["result",4]]]],[5,"process_generic_response","","Processes a generic response returned by a vault request. …",null,[[["response",3]],[["result",4],["error",4]]]],[5,"process_policy_list_response","","Processes the response returned by a policy list vault …",null,[[["response",3]],[["vec",3],["error",4],["result",4]]]],[5,"process_policy_read_response","","Processes the response returned by a policy read vault …",null,[[["response",3]],[["result",4],["error",4],["policy",3]]]],[5,"process_secret_list_response","","Processes the response returned by a secret list vault …",null,[[["response",3]],[["vec",3],["error",4],["result",4]]]],[5,"process_secret_read_response","","Processes the response returned by a secret read vault …",null,[[["response",3]],[["result",4],["error",4],["readresponse",3]]]],[5,"process_token_create_response","","Processes the response returned by a token create vault …",null,[[["response",3]],[["string",3],["result",4],["error",4]]]],[5,"process_token_renew_response","","Processes the response returned by a token renew vault …",null,[[["response",3]],[["result",4],["error",4]]]],[5,"process_transit_create_response","","Processes the response returned by a transit key create …",null,[[["response",3]],[["result",4],["error",4]]]],[5,"process_transit_export_response","","Processes the response returned by a transit key export …",null,[[["option",4],["response",3]],[["ed25519privatekey",3],["result",4],["error",4]]]],[5,"process_transit_list_response","","Processes the response returned by a transit key list …",null,[[["response",3]],[["vec",3],["error",4],["result",4]]]],[5,"process_transit_read_response","","Processes the response returned by a transit key read …",null,[[["response",3]],[["error",4],["result",4],["vec",3]]]],[5,"process_transit_restore_response","","Processes the response returned by a transit key restore …",null,[[["response",3]],[["result",4],["error",4]]]],[5,"process_transit_sign_response","","Processes the response returned by a transit key sign …",null,[[["response",3]],[["result",4],["ed25519signature",3],["error",4]]]],[5,"process_unsealed_response","","Processes the response returned by a seal-status() vault …",null,[[["response",3]],[["error",4],["result",4]]]],[3,"KeyBackup","","Key backup / restore format Example: { \\\"policy\\\":{ …",null,null],[11,"new","","",3,[[["ed25519privatekey",3]]]],[3,"KeyBackupPolicy","","",null,null],[3,"KeyBackupInfo","","",null,null],[3,"BackupInfo","","",null,null],[3,"ReadResponse","","Provides a simple wrapper for all read APIs.",null,null],[12,"creation_time","","",4,null],[12,"value","","",4,null],[12,"version","","",4,null],[11,"new","","",4,[[["string",3]]]],[3,"ReadKey","","",null,null],[3,"Policy","","This data structure is used to represent both policies …",null,null],[11,"new","","",5,[[]]],[11,"add_policy","","",5,[[["capability",4],["vec",3]]]],[3,"PolicyPaths","","Represents the policy for a given path.",null,null],[3,"PathPolicy","","Represents the set of capabilities used within a policy.",null,null],[4,"Capability","","The various set of capabilities available to a policy …",null,null],[13,"Create","","",6,null],[13,"Delete","","",6,null],[13,"Deny","","",6,null],[13,"List","","",6,null],[13,"Read","","",6,null],[13,"Sudo","","",6,null],[13,"Update","","",6,null],[11,"from","diem_vault_client::dev","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","diem_vault_client","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"test_only_hash","","",7,[[],["hashvalue",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"test_only_hash","","",8,[[],["hashvalue",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"test_only_hash","","",9,[[],["hashvalue",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"test_only_hash","","",10,[[],["hashvalue",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"test_only_hash","","",11,[[],["hashvalue",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"test_only_hash","","",12,[[],["hashvalue",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"test_only_hash","","",6,[[],["hashvalue",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",1,[[["decodeerror",4]]]],[11,"from","","",1,[[["cryptomaterialerror",4]]]],[11,"from","","",1,[[["error",3]]]],[11,"from","","",1,[[["response",3]]]],[11,"from","","",1,[[["error",3]]]],[11,"clone","","",5,[[],["policy",3]]],[11,"clone","","",11,[[],["policypaths",3]]],[11,"clone","","",12,[[],["pathpolicy",3]]],[11,"clone","","",6,[[],["capability",4]]],[11,"default","","",7,[[],["keybackuppolicy",3]]],[11,"default","","",8,[[],["keybackupinfo",3]]],[11,"default","","",9,[[],["backupinfo",3]]],[11,"default","","",5,[[],["policy",3]]],[11,"default","","",11,[[],["policypaths",3]]],[11,"default","","",12,[[],["pathpolicy",3]]],[11,"eq","","",1,[[["error",4]]]],[11,"ne","","",1,[[["error",4]]]],[11,"eq","","",3,[[["keybackup",3]]]],[11,"ne","","",3,[[["keybackup",3]]]],[11,"eq","","",7,[[["keybackuppolicy",3]]]],[11,"ne","","",7,[[["keybackuppolicy",3]]]],[11,"eq","","",8,[[["keybackupinfo",3]]]],[11,"ne","","",8,[[["keybackupinfo",3]]]],[11,"eq","","",9,[[["backupinfo",3]]]],[11,"ne","","",9,[[["backupinfo",3]]]],[11,"eq","","",10,[[["readkey",3]]]],[11,"ne","","",10,[[["readkey",3]]]],[11,"eq","","",5,[[["policy",3]]]],[11,"ne","","",5,[[["policy",3]]]],[11,"eq","","",11,[[["policypaths",3]]]],[11,"ne","","",11,[[["policypaths",3]]]],[11,"eq","","",12,[[["pathpolicy",3]]]],[11,"ne","","",12,[[["pathpolicy",3]]]],[11,"eq","","",6,[[["capability",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"try_from","","",5,[[["value",4]],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]]],"p":[[3,"VaultRunner"],[4,"Error"],[3,"Client"],[3,"KeyBackup"],[3,"ReadResponse"],[3,"Policy"],[4,"Capability"],[3,"KeyBackupPolicy"],[3,"KeyBackupInfo"],[3,"BackupInfo"],[3,"ReadKey"],[3,"PolicyPaths"],[3,"PathPolicy"]]},\
"diem_vm":{"doc":"The VM runtimeTransaction flowThis is the path taken to …","i":[[0,"data_cache","diem_vm","Scratchpad for on chain values during the execution.",null,null],[3,"StateViewCache","diem_vm::data_cache","A local cache for a given a <code>StateView</code>. The cache is …",null,null],[11,"new","","Create a <code>StateViewCache</code> give a <code>StateView</code>. Hold updates to …",0,[[["stateview",8]]]],[3,"RemoteStorage","","",null,null],[11,"new","","",1,[[]]],[11,"get","","",1,[[["accesspath",3]],[["option",4],["partialvmresult",6]]]],[0,"transaction_metadata","diem_vm","",null,null],[3,"TransactionMetadata","diem_vm::transaction_metadata","",null,null],[12,"sender","","",2,null],[12,"authentication_key_preimage","","",2,null],[12,"sequence_number","","",2,null],[12,"max_gas_amount","","",2,null],[12,"gas_unit_price","","",2,null],[12,"transaction_size","","",2,null],[12,"expiration_timestamp_secs","","",2,null],[12,"chain_id","","",2,null],[12,"script_hash","","",2,null],[11,"new","","",2,[[["signedtransaction",3]]]],[11,"max_gas_amount","","",2,[[],[["gascarrier",6],["gasunits",3]]]],[11,"gas_unit_price","","",2,[[],[["gascarrier",6],["gasprice",3]]]],[11,"sender","","",2,[[],["accountaddress",3]]],[11,"authentication_key_preimage","","",2,[[]]],[11,"sequence_number","","",2,[[]]],[11,"transaction_size","","",2,[[],[["gascarrier",6],["abstractmemorysize",3]]]],[11,"expiration_timestamp_secs","","",2,[[]]],[11,"chain_id","","",2,[[],["chainid",3]]],[0,"diem_transaction_executor","diem_vm","",null,null],[3,"DiemVM","diem_vm::diem_transaction_executor","",null,null],[11,"new","","",3,[[]]],[11,"internals","","",3,[[],["diemvminternals",3]]],[11,"failed_transaction_cleanup","","Generates a transaction output for a transaction that …",3,[[["gasunits",3],["transactionmetadata",3],["stateviewcache",3],["identstr",3],["costtable",3],["vmstatus",4],["gascarrier",6]],["transactionoutput",3]]],[11,"execute_writeset_transaction","","",3,[[["stateviewcache",3],["writesetpayload",4],["transactionmetadata",3]],[["result",4],["vmstatus",4]]]],[11,"execute_block_and_keep_vm_status","","Alternate form of \'execute_block\' that keeps the …",3,[[["transaction",4],["vec",3],["stateview",8]],[["result",4],["vmstatus",4],["vec",3]]]],[0,"diem_transaction_validator","diem_vm","",null,null],[3,"DiemVMValidator","diem_vm::diem_transaction_validator","",null,null],[11,"new","","",4,[[]]],[11,"init_with_config","","",4,[[["vmpublishingoption",3],["diemversion",3],["vmconfig",3]]]],[0,"logging","diem_vm","",null,null],[3,"AdapterLogSchema","diem_vm::logging","",null,null],[11,"name","","",5,[[["logentry",4]]]],[11,"block_id","","",5,[[["hashvalue",3]]]],[11,"first_version","","",5,[[["version",6]]]],[11,"base_version","","",5,[[["version",6]]]],[11,"txn_id","","",5,[[]]],[11,"new","","",5,[[["stateviewid",4]]]],[4,"LogEntry","","",null,null],[13,"Execution","","",6,null],[13,"Validation","","",6,null],[13,"Miscellaneous","","",6,null],[0,"system_module_names","diem_vm","Names of modules, functions, and types used by Diem …",null,null],[7,"DIEM_BLOCK_MODULE","diem_vm::system_module_names","The ModuleId for the diem writeset manager module The …",null,null],[7,"SCRIPT_PROLOGUE_NAME","","",null,null],[7,"MODULE_PROLOGUE_NAME","","",null,null],[7,"WRITESET_PROLOGUE_NAME","","",null,null],[7,"WRITESET_EPILOGUE_NAME","","",null,null],[7,"USER_EPILOGUE_NAME","","",null,null],[7,"BLOCK_PROLOGUE","","",null,null],[5,"convert_changeset_and_events","diem_vm","",null,[[["moveevent",6],["movechangeset",3],["vec",3]],[["vmstatus",4],["result",4]]]],[8,"VMValidator","","This trait describes the VM\'s validation interfaces.",null,null],[10,"validate_transaction","","Executes the prologue of the Diem Account and verifies …",7,[[["signedtransaction",3],["stateview",8]],["vmvalidatorresult",3]]],[8,"VMExecutor","","This trait describes the VM\'s execution interface.",null,null],[10,"execute_block","","Executes a block of transactions and returns output for …",8,[[["transaction",4],["vec",3],["stateview",8]],[["vec",3],["result",4],["vmstatus",4]]]],[11,"from","diem_vm::data_cache","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","diem_vm::transaction_metadata","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","diem_vm::diem_transaction_executor","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","diem_vm::diem_transaction_validator","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","diem_vm::logging","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"test_only_hash","","",6,[[],["hashvalue",3]]],[11,"vzip","","",6,[[]]],[11,"erased_serialize","","",6,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"validate_transaction","diem_vm::diem_transaction_validator","Determine if a transaction is valid. Will return <code>None</code> if …",4,[[["signedtransaction",3],["stateview",8]],["vmvalidatorresult",3]]],[11,"execute_block","diem_vm::diem_transaction_executor","Execute a block of <code>transactions</code>. The output vector will …",3,[[["transaction",4],["vec",3],["stateview",8]],[["vec",3],["result",4],["vmstatus",4]]]],[11,"clone","diem_vm::diem_transaction_validator","",4,[[],["diemvmvalidator",3]]],[11,"clone","diem_vm::logging","",5,[[],["adapterlogschema",3]]],[11,"clone","","",6,[[],["logentry",4]]],[11,"default","diem_vm::transaction_metadata","",2,[[]]],[11,"serialize","diem_vm::logging","",6,[[],["result",4]]],[11,"fetch_config","diem_vm::data_cache","",0,[[["accesspath",3]],[["option",4],["vec",3]]]],[11,"fetch_config","","",1,[[["accesspath",3]],[["option",4],["vec",3]]]],[11,"visit","diem_vm::logging","",5,[[["visitor",8]]]],[11,"get","diem_vm::data_cache","",0,[[["accesspath",3]],[["result",6],["option",4]]]],[11,"multi_get","","",0,[[],[["vec",3],["result",6]]]],[11,"is_genesis","","",0,[[]]],[11,"id","","",0,[[],["stateviewid",4]]],[11,"get_module","","",0,[[["moduleid",3]],[["option",4],["vmresult",6]]]],[11,"get_resource","","",0,[[["structtag",3],["accountaddress",3]],[["option",4],["partialvmresult",6]]]],[11,"get_module","","",1,[[["moduleid",3]],[["option",4],["vmresult",6]]]],[11,"get_resource","","",1,[[["structtag",3],["accountaddress",3]],[["option",4],["partialvmresult",6]]]],[11,"alert","diem_vm::logging","",5,[[]]]],"p":[[3,"StateViewCache"],[3,"RemoteStorage"],[3,"TransactionMetadata"],[3,"DiemVM"],[3,"DiemVMValidator"],[3,"AdapterLogSchema"],[4,"LogEntry"],[8,"VMValidator"],[8,"VMExecutor"]]},\
"diem_wallet":{"doc":"","i":[[0,"io_utils","diem_wallet","Utils for read/write A module to generate, store and load …",null,null],[17,"DELIMITER","diem_wallet::io_utils","Delimiter used to ser/deserialize account data.",null,null],[5,"recover","","Recover wallet from the path specified.",null,[[],[["result",6],["walletlibrary",3]]]],[5,"write_recovery","","Write wallet seed to file.",null,[[["walletlibrary",3]],["result",6]]],[3,"Mnemonic","diem_wallet","Mnemonic seed for deterministic key derivation based on …",null,null],[3,"WalletLibrary","","WalletLibrary contains all the information needed to …",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"sign_txn","","",1,[[["rawtransaction",3]],[["signedtransaction",3],["error",3],["result",6]]]],[11,"from","","Generate mnemonic from string.",0,[[],[["result",6],["mnemonic",3]]]],[11,"mnemonic","","Generate mnemonic from entropy byte-array.",0,[[],[["result",6],["mnemonic",3]]]],[11,"write","","Write mnemonic to output_file_path.",0,[[["path",3]],["result",6]]],[11,"read","","Read mnemonic from input_file_path.",0,[[["path",3]],["result",6]]],[11,"new","","Constructor that generates a Mnemonic from OS randomness …",1,[[]]],[11,"new_from_mnemonic","","Constructor that instantiates a new WalletLibrary from …",1,[[["mnemonic",3]]]],[11,"mnemonic","","Function that returns the string representation of the …",1,[[],["string",3]]],[11,"write_recovery","","Function that writes the wallet Mnemonic to file NOTE: …",1,[[["path",3]],["result",6]]],[11,"recover","","Recover wallet from input_file_path",1,[[["path",3]],[["result",6],["walletlibrary",3]]]],[11,"key_leaf","","Get the current ChildNumber in u64 format",1,[[]]],[11,"generate_addresses","","Function that iterates from the current key_leaf until …",1,[[],["result",6]]],[11,"new_address_at_child_number","","Function that allows to get the address of a particular …",1,[[["childnumber",3]],[["result",6],["accountaddress",3]]]],[11,"new_address","","Function that generates a new key and adds it to the …",1,[[],["result",6]]],[11,"get_addresses","","Returns a list of all addresses controlled by this wallet …",1,[[],[["vec",3],["result",6]]]],[11,"sign_txn","","Simple public function that allows to sign a Diem …",1,[[["rawtransaction",3]],[["result",6],["signedtransaction",3]]]],[11,"get_private_key","","Return private key for an address in the wallet",1,[[["accountaddress",3]],[["ed25519privatekey",3],["result",6]]]],[11,"get_authentication_key","","Return authentication key (AuthenticationKey) for an …",1,[[["accountaddress",3]],[["authenticationkey",3],["result",6]]]]],"p":[[3,"Mnemonic"],[3,"WalletLibrary"]]},\
"diem_workspace_hack":{"doc":"","i":[],"p":[]},\
"diem_writeset_generator":{"doc":"","i":[[0,"release_flow","diem_writeset_generator","",null,null],[0,"artifacts","diem_writeset_generator::release_flow","",null,null],[3,"ReleaseArtifact","diem_writeset_generator::release_flow::artifacts","Checkin the release artifact to a local file to make sure …",null,null],[12,"chain_id","","",0,null],[12,"version","","",0,null],[12,"stdlib_hash","","",0,null],[5,"save_release_artifact","","",null,[[["releaseartifact",3]],["result",6]]],[5,"load_artifact","","",null,[[["chainid",3]],[["releaseartifact",3],["result",6]]]],[5,"hash_for_modules","","Generate a unique hash for a list of modules",null,[[],[["hashvalue",3],["result",6]]]],[0,"test_utils","diem_writeset_generator::release_flow","",null,null],[5,"release_modules","diem_writeset_generator::release_flow::test_utils","",null,[[],["vec",3]]],[5,"create_release","diem_writeset_generator::release_flow","",null,[[["chainid",3],["string",3]],[["result",6],["writesetpayload",4]]]],[5,"verify_release","","",null,[[["chainid",3],["string",3],["writesetpayload",4]],["result",6]]],[5,"encode_custom_script","diem_writeset_generator","",null,[[["accountaddress",3],["option",4]],["writesetpayload",4]]],[5,"encode_halt_network_payload","","",null,[[],["writesetpayload",4]]],[5,"encode_remove_validators_payload","","",null,[[["accountaddress",3],["vec",3]],["writesetpayload",4]]],[5,"create_release","","",null,[[["chainid",3],["string",3]],[["result",6],["writesetpayload",4]]]],[5,"verify_release","","",null,[[["chainid",3],["string",3],["writesetpayload",4]],["result",6]]],[5,"build_changeset","","",null,[[],["changeset",3]]],[5,"build_stdlib_upgrade_changeset","","",null,[[],["changeset",3]]],[3,"GenesisSession","","",null,null],[11,"from","diem_writeset_generator::release_flow::artifacts","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","diem_writeset_generator","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"clone","diem_writeset_generator::release_flow::artifacts","",0,[[],["releaseartifact",3]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"exec_func","diem_writeset_generator","",1,[[["vec",3],["vec",3],["vec",3],["typetag",4]]]],[11,"exec_script","","",1,[[["script",3],["accountaddress",3]]]],[11,"set_diem_version","","",1,[[["version",6]]]]],"p":[[3,"ReleaseArtifact"],[3,"GenesisSession"]]},\
"diemdb":{"doc":"This crate provides [<code>DiemDB</code>] which represents physical …","i":[[0,"diemsum","diemdb","",null,null],[3,"Diemsum","diemdb::diemsum","",null,null],[11,"new","","",0,[[["asref",8],["path",3],["clone",8]],["result",6]]],[11,"get_startup_info","","",0,[[],[["startupinfo",3],["result",6]]]],[11,"get_committed_version","","",0,[[],[["result",6],["version",6]]]],[11,"scan_txn_by_version","","",0,[[["version",6]],[["vec",3],["result",6]]]],[11,"get_txn_by_version","","",0,[[["version",6]],[["result",6],["transaction",4]]]],[11,"get_account_state_by_version","","",0,[[["version",6],["accountaddress",3]],[["result",6],["option",4]]]],[11,"scan_events_by_seq","","",0,[[["eventkey",3]],[["result",6],["vec",3]]]],[11,"get_events_by_version","","",0,[[["version",6]],[["result",6],["vec",3]]]],[0,"test_helper","diemdb","This module provides reusable helpers in tests.",null,null],[5,"arb_blocks_to_commit_impl","diemdb::test_helper","This returns a <code>proptest</code> <code>Strategy</code> that yields an arbitrary …",null,[[]]],[5,"arb_blocks_to_commit","","",null,[[]]],[5,"arb_mock_genesis","","",null,[[]]],[0,"backup","diemdb","",null,null],[0,"backup_handler","diemdb::backup","",null,null],[3,"BackupHandler","diemdb::backup::backup_handler","<code>BackupHandler</code> provides functionalities for DiemDB data …",null,null],[11,"get_transaction_iter","","Gets an iterator that yields a range of transactions.",1,[[["version",6]],["result",6]]],[11,"get_transaction_range_proof","","Gets the proof for a transaction chunk. N.B. the …",1,[[["version",6]],["result",6]]],[11,"get_account_iter","","Gets an iterator which can yield all accounts in the …",1,[[["version",6]],[["box",3],["result",6]]]],[11,"get_account_state_range_proof","","Gets the proof that proves a range of accounts.",1,[[["version",6],["hashvalue",3]],[["sparsemerklerangeproof",3],["result",6]]]],[11,"get_db_state","","Gets the epoch, commited version, and synced version of …",1,[[],[["option",4],["result",6]]]],[11,"get_state_root_proof","","Gets the proof of the state root at specified version. …",1,[[["version",6]],["result",6]]],[11,"get_epoch_ending_ledger_info_iter","","",1,[[],["result",6]]],[3,"DbState","","",null,null],[12,"epoch","","",2,null],[12,"committed_version","","",2,null],[12,"synced_version","","",2,null],[0,"restore_handler","diemdb::backup","",null,null],[3,"RestoreHandler","diemdb::backup::restore_handler","Provides functionalities for DiemDB data restore.",null,null],[12,"diemdb","","",3,null],[11,"get_state_restore_receiver","","",3,[[["version",6],["hashvalue",3]],[["result",6],["jellyfishmerklerestore",3]]]],[11,"save_ledger_infos","","",3,[[],["result",6]]],[11,"confirm_or_save_frozen_subtrees","","",3,[[["leafcount",6]],["result",6]]],[11,"save_transactions","","",3,[[["version",6]],["result",6]]],[11,"get_tree_state","","",3,[[["leafcount",6]],[["result",6],["treestate",3]]]],[11,"get_next_expected_transaction_version","","",3,[[],[["result",6],["version",6]]]],[0,"errors","diemdb","This module defines error types used by <code>DiemDB</code>.",null,null],[4,"DiemDbError","diemdb::errors","This enum defines errors commonly used among <code>DiemDB</code> APIs.",null,null],[13,"NotFound","","A requested item is not found.",4,null],[13,"TooManyRequested","","Requested too many items.",4,null],[0,"metrics","diemdb","",null,null],[7,"DIEM_STORAGE_LEDGER","diemdb::metrics","",null,null],[7,"DIEM_STORAGE_COMMITTED_TXNS","","",null,null],[7,"DIEM_STORAGE_LATEST_TXN_VERSION","","",null,null],[7,"DIEM_STORAGE_LEDGER_VERSION","","",null,null],[7,"DIEM_STORAGE_NEXT_BLOCK_EPOCH","","",null,null],[7,"DIEM_STORAGE_PRUNE_WINDOW","","",null,null],[7,"DIEM_STORAGE_PRUNER_LEAST_READABLE_STATE_VERSION","","",null,null],[7,"DIEM_STORAGE_API_LATENCY_SECONDS","","",null,null],[7,"DIEM_STORAGE_OTHER_TIMERS_SECONDS","","",null,null],[7,"DIEM_STORAGE_ROCKSDB_PROPERTIES","","Rocksdb metrics",null,null],[0,"schema","diemdb","This module defines representation of Diem core data …",null,null],[0,"fuzzing","diemdb::schema","",null,null],[5,"fuzz_decode","diemdb::schema::fuzzing","",null,[[]]],[17,"EPOCH_BY_VERSION_CF_NAME","diemdb::schema","",null,null],[17,"EVENT_ACCUMULATOR_CF_NAME","","",null,null],[17,"EVENT_BY_KEY_CF_NAME","","",null,null],[17,"EVENT_BY_VERSION_CF_NAME","","",null,null],[17,"EVENT_CF_NAME","","",null,null],[17,"JELLYFISH_MERKLE_NODE_CF_NAME","","",null,null],[17,"LEDGER_COUNTERS_CF_NAME","","",null,null],[17,"STALE_NODE_INDEX_CF_NAME","","",null,null],[17,"TRANSACTION_CF_NAME","","",null,null],[17,"TRANSACTION_ACCUMULATOR_CF_NAME","","",null,null],[17,"TRANSACTION_BY_ACCOUNT_CF_NAME","","",null,null],[17,"TRANSACTION_INFO_CF_NAME","","",null,null],[5,"test_save_blocks_impl","diemdb","",null,[[["vec",3]]]],[3,"DiemDB","","This holds a handle to the underlying DB responsible for …",null,null],[11,"open","","",5,[[["asref",8],["option",4],["clone",8],["rocksdbconfig",3],["path",3]],["result",6]]],[11,"open_as_secondary","","",5,[[["asref",8],["rocksdbconfig",3],["clone",8],["path",3]],["result",6]]],[11,"new_for_test","","This opens db in non-readonly mode, without the pruner.",5,[[["asref",8],["path",3],["clone",8]]]],[11,"update_rocksdb_properties","","This force the db to update rocksdb properties …",5,[[],["result",6]]],[11,"get_backup_handler","","Gets an instance of <code>BackupHandler</code> for data backup purpose.",5,[[],["backuphandler",3]]],[8,"GetRestoreHandler","","",null,null],[10,"get_restore_handler","","Gets an instance of <code>RestoreHandler</code> for data restore …",6,[[],["restorehandler",3]]],[11,"from","diemdb::diemsum","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","diemdb::backup::backup_handler","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","diemdb::backup::restore_handler","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","diemdb::errors","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","diemdb","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"clone","diemdb::backup::backup_handler","",1,[[],["backuphandler",3]]],[11,"clone","","",2,[[],["dbstate",3]]],[11,"clone","diemdb::backup::restore_handler","",3,[[],["restorehandler",3]]],[11,"fmt","diemdb::backup::backup_handler","",2,[[["formatter",3]],["result",6]]],[11,"fmt","diemdb::errors","",4,[[["formatter",3]],["result",6]]],[11,"fmt","diemdb","",5,[[["formatter",3]],["result",6]]],[11,"fmt","diemdb::backup::backup_handler","",2,[[["formatter",3]],["result",6]]],[11,"fmt","diemdb::errors","",4,[[["formatter",3]],["result",6]]],[11,"deserialize","diemdb::backup::backup_handler","",2,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"get_epoch_ending_ledger_infos","diemdb","",5,[[],[["epochchangeproof",3],["result",6]]]],[11,"get_latest_account_state","","",5,[[["accountaddress",3]],[["result",6],["option",4]]]],[11,"get_latest_ledger_info","","",5,[[],[["ledgerinfowithsignatures",4],["result",6]]]],[11,"get_txn_by_account","","Returns a transaction that is the <code>seq_num</code>-th one …",5,[[["version",6],["accountaddress",3]],[["option",4],["result",6]]]],[11,"get_transactions","","Gets a batch of transactions for the purpose of …",5,[[["version",6]],[["result",6],["transactionlistwithproof",3]]]],[11,"get_events","","",5,[[["order",4],["eventkey",3]],[["result",6],["vec",3]]]],[11,"get_events_with_proofs","","",5,[[["order",4],["option",4],["eventkey",3]],[["result",6],["vec",3]]]],[11,"get_epoch_ending_ledger_info","","Gets ledger info at specified version and ensures it\'s an …",5,[[],[["ledgerinfowithsignatures",4],["result",6]]]],[11,"get_state_proof_with_ledger_info","","",5,[[["ledgerinfowithsignatures",4]],["result",6]]],[11,"get_state_proof","","",5,[[],["result",6]]],[11,"get_account_state_with_proof","","",5,[[["version",6],["accountaddress",3]],[["accountstatewithproof",3],["result",6]]]],[11,"get_startup_info","","",5,[[],[["result",6],["option",4]]]],[11,"get_account_state_with_proof_by_version","","",5,[[["version",6],["accountaddress",3]],["result",6]]],[11,"get_latest_state_root","","",5,[[],["result",6]]],[11,"get_latest_tree_state","","",5,[[],[["result",6],["treestate",3]]]],[11,"get_block_timestamp","","",5,[[],["result",6]]],[11,"get_last_version_before_timestamp","","",5,[[["version",6]],[["result",6],["version",6]]]],[11,"get_latest_transaction_info_option","","",5,[[],[["option",4],["result",6]]]],[11,"get_accumulator_root_hash","","",5,[[["version",6]],[["result",6],["hashvalue",3]]]],[11,"save_transactions","","<code>first_version</code> is the version of the first transaction in …",5,[[["version",6],["option",4],["ledgerinfowithsignatures",4]],["result",6]]]],"p":[[3,"Diemsum"],[3,"BackupHandler"],[3,"DbState"],[3,"RestoreHandler"],[4,"DiemDbError"],[3,"DiemDB"],[8,"GetRestoreHandler"]]},\
"diemdb_benchmark":{"doc":"","i":[[5,"run_benchmark","diemdb_benchmark","",null,[[["pathbuf",3],["option",4]]]]],"p":[]},\
"disassembler":{"doc":"","i":[[0,"disassembler","disassembler","",null,null],[3,"DisassemblerOptions","disassembler::disassembler","Holds the various options that we support while …",null,null],[12,"only_externally_visible","","Only print non-private functions",0,null],[12,"print_code","","Print the bytecode for the instructions within the …",0,null],[12,"print_basic_blocks","","Print the basic blocks of the bytecode.",0,null],[12,"print_locals","","Print the locals inside each function body.",0,null],[11,"new","","",0,[[]]],[3,"Disassembler","","",null,null],[11,"new","","",1,[[["disassembleroptions",3],["sourcemapping",3]]]],[11,"from_module","","",1,[[["compiledmodule",3]],["result",6]]],[11,"add_coverage_map","","",1,[[["execcoveragemap",3]]]],[11,"disassemble_function_def","","",1,[[["functiondefinitionindex",3]],[["result",6],["string",3]]]],[11,"disassemble_struct_def","","",1,[[["structdefinitionindex",3]],[["result",6],["string",3]]]],[11,"disassemble","","",1,[[],[["result",6],["string",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"default","","",0,[[],["disassembleroptions",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"DisassemblerOptions"],[3,"Disassembler"]]},\
"docgen":{"doc":"","i":[[3,"DocgenOptions","docgen","Options passed into the documentation generator.",null,null],[12,"section_level_start","","The level where we start sectioning. Often markdown …",0,null],[12,"include_private_fun","","Whether to include private functions in the generated …",0,null],[12,"include_specs","","Whether to include specifications in the generated docs.",0,null],[12,"specs_inlined","","Whether to put specifications in the same section as a …",0,null],[12,"include_impl","","Whether to include Move implementations.",0,null],[12,"toc_depth","","Max depth to which sections are displayed in …",0,null],[12,"collapsed_sections","","Whether to use collapsed sections () for impl and specs",0,null],[12,"output_directory","","In which directory to store output.",0,null],[12,"doc_path","","In which directories to look for references.",0,null],[12,"root_doc_templates","","A list of paths to files containing templates for root …",0,null],[12,"references_file","","An optional file containing reference definitions. The …",0,null],[12,"include_dep_diagrams","","Whether to include dependency diagrams in the generated …",0,null],[12,"include_call_diagrams","","Whether to include call diagrams in the generated docs.",0,null],[3,"Docgen","","The documentation generator.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"clone","","",0,[[],["docgenoptions",3]]],[11,"default","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"serialize","","",0,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"new","","Creates a new documentation generator.",1,[[["globalenv",3],["docgenoptions",3]]]],[11,"gen","","Generate document contents, returning pairs of output …",1,[[],["vec",3]]]],"p":[[3,"DocgenOptions"],[3,"Docgen"]]},\
"errmapgen":{"doc":"","i":[[3,"ErrmapOptions","errmapgen","",null,null],[12,"error_prefix","","The constant prefix that determines if a constant is an …",0,null],[12,"error_category_module","","The module ID of the error category module",0,null],[12,"output_file","","In which file to store the output",0,null],[3,"ErrorDescription","","",null,null],[12,"code_name","","The constant name of error e.g., ECANT_PAY_DEPOSIT",1,null],[12,"code_description","","The code description. This is generated from the doc …",1,null],[3,"ErrorContext","","",null,null],[12,"category","","The error category e.g., INVALID_ARGUMENT",2,null],[12,"reason","","The error reason e.g., ECANT_PAY_DEPOSIT",2,null],[3,"ErrorMapping","","",null,null],[12,"error_categories","","The set of error categories and their descriptions",3,null],[12,"module_error_maps","","The set of modules, and the module-specific errors",3,null],[3,"ErrmapGen","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"clone","","",0,[[],["errmapoptions",3]]],[11,"clone","","",1,[[],["errordescription",3]]],[11,"clone","","",2,[[],["errorcontext",3]]],[11,"clone","","",3,[[],["errormapping",3]]],[11,"default","","",0,[[]]],[11,"default","","",3,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"add_error_category","","",3,[[["errordescription",3]],["result",6]]],[11,"add_module_error","","",3,[[["errordescription",3],["moduleid",3]],["result",6]]],[11,"from_file","","",3,[[["asref",8],["path",3]]]],[11,"to_file","","",3,[[["asref",8],["path",3]]]],[11,"get_explanation","","",3,[[["moduleid",3]],[["errorcontext",3],["option",4]]]],[11,"new","","",4,[[["globalenv",3],["errmapoptions",3]]]],[11,"save_result","","",4,[[]]],[11,"gen","","",4,[[]]]],"p":[[3,"ErrmapOptions"],[3,"ErrorDescription"],[3,"ErrorContext"],[3,"ErrorMapping"],[3,"ErrmapGen"]]},\
"execution_correctness":{"doc":"","i":[[8,"ExecutionCorrectness","execution_correctness","Interface for ExecutionCorrectness. It is basically the …",null,null],[10,"committed_block_id","","",0,[[],[["error",4],["result",4],["hashvalue",3]]]],[10,"reset","","",0,[[],[["result",4],["error",4]]]],[10,"execute_block","","Executes a block.",0,[[["block",3],["hashvalue",3]],[["statecomputeresult",3],["result",4],["error",4]]]],[10,"commit_blocks","","",0,[[["vec",3],["hashvalue",3],["ledgerinfowithsignatures",4]],[["result",4],["error",4]]]],[3,"ExecutionCorrectnessManager","","",null,null],[3,"Process","","",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"new","","",1,[[["nodeconfig",3]]]],[11,"new_local","","",1,[[["option",4],["socketaddr",4],["ed25519privatekey",3]]]],[11,"new_process","","",1,[[["socketaddr",4]]]],[11,"new_serializer","","",1,[[["option",4],["socketaddr",4],["ed25519privatekey",3]]]],[11,"new_thread","","",1,[[["option",4],["socketaddr",4],["ed25519privatekey",3]]]],[11,"client","","",1,[[],[["executioncorrectness",8],["box",3]]]],[11,"new","","",2,[[["nodeconfig",3]]]],[11,"start","","",2,[[]]]],"p":[[8,"ExecutionCorrectness"],[3,"ExecutionCorrectnessManager"],[3,"Process"]]},\
"executor":{"doc":"","i":[[0,"fuzzing","executor","",null,null],[5,"fuzz_execute_and_commit_chunk","executor::fuzzing","",null,[[["ledgerinfowithsignatures",4],["transactionlistwithproof",3]]]],[5,"fuzz_execute_and_commit_blocks","","",null,[[["vec",3],["ledgerinfowithsignatures",4]]]],[3,"FakeVM","","A fake VM implementing VMExecutor",null,null],[3,"FakeDb","","A fake database implementing DbReader and DbWriter",null,null],[0,"db_bootstrapper","executor","",null,null],[5,"generate_waypoint","executor::db_bootstrapper","",null,[[["dbreaderwriter",3],["transaction",4]],[["waypoint",3],["result",6]]]],[5,"maybe_bootstrap","","If current version + 1 != waypoint.version(), return …",null,[[["waypoint",3],["dbreaderwriter",3],["transaction",4]],["result",6]]],[3,"GenesisCommitter","","",null,null],[11,"new","","",0,[[["executor",3],["ledgerinfowithsignatures",4]],["result",6]]],[11,"waypoint","","",0,[[],["waypoint",3]]],[11,"commit","","",0,[[],["result",6]]],[5,"calculate_genesis","","",null,[[["transaction",4],["dbreaderwriter",3],["treestate",3]],[["result",6],["genesiscommitter",3]]]],[3,"Executor","executor","<code>Executor</code> implements all functionalities the execution …",null,null],[11,"committed_block_id","","",1,[[],["hashvalue",3]]],[11,"new","","Constructs an <code>Executor</code>.",1,[[["dbreaderwriter",3]]]],[11,"new_on_unbootstrapped_db","","",1,[[["dbreaderwriter",3],["treestate",3]]]],[5,"process_write_set","","For all accounts modified by this transaction, find the …",null,[[["hashmap",3],["writeset",3],["transaction",4]],[["result",6],["hashmap",3]]]],[11,"from","executor::fuzzing","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","executor::db_bootstrapper","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","executor","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"execute_block","executor::fuzzing","",2,[[["stateview",8],["transaction",4],["vec",3]],[["vec",3],["result",6],["vmstatus",4]]]],[11,"execute_and_commit_chunk","executor","",1,[[["ledgerinfowithsignatures",4],["option",4],["transactionlistwithproof",3]],[["vec",3],["result",6]]]],[11,"committed_block_id","","",1,[[],[["result",6],["hashvalue",3],["error",4]]]],[11,"reset","","",1,[[],[["error",4],["result",6]]]],[11,"execute_block","","",1,[[["hashvalue",3]],[["statecomputeresult",3],["result",6],["error",4]]]],[11,"commit_blocks","","",1,[[["hashvalue",3],["vec",3],["ledgerinfowithsignatures",4]],[["error",4],["result",6]]]],[11,"replay_chunk","","",1,[[["vec",3],["transaction",4],["version",6],["transactioninfo",3],["vec",3]],["result",6]]],[11,"expecting_version","","",1,[[],["version",6]]],[11,"get_block_timestamp","executor::fuzzing","",3,[[],["result",6]]],[11,"get_epoch_ending_ledger_infos","","",3,[[],[["result",6],["epochchangeproof",3]]]],[11,"get_transactions","","",3,[[["version",6]],[["result",6],["transactionlistwithproof",3]]]],[11,"get_events","","",3,[[["eventkey",3],["order",4]],[["result",6],["vec",3]]]],[11,"get_events_with_proofs","","",3,[[["eventkey",3],["option",4],["order",4]],[["vec",3],["result",6]]]],[11,"get_latest_account_state","","",3,[[["accountaddress",3]],[["option",4],["result",6]]]],[11,"get_latest_ledger_info","","",3,[[],[["ledgerinfowithsignatures",4],["result",6]]]],[11,"get_latest_version","","",3,[[],[["version",6],["result",6]]]],[11,"get_latest_commit_metadata","","",3,[[],["result",6]]],[11,"get_startup_info","","",3,[[],[["option",4],["result",6]]]],[11,"get_txn_by_account","","",3,[[["accountaddress",3],["version",6]],[["option",4],["result",6]]]],[11,"get_state_proof_with_ledger_info","","",3,[[["ledgerinfowithsignatures",4]],["result",6]]],[11,"get_state_proof","","",3,[[],["result",6]]],[11,"get_account_state_with_proof","","",3,[[["accountaddress",3],["version",6]],[["result",6],["accountstatewithproof",3]]]],[11,"get_account_state_with_proof_by_version","","",3,[[["accountaddress",3],["version",6]],["result",6]]],[11,"get_latest_state_root","","",3,[[],["result",6]]],[11,"get_latest_tree_state","","",3,[[],[["result",6],["treestate",3]]]],[11,"get_epoch_ending_ledger_info","","",3,[[],[["ledgerinfowithsignatures",4],["result",6]]]],[11,"save_transactions","","",3,[[["ledgerinfowithsignatures",4],["option",4],["version",6]],["result",6]]]],"p":[[3,"GenesisCommitter"],[3,"Executor"],[3,"FakeVM"],[3,"FakeDb"]]},\
"executor_benchmark":{"doc":"","i":[[5,"run_benchmark","executor_benchmark","Runs the benchmark with given parameters.",null,[[["pathbuf",3],["option",4]]]]],"p":[]},\
"executor_test_helpers":{"doc":"","i":[[0,"integration_test_impl","executor_test_helpers","",null,null],[5,"test_execution_with_storage_impl","executor_test_helpers::integration_test_impl","",null,[[],[["diemdb",3],["arc",3]]]],[5,"create_db_and_executor","","",null,[[["transaction",4],["asref",8],["path",3]]]],[5,"verify_account_balance","","",null,[[["accountstatewithproof",3]],["result",6]]],[5,"verify_transactions","","",null,[[["transactionlistwithproof",3]],["result",6]]],[5,"verify_committed_txn_status","","",null,[[["option",4],["transaction",4],["transactionwithproof",3]],["result",6]]],[5,"bootstrap_genesis","executor_test_helpers","Helper function for test to blindly bootstrap without …",null,[[["dbreaderwriter",3],["transaction",4]],[["waypoint",3],["result",6]]]],[5,"start_storage_service","","",null,[[]]],[5,"gen_block_id","","",null,[[],["hashvalue",3]]],[5,"gen_ledger_info_with_sigs","","",null,[[["hashvalue",3],["statecomputeresult",3],["validatorsigner",3],["vec",3]],["ledgerinfowithsignatures",4]]],[5,"extract_signer","","",null,[[["nodeconfig",3]],["validatorsigner",3]]],[5,"gen_block_metadata","","",null,[[["accountaddress",3]],["blockmetadata",3]]],[5,"get_test_signed_transaction","","",null,[[["ed25519publickey",3],["option",4],["ed25519privatekey",3],["script",3],["accountaddress",3]],["transaction",4]]]],"p":[]},\
"executor_types":{"doc":"","i":[[4,"Error","executor_types","Different reasons for proposal rejection",null,null],[13,"BlockNotFound","","",0,null],[13,"InternalError","","",0,null],[12,"error","executor_types::Error","",1,null],[13,"SerializationError","executor_types","",0,null],[8,"ChunkExecutor","","",null,null],[10,"execute_and_commit_chunk","","Verifies the transactions based on the provided proofs …",2,[[["transactionlistwithproof",3],["ledgerinfowithsignatures",4],["option",4]],[["result",6],["vec",3]]]],[8,"BlockExecutor","","",null,null],[10,"committed_block_id","","Get the latest committed block id",3,[[],[["hashvalue",3],["error",4],["result",6]]]],[10,"reset","","Reset the internal state including cache with newly …",3,[[],[["error",4],["result",6]]]],[10,"execute_block","","Executes a block.",3,[[["hashvalue",3]],[["error",4],["result",6],["statecomputeresult",3]]]],[10,"commit_blocks","","Saves eligible blocks to persistent storage. If we have …",3,[[["ledgerinfowithsignatures",4],["vec",3],["hashvalue",3]],[["result",6],["error",4]]]],[8,"TransactionReplayer","","",null,null],[10,"replay_chunk","","",4,[[["transaction",4],["vec",3],["version",6],["vec",3],["transactioninfo",3]],["result",6]]],[10,"expecting_version","","",4,[[],["version",6]]],[3,"StateComputeResult","","A structure that summarizes the result of the execution …",null,null],[11,"new","","",5,[[["vec",3],["hashvalue",3],["epochstate",3],["transactionstatus",4],["option",4],["vec",3]]]],[11,"version","","",5,[[],["version",6]]],[11,"root_hash","","",5,[[],["hashvalue",3]]],[11,"compute_status","","",5,[[],["vec",3]]],[11,"epoch_state","","",5,[[],["option",4]]],[11,"extension_proof","","",5,[[],[["accumulatorextensionproof",3],["transactionaccumulatorhasher",3]]]],[11,"transaction_info_hashes","","",5,[[],["vec",3]]],[11,"num_leaves","","",5,[[]]],[11,"frozen_subtree_roots","","",5,[[],["vec",3]]],[11,"parent_num_leaves","","",5,[[]]],[11,"parent_frozen_subtree_roots","","",5,[[],["vec",3]]],[11,"has_reconfiguration","","",5,[[]]],[11,"signature","","",5,[[],["option",4]]],[11,"set_signature","","",5,[[["ed25519signature",3]]]],[3,"ExecutedTrees","","A wrapper of the in-memory state sparse merkle tree and …",null,null],[11,"new_copy","","",6,[[["arc",3],["sparsemerkletree",3],["arc",3],["inmemoryaccumulator",3]]]],[11,"state_tree","","",6,[[],["arc",3]]],[11,"txn_accumulator","","",6,[[],["arc",3]]],[11,"version","","",6,[[],[["version",6],["option",4]]]],[11,"state_id","","",6,[[],["hashvalue",3]]],[11,"state_root","","",6,[[],["hashvalue",3]]],[11,"new","","",6,[[["vec",3],["hashvalue",3]],["executedtrees",3]]],[11,"new_empty","","",6,[[],["executedtrees",3]]],[3,"ProofReader","","",null,null],[11,"new","","",7,[[["sparsemerkleproof",3],["hashmap",3],["hashvalue",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"equivalent","","",5,[[]]],[11,"erased_serialize","","",5,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","","",6,[[["treestate",3]]]],[11,"clone","","",5,[[],["statecomputeresult",3]]],[11,"clone","","",6,[[],["executedtrees",3]]],[11,"eq","","",0,[[["error",4]]]],[11,"ne","","",0,[[["error",4]]]],[11,"eq","","",5,[[["statecomputeresult",3]]]],[11,"ne","","",5,[[["statecomputeresult",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"get_proof","","",7,[[["hashvalue",3]],[["option",4],["sparsemerkleproof",3]]]]],"p":[[4,"Error"],[13,"InternalError"],[8,"ChunkExecutor"],[8,"BlockExecutor"],[8,"TransactionReplayer"],[3,"StateComputeResult"],[3,"ExecutedTrees"],[3,"ProofReader"]]},\
"fallible":{"doc":"","i":[[0,"copy_from_slice","fallible","",null,null],[5,"copy_slice_to_vec","fallible::copy_from_slice","A fallible wrapper around [<code>std::vec::Vec::copy_from_slice</code>]",null,[[],[["result",4],["copysliceerror",3]]]],[3,"CopySliceError","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"CopySliceError"]]},\
"functional_tests":{"doc":"","i":[[0,"checker","functional_tests","",null,null],[0,"directives","functional_tests::checker","",null,null],[4,"Directive","functional_tests::checker::directives","Specification of an expected text pattern in the output.",null,null],[13,"Check","","",0,null],[13,"Not","","",0,null],[11,"is_positive","","Returns if the directive is a positive pattern.",0,[[]]],[11,"is_negative","","Returns if the directive is a negative pattern.",0,[[]]],[11,"pattern_str","","Returns the pattern of the directive.",0,[[]]],[11,"parse_line","","Parses the line and extracts one or more directives from …",0,[[],[["vec",3],["result",6]]]],[0,"matcher","functional_tests::checker","This module implements a matcher that checks if an …",null,null],[3,"Match","functional_tests::checker::matcher","A single match consisting of the index of the log entry, …",null,null],[12,"pat_id","","",1,null],[12,"entry_id","","",1,null],[12,"start","","",1,null],[12,"end","","",1,null],[4,"MatchError","","A match error.",null,null],[13,"NegativeMatch","","",2,null],[13,"UnmatchedDirectives","","",2,null],[13,"UnmatchedErrors","","",2,null],[4,"MatchStatus","","The status of a match. Can be either success or failure …",null,null],[13,"Success","","",3,null],[13,"Failure","","",3,null],[11,"is_success","","",3,[[]]],[11,"is_failure","","",3,[[]]],[3,"MatchResult","","The result of matching the directives against the …",null,null],[12,"status","","",4,null],[12,"text","","",4,null],[12,"matches","","",4,null],[11,"is_success","","",4,[[]]],[11,"is_failure","","",4,[[]]],[5,"match_output","","Matches the directives against the evaluation log.",null,[[["evaluationlog",3]],["matchresult",3]]],[0,"common","functional_tests","",null,null],[3,"Sp","functional_tests::common","Wrapper of an inner object with start and end source …",null,null],[12,"inner","","",5,null],[12,"start","","",5,null],[12,"end","","",5,null],[11,"new","","",5,[[]]],[11,"into_inner","","",5,[[]]],[11,"as_inner","","",5,[[]]],[11,"map","","",5,[[],["sp",3]]],[11,"into_line_sp","","",5,[[],["linesp",3]]],[3,"LineSp","","Wrapper of an inner object with line, start and end …",null,null],[12,"inner","","",6,null],[12,"line","","",6,null],[12,"start","","",6,null],[12,"end","","",6,null],[11,"new","","",6,[[]]],[11,"as_inner","","",6,[[]]],[11,"map","","",6,[[],["linesp",3]]],[0,"compiler","functional_tests","",null,null],[8,"Compiler","functional_tests::compiler","",null,null],[10,"compile","","Compile a transaction script or module.",7,[[["accountaddress",3],["fnmut",8]],[["result",6],["scriptormodule",4]]]],[10,"use_compiled_genesis","","",7,[[]]],[4,"ScriptOrModule","","",null,null],[13,"Script","","",8,null],[13,"Module","","",8,null],[0,"config","functional_tests","",null,null],[0,"block_metadata","functional_tests::config","",null,null],[4,"Proposer","functional_tests::config::block_metadata","",null,null],[13,"Account","","",9,null],[13,"Address","","",9,null],[4,"Entry","","",null,null],[13,"Proposer","","",10,null],[13,"Timestamp","","",10,null],[5,"is_new_block","","Checks whether a line denotes the start of a new …",null,[[]]],[11,"try_parse","","",10,[[],[["option",4],["result",6]]]],[5,"build_block_metadata","","",null,[[["globalconfig",3]],[["blockmetadata",3],["result",6]]]],[0,"global","functional_tests::config","",null,null],[4,"Role","functional_tests::config::global","",null,null],[13,"Validator","","Means that the account is a current validator; its …",11,null],[13,"Address","","Means that this this is only an account address (with …",11,null],[3,"Balance","","",null,null],[12,"amount","","",12,null],[12,"currency_code","","",12,null],[3,"AccountDefinition","","Struct that specifies the initial setup of an account.",null,null],[12,"name","","Name of the account. The name is case insensitive.",13,null],[12,"balance","","The initial balance of the account.",13,null],[12,"sequence_number","","The initial sequence number of the account.",13,null],[12,"role","","Special role this account has in the system (if any)",13,null],[12,"account_type_specifier","","Specifier on what type of account this is. Default is …",13,null],[4,"Entry","","A raw entry extracted from the input. Used to build the …",null,null],[13,"AccountDefinition","","Defines an account that can be used in tests.",14,null],[11,"is_validator","","",14,[[]]],[11,"is_address","","",14,[[]]],[3,"Config","","A table of options either shared by all transactions or …",null,null],[12,"accounts","","A map from account names to account data",15,null],[12,"genesis_accounts","","",15,null],[12,"addresses","","",15,null],[12,"validator_accounts","","The validator set after genesis",15,null],[12,"exp_mode","","",15,null],[11,"build","","",15,[[],["result",6]]],[11,"get_account_for_name","","",15,[[],[["account",3],["result",6]]]],[0,"transaction","functional_tests::config","",null,null],[4,"Argument","functional_tests::config::transaction","A partially parsed transaction argument.",null,null],[13,"AddressOf","","",16,null],[13,"SelfContained","","",16,null],[4,"Entry","","A raw entry extracted from the input. Used to build a …",null,null],[13,"DisableStages","","",17,null],[13,"Sender","","",17,null],[13,"TypeArguments","","",17,null],[13,"Arguments","","",17,null],[13,"MaxGas","","",17,null],[13,"GasPrice","","",17,null],[13,"GasCurrencyCode","","",17,null],[13,"SequenceNumber","","",17,null],[13,"ExpirationTime","","",17,null],[13,"ExecuteAs","","",17,null],[13,"ShowGas","","",17,null],[13,"ShowWriteSet","","",17,null],[13,"ShowEvents","","",17,null],[5,"is_new_transaction","","Checks whether a line denotes the start of a new …",null,[[]]],[11,"try_parse","","",17,[[],[["option",4],["result",6]]]],[3,"Config","","A table of options specific to one transaction, fine …",null,null],[12,"disabled_stages","","",18,null],[12,"sender","","",18,null],[12,"ty_args","","",18,null],[12,"args","","",18,null],[12,"max_gas","","",18,null],[12,"gas_price","","",18,null],[12,"gas_currency_code","","",18,null],[12,"sequence_number","","",18,null],[12,"expiration_timestamp_secs","","",18,null],[12,"execute_as","","",18,null],[12,"show_gas","","",18,null],[12,"show_writeset","","",18,null],[12,"show_events","","",18,null],[11,"build","","Builds a transaction config table from raw entries.",18,[[["globalconfig",3]],["result",6]]],[11,"is_stage_disabled","","",18,[[["stage",4]]]],[0,"errors","functional_tests","",null,null],[14,"anyhow","functional_tests::errors","Construct an ad-hoc error from a string or existing non-…",null,null],[14,"bail","","Return early with an error.",null,null],[14,"format_err","","Construct an ad-hoc error from a string or existing non-…",null,null],[3,"Error","","The <code>Error</code> type, a wrapper around a dynamic error type.",null,null],[6,"Result","","<code>Result<T, Error></code>",null,null],[4,"ErrorKind","","Defines all errors in this crate.",null,null],[13,"VMExecutionFailure","","",19,null],[13,"DiscardedTransaction","","",19,null],[13,"CheckerFailure","","",19,null],[13,"VerificationError","","",19,null],[13,"Other","","",19,null],[0,"evaluator","functional_tests","",null,null],[3,"Transaction","functional_tests::evaluator","A transaction to be evaluated by the testing infra. …",null,null],[12,"config","","",20,null],[12,"input","","",20,null],[4,"Command","","Commands that drives the operation of DiemVM. Such as:",null,null],[13,"Transaction","","",21,null],[13,"BlockMetadata","","",21,null],[4,"Stage","","Indicates one step in the pipeline the given Move …",null,null],[13,"Compiler","","",22,null],[13,"Verifier","","",22,null],[13,"Serializer","","",22,null],[13,"Runtime","","",22,null],[4,"Status","","Evaluation status: success or failure.",null,null],[13,"Success","","",23,null],[13,"Failure","","",23,null],[4,"OutputType","","",null,null],[13,"CompiledModule","","",24,null],[13,"CompiledScript","","",24,null],[13,"CompilerLog","","",24,null],[13,"TransactionOutput","","",24,null],[11,"to_check_string","","",24,[[],["string",3]]],[6,"TransactionId","","",null,null],[4,"EvaluationOutput","","An entry in the <code>EvaluationLog</code>.",null,null],[13,"Transaction","","",25,null],[13,"Stage","","",25,null],[13,"Output","","",25,null],[13,"Error","","",25,null],[13,"Status","","",25,null],[13,"PlainMessage","","",25,null],[11,"is_error","","",25,[[]]],[11,"to_string_for_matching","","",25,[[],["string",3]]],[3,"EvaluationLog","","A log consisting of outputs from all stages and the final …",null,null],[12,"outputs","","",26,null],[11,"new","","",26,[[]]],[11,"get_failed_transactions","","",26,[[],["vec",3]]],[11,"to_text_for_matching","","",26,[[],[["string",3],["vec",3]]]],[11,"append","","",26,[[["evaluationoutput",4]]]],[5,"verify_script","","Verify a script with its dependencies.",null,[[["compiledscript",3],["fakedatastore",3]],[["result",4],["compiledscript",3],["vmerror",3]]]],[5,"verify_module","","Verify a module with its dependencies.",null,[[["compiledmodule",3],["fakedatastore",3]],[["result",4],["compiledmodule",3],["vmerror",3]]]],[5,"eval_block_metadata","","",null,[[["fakeexecutor",3],["evaluationlog",3],["blockmetadata",3]],[["status",4],["result",6]]]],[5,"eval","","Feeds all given transactions through the pipeline and …",null,[[["compiler",8],["globalconfig",3]],[["result",6],["evaluationlog",3]]]],[0,"preprocessor","functional_tests","",null,null],[5,"substitute_addresses_and_auth_keys","functional_tests::preprocessor","Substitutes the placeholders (account names in double …",null,[[["globalconfig",3]],["string",3]]],[3,"RawTransactionInput","","",null,null],[12,"config_entries","","",27,null],[12,"text","","",27,null],[4,"RawCommand","","",null,null],[13,"Transaction","","",28,null],[13,"BlockMetadata","","",28,null],[5,"extract_global_config","","",null,[[],[["result",6],["globalconfig",3]]]],[5,"split_input","","Parses the input string into three parts: a global …",null,[[["globalconfig",3]],["result",6]]],[5,"build_transactions","","",null,[[["globalconfig",3]],[["result",6],["vec",3]]]],[0,"testsuite","functional_tests","",null,null],[17,"PRETTY","functional_tests::testsuite","",null,null],[17,"FILTER","","",null,null],[17,"UPDATE_BASELINE","","",null,null],[5,"functional_tests","","",null,[[["compiler",8],["path",3]],["result",6]]],[11,"from","functional_tests::checker::directives","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"equivalent","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","functional_tests::checker::matcher","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","functional_tests::common","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"encode_hex","","",5,[[]]],[11,"encode_hex_upper","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"encode_hex","","",6,[[]]],[11,"encode_hex_upper","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","functional_tests::compiler","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","functional_tests::config::block_metadata","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","functional_tests::config::global","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","functional_tests::config::transaction","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","functional_tests::errors","",29,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","functional_tests::evaluator","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"equivalent","","",22,[[]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"equivalent","","",23,[[]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"to_string","","",24,[[],["string",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","functional_tests::preprocessor","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"fmt","functional_tests::errors","",29,[[["formatter",3]],[["result",4],["error",3]]]],[11,"from","","",29,[[],["error",3]]],[11,"deref","","",29,[[]]],[11,"as_ref","","",29,[[],["error",8]]],[11,"as_ref","","",29,[[],["error",8]]],[11,"fmt","","",29,[[["formatter",3]],[["result",4],["error",3]]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"as_ref","functional_tests::checker::directives","",0,[[],["directive",4]]],[11,"as_ref","functional_tests::common","",5,[[]]],[11,"as_ref","","",6,[[]]],[11,"clone","functional_tests::config::global","",12,[[],["balance",3]]],[11,"clone","functional_tests::errors","",19,[[],["errorkind",4]]],[11,"clone","functional_tests::evaluator","",22,[[],["stage",4]]],[11,"clone","","",23,[[],["status",4]]],[11,"clone","","",24,[[],["outputtype",4]]],[11,"default","","",26,[[],["evaluationlog",3]]],[11,"cmp","","",22,[[["stage",4]],["ordering",4]]],[11,"eq","functional_tests::checker::directives","",0,[[["directive",4]]]],[11,"ne","","",0,[[["directive",4]]]],[11,"eq","functional_tests::evaluator","",22,[[["stage",4]]]],[11,"eq","","",23,[[["status",4]]]],[11,"partial_cmp","","",22,[[["stage",4]],[["option",4],["ordering",4]]]],[11,"fmt","functional_tests::checker::directives","",0,[[["formatter",3]],["result",6]]],[11,"fmt","functional_tests::checker::matcher","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","functional_tests::common","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","functional_tests::config::block_metadata","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","functional_tests::config::global","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","functional_tests::config::transaction","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","functional_tests::errors","",19,[[["formatter",3]],["result",6]]],[11,"fmt","functional_tests::evaluator","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","functional_tests::errors","",19,[[["formatter",3]],["result",6]]],[11,"fmt","functional_tests::evaluator","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"from_str","functional_tests::config::block_metadata","",10,[[],["result",6]]],[11,"from_str","functional_tests::config::global","",12,[[],["result",6]]],[11,"from_str","","",11,[[],["result",6]]],[11,"from_str","","",14,[[],["result",6]]],[11,"from_str","functional_tests::config::transaction","",17,[[],["result",6]]],[11,"from_str","functional_tests::evaluator","",22,[[],["result",6]]],[11,"new","functional_tests::errors","Create a new error object from any error type.",29,[[],["error",3]]],[11,"msg","","Create a new error object from a printable error message.",29,[[],["error",3]]],[11,"context","","Wrap the error value with additional context.",29,[[],["error",3]]],[11,"backtrace","","Get the backtrace for this Error.",29,[[],["backtrace",3]]],[11,"chain","","An iterator of the chain of source errors contained by …",29,[[],["chain",3]]],[11,"root_cause","","The lowest level cause of this error — this error\'s …",29,[[],["error",8]]],[11,"is","","Returns true if <code>E</code> is the type held by this error object.",29,[[]]],[11,"downcast","","Attempt to downcast the error object to a concrete type.",29,[[],[["result",4],["error",3]]]],[11,"downcast_ref","","Downcast this error object by reference.",29,[[],["option",4]]],[11,"downcast_mut","","Downcast this error object by mutable reference.",29,[[],["option",4]]]],"p":[[4,"Directive"],[3,"Match"],[4,"MatchError"],[4,"MatchStatus"],[3,"MatchResult"],[3,"Sp"],[3,"LineSp"],[8,"Compiler"],[4,"ScriptOrModule"],[4,"Proposer"],[4,"Entry"],[4,"Role"],[3,"Balance"],[3,"AccountDefinition"],[4,"Entry"],[3,"Config"],[4,"Argument"],[4,"Entry"],[3,"Config"],[4,"ErrorKind"],[3,"Transaction"],[4,"Command"],[4,"Stage"],[4,"Status"],[4,"OutputType"],[4,"EvaluationOutput"],[3,"EvaluationLog"],[3,"RawTransactionInput"],[4,"RawCommand"],[3,"Error"]]},\
"generate_format":{"doc":"How and where to record the Serde format of interesting …","i":[[5,"lint_bcs_format","generate_format","Verify that a Serde format is compatible with BCS and …",null,[[["containerformat",4]],["result",6]]],[4,"Corpus","","A corpus of Rust types to trace, and optionally record on …",null,null],[13,"Diem","","",0,null],[13,"Consensus","","",0,null],[13,"Network","","",0,null],[13,"MoveABI","","",0,null],[11,"variants","","",0,[[]]],[11,"values","","All corpuses.",0,[[],[["corpus",4],["vec",3]]]],[11,"get_registry","","Compute the registry of formats.",0,[[],["registry",6]]],[11,"output_file","","Where to record this corpus on disk.",0,[[],["option",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"clone","","",0,[[],["corpus",4]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"from_str","","",0,[[],["result",4]]],[11,"clap","","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"from_subcommand","","",0,[[],["option",4]]],[11,"is_subcommand","","",0,[[]]]],"p":[[4,"Corpus"]]},\
"generate_key":{"doc":"","i":[[5,"generate_key","generate_key","",null,[[],["ed25519privatekey",3]]],[5,"generate_and_save_key","","",null,[[["asref",8],["path",3]],["ed25519privatekey",3]]],[5,"save_key","","",null,[[["asref",8],["path",3],["ed25519privatekey",3]],["ed25519privatekey",3]]],[5,"load_key","","",null,[[["asref",8],["path",3]],["ed25519privatekey",3]]]],"p":[]},\
"invalid_mutations":{"doc":"","i":[[0,"bounds","invalid_mutations","",null,null],[3,"ApplyCodeUnitBoundsContext","invalid_mutations::bounds","",null,null],[3,"CodeUnitBoundsMutation","","Represents a single mutation onto a code unit to make it …",null,null],[4,"PointerKind","","Represents the number of pointers that exist out from a …",null,null],[13,"One","","Exactly one pointer out with this index kind as its …",0,null],[13,"Optional","","Zero or one pointer out with this index kind as its …",0,null],[13,"Star","","Zero or more pointers out with this index kind as its …",0,null],[11,"pointers_from","","A list of what pointers (indexes) exist out from a …",0,[[["indexkind",4]]]],[11,"to_index_kind","","",0,[[],["indexkind",4]]],[7,"VALID_POINTER_SRCS","","",null,null],[3,"OutOfBoundsMutation","","Represents a single mutation to a <code>CompiledModule</code> to …",null,null],[11,"strategy","","",1,[[]]],[3,"ApplyOutOfBoundsContext","","",null,null],[11,"new","","",2,[[["vec",3],["compiledmodule",3],["outofboundsmutation",3]]]],[11,"apply","","",2,[[]]],[0,"signature","invalid_mutations","",null,null],[3,"SignatureRefMutation","invalid_mutations::signature","",null,null],[11,"new","","",3,[[["compiledmodulemut",3],["vec",3]]]],[11,"apply","","",3,[[]]],[3,"FieldRefMutation","","Context for applying a list of <code>FieldRefMutation</code> instances.",null,null],[11,"new","","",4,[[["compiledmodulemut",3],["vec",3]]]],[11,"apply","","",4,[[]]],[11,"from","invalid_mutations::bounds","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"equivalent","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","invalid_mutations::signature","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"as_ref","invalid_mutations::bounds","",5,[[],["propindex",3]]],[11,"as_ref","","",1,[[],["propindex",3]]],[11,"clone","","",0,[[],["pointerkind",4]]],[11,"eq","","",0,[[["pointerkind",4]]]],[11,"ne","","",0,[[["pointerkind",4]]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"strategy","","",5,[[]]],[11,"new","","",6,[[["vec",3],["compiledmodulemut",3],["codeunitboundsmutation",3]]]],[11,"apply","","",6,[[],[["vec",3],["partialvmerror",3]]]]],"p":[[4,"PointerKind"],[3,"OutOfBoundsMutation"],[3,"ApplyOutOfBoundsContext"],[3,"SignatureRefMutation"],[3,"FieldRefMutation"],[3,"CodeUnitBoundsMutation"],[3,"ApplyCodeUnitBoundsContext"]]},\
"ir_to_bytecode":{"doc":"","i":[[0,"compiler","ir_to_bytecode","",null,null],[5,"compile_script","ir_to_bytecode::compiler","Compile a transaction script.",null,[[["accountaddress",3],["option",4],["script",3]],["result",6]]],[5,"compile_module","","Compile a module.",null,[[["accountaddress",3],["moduledefinition",3]],["result",6]]],[0,"errors","ir_to_bytecode","",null,null],[4,"InternalCompilerError","ir_to_bytecode::errors","",null,null],[13,"BoundsCheckErrors","","",0,null],[0,"parser","ir_to_bytecode","",null,null],[5,"is_permitted_printable_char","ir_to_bytecode::parser","Determine if a character is an allowed eye-visible …",null,[[]]],[5,"is_permitted_newline_char","","Determine if a character is a permitted newline character.",null,[[]]],[5,"is_permitted_char","","Determine if a character is permitted character.",null,[[]]],[5,"parse_script_or_module","","Given the raw input of a file, creates a <code>ScriptOrModule</code> …",null,[[],[["result",6],["scriptormodule",4]]]],[5,"parse_script","","Given the raw input of a file, creates a <code>Script</code> struct …",null,[[],[["result",6],["script",3]]]],[5,"parse_module","","Given the raw input of a file, creates a single …",null,[[],[["moduledefinition",3],["result",6]]]],[5,"parse_cmd_","","Given the raw input of a file, creates a single <code>Cmd_</code> …",null,[[["accountaddress",3]],[["result",6],["cmd_",4]]]],[11,"from","ir_to_bytecode::errors","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"equivalent","","",0,[[]]],[11,"clone","","",0,[[],["internalcompilererror",4]]],[11,"cmp","","",0,[[["internalcompilererror",4]],["ordering",4]]],[11,"eq","","",0,[[["internalcompilererror",4]]]],[11,"ne","","",0,[[["internalcompilererror",4]]]],[11,"partial_cmp","","",0,[[["internalcompilererror",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["internalcompilererror",4]]]],[11,"le","","",0,[[["internalcompilererror",4]]]],[11,"gt","","",0,[[["internalcompilererror",4]]]],[11,"ge","","",0,[[["internalcompilererror",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[4,"InternalCompilerError"]]},\
"ir_to_bytecode_syntax":{"doc":"GrammarIdentifiers","i":[[0,"syntax","ir_to_bytecode_syntax","",null,null],[4,"ParseError","ir_to_bytecode_syntax::syntax","",null,null],[13,"InvalidToken","","",0,null],[12,"location","ir_to_bytecode_syntax::syntax::ParseError","",1,null],[13,"User","ir_to_bytecode_syntax::syntax","",0,null],[12,"error","ir_to_bytecode_syntax::syntax::ParseError","",2,null],[5,"parse_cmd_string","ir_to_bytecode_syntax::syntax","",null,[[],[["parseerror",4],["result",4],["cmd_",4]]]],[5,"parse_module_string","","",null,[[],[["moduledefinition",3],["result",4],["parseerror",4]]]],[5,"parse_script_string","","",null,[[],[["result",4],["script",3],["parseerror",4]]]],[5,"parse_script_or_module_string","","",null,[[],[["result",4],["scriptormodule",4],["parseerror",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"equivalent","","",0,[[]]],[11,"from","","",0,[[["error",3]]]],[11,"clone","","",0,[[],["parseerror",4]]],[11,"cmp","","",0,[[["parseerror",4]],["ordering",4]]],[11,"eq","","",0,[[["parseerror",4]]]],[11,"ne","","",0,[[["parseerror",4]]]],[11,"partial_cmp","","",0,[[["parseerror",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["parseerror",4]]]],[11,"le","","",0,[[["parseerror",4]]]],[11,"gt","","",0,[[["parseerror",4]]]],[11,"ge","","",0,[[["parseerror",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[4,"ParseError"],[13,"InvalidToken"],[13,"User"]]},\
"language_benchmarks":{"doc":"","i":[[0,"move_vm","language_benchmarks","",null,null],[5,"bench","language_benchmarks::move_vm","Entry point for the bench, provide a function name to …",null,[[["criterion",3]]]],[0,"transactions","language_benchmarks","",null,null],[3,"TransactionBencher","language_benchmarks::transactions","Benchmarking support for transactions.",null,null],[18,"DEFAULT_NUM_ACCOUNTS","","The number of accounts created by default.",0,null],[18,"DEFAULT_NUM_TRANSACTIONS","","The number of transactions created by default.",0,null],[11,"new","","Creates a new transaction bencher with default settings.",0,[[]]],[11,"num_accounts","","Sets a custom number of accounts.",0,[[]]],[11,"num_transactions","","Sets a custom number of transactions.",0,[[]]],[11,"bench","","Runs the bencher.",0,[[["bencher",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"clone","","",0,[[],["transactionbencher",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"TransactionBencher"]]},\
"language_e2e_tests":{"doc":"Test infrastructure for the Diem VM.","i":[[0,"account","language_e2e_tests","Test infrastructure for modeling Diem accounts.",null,null],[17,"DEFAULT_EXPIRATION_TIME","language_e2e_tests::account","",null,null],[5,"xus_currency_code","","",null,[[],["identifier",3]]],[5,"currency_code","","",null,[[],["identifier",3]]],[3,"Account","","Details about a Diem account.",null,null],[12,"privkey","","The current private key for this account.",0,null],[12,"pubkey","","The current public key for this account.",0,null],[11,"new","","Creates a new account in memory.",0,[[]]],[11,"new_from_seed","","Creates a new account in memory given a random seed.",0,[[["keygen",3]]]],[11,"with_keypair","","Creates a new account with the given keypair.",0,[[["ed25519privatekey",3],["ed25519publickey",3]]]],[11,"new_validator","","Creates a new account with the given addr and key pair",0,[[["ed25519privatekey",3],["accountaddress",3],["ed25519publickey",3]]]],[11,"new_genesis_account","","Creates a new account in memory representing an account …",0,[[["accountaddress",3]]]],[11,"new_diem_root","","Creates a new account representing the diem root account …",0,[[]]],[11,"new_blessed_tc","","Creates a new account representing treasury compliance in …",0,[[]]],[11,"address","","Returns the address of the account. This is a hash of the …",0,[[],["accountaddress",3]]],[11,"make_account_access_path","","Returns the AccessPath that describes the Account …",0,[[],["accesspath",3]]],[11,"make_event_generator_access_path","","Returns the AccessPath that describes the …",0,[[],["accesspath",3]]],[11,"make_balance_access_path","","Returns the AccessPath that describes the Account balance …",0,[[["identifier",3]],["accesspath",3]]],[11,"make_access_path","","",0,[[["structtag",3]],["accesspath",3]]],[11,"rotate_key","","Changes the keys for this account to the provided ones.",0,[[["ed25519privatekey",3],["ed25519publickey",3]]]],[11,"auth_key","","Computes the authentication key for this account, as …",0,[[],["vec",3]]],[11,"auth_key_prefix","","Return the first 16 bytes of the account\'s auth key",0,[[],["vec",3]]],[11,"transaction","","",0,[[],["transactionbuilder",3]]],[3,"TransactionBuilder","","",null,null],[12,"sender","","",1,null],[12,"sequence_number","","",1,null],[12,"program","","",1,null],[12,"max_gas_amount","","",1,null],[12,"gas_unit_price","","",1,null],[12,"gas_currency_code","","",1,null],[12,"chain_id","","",1,null],[12,"ttl","","",1,null],[11,"new","","",1,[[["account",3]]]],[11,"sequence_number","","",1,[[]]],[11,"chain_id","","",1,[[["chainid",3]]]],[11,"script","","",1,[[["script",3]]]],[11,"module","","",1,[[["module",3]]]],[11,"write_set","","",1,[[["writesetpayload",4]]]],[11,"max_gas_amount","","",1,[[]]],[11,"gas_unit_price","","",1,[[]]],[11,"gas_currency_code","","",1,[[]]],[11,"ttl","","",1,[[]]],[11,"raw","","",1,[[],["rawtransaction",3]]],[11,"sign","","",1,[[],["signedtransaction",3]]],[3,"Balance","","Struct that represents an account balance resource for …",null,null],[11,"new","","Create a new balance with amount <code>balance</code>",2,[[]]],[11,"coin","","Retrieve the balance inside of this",2,[[]]],[11,"to_value","","Returns the Move Value for the account balance",2,[[],["value",3]]],[11,"layout","","Returns the value layout for the account balance",2,[[],["movestructlayout",3]]],[4,"AccountRoleSpecifier","","",null,null],[13,"DiemRoot","","",3,null],[13,"TreasuryCompliance","","",3,null],[13,"DesignatedDealer","","",3,null],[13,"Validator","","",3,null],[13,"ValidatorOperator","","",3,null],[13,"ParentVASP","","",3,null],[13,"ChildVASP","","",3,null],[11,"id","","",3,[[]]],[11,"layout","","",3,[[],["movestructlayout",3]]],[11,"to_value","","",3,[[],["value",3]]],[11,"role_id_struct_tag","","",3,[[],["structtag",3]]],[3,"AccountRole","","Struct that represents an account type for testing.",null,null],[11,"new","","Create a new AccountRole testing account.",4,[[["accountaddress",3],["accountrolespecifier",4]]]],[11,"account_specifier","","",4,[[],["accountrolespecifier",4]]],[3,"EventHandleGenerator","","Struct that represents the event generator resource …",null,null],[11,"new","","",5,[[["accountaddress",3]]]],[11,"new_with_event_count","","",5,[[["accountaddress",3]]]],[11,"to_value","","",5,[[],["value",3]]],[11,"layout","","",5,[[],["movestructlayout",3]]],[3,"AccountData","","Represents an account along with initial state about it.",null,null],[11,"new","","Creates a new <code>AccountData</code> with a new account.",6,[[]]],[11,"new_from_seed","","Creates a new <code>AccountData</code> with a new account.",6,[[["keygen",3]]]],[11,"with_account","","Creates a new <code>AccountData</code> with the provided account.",6,[[["accountrolespecifier",4],["identifier",3],["account",3]]]],[11,"with_keypair","","Creates a new <code>AccountData</code> with the provided account.",6,[[["ed25519privatekey",3],["identifier",3],["accountrolespecifier",4],["ed25519publickey",3]]]],[11,"with_account_and_event_counts","","Creates a new <code>AccountData</code> with custom parameters.",6,[[["accountrolespecifier",4],["identifier",3],["account",3]]]],[11,"add_balance_currency","","Adds the balance held by this account to the one …",6,[[["identifier",3]]]],[11,"rotate_key","","Changes the keys for this account to the provided ones.",6,[[["ed25519privatekey",3],["ed25519publickey",3]]]],[11,"sent_payment_event_layout","","",6,[[],["movestructlayout",3]]],[11,"received_payment_event_type","","",6,[[],["movestructlayout",3]]],[11,"event_handle_layout","","",6,[[],["movestructlayout",3]]],[11,"layout","","Returns the (Move value) layout of the …",6,[[],["movestructlayout",3]]],[11,"account_role","","Returns the account role specifier",6,[[],["accountrolespecifier",4]]],[11,"to_value","","Creates and returns the top-level resources to be …",6,[[]]],[11,"make_account_access_path","","Returns the AccessPath that describes the Account …",6,[[],["accesspath",3]]],[11,"make_balance_access_path","","Returns the AccessPath that describes the Account balance …",6,[[["identifier",3]],["accesspath",3]]],[11,"make_event_generator_access_path","","Returns the AccessPath that describes the …",6,[[],["accesspath",3]]],[11,"to_writeset","","Creates a writeset that contains the account data and can …",6,[[],["writeset",3]]],[11,"address","","Returns the address of the account. This is a hash of the …",6,[[],["accountaddress",3]]],[11,"account","","Returns the underlying [<code>Account</code>] instance.",6,[[],["account",3]]],[11,"into_account","","Converts this data into an <code>Account</code> instance.",6,[[],["account",3]]],[11,"balance","","Returns the initial balance.",6,[[["identstr",3]]]],[11,"sequence_number","","Returns the initial sequence number.",6,[[]]],[11,"sent_events_key","","Returns the unique key for this sent events stream.",6,[[]]],[11,"sent_events_count","","Returns the initial sent events count.",6,[[]]],[11,"received_events_key","","Returns the unique key for this received events stream.",6,[[]]],[11,"received_events_count","","Returns the initial received events count.",6,[[]]],[3,"WithdrawCapability","","",null,null],[11,"new","","",7,[[["accountaddress",3]]]],[11,"layout","","",7,[[],["movestructlayout",3]]],[11,"value","","",7,[[],["value",3]]],[3,"KeyRotationCapability","","",null,null],[11,"new","","",8,[[["accountaddress",3]]]],[11,"layout","","",8,[[],["movestructlayout",3]]],[11,"value","","",8,[[],["value",3]]],[3,"FreezingBit","","",null,null],[11,"layout","","",9,[[],["movestructlayout",3]]],[11,"value","","",9,[[],["value",3]]],[0,"account_universe","language_e2e_tests","A model to test properties of common Diem transactions.",null,null],[3,"SequenceNumberMismatchGen","language_e2e_tests::account_universe","Represents a sequence number mismatch transaction",null,null],[3,"InsufficientBalanceGen","","Represents a insufficient balance transaction",null,null],[3,"InvalidAuthkeyGen","","Represents a authkey mismatch transaction",null,null],[5,"bad_txn_strategy","","",null,[[]]],[3,"CreateAccountGen","","Represents a create-account transaction performed in the …",null,null],[3,"CreateExistingAccountGen","","Represents a create-account transaction in the account …",null,null],[5,"create_account_strategy","","",null,[[]]],[3,"P2PTransferGen","","Represents a peer-to-peer transaction performed in the …",null,null],[5,"p2p_strategy","","",null,[[]]],[3,"RotateKeyGen","","Represents a rotate-key transaction performed in the …",null,null],[3,"AccountUniverseGen","","A set of accounts which can be used to construct an …",null,null],[3,"AccountUniverse","","A set of accounts that has been set up and can now be …",null,null],[3,"AccountPairGen","","Allows pairs of accounts to be uniformly randomly …",null,null],[4,"AccountPickStyle","","Determines the sampling algorithm used to pick accounts …",null,null],[13,"Unlimited","","An account may be picked as many times as possible.",10,null],[13,"Limited","","An account may only be picked these many times.",10,null],[3,"AccountPair","","Mutable references to a pair of distinct accounts picked …",null,null],[12,"idx_1","","The index of the first account picked.",11,null],[12,"idx_2","","The index of the second account picked.",11,null],[12,"account_1","","A mutable reference to the first account picked.",11,null],[12,"account_2","","A mutable reference to the second account picked.",11,null],[5,"default_num_accounts","","The number of accounts to run universe-based proptests …",null,[[]]],[5,"default_num_transactions","","The number of transactions to run universe-based …",null,[[]]],[8,"AUTransactionGen","","Represents any sort of transaction that can be done in an …",null,null],[10,"apply","","Applies this transaction onto the universe, updating …",12,[[["accountuniverse",3]]]],[11,"arced","","Creates an arced version of this transaction, suitable …",12,[[],[["autransactiongen",8],["arc",3]]]],[3,"AccountCurrent","","Represents the current state of account in a universe, …",null,null],[11,"account","","Returns the underlying account.",13,[[],["account",3]]],[11,"rotate_key","","Rotates the key in this account.",13,[[["ed25519privatekey",3],["ed25519publickey",3]]]],[11,"balance","","Returns the current balance for this account, assuming …",13,[[]]],[11,"sequence_number","","Returns the current sequence number for this account, …",13,[[]]],[11,"sent_events_count","","Returns the current sent events count for this account, …",13,[[]]],[11,"received_events_count","","Returns the current received events count for this …",13,[[]]],[11,"create_account_gas_cost","","Returns the gas cost of a create-account transaction.",13,[[]]],[11,"create_account_low_balance_gas_cost","","Returns the gas cost of a create-account transaction …",13,[[]]],[11,"create_existing_account_gas_cost","","Returns the gas cost of a create-account transaction …",13,[[]]],[11,"peer_to_peer_gas_cost","","Returns the gas cost of a peer-to-peer transaction.",13,[[]]],[11,"peer_to_peer_too_low_gas_cost","","Returns the gas cost of a peer-to-peer transaction with …",13,[[]]],[11,"peer_to_peer_new_receiver_gas_cost","","Returns the gas cost of a create-account transaction …",13,[[]]],[11,"peer_to_peer_new_receiver_too_low_gas_cost","","Returns the gas cost of a create-account transaction …",13,[[]]],[11,"rotate_key_gas_cost","","Returns the gas cost of a peer-to-peer transaction with …",13,[[]]],[5,"txn_one_account_result","","Computes the result for running a transfer out of one …",null,[[["accountcurrent",3]]]],[5,"log_balance_strategy","","Returns a [<code>Strategy</code>] that provides a variety of balances …",null,[[]]],[5,"all_transactions_strategy","","A strategy that returns a random transaction.",null,[[]]],[5,"run_and_assert_gas_cost_stability","","Run these transactions and make sure that they all cost …",null,[[["accountuniversegen",3],["vec",3]],[["testcaseerror",4],["result",4]]]],[5,"run_and_assert_universe","","Run these transactions and verify the expected output.",null,[[["accountuniversegen",3],["vec",3]],[["testcaseerror",4],["result",4]]]],[5,"assert_accounts_match","","Verify that the account information in the universe …",null,[[["accountuniverse",3],["fakeexecutor",3]],[["testcaseerror",4],["result",4]]]],[0,"common_transactions","language_e2e_tests","Support for encoding transactions for common situations.",null,null],[7,"CREATE_ACCOUNT_SCRIPT","language_e2e_tests::common_transactions","",null,null],[7,"EMPTY_SCRIPT","","",null,null],[5,"empty_txn","","",null,[[["account",3],["string",3]],["signedtransaction",3]]],[5,"create_account_txn","","Returns a transaction to create a new account with the …",null,[[["account",3],["typetag",4]],["signedtransaction",3]]],[5,"peer_to_peer_txn","","Returns a transaction to transfer coin from one account …",null,[[["account",3]],["signedtransaction",3]]],[5,"rotate_key_txn","","Returns a transaction to change the keys for the given …",null,[[["account",3],["vec",3]],["signedtransaction",3]]],[5,"raw_rotate_key_txn","","Returns a transaction to change the keys for the given …",null,[[["account",3],["vec",3]],["rawtransaction",3]]],[0,"compile","language_e2e_tests","Support for compiling scripts and modules in tests.",null,null],[5,"compile_module_with_address","language_e2e_tests::compile","Compile the provided Move code into a blob which can be …",null,[[["accountaddress",3]]]],[5,"compile_script_with_address","","Compile the provided Move code into a blob which can be …",null,[[["accountaddress",3],["vec",3],["compiledmodule",3]],["script",3]]],[0,"currencies","language_e2e_tests","",null,null],[5,"add_currency_to_system","language_e2e_tests::currencies","",null,[[["fakeexecutor",3]]]],[0,"data_store","language_e2e_tests","Support for mocking the Diem data store.",null,null],[7,"GENESIS_CHANGE_SET","language_e2e_tests::data_store","Dummy genesis ChangeSet for testing",null,null],[7,"GENESIS_CHANGE_SET_FRESH","","",null,null],[3,"FakeDataStore","","An in-memory implementation of [<code>StateView</code>] and […",null,null],[11,"new","","Creates a new <code>FakeDataStore</code> with the provided initial …",14,[[["vec",3],["hashmap",3],["accesspath",3]]]],[11,"add_write_set","","Adds a [<code>WriteSet</code>] to this data store.",14,[[["writeset",3]]]],[11,"set","","Sets a (key, value) pair within this data store.",14,[[["vec",3],["accesspath",3]],[["option",4],["vec",3]]]],[11,"remove","","Deletes a key from this data store.",14,[[["accesspath",3]],[["option",4],["vec",3]]]],[11,"add_account_data","","Adds an [<code>AccountData</code>] to this data store.",14,[[["accountdata",3]]]],[11,"add_module","","Adds a [<code>CompiledModule</code>] to this data store.",14,[[["vec",3],["moduleid",3]]]],[0,"execution_strategies","language_e2e_tests","",null,null],[0,"basic_strategy","language_e2e_tests::execution_strategies","",null,null],[3,"BasicStrategy","language_e2e_tests::execution_strategies::basic_strategy","",null,null],[3,"BasicExecutor","","",null,null],[11,"new","","",15,[[]]],[0,"guided_strategy","language_e2e_tests::execution_strategies","",null,null],[4,"AnnotatedTransaction","language_e2e_tests::execution_strategies::guided_strategy","",null,null],[13,"Block","","",16,null],[13,"Txn","","",16,null],[3,"PartitionedGuidedStrategy","","",null,null],[3,"UnPartitionedGuidedStrategy","","",null,null],[3,"GuidedExecutor","","",null,null],[11,"new","","",17,[[]]],[0,"multi_strategy","language_e2e_tests::execution_strategies","",null,null],[4,"MultiResult","language_e2e_tests::execution_strategies::multi_strategy","",null,null],[13,"NonMatchingOutput","","",18,null],[13,"OtherResult","","",18,null],[3,"MultiExecutor","","",null,null],[11,"new","","",19,[[]]],[11,"add_executor","","",19,[[]]],[0,"random_strategy","language_e2e_tests::execution_strategies","",null,null],[3,"RandomizedStrategy","language_e2e_tests::execution_strategies::random_strategy","",null,null],[11,"from_seed","","",20,[[]]],[11,"from_os_rng","","",20,[[]]],[3,"RandomExecutor","","",null,null],[11,"from_seed","","",21,[[]]],[11,"from_os_rng","","",21,[[]]],[0,"types","language_e2e_tests::execution_strategies","",null,null],[6,"Block","language_e2e_tests::execution_strategies::types","",null,null],[6,"ExecutorResult","","",null,null],[8,"Executor","","",null,null],[16,"Txn","","",22,null],[16,"BlockResult","","",22,null],[10,"execute_block","","",22,[[["block",6]],["executorresult",6]]],[8,"PartitionStrategy","","",null,null],[16,"Txn","","",23,null],[10,"partition","","",23,[[["block",6]],[["vec",3],["block",6]]]],[0,"executor","language_e2e_tests","Support for running the VM to execute and verify …",null,null],[3,"FakeExecutor","language_e2e_tests::executor","Provides an environment to run a VM instance.",null,null],[11,"from_genesis","","Creates an executor from a genesis [<code>WriteSet</code>].",24,[[["writeset",3]]]],[11,"from_genesis_file","","Creates an executor from the genesis file …",24,[[]]],[11,"from_fresh_genesis","","Creates an executor using the standard genesis.",24,[[]]],[11,"allowlist_genesis","","",24,[[]]],[11,"from_genesis_with_options","","Creates an executor from the genesis file …",24,[[["vmpublishingoption",3]]]],[11,"no_genesis","","Creates an executor in which no genesis state has been …",24,[[]]],[11,"set_golden_file","","",24,[[]]],[11,"stdlib_only_genesis","","Creates an executor with only the standard library Move …",24,[[]]],[11,"custom_genesis","","Creates fresh genesis from the stdlib modules passed in.",24,[[["option",4],["vmpublishingoption",3]]]],[11,"create_raw_account","","Create one instance of [<code>AccountData</code>] without saving it to …",24,[[],["account",3]]],[11,"create_raw_account_data","","Create one instance of [<code>AccountData</code>] without saving it to …",24,[[],["accountdata",3]]],[11,"create_accounts","","Creates a number of [<code>Account</code>] instances all with the same …",24,[[],[["vec",3],["account",3]]]],[11,"apply_write_set","","Applies a [<code>WriteSet</code>] to this executor\'s data store.",24,[[["writeset",3]]]],[11,"add_account_data","","Adds an account to this executor\'s data store.",24,[[["accountdata",3]]]],[11,"add_module","","Adds a module to this executor\'s data store.",24,[[["vec",3],["moduleid",3]]]],[11,"read_account_resource","","Reads the resource [<code>Value</code>] for an account from this …",24,[[["account",3]],[["accountresource",3],["option",4]]]],[11,"read_balance_resource","","Reads the balance resource value for an account from this …",24,[[["account",3],["identifier",3]],[["option",4],["balanceresource",3]]]],[11,"execute_block","","Executes the given block of transactions.",24,[[["vec",3],["signedtransaction",3]],[["vmstatus",4],["vec",3],["result",4]]]],[11,"execute_block_and_keep_vm_status","","Alternate form of \'execute_block\' that keeps the …",24,[[["vec",3],["signedtransaction",3]],[["result",4],["vec",3],["vmstatus",4]]]],[11,"execute_and_apply","","Executes the transaction as a singleton block and applies …",24,[[["signedtransaction",3]],["transactionoutput",3]]],[11,"execute_transaction_block","","",24,[[["vec",3],["transaction",4]],[["vmstatus",4],["vec",3],["result",4]]]],[11,"execute_transaction","","",24,[[["signedtransaction",3]],["transactionoutput",3]]],[11,"read_from_access_path","","Get the blob for the associated AccessPath",24,[[["accesspath",3]],[["option",4],["vec",3]]]],[11,"verify_transaction","","Verifies the given transaction by running it through the …",24,[[["signedtransaction",3]],["vmvalidatorresult",3]]],[11,"get_state_view","","",24,[[],["fakedatastore",3]]],[11,"new_block","","",24,[[]]],[11,"new_block_with_timestamp","","",24,[[]]],[11,"set_block_time","","",24,[[]]],[11,"get_block_time","","",24,[[]]],[11,"exec","","",24,[[["vec",3],["vec",3],["vec",3],["typetag",4]]]],[11,"try_exec","","",24,[[["vec",3],["vec",3],["vec",3],["typetag",4]],[["result",4],["writeset",3],["vmstatus",4]]]],[0,"gas_costs","language_e2e_tests","Gas costs for common transactions.",null,null],[17,"TXN_RESERVED","language_e2e_tests::gas_costs","The gas each transaction is configured to reserve. If the …",null,null],[7,"CREATE_ACCOUNT_FIRST","","The gas cost of a first time create-account transaction.",null,null],[7,"CREATE_ACCOUNT_NEXT","","The gas cost of a create-account transaction.",null,null],[7,"CREATE_ACCOUNT_TOO_LOW_FIRST","","The gas cost of a create-account transaction where the …",null,null],[7,"CREATE_ACCOUNT_TOO_LOW_NEXT","","The gas cost of a create-account transaction where the …",null,null],[7,"CREATE_EXISTING_ACCOUNT_FIRST","","The gas cost of a create-account transaction where the …",null,null],[7,"CREATE_EXISTING_ACCOUNT_NEXT","","The gas cost of a create-account transaction where the …",null,null],[7,"PEER_TO_PEER","","The gas cost of a peer-to-peer transaction.",null,null],[7,"PEER_TO_PEER_TOO_LOW","","The gas cost of a peer-to-peer transaction with an …",null,null],[7,"PEER_TO_PEER_NEW_RECEIVER_FIRST","","The gas cost of a peer-to-peer transaction that creates a …",null,null],[7,"PEER_TO_PEER_NEW_RECEIVER_NEXT","","The gas cost of a peer-to-peer transaction that creates a …",null,null],[7,"PEER_TO_PEER_NEW_RECEIVER_TOO_LOW_FIRST","","The gas cost of a peer-to-peer transaction that tries to …",null,null],[7,"PEER_TO_PEER_NEW_RECEIVER_TOO_LOW_NEXT","","The gas cost of a peer-to-peer transaction that tries to …",null,null],[7,"ROTATE_KEY","","The gas cost of a rotate-key transaction.",null,null],[0,"keygen","language_e2e_tests","",null,null],[3,"KeyGen","language_e2e_tests::keygen","Ed25519 key generator.",null,null],[11,"from_seed","","Constructs a key generator with a specific seed.",25,[[]]],[11,"from_os_rng","","Constructs a key generator with a random seed. The random …",25,[[]]],[11,"generate_keypair","","Generate an Ed25519 key pair.",25,[[]]],[11,"strategy","language_e2e_tests::account","Returns a [<code>Strategy</code>] that creates <code>AccountData</code> instances.",6,[[]]],[5,"assert_status_eq","language_e2e_tests","",null,[[["keptvmstatus",4]]]],[5,"transaction_status_eq","","",null,[[["transactionstatus",4]]]],[14,"assert_prologue_parity","","",null,null],[14,"assert_prologue_disparity","","",null,null],[14,"current_function_name","","Returns the name of the current function. This macro is …",null,null],[11,"from","language_e2e_tests::account","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"equivalent","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"equivalent","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"equivalent","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"equivalent","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"equivalent","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"equivalent","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"equivalent","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"equivalent","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"equivalent","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","language_e2e_tests::account_universe","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"equivalent","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","language_e2e_tests::data_store","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","language_e2e_tests::execution_strategies::basic_strategy","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","language_e2e_tests::execution_strategies::guided_strategy","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","language_e2e_tests::execution_strategies::multi_strategy","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","language_e2e_tests::execution_strategies::random_strategy","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"from","language_e2e_tests::executor","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","language_e2e_tests::keygen","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"apply","language_e2e_tests::account_universe","",26,[[["accountuniverse",3]]]],[11,"apply","","",27,[[["accountuniverse",3]]]],[11,"apply","","",28,[[["accountuniverse",3]]]],[11,"apply","","",29,[[["accountuniverse",3]]]],[11,"apply","","",30,[[["accountuniverse",3]]]],[11,"apply","","",31,[[["accountuniverse",3]]]],[11,"apply","","",32,[[["accountuniverse",3]]]],[11,"execute_block","language_e2e_tests::execution_strategies::basic_strategy","",15,[[["block",6]],["executorresult",6]]],[11,"execute_block","language_e2e_tests::execution_strategies::guided_strategy","",17,[[["block",6]],["executorresult",6]]],[11,"execute_block","language_e2e_tests::execution_strategies::multi_strategy","",19,[[["block",6]],["executorresult",6]]],[11,"execute_block","language_e2e_tests::execution_strategies::random_strategy","",21,[[["block",6]],["executorresult",6]]],[11,"partition","language_e2e_tests::execution_strategies::basic_strategy","",36,[[["block",6]],[["vec",3],["block",6]]]],[11,"partition","language_e2e_tests::execution_strategies::guided_strategy","",37,[[["block",6]],[["vec",3],["block",6]]]],[11,"partition","","",38,[[["block",6]],[["vec",3],["block",6]]]],[11,"partition","language_e2e_tests::execution_strategies::random_strategy","",20,[[["block",6]],[["vec",3],["block",6]]]],[11,"clone","language_e2e_tests::account","",0,[[],["account",3]]],[11,"clone","","",2,[[],["balance",3]]],[11,"clone","","",3,[[],["accountrolespecifier",4]]],[11,"clone","","",4,[[],["accountrole",3]]],[11,"clone","","",5,[[],["eventhandlegenerator",3]]],[11,"clone","","",6,[[],["accountdata",3]]],[11,"clone","","",7,[[],["withdrawcapability",3]]],[11,"clone","","",8,[[],["keyrotationcapability",3]]],[11,"clone","","",9,[[],["freezingbit",3]]],[11,"clone","language_e2e_tests::account_universe","",26,[[],["sequencenumbermismatchgen",3]]],[11,"clone","","",27,[[],["insufficientbalancegen",3]]],[11,"clone","","",28,[[],["invalidauthkeygen",3]]],[11,"clone","","",29,[[],["createaccountgen",3]]],[11,"clone","","",30,[[],["createexistingaccountgen",3]]],[11,"clone","","",31,[[],["p2ptransfergen",3]]],[11,"clone","","",32,[[],["rotatekeygen",3]]],[11,"clone","","",33,[[],["accountuniversegen",3]]],[11,"clone","","",34,[[],["accountuniverse",3]]],[11,"clone","","",35,[[],["accountpairgen",3]]],[11,"clone","","",10,[[],["accountpickstyle",4]]],[11,"clone","","",13,[[],["accountcurrent",3]]],[11,"clone","language_e2e_tests::execution_strategies::basic_strategy","",36,[[],["basicstrategy",3]]],[11,"clone","language_e2e_tests::execution_strategies::guided_strategy","",16,[[],["annotatedtransaction",4]]],[11,"clone","","",37,[[],["partitionedguidedstrategy",3]]],[11,"clone","","",38,[[],["unpartitionedguidedstrategy",3]]],[11,"clone","language_e2e_tests::execution_strategies::random_strategy","",20,[[],["randomizedstrategy",3]]],[11,"default","language_e2e_tests::account","",0,[[]]],[11,"default","","",3,[[]]],[11,"default","language_e2e_tests::data_store","",14,[[],["fakedatastore",3]]],[11,"default","language_e2e_tests::execution_strategies::basic_strategy","",15,[[]]],[11,"default","language_e2e_tests::execution_strategies::multi_strategy","",19,[[]]],[11,"eq","language_e2e_tests::account","",0,[[["account",3]]]],[11,"ne","","",0,[[["account",3]]]],[11,"eq","","",2,[[["balance",3]]]],[11,"ne","","",2,[[["balance",3]]]],[11,"eq","","",3,[[["accountrolespecifier",4]]]],[11,"eq","","",4,[[["accountrole",3]]]],[11,"ne","","",4,[[["accountrole",3]]]],[11,"eq","","",5,[[["eventhandlegenerator",3]]]],[11,"ne","","",5,[[["eventhandlegenerator",3]]]],[11,"eq","","",6,[[["accountdata",3]]]],[11,"ne","","",6,[[["accountdata",3]]]],[11,"eq","","",7,[[["withdrawcapability",3]]]],[11,"ne","","",7,[[["withdrawcapability",3]]]],[11,"eq","","",8,[[["keyrotationcapability",3]]]],[11,"ne","","",8,[[["keyrotationcapability",3]]]],[11,"eq","","",9,[[["freezingbit",3]]]],[11,"ne","","",9,[[["freezingbit",3]]]],[11,"eq","language_e2e_tests::account_universe","",13,[[["accountcurrent",3]]]],[11,"ne","","",13,[[["accountcurrent",3]]]],[11,"eq","language_e2e_tests::execution_strategies::guided_strategy","",16,[[["annotatedtransaction",4]]]],[11,"ne","","",16,[[["annotatedtransaction",4]]]],[11,"fmt","language_e2e_tests::account","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","language_e2e_tests::account_universe","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","language_e2e_tests::data_store","",14,[[["formatter",3]],["result",6]]],[11,"fmt","language_e2e_tests::execution_strategies::basic_strategy","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","language_e2e_tests::execution_strategies::guided_strategy","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","language_e2e_tests::execution_strategies::multi_strategy","",18,[[["formatter",3]],["result",6]]],[11,"fmt","language_e2e_tests::execution_strategies::random_strategy","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","language_e2e_tests::executor","",24,[[["formatter",3]],["result",6]]],[11,"fmt","language_e2e_tests::keygen","",25,[[["formatter",3]],["result",6]]],[11,"fmt","language_e2e_tests::execution_strategies::multi_strategy","",18,[[["formatter",3]],["result",6]]],[11,"from_str","language_e2e_tests::account","",3,[[],["result",6]]],[11,"source","language_e2e_tests::execution_strategies::multi_strategy","",18,[[],[["option",4],["error",8]]]],[11,"arbitrary_with","language_e2e_tests::account_universe","",26,[[]]],[11,"arbitrary_with","","",27,[[]]],[11,"arbitrary_with","","",28,[[]]],[11,"arbitrary_with","","",29,[[]]],[11,"arbitrary_with","","",30,[[]]],[11,"arbitrary_with","","",31,[[]]],[11,"arbitrary_with","","",32,[[]]],[11,"arbitrary_with","","",35,[[]]],[11,"arbitrary_with","language_e2e_tests::account","",0,[[]]],[11,"fetch_config","language_e2e_tests::data_store","",14,[[["accesspath",3]],[["option",4],["vec",3]]]],[11,"get","","",14,[[["accesspath",3]],[["result",6],["option",4]]]],[11,"multi_get","","",14,[[],[["result",6],["vec",3]]]],[11,"is_genesis","","",14,[[]]],[11,"get_module","","",14,[[["moduleid",3]],[["option",4],["vmresult",6]]]],[11,"get_resource","","",14,[[["accountaddress",3],["structtag",3]],[["partialvmresult",6],["option",4]]]],[11,"strategy","language_e2e_tests::account_universe","Returns a [<code>Strategy</code>] that generates a universe of …",33,[[]]],[11,"success_strategy","","Returns a [<code>Strategy</code>] that generates a universe of …",33,[[]]],[11,"set_pick_style","","Sets the pick style used by this account universe.",33,[[["accountpickstyle",4]]]],[11,"num_accounts","","Returns the number of accounts in this account universe.",33,[[]]],[11,"setup","","Returns an [<code>AccountUniverse</code>] with the initial state …",33,[[["fakeexecutor",3]],["accountuniverse",3]]],[11,"setup_gas_cost_stability","","Returns an [<code>AccountUniverse</code>] with the initial state …",33,[[["fakeexecutor",3]],["accountuniverse",3]]],[11,"num_accounts","","Returns the number of accounts currently in this universe.",34,[[]]],[11,"accounts","","Returns the accounts currently in this universe.",34,[[]]],[11,"add_account","","Adds an account to the universe so that future …",34,[[["accountdata",3]]]],[11,"pick","","Picks an account using the provided <code>Index</code> as a source of …",34,[[["index",3]]]],[11,"pick","","Picks two accounts uniformly randomly from this universe …",35,[[["accountuniverse",3]],["accountpair",3]]]],"p":[[3,"Account"],[3,"TransactionBuilder"],[3,"Balance"],[4,"AccountRoleSpecifier"],[3,"AccountRole"],[3,"EventHandleGenerator"],[3,"AccountData"],[3,"WithdrawCapability"],[3,"KeyRotationCapability"],[3,"FreezingBit"],[4,"AccountPickStyle"],[3,"AccountPair"],[8,"AUTransactionGen"],[3,"AccountCurrent"],[3,"FakeDataStore"],[3,"BasicExecutor"],[4,"AnnotatedTransaction"],[3,"GuidedExecutor"],[4,"MultiResult"],[3,"MultiExecutor"],[3,"RandomizedStrategy"],[3,"RandomExecutor"],[8,"Executor"],[8,"PartitionStrategy"],[3,"FakeExecutor"],[3,"KeyGen"],[3,"SequenceNumberMismatchGen"],[3,"InsufficientBalanceGen"],[3,"InvalidAuthkeyGen"],[3,"CreateAccountGen"],[3,"CreateExistingAccountGen"],[3,"P2PTransferGen"],[3,"RotateKeyGen"],[3,"AccountUniverseGen"],[3,"AccountUniverse"],[3,"AccountPairGen"],[3,"BasicStrategy"],[3,"PartitionedGuidedStrategy"],[3,"UnPartitionedGuidedStrategy"]]},\
"language_e2e_testsuite":{"doc":"","i":[],"p":[]},\
"memsocket":{"doc":"","i":[[3,"MemoryListener","memsocket","An in-memory socket server, listening for connections.",null,null],[11,"bind","","Creates a new <code>MemoryListener</code> which will be bound to the …",0,[[],["result",6]]],[11,"local_addr","","Returns the local address that this listener is bound to.",0,[[]]],[11,"incoming","","Consumes this listener, returning a stream of the sockets …",0,[[],["incoming",3]]],[3,"Incoming","","Stream returned by the <code>MemoryListener::incoming</code> function …",null,null],[3,"MemorySocket","","An in-memory stream between two local sockets.",null,null],[11,"new_pair","","Construct both sides of an in-memory socket.",1,[[]]],[11,"connect","","Create a new in-memory Socket connected to the specified …",1,[[],[["memorysocket",3],["result",6]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"try_poll_next","","",2,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"drop","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"poll_next","","",2,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_read","","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.",1,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_write","","Attempt to write bytes from <code>buf</code> into the outgoing channel.",1,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","Attempt to flush the channel. Cannot Fail.",1,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_close","","Attempt to close the channel. Cannot Fail.",1,[[["context",3],["pin",3]],[["poll",4],["result",6]]]]],"p":[[3,"MemoryListener"],[3,"MemorySocket"],[3,"Incoming"]]},\
"module_generation":{"doc":"","i":[[5,"generate_module","module_generation","",null,[[["stdrng",3],["modulegeneratoroptions",3]],["compiledmodule",3]]],[5,"generate_modules","","Generate a <code>number - 1</code> modules. Then generate a root …",null,[[["stdrng",3],["modulegeneratoroptions",3]]]],[5,"generate_verified_modules","","",null,[[["stdrng",3],["modulegeneratoroptions",3]]]],[3,"ModuleGenerator","","",null,null],[3,"ModuleGeneratorOptions","","",null,null],[12,"max_locals","","The maximum number of locals that can be defined within a …",0,null],[12,"max_fields","","The maximum number of fields that will be generated for …",0,null],[12,"min_fields","","",0,null],[12,"max_structs","","The maximum number of structs that can be generated for a …",0,null],[12,"max_functions","","The maximum number of functions that can be generated for …",0,null],[12,"max_ty_params","","The maximum number of type parameters functions and …",0,null],[12,"byte_array_max_size","","The maximum size that generated byte arrays can be.",0,null],[12,"max_string_size","","The maximum size that a generated string can be.",0,null],[12,"max_function_call_size","","The maximum number of arguments to generated function …",0,null],[12,"max_ret_types_size","","The maximum number of return types of generated function …",0,null],[12,"simple_types_only","","Whether or not generate modules should only contain …",0,null],[12,"references_allowed","","Whether references are allowed to be generated for e.g. …",0,null],[12,"add_resources","","Whether the generated modules should have any resources …",0,null],[12,"min_table_size","","The minimum number of entries in any table",0,null],[12,"args_for_ty_params","","If set, all functions with type parameters will have …",0,null],[3,"Pad","","",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"clone","","",0,[[],["modulegeneratoroptions",3]]],[11,"default","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"create","","",1,[[["btreeset",3],["modulegeneratoroptions",3],["stdrng",3]],["moduledefinition",3]]],[11,"pad","","",2,[[["compiledmodulemut",3],["modulegeneratoroptions",3]]]]],"p":[[3,"ModuleGeneratorOptions"],[3,"ModuleGenerator"],[3,"Pad"]]},\
"move_bytecode_viewer":{"doc":"","i":[[0,"bytecode_viewer","move_bytecode_viewer","",null,null],[3,"BytecodeInfo","move_bytecode_viewer::bytecode_viewer","",null,null],[12,"function_name","","",0,null],[12,"function_index","","",0,null],[12,"code_offset","","",0,null],[3,"BytecodeViewer","","",null,null],[12,"lines","","",1,null],[12,"module","","",1,null],[12,"line_map","","",1,null],[11,"new","","",1,[[["sourcemap",3],["compiledmodule",3],["loc",3]]]],[0,"interfaces","move_bytecode_viewer","",null,null],[3,"SourceContext","move_bytecode_viewer::interfaces","There are two interfaces--the <code>LeftScreen</code> and <code>RightScreen</code>…",null,null],[12,"left","","",2,null],[12,"highlight","","",2,null],[12,"remainder","","",2,null],[8,"LeftScreen","","The <code>LeftScreen</code> trait is used to index the code.",null,null],[16,"SourceIndex","","This is the type used for indexing the source code in the …",3,null],[10,"get_source_index_for_line","","Given a <code>line</code> and the <code>column</code> within that line, this …",3,[[],["option",4]]],[10,"backing_string","","Return the backing string to be displayed on the left …",3,[[],["string",3]]],[8,"RightScreen","","The <code>RightScreen</code> trait takes the indices output by the …",null,null],[10,"source_for_code_location","","Take a <code>SourceIndex</code> from the <code>Indexer</code> and turn it into a …",4,[[],[["result",6],["sourcecontext",3]]]],[10,"backing_string","","",4,[[],["string",3]]],[0,"source_viewer","move_bytecode_viewer","",null,null],[3,"ModuleViewer","move_bytecode_viewer::source_viewer","",null,null],[11,"new","","",5,[[["path",3],["loc",3],["compiledmodule",3],["sourcemap",3]]]],[0,"tui","move_bytecode_viewer","",null,null],[0,"text_builder","move_bytecode_viewer::tui","",null,null],[3,"TextBuilder","move_bytecode_viewer::tui::text_builder","A <code>TextBuilder</code> is used to build up a paragraph, where some …",null,null],[11,"new","","Create a new text builder",6,[[]]],[11,"add","","Add <code>text</code> with the given <code>style</code>ing to the text builder. …",6,[[["style",3],["string",3]]]],[11,"finish","","Return back the final Spans, each <code>Spans</code> represents a line …",6,[[],[["spans",3],["vec",3]]]],[0,"tui_interface","move_bytecode_viewer::tui","",null,null],[3,"TUIOutput","move_bytecode_viewer::tui::tui_interface","The output that will be display in the TUI. The text in …",null,null],[12,"left_screen","","The text to be displayed on the left screen. Each <code>Spans</code> …",7,null],[12,"right_screen","","The text to be displayed on the right screen. Each <code>Spans</code> …",7,null],[8,"TUIInterface","","",null,null],[18,"LEFT_TITLE","","The title to be used for the left screen",8,null],[18,"RIGHT_TITLE","","The title to be used for the right screen",8,null],[10,"on_redraw","","Function called on each redraw. The <code>TUIOutput</code> contains …",8,[[],["tuioutput",3]]],[10,"bound_line","","Bounds the line number so that it does not run past the …",8,[[]]],[10,"bound_column","","Bounds the column number (w.r.t. the current <code>line_number</code>) …",8,[[]]],[3,"DebugInterface","","A Debugging interface for the TUI. Useful for debugging …",null,null],[11,"new","","",9,[[["string",3]]]],[5,"start_tui_with_interface","","Starts a two-pane TUI using the provided <code>Interface</code> to …",null,[[["tuiinterface",8]],[["box",3],["result",4]]]],[3,"TUI","move_bytecode_viewer::tui","",null,null],[11,"new","","",10,[[]]],[11,"redraw","","",10,[[["frame",3]]]],[11,"handle_input","","Handles keyboard input, and updates state according to …",10,[[],[["box",3],["result",4]]]],[0,"viewer","move_bytecode_viewer","",null,null],[3,"Viewer","move_bytecode_viewer::viewer","",null,null],[11,"new","","",11,[[]]],[11,"from","move_bytecode_viewer::bytecode_viewer","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","move_bytecode_viewer::interfaces","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","move_bytecode_viewer::source_viewer","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","move_bytecode_viewer::tui::text_builder","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","move_bytecode_viewer::tui::tui_interface","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","move_bytecode_viewer::tui","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","move_bytecode_viewer::viewer","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"get_source_index_for_line","move_bytecode_viewer::bytecode_viewer","",1,[[],["option",4]]],[11,"backing_string","","",1,[[],["string",3]]],[11,"source_for_code_location","move_bytecode_viewer::source_viewer","",5,[[["bytecodeinfo",3]],[["result",6],["sourcecontext",3]]]],[11,"backing_string","","",5,[[],["string",3]]],[11,"on_redraw","move_bytecode_viewer::tui::tui_interface","",9,[[],["tuioutput",3]]],[11,"bound_line","","",9,[[]]],[11,"bound_column","","",9,[[]]],[11,"on_redraw","move_bytecode_viewer::viewer","",11,[[],["tuioutput",3]]],[11,"bound_line","","",11,[[]]],[11,"bound_column","","",11,[[]]],[11,"clone","move_bytecode_viewer::bytecode_viewer","",0,[[],["bytecodeinfo",3]]],[11,"clone","","",1,[[],["bytecodeviewer",3]]],[11,"clone","move_bytecode_viewer::interfaces","",2,[[],["sourcecontext",3]]],[11,"clone","move_bytecode_viewer::source_viewer","",5,[[],["moduleviewer",3]]],[11,"clone","move_bytecode_viewer::tui::text_builder","",6,[[],["textbuilder",3]]],[11,"clone","move_bytecode_viewer::tui::tui_interface","",7,[[],["tuioutput",3]]],[11,"clone","","",9,[[],["debuginterface",3]]],[11,"clone","move_bytecode_viewer::viewer","",11,[[],["viewer",3]]],[11,"default","move_bytecode_viewer::tui::text_builder","",6,[[],["textbuilder",3]]],[11,"fmt","move_bytecode_viewer::bytecode_viewer","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","move_bytecode_viewer::interfaces","",2,[[["formatter",3]],["result",6]]],[11,"fmt","move_bytecode_viewer::source_viewer","",5,[[["formatter",3]],["result",6]]],[11,"fmt","move_bytecode_viewer::tui::text_builder","",6,[[["formatter",3]],["result",6]]],[11,"fmt","move_bytecode_viewer::tui::tui_interface","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","move_bytecode_viewer::viewer","",11,[[["formatter",3]],["result",6]]]],"p":[[3,"BytecodeInfo"],[3,"BytecodeViewer"],[3,"SourceContext"],[8,"LeftScreen"],[8,"RightScreen"],[3,"ModuleViewer"],[3,"TextBuilder"],[3,"TUIOutput"],[8,"TUIInterface"],[3,"DebugInterface"],[3,"TUI"],[3,"Viewer"]]},\
"move_cli":{"doc":"","i":[[17,"DEFAULT_BUILD_DIR","move_cli","Default directory for build output",null,null],[0,"package","","",null,null],[3,"Mode","move_cli::package","The dependency interface exposed to CLI main",null,null],[11,"prepare","","",0,[[["path",3]],["result",6]]],[11,"source_files","","",0,[[["path",3]],[["result",6],["vec",3]]]],[11,"compiled_modules","","",0,[[["path",3]],[["vec",3],["result",6]]]],[5,"parse_mode_from_string","","",null,[[],[["result",6],["mode",3]]]],[0,"test","move_cli","",null,null],[17,"TEST_ARGS_FILENAME","move_cli::test","The filename that contains the arguments to the Move …",null,null],[5,"run_one","","Run the <code>args_path</code> batch file with<code>cli_binary</code>",null,[[["path",3]],[["result",6],["option",4]]]],[5,"run_all","","",null,[[],["result",6]]],[5,"create_test_scaffold","","Create a directory scaffold for writing a Move CLI test.",null,[[],["result",6]]],[17,"DEFAULT_STORAGE_DIR","move_cli","Default directory where saved Move resources live",null,null],[17,"DEFAULT_SOURCE_DIR","","Default directory where Move modules live",null,null],[17,"DEFAULT_PACKAGE_DIR","","Default directory where Move packages live under build_dir",null,null],[17,"DEFAULT_DEP_MODE","","Default dependency inclusion mode",null,null],[3,"OnDiskStateView","","",null,null],[11,"create","","Create an <code>OnDiskStateView</code> that reads/writes resource data …",1,[[["into",8],["pathbuf",3]],["result",6]]],[11,"interface_files_dir","","",1,[[],[["string",3],["result",6]]]],[11,"is_resource_path","","",1,[[["path",3]]]],[11,"is_event_path","","",1,[[["path",3]]]],[11,"is_module_path","","",1,[[["path",3]]]],[11,"get_resource_bytes","","Read the resource bytes stored on-disk at <code>addr</code>/<code>tag</code>",1,[[["accountaddress",3],["structtag",3]],[["option",4],["result",6]]]],[11,"has_module","","Check if a module at <code>addr</code>/<code>module_id</code> exists",1,[[["moduleid",3]]]],[11,"get_compiled_module","","Deserialize and return the module stored on-disk at <code>addr</code>/…",1,[[["moduleid",3]],[["result",6],["compiledmodule",3]]]],[11,"resolve_function","","Return the name of the function at <code>idx</code> in <code>module_id</code>",1,[[["moduleid",3]],[["identifier",3],["result",6]]]],[11,"view_resource","","Returns a deserialized representation of the resource …",1,[[["path",3]],[["option",4],["result",6]]]],[11,"view_events","","",1,[[["path",3]],[["result",6],["vec",3]]]],[11,"view_module","","",1,[[["path",3]],[["result",6],["option",4]]]],[11,"delete_resource","","Delete resource stored on disk at the path <code>addr</code>/<code>tag</code>",1,[[["accountaddress",3],["structtag",3]],["result",6]]],[11,"save_resource","","",1,[[["accountaddress",3],["structtag",3]],["result",6]]],[11,"save_event","","",1,[[["vec",3],["typetag",4]],["result",6]]],[11,"save_contract_event","","",1,[[["contractevent",4]],["result",6]]],[11,"save_module","","Save <code>module</code> on disk under the path <code>module.address()</code>/…",1,[[["moduleid",3]],["result",6]]],[11,"save_modules","","Save all the modules in the local cache, re-generate …",1,[[],["result",6]]],[11,"delete_module","","",1,[[["moduleid",3]],["result",6]]],[11,"resource_paths","","",1,[[]]],[11,"module_paths","","",1,[[]]],[11,"event_paths","","",1,[[]]],[11,"get_code_cache","","Build the code cache based on all modules in the …",1,[[],[["codecache",3],["result",6]]]],[3,"CodeCache","","Holds a closure of modules and provides operations …",null,null],[11,"all_modules","","",2,[[],[["vec",3],["compiledmodule",3]]]],[11,"get_module","","",2,[[["moduleid",3]],[["result",6],["compiledmodule",3]]]],[11,"get_immediate_module_dependencies","","",2,[[["compiledmodule",3]],[["vec",3],["result",6]]]],[11,"get_all_module_dependencies","","",2,[[["compiledmodule",3]],[["btreemap",3],["result",6]]]],[11,"from","move_cli::package","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","move_cli","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"get_module","","",1,[[["moduleid",3]],[["vmresult",6],["option",4]]]],[11,"get_resource","","",1,[[["accountaddress",3],["structtag",3]],[["option",4],["partialvmresult",6]]]]],"p":[[3,"Mode"],[3,"OnDiskStateView"],[3,"CodeCache"]]},\
"move_core_types":{"doc":"Core types for Move.","i":[[0,"account_address","move_core_types","",null,null],[3,"AccountAddress","move_core_types::account_address","A struct that represents an account address.",null,null],[11,"new","","",0,[[]]],[18,"LENGTH","","The number of bytes in an address.",0,null],[18,"ZERO","","Hex address: 0x0",0,null],[11,"random","","",0,[[]]],[11,"short_str_lossless","","",0,[[],["string",3]]],[11,"to_vec","","",0,[[],["vec",3]]],[11,"to_u8","","",0,[[]]],[11,"from_hex_literal","","",0,[[],["result",6]]],[0,"effects","move_core_types","",null,null],[3,"AccountChangeSet","move_core_types::effects","A collection of changes to modules and resources under a …",null,null],[12,"modules","","",1,null],[12,"resources","","",1,null],[11,"new","","",1,[[]]],[11,"squash","","",1,[[],["result",6]]],[11,"publish_or_overwrite_module","","",1,[[["vec",3],["identifier",3]]]],[11,"publish_or_overwrite_resource","","",1,[[["structtag",3],["vec",3]]]],[11,"publish_module","","",1,[[["vec",3],["identifier",3]],["result",6]]],[11,"unpublish_module","","",1,[[["identifier",3]],["result",6]]],[11,"publish_resource","","",1,[[["structtag",3],["vec",3]],["result",6]]],[11,"unpublish_resource","","",1,[[["structtag",3]],["result",6]]],[3,"ChangeSet","","A collection of changes to a Move state.",null,null],[12,"accounts","","",2,null],[11,"new","","",2,[[]]],[11,"publish_or_overwrite_module","","",2,[[["vec",3],["moduleid",3]]]],[11,"publish_module","","",2,[[["vec",3],["moduleid",3]],["result",6]]],[11,"unpublish_module","","",2,[[["moduleid",3]],["result",6]]],[11,"publish_or_overwrite_resource","","",2,[[["structtag",3],["vec",3],["accountaddress",3]]]],[11,"publish_resource","","",2,[[["structtag",3],["vec",3],["accountaddress",3]],["result",6]]],[11,"unpublish_resource","","",2,[[["structtag",3],["accountaddress",3]],["result",6]]],[11,"squash","","",2,[[],["result",6]]],[11,"into_modules","","",2,[[]]],[11,"modules","","",2,[[]]],[11,"resources","","",2,[[]]],[6,"Event","","",null,null],[0,"gas_schedule","move_core_types","This module lays out the basic abstract costing schedule …",null,null],[6,"GasCarrier","move_core_types::gas_schedule","The underlying carrier for gas-related units and costs. …",null,null],[8,"GasAlgebra","","A trait encoding the operations permitted on the …",null,null],[10,"new","","Project a value into the gas algebra.",3,[[]]],[10,"get","","Get the carrier.",3,[[]]],[11,"map","","Map a function <code>f</code> of one argument over the underlying data.",3,[[["fn",8]]]],[11,"map2","","Map a function <code>f</code> of two arguments over the underlying …",3,[[["fn",8]]]],[11,"app","","Apply a function <code>f</code> of two arguments to the carrier. Since …",3,[[["fn",8]]]],[11,"unitary_cast","","We allow casting between GasAlgebras as long as they have …",3,[[],["gasalgebra",8]]],[11,"add","","Add the two <code>GasAlgebra</code>s together.",3,[[]]],[11,"sub","","Subtract one <code>GasAlgebra</code> from the other.",3,[[]]],[11,"mul","","Multiply two <code>GasAlgebra</code>s together.",3,[[]]],[11,"div","","Divide one <code>GasAlgebra</code> by the other.",3,[[]]],[3,"AbstractMemorySize","","A newtype wrapper that represents the (abstract) memory …",null,null],[3,"GasUnits","","Units of gas as seen by clients of the Move VM.",null,null],[3,"InternalGasUnits","","Units of gas used within the Move VM, scaled for …",null,null],[3,"GasPrice","","A newtype wrapper around the gas price for each unit of …",null,null],[17,"ONE_GAS_UNIT","","One unit of gas",null,null],[17,"MAX_ABSTRACT_MEMORY_SIZE","","The maximum size representable by AbstractMemorySize",null,null],[17,"CONST_SIZE","","The size in bytes for a non-string or address constant on …",null,null],[17,"REFERENCE_SIZE","","The size in bytes for a reference on the stack",null,null],[17,"STRUCT_SIZE","","The size of a struct in bytes",null,null],[17,"DEFAULT_ACCOUNT_SIZE","","For V1 all accounts will be ~800 bytes",null,null],[17,"LARGE_TRANSACTION_CUTOFF","","Any transaction over this size will be charged …",null,null],[17,"MIN_EXISTS_DATA_SIZE","","For exists checks on data that doesn\'t exists this is the …",null,null],[17,"MAX_TRANSACTION_SIZE_IN_BYTES","","",null,null],[3,"GasConstants","","",null,null],[12,"global_memory_per_byte_cost","","The cost per-byte read from global storage.",4,null],[12,"global_memory_per_byte_write_cost","","The cost per-byte written to storage.",4,null],[12,"min_transaction_gas_units","","The flat minimum amount of gas required for any …",4,null],[12,"large_transaction_cutoff","","Any transaction over this size will be charged an …",4,null],[12,"intrinsic_gas_per_byte","","The units of gas that to be charged per byte over the …",4,null],[12,"maximum_number_of_gas_units","","~5 microseconds should equal one unit of computational …",4,null],[12,"min_price_per_gas_unit","","The minimum gas price that a transaction can be submitted …",4,null],[12,"max_price_per_gas_unit","","The maximum gas unit price that a transaction can be …",4,null],[12,"max_transaction_size_in_bytes","","",4,null],[12,"gas_unit_scaling_factor","","",4,null],[12,"default_account_size","","",4,null],[11,"to_internal_units","","",4,[[["gasunits",3],["gascarrier",6]],[["gascarrier",6],["internalgasunits",3]]]],[11,"to_external_units","","",4,[[["gascarrier",6],["internalgasunits",3]],[["gasunits",3],["gascarrier",6]]]],[3,"CostTable","","The cost tables, keyed by the serialized form of the …",null,null],[12,"instruction_table","","",5,null],[12,"native_table","","",5,null],[12,"gas_constants","","",5,null],[11,"instruction_cost","","",5,[[],["gascost",3]]],[11,"native_cost","","",5,[[],["gascost",3]]],[3,"GasCost","","The  <code>GasCost</code> tracks:",null,null],[12,"instruction_gas","","",6,null],[12,"memory_gas","","",6,null],[11,"new","","",6,[[["gascarrier",6]]]],[11,"total","","Convert a GasCost to a total gas charge in …",6,[[],[["gascarrier",6],["internalgasunits",3]]]],[0,"identifier","move_core_types","An identifier is the name of an entity (module, resource, …",null,null],[5,"is_valid_identifier_char","move_core_types::identifier","Return true if this character can appear in a Move …",null,[[]]],[3,"Identifier","","An owned identifier.",null,null],[11,"new","","Creates a new <code>Identifier</code> instance.",7,[[],["result",6]]],[11,"is_valid","","Returns true if this string is a valid identifier.",7,[[]]],[11,"is_self","","Returns if this identifier is \\\"\\\". TODO: remove once we …",7,[[]]],[11,"from_utf8","","Converts a vector of bytes to an <code>Identifier</code>.",7,[[["vec",3]],["result",6]]],[11,"as_ident_str","","Creates a borrowed version of <code>self</code>.",7,[[],["identstr",3]]],[11,"into_string","","Converts this <code>Identifier</code> into a <code>String</code>.",7,[[],["string",3]]],[11,"into_bytes","","Converts this <code>Identifier</code> into a UTF-8-encoded byte …",7,[[],["vec",3]]],[3,"IdentStr","","A borrowed identifier.",null,null],[11,"new","","",8,[[],[["result",6],["identstr",3]]]],[11,"is_valid","","Returns true if this string is a valid identifier.",8,[[]]],[11,"len","","Returns the length of <code>self</code> in bytes.",8,[[]]],[11,"is_empty","","Returns <code>true</code> if <code>self</code> has a length of zero bytes.",8,[[]]],[11,"as_str","","Converts <code>self</code> to a <code>&str</code>.",8,[[]]],[11,"as_bytes","","Converts <code>self</code> to a byte slice.",8,[[]]],[0,"language_storage","move_core_types","",null,null],[17,"CODE_TAG","move_core_types::language_storage","",null,null],[17,"RESOURCE_TAG","","",null,null],[17,"CORE_CODE_ADDRESS","","",null,null],[4,"TypeTag","","",null,null],[13,"Bool","","",9,null],[13,"U8","","",9,null],[13,"U64","","",9,null],[13,"U128","","",9,null],[13,"Address","","",9,null],[13,"Signer","","",9,null],[13,"Vector","","",9,null],[13,"Struct","","",9,null],[3,"StructTag","","",null,null],[12,"address","","",10,null],[12,"module","","",10,null],[12,"name","","",10,null],[12,"type_params","","",10,null],[11,"access_vector","","",10,[[],["vec",3]]],[11,"module_id","","",10,[[],["moduleid",3]]],[3,"ResourceKey","","Represents the intitial key into global storage where we …",null,null],[12,"address","","",11,null],[12,"type_","","",11,null],[11,"address","","",11,[[],["accountaddress",3]]],[11,"type_","","",11,[[],["structtag",3]]],[11,"new","","",11,[[["structtag",3],["accountaddress",3]]]],[3,"ModuleId","","Represents the initial key into global storage where we …",null,null],[11,"new","","",12,[[["identifier",3],["accountaddress",3]]]],[11,"name","","",12,[[],["identstr",3]]],[11,"address","","",12,[[],["accountaddress",3]]],[11,"access_vector","","",12,[[],["vec",3]]],[0,"move_resource","move_core_types","",null,null],[8,"MoveResource","move_core_types::move_resource","",null,null],[18,"MODULE_NAME","","",13,null],[18,"STRUCT_NAME","","",13,null],[11,"module_identifier","","",13,[[],["identifier",3]]],[11,"struct_identifier","","",13,[[],["identifier",3]]],[11,"type_params","","",13,[[],[["typetag",4],["vec",3]]]],[11,"struct_tag","","",13,[[],["structtag",3]]],[11,"resource_path","","",13,[[],["vec",3]]],[0,"parser","move_core_types","",null,null],[5,"parse_type_tags","move_core_types::parser","",null,[[],[["result",6],["vec",3]]]],[5,"parse_type_tag","","",null,[[],[["typetag",4],["result",6]]]],[5,"parse_transaction_arguments","","",null,[[],[["result",6],["vec",3]]]],[5,"parse_transaction_argument","","",null,[[],[["result",6],["transactionargument",4]]]],[0,"proptest_types","move_core_types","",null,null],[0,"transaction_argument","","",null,null],[4,"TransactionArgument","move_core_types::transaction_argument","",null,null],[13,"U8","","",14,null],[13,"U64","","",14,null],[13,"U128","","",14,null],[13,"Address","","",14,null],[13,"U8Vector","","",14,null],[13,"Bool","","",14,null],[5,"convert_txn_args","","Convert the transaction arguments into Move values.",null,[[],[["vec",3],["vec",3]]]],[0,"value","move_core_types","",null,null],[3,"MoveStruct","move_core_types::value","",null,null],[4,"MoveValue","","",null,null],[13,"U8","","",15,null],[13,"U64","","",15,null],[13,"U128","","",15,null],[13,"Bool","","",15,null],[13,"Address","","",15,null],[13,"Vector","","",15,null],[13,"Struct","","",15,null],[13,"Signer","","",15,null],[3,"MoveStructLayout","","",null,null],[4,"MoveTypeLayout","","",null,null],[13,"Bool","","",16,null],[13,"U8","","",16,null],[13,"U64","","",16,null],[13,"U128","","",16,null],[13,"Address","","",16,null],[13,"Vector","","",16,null],[13,"Struct","","",16,null],[13,"Signer","","",16,null],[11,"simple_deserialize","","",15,[[["movetypelayout",4]],["aresult",6]]],[11,"simple_serialize","","",15,[[],[["option",4],["vec",3]]]],[11,"vector_u8","","",15,[[["vec",3]]]],[5,"serialize_values","","",null,[[],[["vec",3],["vec",3]]]],[11,"new","","",17,[[["vec",3],["movevalue",4]]]],[11,"simple_deserialize","","",17,[[["movestructlayout",3]],["aresult",6]]],[11,"fields","","",17,[[]]],[11,"into_inner","","",17,[[],[["vec",3],["movevalue",4]]]],[11,"new","","",18,[[["vec",3],["movetypelayout",4]]]],[11,"fields","","",18,[[]]],[0,"vm_status","move_core_types","",null,null],[0,"known_locations","move_core_types::vm_status","",null,null],[17,"ACCOUNT_MODULE_NAME","move_core_types::vm_status::known_locations","The name of the Account module.",null,null],[7,"ACCOUNT_MODULE_IDENTIFIER","","The Identifier for the Account module.",null,null],[7,"ACCOUNT_MODULE","","The ModuleId for the Account module.",null,null],[5,"account_module_abort","","Location for an abort in the Account module",null,[[],["abortlocation",4]]],[17,"DIEM_MODULE_NAME","","The name of the Diem module.",null,null],[7,"DIEM_MODULE_IDENTIFIER","","The Identifier for the Diem module.",null,null],[7,"DIEM_MODULE","","The ModuleId for the Diem module.",null,null],[5,"diem_module_abort","","",null,[[],["abortlocation",4]]],[17,"DESIGNATED_DEALER_MODULE_NAME","","The name of the Designated Dealer module.",null,null],[7,"DESIGNATED_DEALER_MODULE_IDENTIFIER","","The Identifier for the Designated Dealer module.",null,null],[7,"DESIGNATED_DEALER_MODULE","","The ModuleId for the Designated Dealer module.",null,null],[5,"designated_dealer_module_abort","","",null,[[],["abortlocation",4]]],[0,"sub_status","move_core_types::vm_status","",null,null],[17,"NFE_VECTOR_ERROR_BASE","move_core_types::vm_status::sub_status","",null,null],[17,"NFE_BCS_SERIALIZATION_FAILURE","","",null,null],[7,"VALIDATION_STATUS_MIN_CODE","move_core_types::vm_status","The minimum status code for validation statuses",null,null],[7,"VALIDATION_STATUS_MAX_CODE","","The maximum status code for validation statuses",null,null],[7,"VERIFICATION_STATUS_MIN_CODE","","The minimum status code for verification statuses",null,null],[7,"VERIFICATION_STATUS_MAX_CODE","","The maximum status code for verification statuses",null,null],[7,"INVARIANT_VIOLATION_STATUS_MIN_CODE","","The minimum status code for invariant violation statuses",null,null],[7,"INVARIANT_VIOLATION_STATUS_MAX_CODE","","The maximum status code for invariant violation statuses",null,null],[7,"DESERIALIZATION_STATUS_MIN_CODE","","The minimum status code for deserialization statuses",null,null],[7,"DESERIALIZATION_STATUS_MAX_CODE","","The maximum status code for deserialization statuses",null,null],[7,"EXECUTION_STATUS_MIN_CODE","","The minimum status code for runtime statuses",null,null],[7,"EXECUTION_STATUS_MAX_CODE","","The maximum status code for runtim statuses",null,null],[4,"VMStatus","","A <code>VMStatus</code> is represented as either",null,null],[13,"Executed","","The VM status corresponding to an EXECUTED status code",19,null],[13,"Error","","Indicates an error from the VM, e.g. OUT_OF_GAS, …",19,null],[13,"MoveAbort","","Indicates an <code>abort</code> from inside Move code. Contains the …",19,null],[13,"ExecutionFailure","","Indicates an failure from inside Move code, where the VM …",19,null],[12,"status_code","move_core_types::vm_status::VMStatus","",20,null],[12,"location","","",20,null],[12,"function","","",20,null],[12,"code_offset","","",20,null],[4,"KeptVMStatus","move_core_types::vm_status","",null,null],[13,"Executed","","",21,null],[13,"OutOfGas","","",21,null],[13,"MoveAbort","","",21,null],[13,"ExecutionFailure","","",21,null],[12,"location","move_core_types::vm_status::KeptVMStatus","",22,null],[12,"function","","",22,null],[12,"code_offset","","",22,null],[13,"MiscellaneousError","move_core_types::vm_status","",21,null],[6,"DiscardedVMStatus","","",null,null],[4,"AbortLocation","","An <code>AbortLocation</code> specifies where a Move program <code>abort</code> …",null,null],[13,"Module","","Indicates <code>abort</code> occurred in the specified module",23,null],[13,"Script","","Indicates the <code>abort</code> occurred in a script",23,null],[4,"StatusType","","A status type is one of 5 different variants, along with …",null,null],[13,"Validation","","",24,null],[13,"Verification","","",24,null],[13,"InvariantViolation","","",24,null],[13,"Deserialization","","",24,null],[13,"Execution","","",24,null],[13,"Unknown","","",24,null],[11,"status_code","","Return the status code for the <code>VMStatus</code>",19,[[],["statuscode",4]]],[11,"move_abort_code","","Returns the Move abort code if the status is <code>MoveAbort</code>, …",19,[[],["option",4]]],[11,"status_type","","Return the status type for this <code>VMStatus</code>. This is solely …",19,[[],["statustype",4]]],[11,"keep_or_discard","","Returns <code>Ok</code> with a recorded status if it should be kept, …",19,[[],[["discardedvmstatus",6],["keptvmstatus",4],["result",6]]]],[4,"StatusCode","","We don\'t derive Arbitrary on this enum because it is too …",null,null],[13,"UNKNOWN_VALIDATION_STATUS","","",25,null],[13,"INVALID_SIGNATURE","","",25,null],[13,"INVALID_AUTH_KEY","","",25,null],[13,"SEQUENCE_NUMBER_TOO_OLD","","",25,null],[13,"SEQUENCE_NUMBER_TOO_NEW","","",25,null],[13,"INSUFFICIENT_BALANCE_FOR_TRANSACTION_FEE","","",25,null],[13,"TRANSACTION_EXPIRED","","",25,null],[13,"SENDING_ACCOUNT_DOES_NOT_EXIST","","",25,null],[13,"REJECTED_WRITE_SET","","",25,null],[13,"INVALID_WRITE_SET","","",25,null],[13,"EXCEEDED_MAX_TRANSACTION_SIZE","","",25,null],[13,"UNKNOWN_SCRIPT","","",25,null],[13,"UNKNOWN_MODULE","","",25,null],[13,"MAX_GAS_UNITS_EXCEEDS_MAX_GAS_UNITS_BOUND","","",25,null],[13,"MAX_GAS_UNITS_BELOW_MIN_TRANSACTION_GAS_UNITS","","",25,null],[13,"GAS_UNIT_PRICE_BELOW_MIN_BOUND","","",25,null],[13,"GAS_UNIT_PRICE_ABOVE_MAX_BOUND","","",25,null],[13,"INVALID_GAS_SPECIFIER","","",25,null],[13,"SENDING_ACCOUNT_FROZEN","","",25,null],[13,"UNABLE_TO_DESERIALIZE_ACCOUNT","","",25,null],[13,"CURRENCY_INFO_DOES_NOT_EXIST","","",25,null],[13,"INVALID_MODULE_PUBLISHER","","",25,null],[13,"NO_ACCOUNT_ROLE","","",25,null],[13,"BAD_CHAIN_ID","","",25,null],[13,"SEQUENCE_NUMBER_TOO_BIG","","",25,null],[13,"BAD_TRANSACTION_FEE_CURRENCY","","",25,null],[13,"UNKNOWN_VERIFICATION_ERROR","","",25,null],[13,"INDEX_OUT_OF_BOUNDS","","",25,null],[13,"INVALID_SIGNATURE_TOKEN","","",25,null],[13,"RECURSIVE_STRUCT_DEFINITION","","",25,null],[13,"FIELD_MISSING_TYPE_ABILITY","","",25,null],[13,"INVALID_FALL_THROUGH","","",25,null],[13,"NEGATIVE_STACK_SIZE_WITHIN_BLOCK","","",25,null],[13,"INVALID_MAIN_FUNCTION_SIGNATURE","","",25,null],[13,"DUPLICATE_ELEMENT","","",25,null],[13,"INVALID_MODULE_HANDLE","","",25,null],[13,"UNIMPLEMENTED_HANDLE","","",25,null],[13,"LOOKUP_FAILED","","",25,null],[13,"TYPE_MISMATCH","","",25,null],[13,"MISSING_DEPENDENCY","","",25,null],[13,"POP_WITHOUT_DROP_ABILITY","","",25,null],[13,"BR_TYPE_MISMATCH_ERROR","","",25,null],[13,"ABORT_TYPE_MISMATCH_ERROR","","",25,null],[13,"STLOC_TYPE_MISMATCH_ERROR","","",25,null],[13,"STLOC_UNSAFE_TO_DESTROY_ERROR","","",25,null],[13,"UNSAFE_RET_LOCAL_OR_RESOURCE_STILL_BORROWED","","",25,null],[13,"RET_TYPE_MISMATCH_ERROR","","",25,null],[13,"RET_BORROWED_MUTABLE_REFERENCE_ERROR","","",25,null],[13,"FREEZEREF_TYPE_MISMATCH_ERROR","","",25,null],[13,"FREEZEREF_EXISTS_MUTABLE_BORROW_ERROR","","",25,null],[13,"BORROWFIELD_TYPE_MISMATCH_ERROR","","",25,null],[13,"BORROWFIELD_BAD_FIELD_ERROR","","",25,null],[13,"BORROWFIELD_EXISTS_MUTABLE_BORROW_ERROR","","",25,null],[13,"COPYLOC_UNAVAILABLE_ERROR","","",25,null],[13,"COPYLOC_WITHOUT_COPY_ABILITY","","",25,null],[13,"COPYLOC_EXISTS_BORROW_ERROR","","",25,null],[13,"MOVELOC_UNAVAILABLE_ERROR","","",25,null],[13,"MOVELOC_EXISTS_BORROW_ERROR","","",25,null],[13,"BORROWLOC_REFERENCE_ERROR","","",25,null],[13,"BORROWLOC_UNAVAILABLE_ERROR","","",25,null],[13,"BORROWLOC_EXISTS_BORROW_ERROR","","",25,null],[13,"CALL_TYPE_MISMATCH_ERROR","","",25,null],[13,"CALL_BORROWED_MUTABLE_REFERENCE_ERROR","","",25,null],[13,"PACK_TYPE_MISMATCH_ERROR","","",25,null],[13,"UNPACK_TYPE_MISMATCH_ERROR","","",25,null],[13,"READREF_TYPE_MISMATCH_ERROR","","",25,null],[13,"READREF_WITHOUT_COPY_ABILITY","","",25,null],[13,"READREF_EXISTS_MUTABLE_BORROW_ERROR","","",25,null],[13,"WRITEREF_TYPE_MISMATCH_ERROR","","",25,null],[13,"WRITEREF_WITHOUT_DROP_ABILITY","","",25,null],[13,"WRITEREF_EXISTS_BORROW_ERROR","","",25,null],[13,"WRITEREF_NO_MUTABLE_REFERENCE_ERROR","","",25,null],[13,"INTEGER_OP_TYPE_MISMATCH_ERROR","","",25,null],[13,"BOOLEAN_OP_TYPE_MISMATCH_ERROR","","",25,null],[13,"EQUALITY_OP_TYPE_MISMATCH_ERROR","","",25,null],[13,"EXISTS_WITHOUT_KEY_ABILITY_OR_BAD_ARGUMENT","","",25,null],[13,"BORROWGLOBAL_TYPE_MISMATCH_ERROR","","",25,null],[13,"BORROWGLOBAL_WITHOUT_KEY_ABILITY","","",25,null],[13,"MOVEFROM_TYPE_MISMATCH_ERROR","","",25,null],[13,"MOVEFROM_WITHOUT_KEY_ABILITY","","",25,null],[13,"MOVETO_TYPE_MISMATCH_ERROR","","",25,null],[13,"MOVETO_WITHOUT_KEY_ABILITY","","",25,null],[13,"MODULE_ADDRESS_DOES_NOT_MATCH_SENDER","","",25,null],[13,"NO_MODULE_HANDLES","","",25,null],[13,"POSITIVE_STACK_SIZE_AT_BLOCK_END","","",25,null],[13,"MISSING_ACQUIRES_ANNOTATION","","",25,null],[13,"EXTRANEOUS_ACQUIRES_ANNOTATION","","",25,null],[13,"DUPLICATE_ACQUIRES_ANNOTATION","","",25,null],[13,"INVALID_ACQUIRES_ANNOTATION","","",25,null],[13,"GLOBAL_REFERENCE_ERROR","","",25,null],[13,"CONSTRAINT_NOT_SATISFIED","","",25,null],[13,"NUMBER_OF_TYPE_ARGUMENTS_MISMATCH","","",25,null],[13,"LOOP_IN_INSTANTIATION_GRAPH","","",25,null],[13,"ZERO_SIZED_STRUCT","","",25,null],[13,"LINKER_ERROR","","",25,null],[13,"INVALID_CONSTANT_TYPE","","",25,null],[13,"MALFORMED_CONSTANT_DATA","","",25,null],[13,"EMPTY_CODE_UNIT","","",25,null],[13,"INVALID_LOOP_SPLIT","","",25,null],[13,"INVALID_LOOP_BREAK","","",25,null],[13,"INVALID_LOOP_CONTINUE","","",25,null],[13,"UNSAFE_RET_UNUSED_VALUES_WITHOUT_DROP","","",25,null],[13,"TOO_MANY_LOCALS","","",25,null],[13,"GENERIC_MEMBER_OPCODE_MISMATCH","","",25,null],[13,"FUNCTION_RESOLUTION_FAILURE","","",25,null],[13,"INVALID_OPERATION_IN_SCRIPT","","",25,null],[13,"DUPLICATE_MODULE_NAME","","",25,null],[13,"BACKWARD_INCOMPATIBLE_MODULE_UPDATE","","",25,null],[13,"CYCLIC_MODULE_DEPENDENCY","","",25,null],[13,"NUMBER_OF_ARGUMENTS_MISMATCH","","",25,null],[13,"INVALID_PARAM_TYPE_FOR_DESERIALIZATION","","",25,null],[13,"FAILED_TO_DESERIALIZE_ARGUMENT","","",25,null],[13,"NUMBER_OF_SIGNER_ARGUMENTS_MISMATCH","","",25,null],[13,"CALLED_SCRIPT_VISIBLE_FROM_NON_SCRIPT_VISIBLE","","",25,null],[13,"EXECUTE_SCRIPT_FUNCTION_CALLED_ON_NON_SCRIPT_VISIBLE","","",25,null],[13,"INVALID_FRIEND_DECL_WITH_SELF","","",25,null],[13,"INVALID_FRIEND_DECL_WITH_MODULES_OUTSIDE_ACCOUNT_ADDRESS","","",25,null],[13,"INVALID_FRIEND_DECL_WITH_MODULES_IN_DEPENDENCIES","","",25,null],[13,"CYCLIC_MODULE_FRIENDSHIP","","",25,null],[13,"UNKNOWN_INVARIANT_VIOLATION_ERROR","","",25,null],[13,"EMPTY_VALUE_STACK","","",25,null],[13,"PC_OVERFLOW","","",25,null],[13,"VERIFICATION_ERROR","","",25,null],[13,"STORAGE_ERROR","","",25,null],[13,"INTERNAL_TYPE_ERROR","","",25,null],[13,"EVENT_KEY_MISMATCH","","",25,null],[13,"UNREACHABLE","","",25,null],[13,"VM_STARTUP_FAILURE","","",25,null],[13,"UNEXPECTED_ERROR_FROM_KNOWN_MOVE_FUNCTION","","",25,null],[13,"VERIFIER_INVARIANT_VIOLATION","","",25,null],[13,"UNEXPECTED_VERIFIER_ERROR","","",25,null],[13,"UNEXPECTED_DESERIALIZATION_ERROR","","",25,null],[13,"FAILED_TO_SERIALIZE_WRITE_SET_CHANGES","","",25,null],[13,"FAILED_TO_DESERIALIZE_RESOURCE","","",25,null],[13,"TYPE_RESOLUTION_FAILURE","","",25,null],[13,"UNKNOWN_BINARY_ERROR","","",25,null],[13,"MALFORMED","","",25,null],[13,"BAD_MAGIC","","",25,null],[13,"UNKNOWN_VERSION","","",25,null],[13,"UNKNOWN_TABLE_TYPE","","",25,null],[13,"UNKNOWN_SIGNATURE_TYPE","","",25,null],[13,"UNKNOWN_SERIALIZED_TYPE","","",25,null],[13,"UNKNOWN_OPCODE","","",25,null],[13,"BAD_HEADER_TABLE","","",25,null],[13,"UNEXPECTED_SIGNATURE_TYPE","","",25,null],[13,"DUPLICATE_TABLE","","",25,null],[13,"UNKNOWN_ABILITY","","",25,null],[13,"UNKNOWN_NATIVE_STRUCT_FLAG","","",25,null],[13,"BAD_U64","","",25,null],[13,"BAD_U128","","",25,null],[13,"VALUE_SERIALIZATION_ERROR","","",25,null],[13,"VALUE_DESERIALIZATION_ERROR","","",25,null],[13,"CODE_DESERIALIZATION_ERROR","","",25,null],[13,"INVALID_FLAG_BITS","","",25,null],[13,"UNKNOWN_RUNTIME_STATUS","","",25,null],[13,"EXECUTED","","",25,null],[13,"OUT_OF_GAS","","",25,null],[13,"RESOURCE_DOES_NOT_EXIST","","",25,null],[13,"RESOURCE_ALREADY_EXISTS","","",25,null],[13,"MISSING_DATA","","",25,null],[13,"DATA_FORMAT_ERROR","","",25,null],[13,"ABORTED","","",25,null],[13,"ARITHMETIC_ERROR","","",25,null],[13,"EXECUTION_STACK_OVERFLOW","","",25,null],[13,"CALL_STACK_OVERFLOW","","",25,null],[13,"VM_MAX_TYPE_DEPTH_REACHED","","",25,null],[13,"VM_MAX_VALUE_DEPTH_REACHED","","",25,null],[13,"UNKNOWN_STATUS","","",25,null],[11,"status_type","","Return the status type for this status code",25,[[],["statustype",4]]],[11,"from","move_core_types::account_address","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"encode_hex","","",0,[[]]],[11,"encode_hex_upper","","",0,[[]]],[11,"from","move_core_types::effects","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","move_core_types::gas_schedule","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","move_core_types::identifier","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","move_core_types::language_storage","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","move_core_types::transaction_argument","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","move_core_types::value","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","move_core_types::vm_status","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"to_string","","",21,[[],["string",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"to_string","","",24,[[],["string",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"new","move_core_types::gas_schedule","",26,[[["gascarrier",6]]]],[11,"get","","",26,[[],["gascarrier",6]]],[11,"new","","",27,[[["gascarrier",6]]]],[11,"get","","",27,[[],["gascarrier",6]]],[11,"new","","",28,[[["gascarrier",6]]]],[11,"get","","",28,[[],["gascarrier",6]]],[11,"new","","",29,[[["gascarrier",6]]]],[11,"get","","",29,[[],["gascarrier",6]]],[11,"as_ref","move_core_types::account_address","",0,[[]]],[11,"as_ref","move_core_types::identifier","",7,[[],["identstr",3]]],[11,"from","","",7,[[["identstr",3]]]],[11,"clone","move_core_types::account_address","",0,[[],["accountaddress",3]]],[11,"clone","move_core_types::effects","",1,[[],["accountchangeset",3]]],[11,"clone","","",2,[[],["changeset",3]]],[11,"clone","move_core_types::gas_schedule","",26,[[],["abstractmemorysize",3]]],[11,"clone","","",27,[[],["gasunits",3]]],[11,"clone","","",28,[[],["internalgasunits",3]]],[11,"clone","","",29,[[],["gasprice",3]]],[11,"clone","","",4,[[],["gasconstants",3]]],[11,"clone","","",5,[[],["costtable",3]]],[11,"clone","","",6,[[],["gascost",3]]],[11,"clone","move_core_types::identifier","",7,[[],["identifier",3]]],[11,"clone","move_core_types::language_storage","",9,[[],["typetag",4]]],[11,"clone","","",10,[[],["structtag",3]]],[11,"clone","","",11,[[],["resourcekey",3]]],[11,"clone","","",12,[[],["moduleid",3]]],[11,"clone","move_core_types::transaction_argument","",14,[[],["transactionargument",4]]],[11,"clone","move_core_types::value","",17,[[],["movestruct",3]]],[11,"clone","","",15,[[],["movevalue",4]]],[11,"clone","","",18,[[],["movestructlayout",3]]],[11,"clone","","",16,[[],["movetypelayout",4]]],[11,"clone","move_core_types::vm_status","",19,[[],["vmstatus",4]]],[11,"clone","","",21,[[],["keptvmstatus",4]]],[11,"clone","","",23,[[],["abortlocation",4]]],[11,"clone","","",24,[[],["statustype",4]]],[11,"clone","","",25,[[],["statuscode",4]]],[11,"default","move_core_types::gas_schedule","",4,[[]]],[11,"cmp","move_core_types::account_address","",0,[[["accountaddress",3]],["ordering",4]]],[11,"cmp","move_core_types::identifier","",7,[[["identifier",3]],["ordering",4]]],[11,"cmp","","",8,[[["identstr",3]],["ordering",4]]],[11,"cmp","move_core_types::language_storage","",9,[[["typetag",4]],["ordering",4]]],[11,"cmp","","",10,[[["structtag",3]],["ordering",4]]],[11,"cmp","","",11,[[["resourcekey",3]],["ordering",4]]],[11,"cmp","","",12,[[["moduleid",3]],["ordering",4]]],[11,"cmp","move_core_types::vm_status","",19,[[["vmstatus",4]],["ordering",4]]],[11,"cmp","","",21,[[["keptvmstatus",4]],["ordering",4]]],[11,"cmp","","",23,[[["abortlocation",4]],["ordering",4]]],[11,"cmp","","",25,[[["statuscode",4]],["ordering",4]]],[11,"eq","move_core_types::account_address","",0,[[["accountaddress",3]]]],[11,"ne","","",0,[[["accountaddress",3]]]],[11,"eq","move_core_types::gas_schedule","",26,[[["abstractmemorysize",3]]]],[11,"ne","","",26,[[["abstractmemorysize",3]]]],[11,"eq","","",27,[[["gasunits",3]]]],[11,"ne","","",27,[[["gasunits",3]]]],[11,"eq","","",28,[[["internalgasunits",3]]]],[11,"ne","","",28,[[["internalgasunits",3]]]],[11,"eq","","",29,[[["gasprice",3]]]],[11,"ne","","",29,[[["gasprice",3]]]],[11,"eq","","",4,[[["gasconstants",3]]]],[11,"ne","","",4,[[["gasconstants",3]]]],[11,"eq","","",5,[[["costtable",3]]]],[11,"ne","","",5,[[["costtable",3]]]],[11,"eq","","",6,[[["gascost",3]]]],[11,"ne","","",6,[[["gascost",3]]]],[11,"eq","move_core_types::identifier","",7,[[["identifier",3]]]],[11,"ne","","",7,[[["identifier",3]]]],[11,"eq","","",8,[[["identstr",3]]]],[11,"ne","","",8,[[["identstr",3]]]],[11,"eq","move_core_types::language_storage","",9,[[["typetag",4]]]],[11,"ne","","",9,[[["typetag",4]]]],[11,"eq","","",10,[[["structtag",3]]]],[11,"ne","","",10,[[["structtag",3]]]],[11,"eq","","",11,[[["resourcekey",3]]]],[11,"ne","","",11,[[["resourcekey",3]]]],[11,"eq","","",12,[[["moduleid",3]]]],[11,"ne","","",12,[[["moduleid",3]]]],[11,"eq","move_core_types::transaction_argument","",14,[[["transactionargument",4]]]],[11,"ne","","",14,[[["transactionargument",4]]]],[11,"eq","move_core_types::value","",17,[[["movestruct",3]]]],[11,"ne","","",17,[[["movestruct",3]]]],[11,"eq","","",15,[[["movevalue",4]]]],[11,"ne","","",15,[[["movevalue",4]]]],[11,"eq","move_core_types::vm_status","",19,[[["vmstatus",4]]]],[11,"ne","","",19,[[["vmstatus",4]]]],[11,"eq","","",21,[[["keptvmstatus",4]]]],[11,"ne","","",21,[[["keptvmstatus",4]]]],[11,"eq","","",23,[[["abortlocation",4]]]],[11,"ne","","",23,[[["abortlocation",4]]]],[11,"eq","","",24,[[["statustype",4]]]],[11,"eq","","",25,[[["statuscode",4]]]],[11,"partial_cmp","move_core_types::account_address","",0,[[["accountaddress",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["accountaddress",3]]]],[11,"le","","",0,[[["accountaddress",3]]]],[11,"gt","","",0,[[["accountaddress",3]]]],[11,"ge","","",0,[[["accountaddress",3]]]],[11,"partial_cmp","move_core_types::identifier","",7,[[["identifier",3]],[["option",4],["ordering",4]]]],[11,"lt","","",7,[[["identifier",3]]]],[11,"le","","",7,[[["identifier",3]]]],[11,"gt","","",7,[[["identifier",3]]]],[11,"ge","","",7,[[["identifier",3]]]],[11,"partial_cmp","","",8,[[["identstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",8,[[["identstr",3]]]],[11,"le","","",8,[[["identstr",3]]]],[11,"gt","","",8,[[["identstr",3]]]],[11,"ge","","",8,[[["identstr",3]]]],[11,"partial_cmp","move_core_types::language_storage","",9,[[["typetag",4]],[["option",4],["ordering",4]]]],[11,"lt","","",9,[[["typetag",4]]]],[11,"le","","",9,[[["typetag",4]]]],[11,"gt","","",9,[[["typetag",4]]]],[11,"ge","","",9,[[["typetag",4]]]],[11,"partial_cmp","","",10,[[["structtag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",10,[[["structtag",3]]]],[11,"le","","",10,[[["structtag",3]]]],[11,"gt","","",10,[[["structtag",3]]]],[11,"ge","","",10,[[["structtag",3]]]],[11,"partial_cmp","","",11,[[["resourcekey",3]],[["option",4],["ordering",4]]]],[11,"lt","","",11,[[["resourcekey",3]]]],[11,"le","","",11,[[["resourcekey",3]]]],[11,"gt","","",11,[[["resourcekey",3]]]],[11,"ge","","",11,[[["resourcekey",3]]]],[11,"partial_cmp","","",12,[[["moduleid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",12,[[["moduleid",3]]]],[11,"le","","",12,[[["moduleid",3]]]],[11,"gt","","",12,[[["moduleid",3]]]],[11,"ge","","",12,[[["moduleid",3]]]],[11,"partial_cmp","move_core_types::vm_status","",19,[[["vmstatus",4]],[["option",4],["ordering",4]]]],[11,"lt","","",19,[[["vmstatus",4]]]],[11,"le","","",19,[[["vmstatus",4]]]],[11,"gt","","",19,[[["vmstatus",4]]]],[11,"ge","","",19,[[["vmstatus",4]]]],[11,"partial_cmp","","",21,[[["keptvmstatus",4]],[["option",4],["ordering",4]]]],[11,"lt","","",21,[[["keptvmstatus",4]]]],[11,"le","","",21,[[["keptvmstatus",4]]]],[11,"gt","","",21,[[["keptvmstatus",4]]]],[11,"ge","","",21,[[["keptvmstatus",4]]]],[11,"partial_cmp","","",23,[[["abortlocation",4]],[["option",4],["ordering",4]]]],[11,"lt","","",23,[[["abortlocation",4]]]],[11,"le","","",23,[[["abortlocation",4]]]],[11,"gt","","",23,[[["abortlocation",4]]]],[11,"ge","","",23,[[["abortlocation",4]]]],[11,"partial_cmp","","",25,[[["statuscode",4]],[["option",4],["ordering",4]]]],[11,"to_owned","move_core_types::identifier","",8,[[],["identifier",3]]],[11,"deref","move_core_types::account_address","",0,[[]]],[11,"deref","move_core_types::identifier","",7,[[],["identstr",3]]],[11,"fmt","move_core_types::account_address","",0,[[["formatter",3]],["result",6]]],[11,"fmt","move_core_types::effects","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","move_core_types::gas_schedule","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","move_core_types::identifier","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","move_core_types::language_storage","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","move_core_types::transaction_argument","",14,[[["formatter",3]],["result",6]]],[11,"fmt","move_core_types::value","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","move_core_types::vm_status","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","move_core_types::account_address","",0,[[["formatter",3]],["result",6]]],[11,"fmt","move_core_types::identifier","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","move_core_types::language_storage","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","move_core_types::vm_status","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"hash","move_core_types::account_address","",0,[[]]],[11,"hash","move_core_types::gas_schedule","",26,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","move_core_types::identifier","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","move_core_types::language_storage","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","move_core_types::transaction_argument","",14,[[]]],[11,"hash","move_core_types::vm_status","",19,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",25,[[]]],[11,"borrow","move_core_types::identifier","",7,[[],["identstr",3]]],[11,"try_from","move_core_types::account_address","Tries to convert the provided byte array into Address.",0,[[],[["result",6],["accountaddress",3]]]],[11,"try_from","","Tries to convert the provided byte array into Address.",0,[[],[["result",6],["accountaddress",3]]]],[11,"try_from","","Tries to convert the provided byte buffer into Address.",0,[[["vec",3]],[["result",6],["accountaddress",3]]]],[11,"try_from","","",0,[[["string",3]],[["result",6],["accountaddress",3]]]],[11,"try_from","move_core_types::vm_status","",25,[[],["result",6]]],[11,"from_str","move_core_types::account_address","",0,[[],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","move_core_types::gas_schedule","",26,[[],["result",4]]],[11,"serialize","","",27,[[],["result",4]]],[11,"serialize","","",28,[[],["result",4]]],[11,"serialize","","",29,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","move_core_types::identifier","",7,[[],["result",4]]],[11,"serialize","move_core_types::language_storage","",9,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","move_core_types::transaction_argument","",14,[[],["result",4]]],[11,"serialize","move_core_types::value","",18,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","","",15,[[["serializer",8]],["result",4]]],[11,"serialize","","",17,[[["serializer",8]],["result",4]]],[11,"serialize","move_core_types::vm_status","",19,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"serialize","","",25,[[],["result",4]]],[11,"deserialize","move_core_types::account_address","",0,[[],["result",4]]],[11,"deserialize","move_core_types::gas_schedule","",26,[[],["result",4]]],[11,"deserialize","","",27,[[],["result",4]]],[11,"deserialize","","",28,[[],["result",4]]],[11,"deserialize","","",29,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","move_core_types::identifier","",7,[[],["result",4]]],[11,"deserialize","move_core_types::language_storage","",9,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","move_core_types::transaction_argument","",14,[[],["result",4]]],[11,"deserialize","move_core_types::value","",18,[[],["result",4]]],[11,"deserialize","","",16,[[],["result",4]]],[11,"deserialize","move_core_types::vm_status","",19,[[],["result",4]]],[11,"deserialize","","",21,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"deserialize","","",25,[[],["result",4]]],[11,"arbitrary_with","move_core_types::account_address","",0,[[]]],[11,"arbitrary_with","move_core_types::identifier","",7,[[]]],[11,"arbitrary_with","move_core_types::language_storage","",12,[[]]],[11,"arbitrary_with","","",9,[[]]],[11,"arbitrary_with","move_core_types::transaction_argument","",14,[[]]],[11,"arbitrary_with","move_core_types::vm_status","",19,[[]]],[11,"arbitrary_with","","",21,[[]]],[11,"arbitrary_with","","",23,[[]]],[11,"arbitrary_with","","",25,[[]]],[11,"ref_cast","move_core_types::identifier","",8,[[]]],[11,"ref_cast_mut","","",8,[[]]]],"p":[[3,"AccountAddress"],[3,"AccountChangeSet"],[3,"ChangeSet"],[8,"GasAlgebra"],[3,"GasConstants"],[3,"CostTable"],[3,"GasCost"],[3,"Identifier"],[3,"IdentStr"],[4,"TypeTag"],[3,"StructTag"],[3,"ResourceKey"],[3,"ModuleId"],[8,"MoveResource"],[4,"TransactionArgument"],[4,"MoveValue"],[4,"MoveTypeLayout"],[3,"MoveStruct"],[3,"MoveStructLayout"],[4,"VMStatus"],[13,"ExecutionFailure"],[4,"KeptVMStatus"],[13,"ExecutionFailure"],[4,"AbortLocation"],[4,"StatusType"],[4,"StatusCode"],[3,"AbstractMemorySize"],[3,"GasUnits"],[3,"InternalGasUnits"],[3,"GasPrice"]]},\
"move_coverage":{"doc":"","i":[[0,"coverage_map","move_coverage","",null,null],[6,"FunctionCoverage","move_coverage::coverage_map","",null,null],[3,"CoverageMap","","",null,null],[12,"exec_maps","","",0,null],[3,"ModuleCoverageMap","","",null,null],[12,"module_addr","","",1,null],[12,"module_name","","",1,null],[12,"function_maps","","",1,null],[3,"ExecCoverageMap","","",null,null],[12,"exec_id","","",2,null],[12,"module_maps","","",2,null],[3,"ExecCoverageMapWithModules","","",null,null],[12,"module_maps","","",3,null],[12,"compiled_modules","","",3,null],[3,"TraceEntry","","",null,null],[12,"module_addr","","",4,null],[12,"module_name","","",4,null],[12,"func_name","","",4,null],[12,"func_pc","","",4,null],[3,"TraceMap","","",null,null],[12,"exec_maps","","",5,null],[11,"update_coverage_from_trace_file","","Takes in a file containing a raw VM trace, and returns an …",0,[[["asref",8],["path",3]]]],[11,"from_trace_file","","Takes in a file containing a raw VM trace, and returns a …",0,[[["asref",8],["path",3]]]],[11,"from_binary_file","","Takes in a file containing a serialized coverage map and …",0,[[["asref",8],["path",3]]]],[11,"insert","","",0,[[["accountaddress",3],["identifier",3]]]],[11,"to_unified_exec_map","","",0,[[],["execcoveragemap",3]]],[11,"new","","",1,[[["accountaddress",3],["identifier",3]]]],[11,"insert_multi","","",1,[[["identifier",3]]]],[11,"insert","","",1,[[["identifier",3]]]],[11,"merge","","",1,[[["modulecoveragemap",3]]]],[11,"get_function_coverage","","",1,[[["identstr",3]],[["functioncoverage",6],["option",4]]]],[11,"new","","",2,[[["string",3]]]],[11,"insert_multi","","",2,[[["accountaddress",3],["identifier",3]]]],[11,"insert","","",2,[[["accountaddress",3],["identifier",3]]]],[11,"into_coverage_map_with_modules","","",2,[[["accountaddress",3],["btreemap",3],["btreemap",3]],["execcoveragemapwithmodules",3]]],[11,"empty","","",3,[[]]],[11,"merge","","",3,[[["execcoveragemapwithmodules",3]]]],[11,"update_from_trace_file","","Takes in a file containing a raw VM trace, and returns an …",5,[[["asref",8],["path",3]]]],[11,"from_trace_file","","",5,[[["asref",8],["path",3]]]],[11,"from_binary_file","","",5,[[["asref",8],["path",3]]]],[11,"insert","","",5,[[["accountaddress",3],["identifier",3]]]],[5,"output_map_to_file","","",null,[[["asref",8],["path",3]],["result",6]]],[0,"source_coverage","move_coverage","",null,null],[3,"FunctionSourceCoverage","move_coverage::source_coverage","",null,null],[12,"fn_is_native","","",6,null],[12,"uncovered_locations","","",6,null],[3,"SourceCoverageBuilder","","",null,null],[4,"AbstractSegment","","",null,null],[13,"Bounded","","",7,null],[12,"start","move_coverage::source_coverage::AbstractSegment","",8,null],[12,"end","","",8,null],[13,"BoundedRight","move_coverage::source_coverage","",7,null],[12,"end","move_coverage::source_coverage::AbstractSegment","",9,null],[13,"BoundedLeft","move_coverage::source_coverage","",7,null],[12,"start","move_coverage::source_coverage::AbstractSegment","",10,null],[4,"StringSegment","move_coverage::source_coverage","",null,null],[13,"Covered","","",11,null],[13,"Uncovered","","",11,null],[6,"AnnotatedLine","","",null,null],[3,"SourceCoverage","","",null,null],[12,"annotated_lines","","",12,null],[11,"new","","",13,[[["compiledmodule",3],["coveragemap",3],["sourcemap",3]]]],[11,"compute_source_coverage","","",13,[[["path",3]],["sourcecoverage",3]]],[11,"output_source_coverage","","",12,[[],["result",6]]],[0,"summary","move_coverage","",null,null],[3,"ModuleSummary","move_coverage::summary","",null,null],[12,"module_name","","",14,null],[12,"function_summaries","","",14,null],[3,"FunctionSummary","","",null,null],[12,"fn_is_native","","",15,null],[12,"total","","",15,null],[12,"covered","","",15,null],[3,"FunctionInfo","","",null,null],[12,"fn_name","","",16,null],[12,"fn_entry","","",16,null],[12,"fn_returns","","",16,null],[12,"fn_branches","","",16,null],[12,"fn_num_paths","","",16,null],[11,"summarize_csv","","Summarizes the modules coverage in CSV format",14,[[],["result",6]]],[11,"summarize_human","","Summarizes the modules coverage, and returns the total …",14,[[],["result",6]]],[11,"percent_coverage","","",15,[[]]],[5,"summarize_inst_cov_by_module","","",null,[[["modulecoveragemap",3],["compiledmodule",3],["option",4]],["modulesummary",3]]],[5,"summarize_inst_cov","","",null,[[["execcoveragemap",3],["compiledmodule",3]],["modulesummary",3]]],[5,"summarize_path_cov","","",null,[[["tracemap",3],["compiledmodule",3]],["modulesummary",3]]],[11,"into_module_summaries","move_coverage::coverage_map","",3,[[],[["string",3],["btreemap",3],["modulesummary",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"test_only_hash","","",4,[[],["hashvalue",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"vzip","","",5,[[]]],[11,"from","move_coverage::source_coverage","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"test_only_hash","","",6,[[],["hashvalue",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"test_only_hash","","",13,[[],["hashvalue",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"test_only_hash","","",7,[[],["hashvalue",3]]],[11,"vzip","","",7,[[]]],[11,"equivalent","","",7,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"test_only_hash","","",11,[[],["hashvalue",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"test_only_hash","","",12,[[],["hashvalue",3]]],[11,"vzip","","",12,[[]]],[11,"from","move_coverage::summary","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"test_only_hash","","",14,[[],["hashvalue",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"test_only_hash","","",15,[[],["hashvalue",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"clone","move_coverage::source_coverage","",6,[[],["functionsourcecoverage",3]]],[11,"cmp","","",7,[[["abstractsegment",4]],["ordering",4]]],[11,"eq","","",7,[[["abstractsegment",4]]]],[11,"ne","","",7,[[["abstractsegment",4]]]],[11,"partial_cmp","","",7,[[["abstractsegment",4]],[["option",4],["ordering",4]]]],[11,"lt","","",7,[[["abstractsegment",4]]]],[11,"le","","",7,[[["abstractsegment",4]]]],[11,"gt","","",7,[[["abstractsegment",4]]]],[11,"ge","","",7,[[["abstractsegment",4]]]],[11,"fmt","move_coverage::coverage_map","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","move_coverage::source_coverage","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","move_coverage::summary","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"deserialize","move_coverage::coverage_map","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","move_coverage::summary","",14,[[],["result",4]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"serialize","move_coverage::coverage_map","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","move_coverage::source_coverage","",6,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","move_coverage::summary","",14,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]]],"p":[[3,"CoverageMap"],[3,"ModuleCoverageMap"],[3,"ExecCoverageMap"],[3,"ExecCoverageMapWithModules"],[3,"TraceEntry"],[3,"TraceMap"],[3,"FunctionSourceCoverage"],[4,"AbstractSegment"],[13,"Bounded"],[13,"BoundedRight"],[13,"BoundedLeft"],[4,"StringSegment"],[3,"SourceCoverage"],[3,"SourceCoverageBuilder"],[3,"ModuleSummary"],[3,"FunctionSummary"],[3,"FunctionInfo"]]},\
"move_explain":{"doc":"","i":[[5,"get_explanation","move_explain","Given the module ID and the abort code raised from that …",null,[[["moduleid",3]],[["errorcontext",3],["option",4]]]]],"p":[]},\
"move_ir_types":{"doc":"Base types for the Move IR.","i":[[0,"ast","move_ir_types","",null,null],[3,"Program","move_ir_types::ast","A set of Move modules and a Move transaction script",null,null],[12,"modules","","The modules to publish",0,null],[12,"script","","The transaction script to execute",0,null],[4,"ScriptOrModule","","A script or a module, used to represent the two types of …",null,null],[13,"Script","","The script to execute.",1,null],[13,"Module","","The module to publish.",1,null],[3,"Script","","The Move transaction script to be executed",null,null],[12,"imports","","The dependencies of <code>main</code>, i.e. of the transaction script",2,null],[12,"explicit_dependency_declarations","","Explicit declaration of dependencies. If not provided, …",2,null],[12,"constants","","the constants that the module defines. Only a utility, …",2,null],[12,"main","","The transaction script\'s <code>main</code> procedure",2,null],[3,"ModuleName","","Newtype for a name of a module",null,null],[3,"QualifiedModuleIdent","","Newtype of the address + the module name <code>addr.m</code>",null,null],[12,"name","","Name for the module. Will be unique among modules …",3,null],[12,"address","","Address that this module is published under",3,null],[3,"ModuleDefinition","","A Move module",null,null],[12,"name","","name of the module",4,null],[12,"friends","","the module\'s friends",4,null],[12,"imports","","the module\'s dependencies",4,null],[12,"explicit_dependency_declarations","","Explicit declaration of dependencies. If not provided, …",4,null],[12,"structs","","the structs (including resources) that the module defines",4,null],[12,"constants","","the constants that the script defines. Only a utility, …",4,null],[12,"functions","","the procedure that the module defines",4,null],[12,"synthetics","","the synthetic, specification variables the module defines.",4,null],[4,"ModuleIdent","","Either a qualified module name like <code>addr.m</code> or …",null,null],[13,"Transaction","","",5,null],[13,"Qualified","","",5,null],[3,"ModuleDependency","","Explicitly given dependency",null,null],[12,"name","","Qualified identifer of the dependency",6,null],[12,"structs","","The structs (including resources) that the dependency …",6,null],[12,"functions","","The signatures of functions that the dependency defines",6,null],[3,"ImportDefinition","","A dependency/import declaration",null,null],[12,"ident","","the dependency <code>addr.m</code> or <code>Transaction.m</code>",7,null],[12,"alias","","the alias for that dependency <code>m</code>",7,null],[3,"Var_","","Newtype for a variable/local",null,null],[6,"Var","","The type of a variable with a location",null,null],[3,"TypeVar_","","New type that represents a type variable. Used to declare …",null,null],[6,"TypeVar","","The type of a type variable with a location.",null,null],[4,"Kind","","The kind of a type. Analogous to <code>vm::file_format::Kind</code>.",null,null],[13,"All","","Represents the super set of all types.",8,null],[13,"Resource","","<code>Resource</code> types must follow move semantics and various …",8,null],[13,"Copyable","","<code>Copyable</code> types do not need to follow the <code>Resource</code> rules.",8,null],[4,"Type","","The type of a single value",null,null],[13,"Address","","<code>address</code>",9,null],[13,"Signer","","<code>signer</code>",9,null],[13,"U8","","<code>u8</code>",9,null],[13,"U64","","<code>u64</code>",9,null],[13,"U128","","<code>u128</code>",9,null],[13,"Bool","","<code>bool</code>",9,null],[13,"Vector","","<code>vector</code>",9,null],[13,"Struct","","A module defined struct",9,null],[13,"Reference","","A reference type, the bool flag indicates whether the …",9,null],[13,"TypeParameter","","A type parameter",9,null],[3,"QualifiedStructIdent","","Identifier for a struct definition. Tells us where to …",null,null],[12,"module","","Module name and address in which the struct is contained",10,null],[12,"name","","Name for the struct class. Should be unique among structs …",10,null],[3,"Field_","","The field newtype",null,null],[6,"Field","","A field coupled with source location information",null,null],[6,"Fields","","A field map",null,null],[3,"StructName","","Newtype for the name of a struct",null,null],[3,"StructDefinition_","","A Move struct",null,null],[12,"is_nominal_resource","","The struct will have kind resource if <code>is_nominal_resource</code> …",11,null],[12,"name","","Human-readable name for the struct that also serves as a …",11,null],[12,"type_formals","","Kind constraints of the type parameters",11,null],[12,"fields","","the fields each instance has",11,null],[12,"invariants","","the invariants for this struct",11,null],[6,"StructDefinition","","The type of a StructDefinition along with its source …",null,null],[3,"StructDependency","","An explicit struct dependency",null,null],[12,"is_nominal_resource","","The struct will have kind resource if <code>is_nominal_resource</code> …",12,null],[12,"name","","Human-readable name for the struct that also serves as a …",12,null],[12,"type_formals","","Kind constraints of the type parameters",12,null],[4,"StructDefinitionFields","","The fields of a Move struct definition",null,null],[13,"Move","","The fields are declared",13,null],[12,"fields","move_ir_types::ast::StructDefinitionFields","",14,null],[13,"Native","move_ir_types::ast","The struct is a type provided by the VM",13,null],[3,"ConstantName","","Newtype for the name of a constant",null,null],[3,"Constant","","A constant declaration in a module or script",null,null],[12,"name","","The constant\'s name. Not carried through to the Move …",15,null],[12,"signature","","The type of the constant\'s value",15,null],[12,"value","","The constant\'s value",15,null],[3,"FunctionName","","Newtype for the name of a function",null,null],[3,"FunctionSignature","","The signature of a function",null,null],[12,"formals","","Possibly-empty list of (formal name, formal type) pairs. …",16,null],[12,"return_type","","Optional return types",16,null],[12,"type_formals","","Possibly-empty list of (TypeVar, Kind) pairs.s.",16,null],[3,"FunctionDependency","","An explicit function dependency",null,null],[12,"name","","Name of the function dependency",17,null],[12,"signature","","Signature of the function dependency",17,null],[4,"FunctionVisibility","","Public or internal modifier for a procedure",null,null],[13,"Public","","The procedure can be invoked anywhere <code>public</code>",18,null],[13,"Script","","The procedure can only be invoked from a script context …",18,null],[13,"Friend","","The procedure can be invoked internally as well as by …",18,null],[13,"Internal","","The procedure can be invoked only internally <code><no modifier></code>",18,null],[4,"FunctionBody","","The body of a Move function",null,null],[13,"Move","","The body is declared <code>locals</code> are all of the declared locals…",19,null],[12,"locals","move_ir_types::ast::FunctionBody","",20,null],[12,"code","","",20,null],[13,"Bytecode","move_ir_types::ast","",19,null],[12,"locals","move_ir_types::ast::FunctionBody","",21,null],[12,"code","","",21,null],[13,"Native","move_ir_types::ast","The body is provided by the runtime",19,null],[3,"Function_","","A Move function/procedure",null,null],[12,"visibility","","The visibility",22,null],[12,"signature","","The type signature",22,null],[12,"acquires","","List of nominal resources (declared in this module) that …",22,null],[12,"specifications","","List of specifications for the Move prover (experimental)",22,null],[12,"body","","The code for the procedure",22,null],[6,"Function","","The type of a Function coupled with its source location …",null,null],[4,"Builtin","","Builtin \\\"function\\\"-like operators that often have a …",null,null],[13,"Exists","","Check if there is a struct object (<code>StructName</code> resolved by …",23,null],[13,"BorrowGlobal","","Get a reference to the resource(<code>StructName</code> resolved by …",23,null],[13,"MoveFrom","","Remove a resource of the given type from the account with …",23,null],[13,"MoveTo","","Publish an instantiated struct object into signer\'s …",23,null],[13,"Freeze","","Convert a mutable reference into an immutable one",23,null],[13,"ToU8","","Cast an integer into u8.",23,null],[13,"ToU64","","Cast an integer into u64.",23,null],[13,"ToU128","","Cast an integer into u128.",23,null],[4,"FunctionCall_","","Enum for different function calls",null,null],[13,"Builtin","","functions defined in the host environment",24,null],[13,"ModuleFunctionCall","","The call of a module defined procedure",24,null],[12,"module","move_ir_types::ast::FunctionCall_","",25,null],[12,"name","","",25,null],[12,"type_actuals","","",25,null],[6,"FunctionCall","move_ir_types::ast","The type for a function call and its location",null,null],[4,"LValue_","","Enum for Move lvalues",null,null],[13,"Var","","<code>x</code>",26,null],[13,"Mutate","","<code>*e</code>",26,null],[13,"Pop","","<code>_</code>",26,null],[6,"LValue","","",null,null],[4,"Cmd_","","Enum for Move commands",null,null],[13,"Assign","","<code>l_1, ..., l_n = e</code>",27,null],[13,"Unpack","","<code>n { f_1: x_1, ... , f_j: x_j  } = e</code>",27,null],[13,"Abort","","<code>abort e</code>",27,null],[13,"Return","","<code>return e_1, ... , e_j</code>",27,null],[13,"Break","","<code>break</code>",27,null],[13,"Continue","","<code>continue</code>",27,null],[13,"Exp","","",27,null],[6,"Cmd","","The type of a command with its location",null,null],[3,"IfElse","","Struct defining an if statement",null,null],[12,"cond","","the if\'s condition",28,null],[12,"if_block","","the block taken if the condition is <code>true</code>",28,null],[12,"else_block","","the block taken if the condition is <code>false</code>",28,null],[3,"While","","Struct defining a while statement",null,null],[12,"cond","","The condition for a while statement",29,null],[12,"block","","The block taken if the condition is <code>true</code>",29,null],[3,"Loop","","Struct defining a loop statement",null,null],[12,"block","","The body of the loop",30,null],[4,"Statement","","",null,null],[13,"CommandStatement","","<code>c;</code>",31,null],[13,"IfElseStatement","","<code>if (e) { s_1 } else { s_2 }</code>",31,null],[13,"WhileStatement","","<code>while (e) { s }</code>",31,null],[13,"LoopStatement","","<code>loop { s }</code>",31,null],[13,"EmptyStatement","","no-op that eases parsing in some places",31,null],[3,"Block_","","<code>{ s }</code>",null,null],[12,"stmts","","The statements that make up the block",32,null],[6,"Block","","The type of a Block coupled with source location …",null,null],[4,"CopyableVal_","","Bottom of the value hierarchy. These values can be …",null,null],[13,"Address","","An address in the global storage",33,null],[13,"U8","","An unsigned 8-bit integer",33,null],[13,"U64","","An unsigned 64-bit integer",33,null],[13,"U128","","An unsigned 128-bit integer",33,null],[13,"Bool","","true or false",33,null],[13,"ByteArray","","<code>b\\\"<bytes>\\\"</code>",33,null],[6,"CopyableVal","","The type of a value and its location",null,null],[6,"ExpFields","","The type for fields and their bound expressions",null,null],[4,"UnaryOp","","Enum for unary operators",null,null],[13,"Not","","Boolean negation",34,null],[4,"BinOp","","Enum for binary operators",null,null],[13,"Add","","<code>+</code>",35,null],[13,"Sub","","<code>-</code>",35,null],[13,"Mul","","<code>*</code>",35,null],[13,"Mod","","<code>%</code>",35,null],[13,"Div","","<code>/</code>",35,null],[13,"BitOr","","<code>|</code>",35,null],[13,"BitAnd","","<code>&</code>",35,null],[13,"Xor","","<code>^</code>",35,null],[13,"Shl","","<code><<</code>",35,null],[13,"Shr","","<code>>></code>",35,null],[13,"And","","<code>&&</code>",35,null],[13,"Or","","<code>||</code>",35,null],[13,"Eq","","<code>==</code>",35,null],[13,"Neq","","<code>!=</code>",35,null],[13,"Lt","","<code><</code>",35,null],[13,"Gt","","<code>></code>",35,null],[13,"Le","","<code><=</code>",35,null],[13,"Ge","","<code>>=</code>",35,null],[13,"Subrange","","\'..\'  only used in specs",35,null],[4,"Exp_","","Enum for all expressions",null,null],[13,"Dereference","","<code>*e</code>",36,null],[13,"UnaryExp","","<code>op e</code>",36,null],[13,"BinopExp","","<code>e_1 op e_2</code>",36,null],[13,"Value","","Wrapper to lift <code>CopyableVal</code> into <code>Exp</code> <code>v</code>",36,null],[13,"Pack","","Takes the given field values and instantiates the struct …",36,null],[13,"Borrow","","<code>&e.f</code>, <code>&mut e.f</code>",36,null],[12,"is_mutable","move_ir_types::ast::Exp_","mutable or not",37,null],[12,"exp","","the expression containing the reference",37,null],[12,"field","","the field being borrowed",37,null],[13,"Move","move_ir_types::ast","<code>move(x)</code>",36,null],[13,"Copy","","<code>copy(x)</code>",36,null],[13,"BorrowLocal","","<code>&x</code> or <code>&mut x</code>",36,null],[13,"FunctionCall","","<code>f(e)</code> or <code>f(e_1, e_2, ..., e_j)</code>",36,null],[13,"ExprList","","(e_1, e_2, e_3, ..., e_j)",36,null],[6,"Exp","","The type for a <code>Exp_</code> and its location",null,null],[6,"BytecodeBlocks","","",null,null],[6,"BytecodeBlock","","",null,null],[3,"BlockLabel","","",null,null],[12,"0","","",38,null],[3,"NopLabel","","",null,null],[12,"0","","",39,null],[4,"Bytecode_","","",null,null],[13,"Pop","","",40,null],[13,"Ret","","",40,null],[13,"Nop","","",40,null],[13,"BrTrue","","",40,null],[13,"BrFalse","","",40,null],[13,"Branch","","",40,null],[13,"LdU8","","",40,null],[13,"LdU64","","",40,null],[13,"LdU128","","",40,null],[13,"CastU8","","",40,null],[13,"CastU64","","",40,null],[13,"CastU128","","",40,null],[13,"LdByteArray","","",40,null],[13,"LdAddr","","",40,null],[13,"LdTrue","","",40,null],[13,"LdFalse","","",40,null],[13,"LdConst","","",40,null],[13,"CopyLoc","","",40,null],[13,"MoveLoc","","",40,null],[13,"StLoc","","",40,null],[13,"Call","","",40,null],[13,"Pack","","",40,null],[13,"Unpack","","",40,null],[13,"ReadRef","","",40,null],[13,"WriteRef","","",40,null],[13,"FreezeRef","","",40,null],[13,"MutBorrowLoc","","",40,null],[13,"ImmBorrowLoc","","",40,null],[13,"MutBorrowField","","",40,null],[13,"ImmBorrowField","","",40,null],[13,"MutBorrowGlobal","","",40,null],[13,"ImmBorrowGlobal","","",40,null],[13,"Add","","",40,null],[13,"Sub","","",40,null],[13,"Mul","","",40,null],[13,"Mod","","",40,null],[13,"Div","","",40,null],[13,"BitOr","","",40,null],[13,"BitAnd","","",40,null],[13,"Xor","","",40,null],[13,"Or","","",40,null],[13,"And","","",40,null],[13,"Not","","",40,null],[13,"Eq","","",40,null],[13,"Neq","","",40,null],[13,"Lt","","",40,null],[13,"Gt","","",40,null],[13,"Le","","",40,null],[13,"Ge","","",40,null],[13,"Abort","","",40,null],[13,"Exists","","",40,null],[13,"MoveFrom","","",40,null],[13,"MoveTo","","",40,null],[13,"Shl","","",40,null],[13,"Shr","","",40,null],[6,"Bytecode","","",null,null],[11,"new","","Create a new <code>Program</code> from modules and transaction script",0,[[["vec",3],["script",3],["moduledefinition",3]]]],[11,"new","","Create a new <code>Script</code> from the imports and the main function",2,[[["importdefinition",3],["constant",3],["vec",3],["moduledependency",3],["function",6],["vec",3],["vec",3]]]],[11,"body","","Accessor for the body of the \'main\' procedure",2,[[],["block_",3]]],[11,"get_external_deps","","Return a vector of <code>ModuleId</code> for the external dependencies.",2,[[],[["moduleid",3],["vec",3]]]],[11,"new","","Create a new <code>ModuleName</code> from a string",41,[[["string",3]]]],[11,"self_name","","Name for the current module handle",41,[[]]],[11,"module_self","","Create a new <code>ModuleName</code> from <code>self_name</code>.",41,[[]]],[11,"into_inner","","Converts self into a string.",41,[[],["string",3]]],[11,"as_inner","","Accessor for the name of the module",41,[[]]],[11,"new","","Creates a new fully qualified module identifier from the …",3,[[["modulename",3],["accountaddress",3]]]],[11,"name","","Accessor for the name of the fully qualified module …",3,[[],["modulename",3]]],[11,"address","","Accessor for the address at which the module is published",3,[[],["accountaddress",3]]],[11,"name","","",5,[[],["modulename",3]]],[11,"new","","Creates a new <code>ModuleDefinition</code> from its string name, …",4,[[["importdefinition",3],["vec",3],["moduleident",4],["moduledependency",3],["vec",3],["vec",3],["vec",3],["vec",3],["structdefinition",6],["vec",3],["vec",3],["syntheticdefinition",6],["constant",3]],["result",6]]],[11,"get_external_deps","","Return a vector of <code>ModuleId</code> for the external dependencies.",4,[[],[["moduleid",3],["vec",3]]]],[11,"struct","","Creates a new struct type",9,[[["vec",3],["type",4],["qualifiedstructident",3]],["type",4]]],[11,"reference","","Creates a new reference type from its mutability and …",9,[[["type",4]],["type",4]]],[11,"address","","Creates a new address type",9,[[],["type",4]]],[11,"u64","","Creates a new u64 type",9,[[],["type",4]]],[11,"bool","","Creates a new bool type",9,[[],["type",4]]],[11,"new","","Creates a new StructType handle from the name of the …",10,[[["modulename",3],["structname",3]]]],[11,"module","","Accessor for the module alias",10,[[],["modulename",3]]],[11,"name","","Accessor for the struct name",10,[[],["structname",3]]],[11,"new","","Creates a new import definition from a module identifier …",7,[[["option",4],["modulename",3],["moduleident",4]]]],[11,"new","","Create a new <code>Field_</code> from a string",42,[[["string",3]]]],[11,"into_inner","","Converts self into a string.",42,[[],["string",3]]],[11,"as_inner","","Accessor for the name of the struct",42,[[]]],[11,"new","","Create a new <code>StructName</code> from a string",43,[[["string",3]]]],[11,"into_inner","","Converts self into a string.",43,[[],["string",3]]],[11,"as_inner","","Accessor for the name of the struct",43,[[]]],[11,"move_declared","","Creates a new StructDefinition from the resource kind …",11,[[["type",4],["vec",3],["invariant",6],["fields",6],["vec",3]],["result",6]]],[11,"native","","Creates a new StructDefinition from the resource kind …",11,[[["vec",3]],["result",6]]],[11,"new","","Create a new <code>ConstantName</code> from a string",44,[[["string",3]]]],[11,"into_inner","","Converts self into a string.",44,[[],["string",3]]],[11,"as_inner","","Accessor for the name of the function",44,[[]]],[11,"new","","Create a new <code>FunctionName</code> from a string",45,[[["string",3]]]],[11,"into_inner","","Converts self into a string.",45,[[],["string",3]]],[11,"as_inner","","Accessor for the name of the function",45,[[]]],[11,"new","","Creates a new function signature from the parameters and …",16,[[["vec",3],["vec",3],["type",4],["vec",3]]]],[11,"new","","Creates a new function declaration from the components of …",22,[[["vec",3],["vec",3],["vec",3],["type",4],["vec",3],["functionvisibility",4],["condition",6],["structname",3],["functionbody",4],["vec",3]]]],[11,"new","","Creates a new <code>Var</code> from a string.",46,[[["string",3]]]],[11,"into_inner","","Converts self into a string.",46,[[],["string",3]]],[11,"name","","Accessor for the name of the var",46,[[]]],[11,"new","","Creates a new <code>TypeVar</code> from an String.",47,[[["string",3]]]],[11,"into_inner","","Converts self into a string.",47,[[],["string",3]]],[11,"name","","Accessor for the name of the var.",47,[[]]],[11,"module_call","","Creates a <code>FunctionCall::ModuleFunctionCall</code> variant",24,[[["vec",3],["type",4],["functionname",3],["modulename",3]]]],[11,"builtin","","Creates a <code>FunctionCall::Builtin</code> variant with no location …",24,[[["builtin",4]],["functioncall",6]]],[11,"return_empty","","Creates a command that returns no values",27,[[]]],[11,"return_","","Creates a command that returns a single value",27,[[["exp",6]]]],[11,"if_block","","Creates an if-statement with no else branch",28,[[["block",6],["exp",6]]]],[11,"if_else","","Creates an if-statement with an else branch",28,[[["block",6],["exp",6]]]],[11,"cmd","","Lifts a command into a statement",31,[[["cmd",6]]]],[11,"if_block","","Creates an <code>Statement::IfElseStatement</code> variant with no …",31,[[["block",6],["exp",6]]]],[11,"if_else","","Creates an <code>Statement::IfElseStatement</code> variant with an …",31,[[["block",6],["exp",6]]]],[11,"new","","Creates a new block from the vector of statements",32,[[["statement",4],["vec",3]]]],[11,"empty","","Creates an empty block",32,[[]]],[11,"address","","Creates a new address <code>Exp</code> with no location information",36,[[["accountaddress",3]],["exp",6]]],[11,"value","","Creates a new value <code>Exp</code> with no location information",36,[[["copyableval_",4]],["exp",6]]],[11,"u64","","Creates a new u64 <code>Exp</code> with no location information",36,[[],["exp",6]]],[11,"bool","","Creates a new bool <code>Exp</code> with no location information",36,[[],["exp",6]]],[11,"byte_array","","Creates a new bytearray <code>Exp</code> with no location information",36,[[["vec",3]],["exp",6]]],[11,"instantiate","","Creates a new pack/struct-instantiation <code>Exp</code> with no …",36,[[["vec",3],["type",4],["structname",3],["expfields",6]],["exp",6]]],[11,"binop","","Creates a new binary operator <code>Exp</code> with no location …",36,[[["binop",4],["exp",6]],["exp",6]]],[11,"add","","Creates a new <code>e+e</code> <code>Exp</code> with no location information",36,[[["exp",6]],["exp",6]]],[11,"sub","","Creates a new <code>e-e</code> <code>Exp</code> with no location information",36,[[["exp",6]],["exp",6]]],[11,"dereference","","Creates a new <code>*e</code> <code>Exp</code> with no location information",36,[[["exp",6]],["exp",6]]],[11,"borrow","","Creates a new borrow field <code>Exp</code> with no location …",36,[[["field_",3],["box",3],["exp",6]],["exp",6]]],[11,"copy","","Creates a new copy-local <code>Exp</code> with no location information",36,[[["var",6]],["exp",6]]],[11,"move_","","Creates a new move-local <code>Exp</code> with no location information",36,[[["var",6]],["exp",6]]],[11,"function_call","","Creates a new function call <code>Exp</code> with no location …",36,[[["functioncall",6],["exp",6]],["exp",6]]],[11,"expr_list","","",36,[[["vec",3],["exp",6]],["exp",6]]],[0,"location","move_ir_types","",null,null],[3,"Loc","move_ir_types::location","",null,null],[11,"new","","",48,[[["span",3]],["loc",3]]],[11,"file","","",48,[[]]],[11,"span","","",48,[[],["span",3]]],[3,"Spanned","","",null,null],[12,"loc","","",49,null],[12,"value","","",49,null],[11,"new","","",49,[[["loc",3]],["spanned",3]]],[11,"unsafe_no_loc","","",49,[[],["spanned",3]]],[5,"sp","","Function used to have nearly tuple-like syntax for …",null,[[["loc",3]],["spanned",3]]],[0,"spec_language_ast","move_ir_types","",null,null],[4,"FieldOrIndex","move_ir_types::spec_language_ast","AST for the Move Prover specification language.",null,null],[13,"Field","","",50,null],[13,"Index","","",50,null],[4,"StorageLocation","","A location that can store a value",null,null],[13,"Formal","","A formal of the current procedure",51,null],[13,"GlobalResource","","A resource of type <code>type_</code> stored in global storage at …",51,null],[12,"type_","move_ir_types::spec_language_ast::StorageLocation","",52,null],[12,"type_actuals","","",52,null],[12,"address","","",52,null],[13,"AccessPath","move_ir_types::spec_language_ast","An access path rooted at <code>base</code> with nonempty offsets in …",51,null],[12,"base","move_ir_types::spec_language_ast::StorageLocation","",53,null],[12,"fields_and_indices","","",53,null],[13,"Address","move_ir_types::spec_language_ast","Account address constant",51,null],[13,"Ret","","The ith return value of the current procedure",51,null],[4,"SpecExp","","An expression in the specification language",null,null],[13,"Constant","","A Move constant",54,null],[13,"StorageLocation","","A spec language storage location",54,null],[13,"GlobalExists","","Lifting the Move exists operator to a storage location",54,null],[12,"type_","move_ir_types::spec_language_ast::SpecExp","",55,null],[12,"type_actuals","","",55,null],[12,"address","","",55,null],[13,"Dereference","move_ir_types::spec_language_ast","Dereference of a storage location (written *s)",54,null],[13,"Reference","","Reference to a storage location (written &s)",54,null],[13,"Not","","Negation of a boolean expression (written !e),",54,null],[13,"Binop","","Binary operators also suported by Move",54,null],[13,"Update","","Update expr (i := 1 inside [])",54,null],[13,"Old","","Value of expression evaluated in the state before …",54,null],[13,"Call","","Call to a helper function.",54,null],[4,"Condition_","","A specification directive to be verified",null,null],[13,"Ensures","","Postconditions",56,null],[13,"Requires","","Preconditions",56,null],[13,"AbortsIf","","If the given expression is true, the procedure <em>must</em> …",56,null],[13,"SucceedsIf","","If the given expression is true, the procedure <em>must</em> …",56,null],[6,"Condition","","Specification directive with span.",null,null],[3,"Invariant_","","An invariant over a resource.",null,null],[12,"modifier","","A free string (for now) which specifies the function of …",57,null],[12,"target","","An optional synthetic variable to which the below …",57,null],[12,"exp","","A specification expression.",57,null],[6,"Invariant","","Invariant with span.",null,null],[3,"SyntheticDefinition_","","A synthetic variable definition.",null,null],[12,"name","","",58,null],[12,"type_","","",58,null],[6,"SyntheticDefinition","","Synthetic with span.",null,null],[14,"sp","move_ir_types","Macro used to create a tuple-like pattern match for …",null,null],[11,"from","move_ir_types::ast","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"to_string","","",41,[[],["string",3]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"equivalent","","",41,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"equivalent","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"equivalent","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"equivalent","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"equivalent","","",47,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"equivalent","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"equivalent","","",10,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"to_string","","",42,[[],["string",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"equivalent","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"to_string","","",43,[[],["string",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"equivalent","","",43,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"test_only_hash","","",44,[[],["hashvalue",3]]],[11,"vzip","","",44,[[]]],[11,"equivalent","","",44,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"equivalent","","",45,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"to_string","","",24,[[],["string",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"into_iter","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"to_string","","",32,[[],["string",3]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"test_only_hash","","",38,[[],["hashvalue",3]]],[11,"vzip","","",38,[[]]],[11,"equivalent","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"test_only_hash","","",39,[[],["hashvalue",3]]],[11,"vzip","","",39,[[]]],[11,"equivalent","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","move_ir_types::location","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"test_only_hash","","",48,[[],["hashvalue",3]]],[11,"vzip","","",48,[[]]],[11,"equivalent","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"to_string","","",49,[[],["string",3]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"equivalent","","",49,[[]]],[11,"from","move_ir_types::spec_language_ast","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"next","move_ir_types::ast","",2,[[],[["option",4],["statement",4]]]],[11,"next","","",32,[[],[["option",4],["statement",4]]]],[11,"clone","","",0,[[],["program",3]]],[11,"clone","","",1,[[],["scriptormodule",4]]],[11,"clone","","",2,[[],["script",3]]],[11,"clone","","",41,[[],["modulename",3]]],[11,"clone","","",3,[[],["qualifiedmoduleident",3]]],[11,"clone","","",4,[[],["moduledefinition",3]]],[11,"clone","","",5,[[],["moduleident",4]]],[11,"clone","","",6,[[],["moduledependency",3]]],[11,"clone","","",7,[[],["importdefinition",3]]],[11,"clone","","",46,[[],["var_",3]]],[11,"clone","","",47,[[],["typevar_",3]]],[11,"clone","","",8,[[],["kind",4]]],[11,"clone","","",9,[[],["type",4]]],[11,"clone","","",10,[[],["qualifiedstructident",3]]],[11,"clone","","",42,[[],["field_",3]]],[11,"clone","","",43,[[],["structname",3]]],[11,"clone","","",11,[[],["structdefinition_",3]]],[11,"clone","","",12,[[],["structdependency",3]]],[11,"clone","","",13,[[],["structdefinitionfields",4]]],[11,"clone","","",44,[[],["constantname",3]]],[11,"clone","","",15,[[],["constant",3]]],[11,"clone","","",45,[[],["functionname",3]]],[11,"clone","","",16,[[],["functionsignature",3]]],[11,"clone","","",17,[[],["functiondependency",3]]],[11,"clone","","",18,[[],["functionvisibility",4]]],[11,"clone","","",19,[[],["functionbody",4]]],[11,"clone","","",22,[[],["function_",3]]],[11,"clone","","",23,[[],["builtin",4]]],[11,"clone","","",24,[[],["functioncall_",4]]],[11,"clone","","",26,[[],["lvalue_",4]]],[11,"clone","","",27,[[],["cmd_",4]]],[11,"clone","","",28,[[],["ifelse",3]]],[11,"clone","","",29,[[],["while",3]]],[11,"clone","","",30,[[],["loop",3]]],[11,"clone","","",31,[[],["statement",4]]],[11,"clone","","",32,[[],["block_",3]]],[11,"clone","","",33,[[],["copyableval_",4]]],[11,"clone","","",34,[[],["unaryop",4]]],[11,"clone","","",35,[[],["binop",4]]],[11,"clone","","",36,[[],["exp_",4]]],[11,"clone","","",38,[[],["blocklabel",3]]],[11,"clone","","",39,[[],["noplabel",3]]],[11,"clone","","",40,[[],["bytecode_",4]]],[11,"clone","move_ir_types::location","",48,[[],["loc",3]]],[11,"clone","","",49,[[],["spanned",3]]],[11,"clone","move_ir_types::spec_language_ast","",50,[[],["fieldorindex",4]]],[11,"clone","","",51,[[],["storagelocation",4]]],[11,"clone","","",54,[[],["specexp",4]]],[11,"clone","","",56,[[],["condition_",4]]],[11,"clone","","",57,[[],["invariant_",3]]],[11,"clone","","",58,[[],["syntheticdefinition_",3]]],[11,"cmp","move_ir_types::ast","",41,[[["modulename",3]],["ordering",4]]],[11,"cmp","","",3,[[["qualifiedmoduleident",3]],["ordering",4]]],[11,"cmp","","",5,[[["moduleident",4]],["ordering",4]]],[11,"cmp","","",46,[[["var_",3]],["ordering",4]]],[11,"cmp","","",10,[[["qualifiedstructident",3]],["ordering",4]]],[11,"cmp","","",42,[[["field_",3]],["ordering",4]]],[11,"cmp","","",43,[[["structname",3]],["ordering",4]]],[11,"cmp","","",44,[[["constantname",3]],["ordering",4]]],[11,"cmp","","",45,[[["functionname",3]],["ordering",4]]],[11,"cmp","","",38,[[["blocklabel",3]],["ordering",4]]],[11,"cmp","","",39,[[["noplabel",3]],["ordering",4]]],[11,"cmp","move_ir_types::location","",48,[[["loc",3]],["ordering",4]]],[11,"cmp","","",49,[[["spanned",3]],["ordering",4]]],[11,"eq","move_ir_types::ast","",41,[[["modulename",3]]]],[11,"ne","","",41,[[["modulename",3]]]],[11,"eq","","",3,[[["qualifiedmoduleident",3]]]],[11,"ne","","",3,[[["qualifiedmoduleident",3]]]],[11,"eq","","",4,[[["moduledefinition",3]]]],[11,"ne","","",4,[[["moduledefinition",3]]]],[11,"eq","","",5,[[["moduleident",4]]]],[11,"ne","","",5,[[["moduleident",4]]]],[11,"eq","","",6,[[["moduledependency",3]]]],[11,"ne","","",6,[[["moduledependency",3]]]],[11,"eq","","",7,[[["importdefinition",3]]]],[11,"ne","","",7,[[["importdefinition",3]]]],[11,"eq","","",46,[[["var_",3]]]],[11,"ne","","",46,[[["var_",3]]]],[11,"eq","","",47,[[["typevar_",3]]]],[11,"ne","","",47,[[["typevar_",3]]]],[11,"eq","","",8,[[["kind",4]]]],[11,"eq","","",9,[[["type",4]]]],[11,"ne","","",9,[[["type",4]]]],[11,"eq","","",10,[[["qualifiedstructident",3]]]],[11,"ne","","",10,[[["qualifiedstructident",3]]]],[11,"eq","","",42,[[["field_",3]]]],[11,"ne","","",42,[[["field_",3]]]],[11,"eq","","",43,[[["structname",3]]]],[11,"ne","","",43,[[["structname",3]]]],[11,"eq","","",11,[[["structdefinition_",3]]]],[11,"ne","","",11,[[["structdefinition_",3]]]],[11,"eq","","",12,[[["structdependency",3]]]],[11,"ne","","",12,[[["structdependency",3]]]],[11,"eq","","",13,[[["structdefinitionfields",4]]]],[11,"ne","","",13,[[["structdefinitionfields",4]]]],[11,"eq","","",44,[[["constantname",3]]]],[11,"ne","","",44,[[["constantname",3]]]],[11,"eq","","",15,[[["constant",3]]]],[11,"ne","","",15,[[["constant",3]]]],[11,"eq","","",45,[[["functionname",3]]]],[11,"ne","","",45,[[["functionname",3]]]],[11,"eq","","",16,[[["functionsignature",3]]]],[11,"ne","","",16,[[["functionsignature",3]]]],[11,"eq","","",17,[[["functiondependency",3]]]],[11,"ne","","",17,[[["functiondependency",3]]]],[11,"eq","","",18,[[["functionvisibility",4]]]],[11,"eq","","",19,[[["functionbody",4]]]],[11,"ne","","",19,[[["functionbody",4]]]],[11,"eq","","",22,[[["function_",3]]]],[11,"ne","","",22,[[["function_",3]]]],[11,"eq","","",23,[[["builtin",4]]]],[11,"ne","","",23,[[["builtin",4]]]],[11,"eq","","",24,[[["functioncall_",4]]]],[11,"ne","","",24,[[["functioncall_",4]]]],[11,"eq","","",26,[[["lvalue_",4]]]],[11,"ne","","",26,[[["lvalue_",4]]]],[11,"eq","","",27,[[["cmd_",4]]]],[11,"ne","","",27,[[["cmd_",4]]]],[11,"eq","","",28,[[["ifelse",3]]]],[11,"ne","","",28,[[["ifelse",3]]]],[11,"eq","","",29,[[["while",3]]]],[11,"ne","","",29,[[["while",3]]]],[11,"eq","","",30,[[["loop",3]]]],[11,"ne","","",30,[[["loop",3]]]],[11,"eq","","",31,[[["statement",4]]]],[11,"ne","","",31,[[["statement",4]]]],[11,"eq","","",32,[[["block_",3]]]],[11,"ne","","",32,[[["block_",3]]]],[11,"eq","","",33,[[["copyableval_",4]]]],[11,"ne","","",33,[[["copyableval_",4]]]],[11,"eq","","",34,[[["unaryop",4]]]],[11,"eq","","",35,[[["binop",4]]]],[11,"eq","","",36,[[["exp_",4]]]],[11,"ne","","",36,[[["exp_",4]]]],[11,"eq","","",38,[[["blocklabel",3]]]],[11,"ne","","",38,[[["blocklabel",3]]]],[11,"eq","","",39,[[["noplabel",3]]]],[11,"ne","","",39,[[["noplabel",3]]]],[11,"eq","","",40,[[["bytecode_",4]]]],[11,"ne","","",40,[[["bytecode_",4]]]],[11,"eq","","",2,[[["script",3]]]],[11,"eq","move_ir_types::location","",48,[[["loc",3]]]],[11,"ne","","",48,[[["loc",3]]]],[11,"eq","","",49,[[["spanned",3]]]],[11,"eq","move_ir_types::spec_language_ast","",50,[[["fieldorindex",4]]]],[11,"ne","","",50,[[["fieldorindex",4]]]],[11,"eq","","",51,[[["storagelocation",4]]]],[11,"ne","","",51,[[["storagelocation",4]]]],[11,"eq","","",54,[[["specexp",4]]]],[11,"ne","","",54,[[["specexp",4]]]],[11,"eq","","",56,[[["condition_",4]]]],[11,"ne","","",56,[[["condition_",4]]]],[11,"eq","","",57,[[["invariant_",3]]]],[11,"ne","","",57,[[["invariant_",3]]]],[11,"eq","","",58,[[["syntheticdefinition_",3]]]],[11,"ne","","",58,[[["syntheticdefinition_",3]]]],[11,"partial_cmp","move_ir_types::ast","",41,[[["modulename",3]],[["option",4],["ordering",4]]]],[11,"lt","","",41,[[["modulename",3]]]],[11,"le","","",41,[[["modulename",3]]]],[11,"gt","","",41,[[["modulename",3]]]],[11,"ge","","",41,[[["modulename",3]]]],[11,"partial_cmp","","",3,[[["qualifiedmoduleident",3]],[["option",4],["ordering",4]]]],[11,"lt","","",3,[[["qualifiedmoduleident",3]]]],[11,"le","","",3,[[["qualifiedmoduleident",3]]]],[11,"gt","","",3,[[["qualifiedmoduleident",3]]]],[11,"ge","","",3,[[["qualifiedmoduleident",3]]]],[11,"partial_cmp","","",5,[[["moduleident",4]],[["option",4],["ordering",4]]]],[11,"lt","","",5,[[["moduleident",4]]]],[11,"le","","",5,[[["moduleident",4]]]],[11,"gt","","",5,[[["moduleident",4]]]],[11,"ge","","",5,[[["moduleident",4]]]],[11,"partial_cmp","","",46,[[["var_",3]],[["option",4],["ordering",4]]]],[11,"lt","","",46,[[["var_",3]]]],[11,"le","","",46,[[["var_",3]]]],[11,"gt","","",46,[[["var_",3]]]],[11,"ge","","",46,[[["var_",3]]]],[11,"partial_cmp","","",10,[[["qualifiedstructident",3]],[["option",4],["ordering",4]]]],[11,"lt","","",10,[[["qualifiedstructident",3]]]],[11,"le","","",10,[[["qualifiedstructident",3]]]],[11,"gt","","",10,[[["qualifiedstructident",3]]]],[11,"ge","","",10,[[["qualifiedstructident",3]]]],[11,"partial_cmp","","",42,[[["field_",3]],[["option",4],["ordering",4]]]],[11,"lt","","",42,[[["field_",3]]]],[11,"le","","",42,[[["field_",3]]]],[11,"gt","","",42,[[["field_",3]]]],[11,"ge","","",42,[[["field_",3]]]],[11,"partial_cmp","","",43,[[["structname",3]],[["option",4],["ordering",4]]]],[11,"lt","","",43,[[["structname",3]]]],[11,"le","","",43,[[["structname",3]]]],[11,"gt","","",43,[[["structname",3]]]],[11,"ge","","",43,[[["structname",3]]]],[11,"partial_cmp","","",44,[[["constantname",3]],[["option",4],["ordering",4]]]],[11,"lt","","",44,[[["constantname",3]]]],[11,"le","","",44,[[["constantname",3]]]],[11,"gt","","",44,[[["constantname",3]]]],[11,"ge","","",44,[[["constantname",3]]]],[11,"partial_cmp","","",45,[[["functionname",3]],[["option",4],["ordering",4]]]],[11,"lt","","",45,[[["functionname",3]]]],[11,"le","","",45,[[["functionname",3]]]],[11,"gt","","",45,[[["functionname",3]]]],[11,"ge","","",45,[[["functionname",3]]]],[11,"partial_cmp","","",38,[[["blocklabel",3]],[["option",4],["ordering",4]]]],[11,"lt","","",38,[[["blocklabel",3]]]],[11,"le","","",38,[[["blocklabel",3]]]],[11,"gt","","",38,[[["blocklabel",3]]]],[11,"ge","","",38,[[["blocklabel",3]]]],[11,"partial_cmp","","",39,[[["noplabel",3]],[["option",4],["ordering",4]]]],[11,"lt","","",39,[[["noplabel",3]]]],[11,"le","","",39,[[["noplabel",3]]]],[11,"gt","","",39,[[["noplabel",3]]]],[11,"ge","","",39,[[["noplabel",3]]]],[11,"partial_cmp","move_ir_types::location","",48,[[["loc",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",49,[[["spanned",3]],[["option",4],["ordering",4]]]],[11,"fmt","move_ir_types::ast","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","move_ir_types::location","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","move_ir_types::spec_language_ast","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","move_ir_types::ast","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","move_ir_types::location","",49,[[["formatter",3]],["result",6]]],[11,"hash","move_ir_types::ast","",41,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",46,[[]]],[11,"hash","","",47,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",43,[[]]],[11,"hash","","",44,[[]]],[11,"hash","","",45,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",39,[[]]],[11,"hash","move_ir_types::location","",49,[[]]],[11,"deserialize","move_ir_types::ast","",44,[[],["result",4]]],[11,"deserialize","","",38,[[],["result",4]]],[11,"deserialize","","",39,[[],["result",4]]],[11,"deserialize","move_ir_types::location","",48,[[],["result",4]]],[11,"serialize","move_ir_types::ast","",44,[[],["result",4]]],[11,"serialize","","",38,[[],["result",4]]],[11,"serialize","","",39,[[],["result",4]]],[11,"serialize","move_ir_types::location","",48,[[],["result",4]]]],"p":[[3,"Program"],[4,"ScriptOrModule"],[3,"Script"],[3,"QualifiedModuleIdent"],[3,"ModuleDefinition"],[4,"ModuleIdent"],[3,"ModuleDependency"],[3,"ImportDefinition"],[4,"Kind"],[4,"Type"],[3,"QualifiedStructIdent"],[3,"StructDefinition_"],[3,"StructDependency"],[4,"StructDefinitionFields"],[13,"Move"],[3,"Constant"],[3,"FunctionSignature"],[3,"FunctionDependency"],[4,"FunctionVisibility"],[4,"FunctionBody"],[13,"Move"],[13,"Bytecode"],[3,"Function_"],[4,"Builtin"],[4,"FunctionCall_"],[13,"ModuleFunctionCall"],[4,"LValue_"],[4,"Cmd_"],[3,"IfElse"],[3,"While"],[3,"Loop"],[4,"Statement"],[3,"Block_"],[4,"CopyableVal_"],[4,"UnaryOp"],[4,"BinOp"],[4,"Exp_"],[13,"Borrow"],[3,"BlockLabel"],[3,"NopLabel"],[4,"Bytecode_"],[3,"ModuleName"],[3,"Field_"],[3,"StructName"],[3,"ConstantName"],[3,"FunctionName"],[3,"Var_"],[3,"TypeVar_"],[3,"Loc"],[3,"Spanned"],[4,"FieldOrIndex"],[4,"StorageLocation"],[13,"GlobalResource"],[13,"AccessPath"],[4,"SpecExp"],[13,"GlobalExists"],[4,"Condition_"],[3,"Invariant_"],[3,"SyntheticDefinition_"]]},\
"move_lang":{"doc":"","i":[[0,"cfgir","move_lang","",null,null],[0,"ast","move_lang::cfgir","",null,null],[3,"Program","move_lang::cfgir::ast","",null,null],[12,"modules","","",0,null],[12,"scripts","","",0,null],[3,"Script","","",null,null],[12,"loc","","",1,null],[12,"constants","","",1,null],[12,"function_name","","",1,null],[12,"function","","",1,null],[3,"ModuleDefinition","","",null,null],[12,"is_source_module","","",2,null],[12,"dependency_order","","<code>dependency_order</code> is the topological order/rank in the …",2,null],[12,"structs","","",2,null],[12,"constants","","",2,null],[12,"functions","","",2,null],[3,"Constant","","",null,null],[12,"loc","","",3,null],[12,"signature","","",3,null],[12,"value","","",3,null],[4,"FunctionBody_","","",null,null],[13,"Native","","",4,null],[13,"Defined","","",4,null],[12,"locals","move_lang::cfgir::ast::FunctionBody_","",5,null],[12,"start","","",5,null],[12,"blocks","","",5,null],[6,"FunctionBody","move_lang::cfgir::ast","",null,null],[3,"Function","","",null,null],[12,"visibility","","",6,null],[12,"signature","","",6,null],[12,"acquires","","",6,null],[12,"body","","",6,null],[6,"BasicBlocks","","",null,null],[6,"BasicBlock","","",null,null],[4,"LoopEnd","","",null,null],[13,"Unused","","",7,null],[13,"Target","","",7,null],[3,"BlockInfo","","",null,null],[12,"loop_stmt_end","","",8,null],[11,"equals","","",7,[[["label",3]]]],[5,"remap_labels","","",null,[[["label",3],["basicblocks",6],["btreemap",3]]]],[5,"refine_inference_and_verify","move_lang::cfgir","",null,[[["functionsignature",3],["uniquemap",3],["btreemap",3],["btreeset",3],["errors",6],["blockcfg",3]]]],[5,"optimize","","",null,[[["functionsignature",3],["uniquemap",3],["blockcfg",3]]]],[0,"command_line","move_lang","",null,null],[17,"DEPENDENCY","move_lang::command_line","",null,null],[17,"DEPENDENCY_SHORT","","",null,null],[17,"SENDER","","",null,null],[17,"SENDER_SHORT","","",null,null],[17,"OUT_DIR","","",null,null],[17,"OUT_DIR_SHORT","","",null,null],[17,"DEFAULT_OUTPUT_DIR","","",null,null],[17,"NO_SHADOW","","",null,null],[17,"NO_SHADOW_SHORT","","",null,null],[17,"SOURCE_MAP","","",null,null],[17,"SOURCE_MAP_SHORT","","",null,null],[5,"parse_address","","",null,[[],[["string",3],["result",4],["address",3]]]],[17,"COLOR_MODE_ENV_VAR","","",null,null],[5,"read_env_var","","",null,[[],["string",3]]],[5,"read_bool_env_var","","",null,[[]]],[0,"compiled_unit","move_lang","",null,null],[3,"VarInfo","move_lang::compiled_unit","",null,null],[12,"type_","","",9,null],[12,"index","","",9,null],[3,"SpecInfo","","",null,null],[12,"offset","","",10,null],[12,"used_locals","","",10,null],[3,"FunctionInfo","","",null,null],[12,"spec_info","","",11,null],[12,"parameters","","",11,null],[4,"CompiledUnit","","",null,null],[13,"Module","","",12,null],[12,"ident","move_lang::compiled_unit::CompiledUnit","",13,null],[12,"module","","",13,null],[12,"source_map","","",13,null],[12,"function_infos","","",13,null],[13,"Script","move_lang::compiled_unit","",12,null],[12,"loc","move_lang::compiled_unit::CompiledUnit","",14,null],[12,"key","","",14,null],[12,"script","","",14,null],[12,"source_map","","",14,null],[12,"function_info","","",14,null],[11,"name","move_lang::compiled_unit","",12,[[],["string",3]]],[11,"serialize","","",12,[[],["vec",3]]],[11,"serialize_debug","","",12,[[],["vec",3]]],[11,"serialize_source_map","","",12,[[],["vec",3]]],[11,"verify","","",12,[[]]],[5,"verify_units","","",null,[[["compiledunit",4],["vec",3]]]],[0,"errors","move_lang","",null,null],[6,"Errors","move_lang::errors","",null,null],[6,"Error","","",null,null],[6,"ErrorSlice","","",null,null],[6,"HashableError","","",null,null],[6,"FilesSourceText","","",null,null],[5,"check_errors","","",null,[[["errors",6]],[["errors",6],["result",4]]]],[5,"report_errors","","",null,[[["errors",6],["filessourcetext",6]]]],[5,"report_errors_to_buffer","","",null,[[["errors",6],["filessourcetext",6]],["vec",3]]],[5,"report_errors_to_color_buffer","","",null,[[["errors",6],["filessourcetext",6]],["vec",3]]],[0,"expansion","move_lang","",null,null],[0,"ast","move_lang::expansion","",null,null],[3,"Program","move_lang::expansion::ast","",null,null],[12,"modules","","",15,null],[12,"scripts","","",15,null],[3,"Script","","",null,null],[12,"loc","","",16,null],[12,"constants","","",16,null],[12,"function_name","","",16,null],[12,"function","","",16,null],[12,"specs","","",16,null],[3,"ModuleDefinition","","",null,null],[12,"loc","","",17,null],[12,"is_source_module","","",17,null],[12,"friends","","",17,null],[12,"structs","","",17,null],[12,"functions","","",17,null],[12,"constants","","",17,null],[12,"specs","","",17,null],[6,"Fields","","",null,null],[3,"StructDefinition","","",null,null],[12,"loc","","",18,null],[12,"resource_opt","","",18,null],[12,"type_parameters","","",18,null],[12,"fields","","",18,null],[4,"StructFields","","",null,null],[13,"Defined","","",19,null],[13,"Native","","",19,null],[3,"FunctionSignature","","",null,null],[12,"type_parameters","","",20,null],[12,"parameters","","",20,null],[12,"return_type","","",20,null],[4,"FunctionBody_","","",null,null],[13,"Defined","","",21,null],[13,"Native","","",21,null],[6,"FunctionBody","","",null,null],[3,"SpecId","","",null,null],[3,"Function","","",null,null],[12,"loc","","",22,null],[12,"visibility","","",22,null],[12,"signature","","",22,null],[12,"acquires","","",22,null],[12,"body","","",22,null],[12,"specs","","",22,null],[3,"Constant","","",null,null],[12,"loc","","",23,null],[12,"signature","","",23,null],[12,"value","","",23,null],[3,"SpecBlock_","","",null,null],[12,"target","","",24,null],[12,"members","","",24,null],[6,"SpecBlock","","",null,null],[4,"SpecBlockMember_","","",null,null],[13,"Condition","","",25,null],[12,"kind","move_lang::expansion::ast::SpecBlockMember_","",26,null],[12,"properties","","",26,null],[12,"exp","","",26,null],[12,"additional_exps","","",26,null],[13,"Function","move_lang::expansion::ast","",25,null],[12,"uninterpreted","move_lang::expansion::ast::SpecBlockMember_","",27,null],[12,"name","","",27,null],[12,"signature","","",27,null],[12,"body","","",27,null],[13,"Variable","move_lang::expansion::ast","",25,null],[12,"is_global","move_lang::expansion::ast::SpecBlockMember_","",28,null],[12,"name","","",28,null],[12,"type_parameters","","",28,null],[12,"type_","","",28,null],[13,"Let","move_lang::expansion::ast","",25,null],[12,"name","move_lang::expansion::ast::SpecBlockMember_","",29,null],[12,"def","","",29,null],[13,"Include","move_lang::expansion::ast","",25,null],[12,"properties","move_lang::expansion::ast::SpecBlockMember_","",30,null],[12,"exp","","",30,null],[13,"Apply","move_lang::expansion::ast","",25,null],[12,"exp","move_lang::expansion::ast::SpecBlockMember_","",31,null],[12,"patterns","","",31,null],[12,"exclusion_patterns","","",31,null],[13,"Pragma","move_lang::expansion::ast","",25,null],[12,"properties","move_lang::expansion::ast::SpecBlockMember_","",32,null],[6,"SpecBlockMember","move_lang::expansion::ast","",null,null],[3,"PragmaProperty_","","",null,null],[12,"name","","",33,null],[12,"value","","",33,null],[6,"PragmaProperty","","",null,null],[4,"PragmaValue","","",null,null],[13,"Literal","","",34,null],[13,"Ident","","",34,null],[4,"ModuleAccess_","","",null,null],[13,"Name","","",35,null],[13,"ModuleAccess","","",35,null],[6,"ModuleAccess","","",null,null],[4,"Type_","","",null,null],[13,"Unit","","",36,null],[13,"Multiple","","",36,null],[13,"Apply","","",36,null],[13,"Ref","","",36,null],[13,"Fun","","",36,null],[13,"UnresolvedError","","",36,null],[6,"Type","","",null,null],[4,"LValue_","","",null,null],[13,"Var","","",37,null],[13,"Unpack","","",37,null],[6,"LValue","","",null,null],[6,"LValueList_","","",null,null],[6,"LValueList","","",null,null],[6,"LValueWithRange_","","",null,null],[6,"LValueWithRange","","",null,null],[6,"LValueWithRangeList_","","",null,null],[6,"LValueWithRangeList","","",null,null],[4,"ExpDotted_","","",null,null],[13,"Exp","","",38,null],[13,"Dot","","",38,null],[6,"ExpDotted","","",null,null],[4,"Value_","","",null,null],[13,"Address","","",39,null],[13,"U8","","",39,null],[13,"U64","","",39,null],[13,"U128","","",39,null],[13,"Bool","","",39,null],[13,"Bytearray","","",39,null],[6,"Value","","",null,null],[4,"Exp_","","",null,null],[13,"Value","","",40,null],[13,"InferredNum","","",40,null],[13,"Move","","",40,null],[13,"Copy","","",40,null],[13,"Name","","",40,null],[13,"Call","","",40,null],[13,"Pack","","",40,null],[13,"IfElse","","",40,null],[13,"While","","",40,null],[13,"Loop","","",40,null],[13,"Block","","",40,null],[13,"Lambda","","",40,null],[13,"Quant","","",40,null],[13,"Assign","","",40,null],[13,"FieldMutate","","",40,null],[13,"Mutate","","",40,null],[13,"Return","","",40,null],[13,"Abort","","",40,null],[13,"Break","","",40,null],[13,"Continue","","",40,null],[13,"Dereference","","",40,null],[13,"UnaryExp","","",40,null],[13,"BinopExp","","",40,null],[13,"ExpList","","",40,null],[13,"Unit","","",40,null],[12,"trailing","move_lang::expansion::ast::Exp_","",41,null],[13,"Borrow","move_lang::expansion::ast","",40,null],[13,"ExpDotted","","",40,null],[13,"Index","","",40,null],[13,"Cast","","",40,null],[13,"Annotate","","",40,null],[13,"Spec","","",40,null],[13,"UnresolvedError","","",40,null],[6,"Exp","","",null,null],[6,"Sequence","","",null,null],[4,"SequenceItem_","","",null,null],[13,"Seq","","",42,null],[13,"Declare","","",42,null],[13,"Bind","","",42,null],[6,"SequenceItem","","",null,null],[11,"new","","",43,[[]]],[11,"inner","","",43,[[]]],[0,"hlir","move_lang","",null,null],[0,"ast","move_lang::hlir","",null,null],[3,"Program","move_lang::hlir::ast","",null,null],[12,"modules","","",44,null],[12,"scripts","","",44,null],[3,"Script","","",null,null],[12,"loc","","",45,null],[12,"constants","","",45,null],[12,"function_name","","",45,null],[12,"function","","",45,null],[3,"ModuleDefinition","","",null,null],[12,"is_source_module","","",46,null],[12,"dependency_order","","<code>dependency_order</code> is the topological order/rank in the …",46,null],[12,"structs","","",46,null],[12,"constants","","",46,null],[12,"functions","","",46,null],[3,"StructDefinition","","",null,null],[12,"resource_opt","","",47,null],[12,"type_parameters","","",47,null],[12,"fields","","",47,null],[4,"StructFields","","",null,null],[13,"Defined","","",48,null],[13,"Native","","",48,null],[3,"Constant","","",null,null],[12,"loc","","",49,null],[12,"signature","","",49,null],[12,"value","","",49,null],[3,"FunctionSignature","","",null,null],[12,"type_parameters","","",50,null],[12,"parameters","","",50,null],[12,"return_type","","",50,null],[4,"FunctionBody_","","",null,null],[13,"Native","","",51,null],[13,"Defined","","",51,null],[12,"locals","move_lang::hlir::ast::FunctionBody_","",52,null],[12,"body","","",52,null],[6,"FunctionBody","move_lang::hlir::ast","",null,null],[3,"Function","","",null,null],[12,"visibility","","",53,null],[12,"signature","","",53,null],[12,"acquires","","",53,null],[12,"body","","",53,null],[4,"TypeName_","","",null,null],[13,"Builtin","","",54,null],[13,"ModuleType","","",54,null],[6,"TypeName","","",null,null],[4,"BaseType_","","",null,null],[13,"Param","","",55,null],[13,"Apply","","",55,null],[13,"Unreachable","","",55,null],[13,"UnresolvedError","","",55,null],[6,"BaseType","","",null,null],[4,"SingleType_","","",null,null],[13,"Base","","",56,null],[13,"Ref","","",56,null],[6,"SingleType","","",null,null],[4,"Type_","","",null,null],[13,"Unit","","",57,null],[13,"Single","","",57,null],[13,"Multiple","","",57,null],[6,"Type","","",null,null],[4,"Statement_","","",null,null],[13,"Command","","",58,null],[13,"IfElse","","",58,null],[12,"cond","move_lang::hlir::ast::Statement_","",59,null],[12,"if_block","","",59,null],[12,"else_block","","",59,null],[13,"While","move_lang::hlir::ast","",58,null],[12,"cond","move_lang::hlir::ast::Statement_","",60,null],[12,"block","","",60,null],[13,"Loop","move_lang::hlir::ast","",58,null],[12,"block","move_lang::hlir::ast::Statement_","",61,null],[12,"has_break","","",61,null],[6,"Statement","move_lang::hlir::ast","",null,null],[6,"Block","","",null,null],[6,"BasicBlocks","","",null,null],[6,"BasicBlock","","",null,null],[3,"Label","","",null,null],[12,"0","","",62,null],[4,"Command_","","",null,null],[13,"Assign","","",63,null],[13,"Mutate","","",63,null],[13,"Abort","","",63,null],[13,"Return","","",63,null],[12,"from_user","move_lang::hlir::ast::Command_","",64,null],[12,"exp","","",64,null],[13,"Break","move_lang::hlir::ast","",63,null],[13,"Continue","","",63,null],[13,"IgnoreAndPop","","",63,null],[12,"pop_num","move_lang::hlir::ast::Command_","",65,null],[12,"exp","","",65,null],[13,"Jump","move_lang::hlir::ast","",63,null],[12,"from_user","move_lang::hlir::ast::Command_","",66,null],[12,"target","","",66,null],[13,"JumpIf","move_lang::hlir::ast","",63,null],[12,"cond","move_lang::hlir::ast::Command_","",67,null],[12,"if_true","","",67,null],[12,"if_false","","",67,null],[6,"Command","move_lang::hlir::ast","",null,null],[4,"LValue_","","",null,null],[13,"Ignore","","",68,null],[13,"Var","","",68,null],[13,"Unpack","","",68,null],[6,"LValue","","",null,null],[4,"UnitCase","","",null,null],[13,"Trailing","","",69,null],[13,"Implicit","","",69,null],[13,"FromUser","","",69,null],[3,"ModuleCall","","",null,null],[12,"module","","",70,null],[12,"name","","",70,null],[12,"type_arguments","","",70,null],[12,"arguments","","",70,null],[12,"acquires","","",70,null],[4,"BuiltinFunction_","","",null,null],[13,"MoveTo","","",71,null],[13,"MoveFrom","","",71,null],[13,"BorrowGlobal","","",71,null],[13,"Exists","","",71,null],[6,"BuiltinFunction","","",null,null],[4,"UnannotatedExp_","","",null,null],[13,"Unit","","",72,null],[12,"case","move_lang::hlir::ast::UnannotatedExp_","",73,null],[13,"Value","move_lang::hlir::ast","",72,null],[13,"Move","","",72,null],[12,"from_user","move_lang::hlir::ast::UnannotatedExp_","",74,null],[12,"var","","",74,null],[13,"Copy","move_lang::hlir::ast","",72,null],[12,"from_user","move_lang::hlir::ast::UnannotatedExp_","",75,null],[12,"var","","",75,null],[13,"Constant","move_lang::hlir::ast","",72,null],[13,"ModuleCall","","",72,null],[13,"Builtin","","",72,null],[13,"Freeze","","",72,null],[13,"Dereference","","",72,null],[13,"UnaryExp","","",72,null],[13,"BinopExp","","",72,null],[13,"Pack","","",72,null],[13,"ExpList","","",72,null],[13,"Borrow","","",72,null],[13,"BorrowLocal","","",72,null],[13,"Cast","","",72,null],[13,"Unreachable","","",72,null],[13,"Spec","","",72,null],[13,"UnresolvedError","","",72,null],[6,"UnannotatedExp","","",null,null],[3,"Exp","","",null,null],[12,"ty","","",76,null],[12,"exp","","",76,null],[5,"exp","","",null,[[["type",6],["unannotatedexp",6]],["exp",3]]],[4,"ExpListItem","","",null,null],[13,"Single","","",77,null],[13,"Splat","","",77,null],[11,"is_parameter","","",50,[[["var",3]]]],[11,"is_terminal","","",63,[[]]],[11,"is_exit","","",63,[[]]],[11,"is_unit","","",63,[[]]],[11,"successors","","",63,[[],[["label",3],["btreeset",3]]]],[11,"is_unit","","",76,[[]]],[11,"is_unit","","",72,[[]]],[11,"builtin","","",55,[[["vec",3],["loc",3],["builtintypename_",4],["basetype",6]],["basetype",6]]],[11,"kind","","",55,[[],["kind",6]]],[11,"bool","","",55,[[["loc",3]],["basetype",6]]],[11,"address","","",55,[[["loc",3]],["basetype",6]]],[11,"u8","","",55,[[["loc",3]],["basetype",6]]],[11,"u64","","",55,[[["loc",3]],["basetype",6]]],[11,"u128","","",55,[[["loc",3]],["basetype",6]]],[11,"base","","",56,[[["basetype",6]],["singletype",6]]],[11,"bool","","",56,[[["loc",3]],["singletype",6]]],[11,"address","","",56,[[["loc",3]],["singletype",6]]],[11,"u8","","",56,[[["loc",3]],["singletype",6]]],[11,"u64","","",56,[[["loc",3]],["singletype",6]]],[11,"u128","","",56,[[["loc",3]],["singletype",6]]],[11,"kind","","",56,[[["loc",3]],["kind",6]]],[11,"base","","",57,[[["basetype",6]],["type",6]]],[11,"single","","",57,[[["singletype",6]],["type",6]]],[11,"bool","","",57,[[["loc",3]],["type",6]]],[11,"address","","",57,[[["loc",3]],["type",6]]],[11,"u8","","",57,[[["loc",3]],["type",6]]],[11,"u64","","",57,[[["loc",3]],["type",6]]],[11,"u128","","",57,[[["loc",3]],["type",6]]],[11,"type_at_index","","",57,[[],["singletype",6]]],[11,"from_vec","","",57,[[["loc",3],["vec",3],["singletype",6]],["type",6]]],[0,"interface_generator","move_lang","",null,null],[5,"write_to_string","move_lang::interface_generator","Generate the text for the \\\"interface\\\" file of a compiled …",null,[[],["result",6]]],[0,"ir_translation","move_lang","",null,null],[5,"fix_syntax_and_write","move_lang::ir_translation","",null,[[["path",3],["string",3]]]],[0,"naming","move_lang","",null,null],[0,"ast","move_lang::naming","",null,null],[3,"Program","move_lang::naming::ast","",null,null],[12,"modules","","",78,null],[12,"scripts","","",78,null],[3,"Script","","",null,null],[12,"loc","","",79,null],[12,"constants","","",79,null],[12,"function_name","","",79,null],[12,"function","","",79,null],[3,"ModuleDefinition","","",null,null],[12,"is_source_module","","",80,null],[12,"dependency_order","","<code>dependency_order</code> is the topological order/rank in the …",80,null],[12,"friends","","",80,null],[12,"structs","","",80,null],[12,"constants","","",80,null],[12,"functions","","",80,null],[3,"StructDefinition","","",null,null],[12,"resource_opt","","",81,null],[12,"type_parameters","","",81,null],[12,"fields","","",81,null],[4,"StructFields","","",null,null],[13,"Defined","","",82,null],[13,"Native","","",82,null],[3,"FunctionSignature","","",null,null],[12,"type_parameters","","",83,null],[12,"parameters","","",83,null],[12,"return_type","","",83,null],[4,"FunctionBody_","","",null,null],[13,"Defined","","",84,null],[13,"Native","","",84,null],[6,"FunctionBody","","",null,null],[3,"Function","","",null,null],[12,"visibility","","",85,null],[12,"signature","","",85,null],[12,"acquires","","",85,null],[12,"body","","",85,null],[3,"Constant","","",null,null],[12,"loc","","",86,null],[12,"signature","","",86,null],[12,"value","","",86,null],[4,"BuiltinTypeName_","","",null,null],[13,"Address","","",87,null],[13,"Signer","","",87,null],[13,"U8","","",87,null],[13,"U64","","",87,null],[13,"U128","","",87,null],[13,"Vector","","",87,null],[13,"Bool","","",87,null],[6,"BuiltinTypeName","","",null,null],[4,"TypeName_","","",null,null],[13,"Multiple","","",88,null],[13,"Builtin","","",88,null],[13,"ModuleType","","",88,null],[6,"TypeName","","",null,null],[3,"TParamID","","",null,null],[12,"0","","",89,null],[3,"TParam","","",null,null],[12,"id","","",90,null],[12,"user_specified_name","","",90,null],[12,"kind","","",90,null],[3,"TVar","","",null,null],[4,"Type_","","",null,null],[13,"Unit","","",91,null],[13,"Ref","","",91,null],[13,"Param","","",91,null],[13,"Apply","","",91,null],[13,"Var","","",91,null],[13,"Anything","","",91,null],[13,"UnresolvedError","","",91,null],[6,"Type","","",null,null],[4,"LValue_","","",null,null],[13,"Ignore","","",92,null],[13,"Var","","",92,null],[13,"Unpack","","",92,null],[6,"LValue","","",null,null],[6,"LValueList_","","",null,null],[6,"LValueList","","",null,null],[4,"ExpDotted_","","",null,null],[13,"Exp","","",93,null],[13,"Dot","","",93,null],[6,"ExpDotted","","",null,null],[4,"BuiltinFunction_","","",null,null],[13,"MoveTo","","",94,null],[13,"MoveFrom","","",94,null],[13,"BorrowGlobal","","",94,null],[13,"Exists","","",94,null],[13,"Freeze","","",94,null],[13,"Assert","","",94,null],[6,"BuiltinFunction","","",null,null],[4,"Exp_","","",null,null],[13,"Value","","",95,null],[13,"InferredNum","","",95,null],[13,"Move","","",95,null],[13,"Copy","","",95,null],[13,"Use","","",95,null],[13,"Constant","","",95,null],[13,"ModuleCall","","",95,null],[13,"Builtin","","",95,null],[13,"IfElse","","",95,null],[13,"While","","",95,null],[13,"Loop","","",95,null],[13,"Block","","",95,null],[13,"Assign","","",95,null],[13,"FieldMutate","","",95,null],[13,"Mutate","","",95,null],[13,"Return","","",95,null],[13,"Abort","","",95,null],[13,"Break","","",95,null],[13,"Continue","","",95,null],[13,"Dereference","","",95,null],[13,"UnaryExp","","",95,null],[13,"BinopExp","","",95,null],[13,"Pack","","",95,null],[13,"ExpList","","",95,null],[13,"Unit","","",95,null],[12,"trailing","move_lang::naming::ast::Exp_","",96,null],[13,"DerefBorrow","move_lang::naming::ast","",95,null],[13,"Borrow","","",95,null],[13,"Cast","","",95,null],[13,"Annotate","","",95,null],[13,"Spec","","",95,null],[13,"UnresolvedError","","",95,null],[6,"Exp","","",null,null],[6,"Sequence","","",null,null],[4,"SequenceItem_","","",null,null],[13,"Seq","","",97,null],[13,"Declare","","",97,null],[13,"Bind","","",97,null],[6,"SequenceItem","","",null,null],[18,"ADDRESS","","",87,null],[18,"SIGNER","","",87,null],[18,"U_8","","",87,null],[18,"U_64","","",87,null],[18,"U_128","","",87,null],[18,"BOOL","","",87,null],[18,"VECTOR","","",87,null],[11,"all_names","","",87,[[],["btreeset",3]]],[11,"numeric","","",87,[[],[["builtintypename_",4],["btreeset",3]]]],[11,"bits","","",87,[[],[["builtintypename_",4],["btreeset",3]]]],[11,"ordered","","",87,[[],[["builtintypename_",4],["btreeset",3]]]],[11,"is_numeric","","",87,[[]]],[11,"resolve","","",87,[[],["option",4]]],[11,"tparam_constraints","","",87,[[["loc",3]],[["vec",3],["kind",6]]]],[11,"next","","",89,[[],["tparamid",3]]],[11,"next","","",98,[[],["tvar",3]]],[18,"MOVE_TO","","",94,null],[18,"MOVE_FROM","","",94,null],[18,"BORROW_GLOBAL","","",94,null],[18,"BORROW_GLOBAL_MUT","","",94,null],[18,"EXISTS","","",94,null],[18,"FREEZE","","",94,null],[18,"ASSERT","","",94,null],[11,"all_names","","",94,[[],["btreeset",3]]],[11,"resolve","","",94,[[["type",6],["option",4]],["option",4]]],[11,"display_name","","",94,[[]]],[11,"builtin_","","",91,[[["type",6],["builtintypename",6],["vec",3]],["type_",4]]],[11,"builtin","","",91,[[["type",6],["builtintypename",6],["loc",3],["vec",3]],["type",6]]],[11,"bool","","",91,[[["loc",3]],["type",6]]],[11,"address","","",91,[[["loc",3]],["type",6]]],[11,"signer","","",91,[[["loc",3]],["type",6]]],[11,"u8","","",91,[[["loc",3]],["type",6]]],[11,"u64","","",91,[[["loc",3]],["type",6]]],[11,"u128","","",91,[[["loc",3]],["type",6]]],[11,"vector","","",91,[[["loc",3],["type",6]],["type",6]]],[11,"multiple","","",91,[[["loc",3],["type",6],["vec",3]],["type",6]]],[11,"multiple_","","",91,[[["loc",3],["type",6],["vec",3]],["type_",4]]],[11,"builtin_name","","",91,[[],[["option",4],["builtintypename",6]]]],[11,"type_","move_lang::expansion::ast","",39,[[["loc",3]],["type",6]]],[0,"parser","move_lang","",null,null],[0,"ast","move_lang::parser","",null,null],[3,"Program","move_lang::parser::ast","",null,null],[12,"source_definitions","","",99,null],[12,"lib_definitions","","",99,null],[4,"Definition","","",null,null],[13,"Module","","",100,null],[13,"Address","","",100,null],[13,"Script","","",100,null],[3,"Script","","",null,null],[12,"loc","","",101,null],[12,"uses","","",101,null],[12,"constants","","",101,null],[12,"function","","",101,null],[12,"specs","","",101,null],[4,"Use","","",null,null],[13,"Module","","",102,null],[13,"Members","","",102,null],[3,"ModuleName","","",null,null],[12,"0","","",103,null],[3,"ModuleIdent","","",null,null],[12,"locs","","",104,null],[12,"value","","",104,null],[3,"ModuleDefinition","","",null,null],[12,"loc","","",105,null],[12,"name","","",105,null],[12,"members","","",105,null],[4,"ModuleMember","","",null,null],[13,"Function","","",106,null],[13,"Struct","","",106,null],[13,"Spec","","",106,null],[13,"Use","","",106,null],[13,"Friend","","",106,null],[13,"Constant","","",106,null],[4,"Friend_","","",null,null],[13,"Module","","",107,null],[13,"QualifiedModule","","",107,null],[6,"Friend","","",null,null],[3,"Field","","",null,null],[12,"0","","",108,null],[3,"StructName","","",null,null],[12,"0","","",109,null],[6,"ResourceLoc","","",null,null],[3,"StructDefinition","","",null,null],[12,"loc","","",110,null],[12,"resource_opt","","",110,null],[12,"name","","",110,null],[12,"type_parameters","","",110,null],[12,"fields","","",110,null],[4,"StructFields","","",null,null],[13,"Defined","","",111,null],[13,"Native","","",111,null],[3,"FunctionName","","",null,null],[12,"0","","",112,null],[3,"FunctionSignature","","",null,null],[12,"type_parameters","","",113,null],[12,"parameters","","",113,null],[12,"return_type","","",113,null],[4,"FunctionVisibility","","",null,null],[13,"Public","","",114,null],[13,"Script","","",114,null],[13,"Friend","","",114,null],[13,"Internal","","",114,null],[4,"FunctionBody_","","",null,null],[13,"Defined","","",115,null],[13,"Native","","",115,null],[6,"FunctionBody","","",null,null],[3,"Function","","",null,null],[12,"loc","","",116,null],[12,"visibility","","",116,null],[12,"signature","","",116,null],[12,"acquires","","",116,null],[12,"name","","",116,null],[12,"body","","",116,null],[3,"ConstantName","","",null,null],[12,"0","","",117,null],[3,"Constant","","",null,null],[12,"loc","","",118,null],[12,"signature","","",118,null],[12,"name","","",118,null],[12,"value","","",118,null],[3,"SpecBlock_","","",null,null],[12,"target","","",119,null],[12,"uses","","",119,null],[12,"members","","",119,null],[6,"SpecBlock","","",null,null],[4,"SpecBlockTarget_","","",null,null],[13,"Code","","",120,null],[13,"Module","","",120,null],[13,"Function","","",120,null],[13,"Structure","","",120,null],[13,"Schema","","",120,null],[6,"SpecBlockTarget","","",null,null],[3,"PragmaProperty_","","",null,null],[12,"name","","",121,null],[12,"value","","",121,null],[4,"PragmaValue","","",null,null],[13,"Literal","","",122,null],[13,"Ident","","",122,null],[6,"PragmaProperty","","",null,null],[3,"SpecApplyPattern_","","",null,null],[12,"visibility","","",123,null],[12,"name_pattern","","",123,null],[12,"type_parameters","","",123,null],[6,"SpecApplyPattern","","",null,null],[4,"SpecApplyFragment_","","",null,null],[13,"Wildcard","","",124,null],[13,"NamePart","","",124,null],[6,"SpecApplyFragment","","",null,null],[4,"SpecBlockMember_","","",null,null],[13,"Condition","","",125,null],[12,"kind","move_lang::parser::ast::SpecBlockMember_","",126,null],[12,"properties","","",126,null],[12,"exp","","",126,null],[12,"additional_exps","","",126,null],[13,"Function","move_lang::parser::ast","",125,null],[12,"uninterpreted","move_lang::parser::ast::SpecBlockMember_","",127,null],[12,"name","","",127,null],[12,"signature","","",127,null],[12,"body","","",127,null],[13,"Variable","move_lang::parser::ast","",125,null],[12,"is_global","move_lang::parser::ast::SpecBlockMember_","",128,null],[12,"name","","",128,null],[12,"type_parameters","","",128,null],[12,"type_","","",128,null],[13,"Let","move_lang::parser::ast","",125,null],[12,"name","move_lang::parser::ast::SpecBlockMember_","",129,null],[12,"def","","",129,null],[13,"Include","move_lang::parser::ast","",125,null],[12,"properties","move_lang::parser::ast::SpecBlockMember_","",130,null],[12,"exp","","",130,null],[13,"Apply","move_lang::parser::ast","",125,null],[12,"exp","move_lang::parser::ast::SpecBlockMember_","",131,null],[12,"patterns","","",131,null],[12,"exclusion_patterns","","",131,null],[13,"Pragma","move_lang::parser::ast","",125,null],[12,"properties","move_lang::parser::ast::SpecBlockMember_","",132,null],[6,"SpecBlockMember","move_lang::parser::ast","",null,null],[4,"SpecConditionKind","","",null,null],[13,"Assert","","",133,null],[13,"Assume","","",133,null],[13,"Decreases","","",133,null],[13,"AbortsIf","","",133,null],[13,"AbortsWith","","",133,null],[13,"SucceedsIf","","",133,null],[13,"Modifies","","",133,null],[13,"Emits","","",133,null],[13,"Ensures","","",133,null],[13,"Requires","","",133,null],[13,"RequiresModule","","",133,null],[13,"Invariant","","",133,null],[13,"InvariantUpdate","","",133,null],[13,"InvariantPack","","",133,null],[13,"InvariantUnpack","","",133,null],[13,"InvariantModule","","",133,null],[4,"InvariantKind","","",null,null],[13,"Data","","",134,null],[13,"Update","","",134,null],[13,"Pack","","",134,null],[13,"Unpack","","",134,null],[13,"Module","","",134,null],[4,"ModuleAccess_","","",null,null],[13,"Name","","",135,null],[13,"ModuleAccess","","",135,null],[13,"QualifiedModuleAccess","","",135,null],[6,"ModuleAccess","","",null,null],[4,"Kind_","","",null,null],[13,"Unknown","","",136,null],[13,"Resource","","",136,null],[13,"Affine","","",136,null],[13,"Copyable","","",136,null],[6,"Kind","","",null,null],[4,"Type_","","",null,null],[13,"Apply","","",137,null],[13,"Ref","","",137,null],[13,"Fun","","",137,null],[13,"Unit","","",137,null],[13,"Multiple","","",137,null],[6,"Type","","",null,null],[3,"Var","","",null,null],[12,"0","","",138,null],[4,"Bind_","","",null,null],[13,"Var","","",139,null],[13,"Unpack","","",139,null],[6,"Bind","","",null,null],[6,"BindList","","",null,null],[6,"BindWithRange","","",null,null],[6,"BindWithRangeList","","",null,null],[4,"Value_","","",null,null],[13,"Address","","",140,null],[13,"U8","","",140,null],[13,"U64","","",140,null],[13,"U128","","",140,null],[13,"Bool","","",140,null],[13,"HexString","","",140,null],[13,"ByteString","","",140,null],[6,"Value","","",null,null],[4,"UnaryOp_","","",null,null],[13,"Not","","",141,null],[6,"UnaryOp","","",null,null],[4,"BinOp_","","",null,null],[13,"Add","","",142,null],[13,"Sub","","",142,null],[13,"Mul","","",142,null],[13,"Mod","","",142,null],[13,"Div","","",142,null],[13,"BitOr","","",142,null],[13,"BitAnd","","",142,null],[13,"Xor","","",142,null],[13,"Shl","","",142,null],[13,"Shr","","",142,null],[13,"Range","","",142,null],[13,"Implies","","",142,null],[13,"And","","",142,null],[13,"Or","","",142,null],[13,"Eq","","",142,null],[13,"Neq","","",142,null],[13,"Lt","","",142,null],[13,"Gt","","",142,null],[13,"Le","","",142,null],[13,"Ge","","",142,null],[6,"BinOp","","",null,null],[4,"QuantKind_","","",null,null],[13,"Forall","","",143,null],[13,"Exists","","",143,null],[6,"QuantKind","","",null,null],[4,"Exp_","","",null,null],[13,"Value","","",144,null],[13,"InferredNum","","",144,null],[13,"Move","","",144,null],[13,"Copy","","",144,null],[13,"Name","","",144,null],[13,"Call","","",144,null],[13,"Pack","","",144,null],[13,"IfElse","","",144,null],[13,"While","","",144,null],[13,"Loop","","",144,null],[13,"Block","","",144,null],[13,"Lambda","","",144,null],[13,"Quant","","",144,null],[13,"ExpList","","",144,null],[13,"Unit","","",144,null],[13,"Assign","","",144,null],[13,"Return","","",144,null],[13,"Abort","","",144,null],[13,"Break","","",144,null],[13,"Continue","","",144,null],[13,"Dereference","","",144,null],[13,"UnaryExp","","",144,null],[13,"BinopExp","","",144,null],[13,"Borrow","","",144,null],[13,"Dot","","",144,null],[13,"Index","","",144,null],[13,"Cast","","",144,null],[13,"Annotate","","",144,null],[13,"Spec","","",144,null],[13,"UnresolvedError","","",144,null],[6,"Exp","","",null,null],[6,"Sequence","","",null,null],[4,"SequenceItem_","","",null,null],[13,"Seq","","",145,null],[13,"Declare","","",145,null],[13,"Bind","","",145,null],[6,"SequenceItem","","",null,null],[11,"file","","",100,[[]]],[11,"loc","","",104,[[],["loc",3]]],[18,"SELF_NAME","","",103,null],[11,"is_underscore","","",138,[[]]],[11,"starts_with_underscore","","",138,[[]]],[18,"VALUE_CONSTRAINT","","",136,null],[18,"RESOURCE_CONSTRAINT","","",136,null],[11,"is_resourceful","","",136,[[]]],[11,"unit","","",137,[[["loc",3]],["type",6]]],[18,"NOT","","",141,null],[11,"symbol","","",141,[[]]],[11,"is_pure","","",141,[[]]],[18,"ADD","","",142,null],[18,"SUB","","",142,null],[18,"MUL","","",142,null],[18,"MOD","","",142,null],[18,"DIV","","",142,null],[18,"BIT_OR","","",142,null],[18,"BIT_AND","","",142,null],[18,"XOR","","",142,null],[18,"SHL","","",142,null],[18,"SHR","","",142,null],[18,"AND","","",142,null],[18,"OR","","",142,null],[18,"EQ","","",142,null],[18,"NEQ","","",142,null],[18,"LT","","",142,null],[18,"GT","","",142,null],[18,"LE","","",142,null],[18,"GE","","",142,null],[18,"IMPLIES","","",142,null],[18,"RANGE","","",142,null],[11,"symbol","","",142,[[]]],[11,"is_pure","","",142,[[]]],[11,"is_spec_only","","",142,[[]]],[18,"PUBLIC","","",114,null],[18,"SCRIPT","","",114,null],[18,"FRIEND","","",114,null],[18,"INTERNAL","","",114,null],[0,"shared","move_lang","",null,null],[0,"ast_debug","move_lang::shared","",null,null],[8,"AstDebug","move_lang::shared::ast_debug","Simple trait used for pretty printing the various AST",null,null],[10,"ast_debug","","",146,[[["astwriter",3]]]],[5,"print","","",null,[[]]],[5,"print_verbose","","",null,[[]]],[3,"AstWriter","","",null,null],[11,"new_line","","",147,[[]]],[11,"write","","",147,[[]]],[11,"writeln","","",147,[[]]],[11,"indent","","",147,[[["fnonce",8]]]],[11,"block","","",147,[[["fnonce",8]]]],[11,"annotate","","",147,[[["fnonce",8]]]],[11,"list","","",147,[[["fnmut",8]]]],[11,"comma","","",147,[[["fnmut",8]]]],[11,"semicolon","","",147,[[["fnmut",8]]]],[0,"remembering_unique_map","move_lang::shared","",null,null],[3,"RememberingUniqueMap","move_lang::shared::remembering_unique_map","wrapper around <code>UniqueMap</code> that remembers which values were …",null,null],[11,"new","","",148,[[]]],[11,"is_empty","","",148,[[]]],[11,"len","","",148,[[]]],[11,"add","","",148,[[],["result",4]]],[11,"key_gotten","","",148,[[]]],[11,"contains_key","","",148,[[]]],[11,"contains_key_","","",148,[[]]],[11,"get","","",148,[[],["option",4]]],[11,"get_mut","","",148,[[],["option",4]]],[11,"get_loc","","",148,[[],["option",4]]],[11,"remove","","",148,[[],["option",4]]],[11,"map","","",148,[[],["rememberinguniquemap",3]]],[11,"ref_map","","",148,[[],["rememberinguniquemap",3]]],[11,"union_with","","",148,[[]]],[11,"iter","","",148,[[],["iter",3]]],[11,"iter_mut","","",148,[[],["itermut",3]]],[11,"maybe_from_opt_iter","","",148,[[],[["option",4],["result",4]]]],[11,"maybe_from_iter","","",148,[[],[["result",4],["rememberinguniquemap",3]]]],[11,"into_inner","","",148,[[],["uniquemap",3]]],[11,"remember","","",148,[[],["btreeset",3]]],[3,"IntoIter","","",null,null],[3,"Iter","","",null,null],[3,"IterMut","","",null,null],[0,"unique_map","move_lang::shared","",null,null],[3,"UniqueMap","move_lang::shared::unique_map","Unique wrapper around <code>BTreeMap</code> that throws on duplicate …",null,null],[11,"new","","",149,[[]]],[11,"is_empty","","",149,[[]]],[11,"len","","",149,[[]]],[11,"add","","",149,[[],["result",4]]],[11,"contains_key","","",149,[[]]],[11,"contains_key_","","",149,[[]]],[11,"get","","",149,[[],["option",4]]],[11,"get_","","",149,[[],["option",4]]],[11,"get_mut","","",149,[[],["option",4]]],[11,"get_mut_","","",149,[[],["option",4]]],[11,"get_loc","","",149,[[],["option",4]]],[11,"get_loc_","","",149,[[],["option",4]]],[11,"remove","","",149,[[],["option",4]]],[11,"remove_","","",149,[[],["option",4]]],[11,"map","","",149,[[],["uniquemap",3]]],[11,"filter_map","","",149,[[],["uniquemap",3]]],[11,"ref_map","","",149,[[],["uniquemap",3]]],[11,"union_with","","",149,[[]]],[11,"iter","","",149,[[],["iter",3]]],[11,"key_cloned_iter","","",149,[[]]],[11,"iter_mut","","",149,[[],["itermut",3]]],[11,"maybe_from_opt_iter","","",149,[[],[["result",4],["option",4]]]],[11,"maybe_from_iter","","",149,[[],[["result",4],["uniquemap",3]]]],[3,"IntoIter","","",null,null],[3,"Iter","","",null,null],[3,"IterMut","","",null,null],[0,"unique_set","move_lang::shared","",null,null],[3,"UniqueSet","move_lang::shared::unique_set","Unique set wrapper around <code>UniqueMap</code> where the value of …",null,null],[11,"new","","",150,[[]]],[11,"is_empty","","",150,[[]]],[11,"len","","",150,[[]]],[11,"add","","",150,[[],["result",4]]],[11,"contains","","",150,[[]]],[11,"contains_","","",150,[[]]],[11,"intersect","","",150,[[]]],[11,"union","","",150,[[]]],[11,"is_subset","","",150,[[]]],[11,"iter","","",150,[[],["iter",3]]],[11,"cloned_iter","","",150,[[]]],[11,"from_elements","","",150,[[],["result",4]]],[11,"from_elements_","","",150,[[],["result",4]]],[3,"IntoIter","","",null,null],[3,"Iter","","",null,null],[17,"ADDRESS_LENGTH","move_lang::shared","",null,null],[3,"Address","","",null,null],[18,"DIEM_CORE","","",151,null],[11,"new","","",151,[[]]],[11,"to_u8","","",151,[[]]],[11,"parse_str","","",151,[[],[["string",3],["result",4],["address",3]]]],[8,"TName","","",null,null],[16,"Key","","",152,null],[16,"Loc","","",152,null],[10,"drop_loc","","",152,[[]]],[10,"add_loc","","",152,[[]]],[10,"borrow","","",152,[[]]],[8,"Identifier","","",null,null],[10,"value","","",153,[[]]],[10,"loc","","",153,[[],["loc",3]]],[6,"Name","","",null,null],[5,"shortest_cycle","","",null,[[["digraphmap",6]],["vec",3]]],[3,"Counter","","",null,null],[11,"next","","",154,[[]]],[5,"format_delim","","",null,[[["intoiterator",8]],["string",3]]],[5,"format_comma","","",null,[[["intoiterator",8]],["string",3]]],[0,"typing","move_lang","",null,null],[0,"ast","move_lang::typing","",null,null],[3,"Program","move_lang::typing::ast","",null,null],[12,"modules","","",155,null],[12,"scripts","","",155,null],[3,"Script","","",null,null],[12,"loc","","",156,null],[12,"constants","","",156,null],[12,"function_name","","",156,null],[12,"function","","",156,null],[3,"ModuleDefinition","","",null,null],[12,"is_source_module","","",157,null],[12,"dependency_order","","<code>dependency_order</code> is the topological order/rank in the …",157,null],[12,"friends","","",157,null],[12,"structs","","",157,null],[12,"constants","","",157,null],[12,"functions","","",157,null],[4,"FunctionBody_","","",null,null],[13,"Defined","","",158,null],[13,"Native","","",158,null],[6,"FunctionBody","","",null,null],[3,"Function","","",null,null],[12,"visibility","","",159,null],[12,"signature","","",159,null],[12,"acquires","","",159,null],[12,"body","","",159,null],[3,"Constant","","",null,null],[12,"loc","","",160,null],[12,"signature","","",160,null],[12,"value","","",160,null],[4,"LValue_","","",null,null],[13,"Ignore","","",161,null],[13,"Var","","",161,null],[13,"Unpack","","",161,null],[13,"BorrowUnpack","","",161,null],[6,"LValue","","",null,null],[6,"LValueList_","","",null,null],[6,"LValueList","","",null,null],[3,"ModuleCall","","",null,null],[12,"module","","",162,null],[12,"name","","",162,null],[12,"type_arguments","","",162,null],[12,"arguments","","",162,null],[12,"parameter_types","","",162,null],[12,"acquires","","",162,null],[4,"BuiltinFunction_","","",null,null],[13,"MoveTo","","",163,null],[13,"MoveFrom","","",163,null],[13,"BorrowGlobal","","",163,null],[13,"Exists","","",163,null],[13,"Freeze","","",163,null],[13,"Assert","","",163,null],[6,"BuiltinFunction","","",null,null],[4,"UnannotatedExp_","","",null,null],[13,"Unit","","",164,null],[12,"trailing","move_lang::typing::ast::UnannotatedExp_","",165,null],[13,"Value","move_lang::typing::ast","",164,null],[13,"InferredNum","","",164,null],[13,"Move","","",164,null],[12,"from_user","move_lang::typing::ast::UnannotatedExp_","",166,null],[12,"var","","",166,null],[13,"Copy","move_lang::typing::ast","",164,null],[12,"from_user","move_lang::typing::ast::UnannotatedExp_","",167,null],[12,"var","","",167,null],[13,"Use","move_lang::typing::ast","",164,null],[13,"Constant","","",164,null],[13,"ModuleCall","","",164,null],[13,"Builtin","","",164,null],[13,"IfElse","","",164,null],[13,"While","","",164,null],[13,"Loop","","",164,null],[12,"has_break","move_lang::typing::ast::UnannotatedExp_","",168,null],[12,"body","","",168,null],[13,"Block","move_lang::typing::ast","",164,null],[13,"Assign","","",164,null],[13,"Mutate","","",164,null],[13,"Return","","",164,null],[13,"Abort","","",164,null],[13,"Break","","",164,null],[13,"Continue","","",164,null],[13,"Dereference","","",164,null],[13,"UnaryExp","","",164,null],[13,"BinopExp","","",164,null],[13,"Pack","","",164,null],[13,"ExpList","","",164,null],[13,"Borrow","","",164,null],[13,"TempBorrow","","",164,null],[13,"BorrowLocal","","",164,null],[13,"Cast","","",164,null],[13,"Annotate","","",164,null],[13,"Spec","","",164,null],[13,"UnresolvedError","","",164,null],[6,"UnannotatedExp","","",null,null],[3,"Exp","","",null,null],[12,"ty","","",169,null],[12,"exp","","",169,null],[5,"exp","","",null,[[["type",6],["unannotatedexp",6]],["exp",3]]],[6,"Sequence","","",null,null],[4,"SequenceItem_","","",null,null],[13,"Seq","","",170,null],[13,"Declare","","",170,null],[13,"Bind","","",170,null],[6,"SequenceItem","","",null,null],[4,"ExpListItem","","",null,null],[13,"Single","","",171,null],[13,"Splat","","",171,null],[5,"single_item","","",null,[[["exp",3]],["explistitem",4]]],[5,"splat_item","","",null,[[["loc",3],["exp",3]],["explistitem",4]]],[11,"display_name","","",163,[[]]],[17,"MOVE_EXTENSION","move_lang","",null,null],[17,"MOVE_COMPILED_EXTENSION","","",null,null],[17,"MOVE_COMPILED_INTERFACES_DIR","","",null,null],[17,"SOURCE_MAP_EXTENSION","","",null,null],[4,"Pass","","",null,null],[13,"Parser","","",172,null],[13,"Expansion","","",172,null],[13,"Naming","","",172,null],[13,"Typing","","",172,null],[13,"HLIR","","",172,null],[13,"CFGIR","","",172,null],[13,"Compilation","","",172,null],[4,"PassResult","","",null,null],[13,"Parser","","",173,null],[13,"Expansion","","",173,null],[13,"Naming","","",173,null],[13,"Typing","","",173,null],[13,"HLIR","","",173,null],[13,"CFGIR","","",173,null],[13,"Compilation","","",173,null],[5,"move_check","","Given a set of targets and a set of dependencies",null,[[["option",4],["option",4],["string",3],["address",3]],["result",6]]],[5,"move_check_and_report","","Similar to move_check but it reports it\'s errors to stderr",null,[[["option",4],["option",4],["string",3],["address",3]],[["filessourcetext",6],["result",6]]]],[5,"move_compile","","Given a set of targets and a set of dependencies",null,[[["option",4],["option",4],["string",3],["address",3]],["result",6]]],[5,"move_compile_and_report","","Similar to move_compile but it reports it\'s errors to …",null,[[["option",4],["option",4],["string",3],["address",3]],["result",6]]],[5,"move_parse","","Given a set of targets and a set of dependencies, …",null,[[["option",4],["option",4],["string",3],["address",3]],["result",6]]],[5,"move_continue_up_to","","Runs the compiler from a previous result until a stopping …",null,[[["pass",4],["passresult",4]],[["result",4],["errors",6],["passresult",4]]]],[5,"sanity_check_compiled_units","","Runs the bytecode verifier on the compiled units Fails if …",null,[[["compiledunit",4],["filessourcetext",6],["vec",3]]]],[5,"output_compiled_units","","Given a file map and a set of compiled programs, saves …",null,[[["compiledunit",4],["filessourcetext",6],["vec",3]],["result",6]]],[5,"generate_interface_files","","",null,[[["string",3],["option",4]],[["result",6],["option",4]]]],[5,"path_to_string","","",null,[[["path",3]],[["string",3],["result",6]]]],[5,"extension_equals","","",null,[[["path",3]]]],[11,"equivalent_pass","","",173,[[],["pass",4]]],[11,"check_for_errors","","",173,[[],[["errors",6],["result",4]]]],[5,"find_move_filenames","","For each directory in <code>paths</code>, it will return all files …",null,[[],[["vec",3],["result",6]]]],[5,"find_filenames","","For each directory in <code>paths</code>, it will return all files …",null,[[["fnmut",8]],[["vec",3],["result",6]]]],[5,"is_permitted_printable_char","","Determine if a character is an allowed eye-visible …",null,[[]]],[5,"is_permitted_newline_char","","Determine if a character is a permitted newline character.",null,[[]]],[5,"is_permitted_char","","Determine if a character is permitted character.",null,[[]]],[6,"CommentMap","","Types to represent comments.",null,null],[6,"MatchedFileCommentMap","","",null,null],[6,"FileCommentMap","","",null,null],[14,"unwrap_or_report_errors","","",null,null],[11,"from","move_lang::cfgir::ast","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","move_lang::compiled_unit","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","move_lang::expansion::ast","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"to_string","","",43,[[],["string",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"equivalent","","",43,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","move_lang::hlir::ast","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"to_string","","",54,[[],["string",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"equivalent","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"equivalent","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"to_string","","",62,[[],["string",3]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"equivalent","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"from","move_lang::naming::ast","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"to_string","","",87,[[],["string",3]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"equivalent","","",87,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"to_string","","",88,[[],["string",3]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"equivalent","","",88,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"equivalent","","",89,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"equivalent","","",90,[[]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"equivalent","","",98,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"vzip","","",97,[[]]],[11,"from","move_lang::parser::ast","",99,[[]]],[11,"into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"vzip","","",99,[[]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"vzip","","",100,[[]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"vzip","","",101,[[]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"vzip","","",102,[[]]],[11,"equivalent","","",102,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"to_string","","",103,[[],["string",3]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"vzip","","",103,[[]]],[11,"equivalent","","",103,[[]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"to_string","","",104,[[],["string",3]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"vzip","","",104,[[]]],[11,"equivalent","","",104,[[]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"vzip","","",105,[[]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"vzip","","",106,[[]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"vzip","","",107,[[]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"to_string","","",108,[[],["string",3]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"vzip","","",108,[[]]],[11,"equivalent","","",108,[[]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"to_string","","",109,[[],["string",3]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"vzip","","",109,[[]]],[11,"equivalent","","",109,[[]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"vzip","","",110,[[]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"vzip","","",111,[[]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"to_string","","",112,[[],["string",3]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"vzip","","",112,[[]]],[11,"equivalent","","",112,[[]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"vzip","","",113,[[]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"to_string","","",114,[[],["string",3]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"vzip","","",114,[[]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"vzip","","",115,[[]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"vzip","","",116,[[]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"to_string","","",117,[[],["string",3]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"vzip","","",117,[[]]],[11,"equivalent","","",117,[[]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"vzip","","",118,[[]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"vzip","","",119,[[]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"vzip","","",120,[[]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"vzip","","",121,[[]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"vzip","","",122,[[]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"vzip","","",123,[[]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"vzip","","",124,[[]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"vzip","","",125,[[]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"vzip","","",133,[[]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"vzip","","",134,[[]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"to_string","","",135,[[],["string",3]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"vzip","","",135,[[]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"vzip","","",136,[[]]],[11,"equivalent","","",136,[[]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"vzip","","",137,[[]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"to_string","","",138,[[],["string",3]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"vzip","","",138,[[]]],[11,"equivalent","","",138,[[]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"vzip","","",139,[[]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"vzip","","",140,[[]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"to_string","","",141,[[],["string",3]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"vzip","","",141,[[]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"to_string","","",142,[[],["string",3]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"vzip","","",142,[[]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"vzip","","",143,[[]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"vzip","","",144,[[]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"vzip","","",145,[[]]],[11,"from","move_lang::shared::ast_debug","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_string","","",147,[[],["string",3]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"vzip","","",147,[[]]],[11,"from","move_lang::shared::remembering_unique_map","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"vzip","","",148,[[]]],[11,"equivalent","","",148,[[]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"into_iter","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"vzip","","",174,[[]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"into_iter","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"vzip","","",175,[[]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"into_iter","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"vzip","","",176,[[]]],[11,"from","move_lang::shared::unique_map","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"vzip","","",149,[[]]],[11,"equivalent","","",149,[[]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"into_iter","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"vzip","","",177,[[]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"into_iter","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"vzip","","",178,[[]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"into_iter","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"vzip","","",179,[[]]],[11,"from","move_lang::shared::unique_set","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"vzip","","",150,[[]]],[11,"equivalent","","",150,[[]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"into_iter","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"vzip","","",180,[[]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"into_iter","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"vzip","","",181,[[]]],[11,"from","move_lang::shared","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"to_string","","",151,[[],["string",3]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"vzip","","",151,[[]]],[11,"encode_hex","","",151,[[]]],[11,"encode_hex_upper","","",151,[[]]],[11,"equivalent","","",151,[[]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"vzip","","",154,[[]]],[11,"equivalent","","",154,[[]]],[11,"from","move_lang::typing::ast","",155,[[]]],[11,"into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"vzip","","",155,[[]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"vzip","","",156,[[]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"vzip","","",157,[[]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"vzip","","",158,[[]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"vzip","","",159,[[]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"vzip","","",160,[[]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"vzip","","",161,[[]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"vzip","","",162,[[]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_string","","",163,[[],["string",3]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"vzip","","",163,[[]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"vzip","","",164,[[]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"vzip","","",169,[[]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"vzip","","",170,[[]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"vzip","","",171,[[]]],[11,"from","move_lang","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"vzip","","",172,[[]]],[11,"equivalent","","",172,[[]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"vzip","","",173,[[]]],[11,"ast_debug","move_lang::cfgir::ast","",0,[[["astwriter",3]]]],[11,"ast_debug","","",1,[[["astwriter",3]]]],[11,"ast_debug","","",2,[[["astwriter",3]]]],[11,"ast_debug","move_lang","",182,[[["astwriter",3]]]],[11,"ast_debug","move_lang::expansion::ast","",15,[[["astwriter",3]]]],[11,"ast_debug","","",16,[[["astwriter",3]]]],[11,"ast_debug","","",17,[[["astwriter",3]]]],[11,"ast_debug","","",24,[[["astwriter",3]]]],[11,"ast_debug","","",25,[[["astwriter",3]]]],[11,"ast_debug","","",33,[[["astwriter",3]]]],[11,"ast_debug","","",20,[[["astwriter",3]]]],[11,"ast_debug","","",36,[[["astwriter",3]]]],[11,"ast_debug","","",35,[[["astwriter",3]]]],[11,"ast_debug","","",42,[[["astwriter",3]]]],[11,"ast_debug","","",39,[[["astwriter",3]]]],[11,"ast_debug","","",40,[[["astwriter",3]]]],[11,"ast_debug","","",38,[[["astwriter",3]]]],[11,"ast_debug","","",37,[[["astwriter",3]]]],[11,"ast_debug","move_lang::hlir::ast","",44,[[["astwriter",3]]]],[11,"ast_debug","","",45,[[["astwriter",3]]]],[11,"ast_debug","","",46,[[["astwriter",3]]]],[11,"ast_debug","","",50,[[["astwriter",3]]]],[11,"ast_debug","","",54,[[["astwriter",3]]]],[11,"ast_debug","","",55,[[["astwriter",3]]]],[11,"ast_debug","","",56,[[["astwriter",3]]]],[11,"ast_debug","","",57,[[["astwriter",3]]]],[11,"ast_debug","","",58,[[["astwriter",3]]]],[11,"ast_debug","","",63,[[["astwriter",3]]]],[11,"ast_debug","","",76,[[["astwriter",3]]]],[11,"ast_debug","","",72,[[["astwriter",3]]]],[11,"ast_debug","","",70,[[["astwriter",3]]]],[11,"ast_debug","","",71,[[["astwriter",3]]]],[11,"ast_debug","","",77,[[["astwriter",3]]]],[11,"ast_debug","","",68,[[["astwriter",3]]]],[11,"ast_debug","move_lang::naming::ast","",78,[[["astwriter",3]]]],[11,"ast_debug","","",79,[[["astwriter",3]]]],[11,"ast_debug","","",80,[[["astwriter",3]]]],[11,"ast_debug","","",83,[[["astwriter",3]]]],[11,"ast_debug","","",87,[[["astwriter",3]]]],[11,"ast_debug","","",88,[[["astwriter",3]]]],[11,"ast_debug","","",90,[[["astwriter",3]]]],[11,"ast_debug","","",91,[[["astwriter",3]]]],[11,"ast_debug","","",97,[[["astwriter",3]]]],[11,"ast_debug","","",95,[[["astwriter",3]]]],[11,"ast_debug","","",94,[[["astwriter",3]]]],[11,"ast_debug","","",93,[[["astwriter",3]]]],[11,"ast_debug","","",92,[[["astwriter",3]]]],[11,"ast_debug","move_lang::parser::ast","",99,[[["astwriter",3]]]],[11,"ast_debug","","",100,[[["astwriter",3]]]],[11,"ast_debug","","",101,[[["astwriter",3]]]],[11,"ast_debug","","",105,[[["astwriter",3]]]],[11,"ast_debug","","",106,[[["astwriter",3]]]],[11,"ast_debug","","",102,[[["astwriter",3]]]],[11,"ast_debug","move_lang","",183,[[["astwriter",3]]]],[11,"ast_debug","move_lang::parser::ast","",110,[[["astwriter",3]]]],[11,"ast_debug","","",119,[[["astwriter",3]]]],[11,"ast_debug","","",120,[[["astwriter",3]]]],[11,"ast_debug","","",133,[[["astwriter",3]]]],[11,"ast_debug","","",125,[[["astwriter",3]]]],[11,"ast_debug","","",123,[[["astwriter",3]]]],[11,"ast_debug","","",124,[[["astwriter",3]]]],[11,"ast_debug","","",121,[[["astwriter",3]]]],[11,"ast_debug","","",116,[[["astwriter",3]]]],[11,"ast_debug","","",114,[[["astwriter",3]]]],[11,"ast_debug","","",113,[[["astwriter",3]]]],[11,"ast_debug","","",118,[[["astwriter",3]]]],[11,"ast_debug","","",136,[[["astwriter",3]]]],[11,"ast_debug","","",137,[[["astwriter",3]]]],[11,"ast_debug","","",135,[[["astwriter",3]]]],[11,"ast_debug","","",145,[[["astwriter",3]]]],[11,"ast_debug","","",144,[[["astwriter",3]]]],[11,"ast_debug","","",142,[[["astwriter",3]]]],[11,"ast_debug","","",141,[[["astwriter",3]]]],[11,"ast_debug","","",143,[[["astwriter",3]]]],[11,"ast_debug","","",140,[[["astwriter",3]]]],[11,"ast_debug","","",139,[[["astwriter",3]]]],[11,"ast_debug","move_lang::typing::ast","",155,[[["astwriter",3]]]],[11,"ast_debug","","",156,[[["astwriter",3]]]],[11,"ast_debug","","",157,[[["astwriter",3]]]],[11,"ast_debug","","",170,[[["astwriter",3]]]],[11,"ast_debug","","",164,[[["astwriter",3]]]],[11,"ast_debug","","",169,[[["astwriter",3]]]],[11,"ast_debug","","",162,[[["astwriter",3]]]],[11,"ast_debug","","",163,[[["astwriter",3]]]],[11,"ast_debug","","",171,[[["astwriter",3]]]],[11,"ast_debug","","",161,[[["astwriter",3]]]],[11,"drop_loc","move_lang::parser::ast","",103,[[]]],[11,"add_loc","","",103,[[["loc",3],["string",3]]]],[11,"borrow","","",103,[[]]],[11,"drop_loc","","",108,[[]]],[11,"add_loc","","",108,[[["loc",3],["string",3]]]],[11,"borrow","","",108,[[]]],[11,"drop_loc","","",109,[[]]],[11,"add_loc","","",109,[[["loc",3],["string",3]]]],[11,"borrow","","",109,[[]]],[11,"drop_loc","","",112,[[]]],[11,"add_loc","","",112,[[["loc",3],["string",3]]]],[11,"borrow","","",112,[[]]],[11,"drop_loc","","",117,[[]]],[11,"add_loc","","",117,[[["loc",3],["string",3]]]],[11,"borrow","","",117,[[]]],[11,"drop_loc","","",138,[[]]],[11,"add_loc","","",138,[[["loc",3],["string",3]]]],[11,"borrow","","",138,[[]]],[11,"drop_loc","","",104,[[]]],[11,"add_loc","","",104,[[],["moduleident",3]]],[11,"borrow","","",104,[[]]],[11,"drop_loc","move_lang","",184,[[]]],[11,"add_loc","","",184,[[["loc",3],["string",3]]]],[11,"borrow","","",184,[[]]],[11,"value","move_lang::parser::ast","",103,[[]]],[11,"loc","","",103,[[],["loc",3]]],[11,"value","","",108,[[]]],[11,"loc","","",108,[[],["loc",3]]],[11,"value","","",109,[[]]],[11,"loc","","",109,[[],["loc",3]]],[11,"value","","",112,[[]]],[11,"loc","","",112,[[],["loc",3]]],[11,"value","","",117,[[]]],[11,"loc","","",117,[[],["loc",3]]],[11,"value","","",138,[[]]],[11,"loc","","",138,[[],["loc",3]]],[11,"as_ref","move_lang::shared","",151,[[]]],[11,"into_iter","move_lang::shared::remembering_unique_map","",148,[[]]],[11,"into_iter","move_lang::shared::unique_map","",149,[[]]],[11,"into_iter","move_lang::shared::unique_set","",150,[[]]],[11,"next","move_lang::shared::remembering_unique_map","",174,[[],["option",4]]],[11,"size_hint","","",174,[[]]],[11,"next","","",175,[[],["option",4]]],[11,"size_hint","","",175,[[]]],[11,"next","","",176,[[],["option",4]]],[11,"size_hint","","",176,[[]]],[11,"next","move_lang::shared::unique_map","",177,[[],["option",4]]],[11,"size_hint","","",177,[[]]],[11,"next","","",178,[[],["option",4]]],[11,"size_hint","","",178,[[]]],[11,"next","","",179,[[],["option",4]]],[11,"next","move_lang::shared::unique_set","",180,[[],["option",4]]],[11,"size_hint","","",180,[[]]],[11,"next","","",181,[[],["option",4]]],[11,"size_hint","","",181,[[]]],[11,"clone","move_lang::cfgir::ast","",7,[[],["loopend",4]]],[11,"clone","move_lang::expansion::ast","",15,[[],["program",3]]],[11,"clone","","",16,[[],["script",3]]],[11,"clone","","",17,[[],["moduledefinition",3]]],[11,"clone","","",18,[[],["structdefinition",3]]],[11,"clone","","",19,[[],["structfields",4]]],[11,"clone","","",20,[[],["functionsignature",3]]],[11,"clone","","",21,[[],["functionbody_",4]]],[11,"clone","","",43,[[],["specid",3]]],[11,"clone","","",22,[[],["function",3]]],[11,"clone","","",23,[[],["constant",3]]],[11,"clone","","",24,[[],["specblock_",3]]],[11,"clone","","",25,[[],["specblockmember_",4]]],[11,"clone","","",33,[[],["pragmaproperty_",3]]],[11,"clone","","",34,[[],["pragmavalue",4]]],[11,"clone","","",35,[[],["moduleaccess_",4]]],[11,"clone","","",36,[[],["type_",4]]],[11,"clone","","",37,[[],["lvalue_",4]]],[11,"clone","","",38,[[],["expdotted_",4]]],[11,"clone","","",39,[[],["value_",4]]],[11,"clone","","",40,[[],["exp_",4]]],[11,"clone","","",42,[[],["sequenceitem_",4]]],[11,"clone","move_lang::hlir::ast","",47,[[],["structdefinition",3]]],[11,"clone","","",48,[[],["structfields",4]]],[11,"clone","","",50,[[],["functionsignature",3]]],[11,"clone","","",54,[[],["typename_",4]]],[11,"clone","","",55,[[],["basetype_",4]]],[11,"clone","","",56,[[],["singletype_",4]]],[11,"clone","","",57,[[],["type_",4]]],[11,"clone","","",62,[[],["label",3]]],[11,"clone","","",69,[[],["unitcase",4]]],[11,"clone","move_lang::naming::ast","",81,[[],["structdefinition",3]]],[11,"clone","","",82,[[],["structfields",4]]],[11,"clone","","",83,[[],["functionsignature",3]]],[11,"clone","","",87,[[],["builtintypename_",4]]],[11,"clone","","",88,[[],["typename_",4]]],[11,"clone","","",89,[[],["tparamid",3]]],[11,"clone","","",90,[[],["tparam",3]]],[11,"clone","","",98,[[],["tvar",3]]],[11,"clone","","",91,[[],["type_",4]]],[11,"clone","move_lang::parser::ast","",102,[[],["use",4]]],[11,"clone","","",103,[[],["modulename",3]]],[11,"clone","","",104,[[],["moduleident",3]]],[11,"clone","","",108,[[],["field",3]]],[11,"clone","","",109,[[],["structname",3]]],[11,"clone","","",112,[[],["functionname",3]]],[11,"clone","","",113,[[],["functionsignature",3]]],[11,"clone","","",114,[[],["functionvisibility",4]]],[11,"clone","","",115,[[],["functionbody_",4]]],[11,"clone","","",117,[[],["constantname",3]]],[11,"clone","","",119,[[],["specblock_",3]]],[11,"clone","","",120,[[],["specblocktarget_",4]]],[11,"clone","","",121,[[],["pragmaproperty_",3]]],[11,"clone","","",122,[[],["pragmavalue",4]]],[11,"clone","","",123,[[],["specapplypattern_",3]]],[11,"clone","","",124,[[],["specapplyfragment_",4]]],[11,"clone","","",125,[[],["specblockmember_",4]]],[11,"clone","","",133,[[],["specconditionkind",4]]],[11,"clone","","",135,[[],["moduleaccess_",4]]],[11,"clone","","",136,[[],["kind_",4]]],[11,"clone","","",137,[[],["type_",4]]],[11,"clone","","",138,[[],["var",3]]],[11,"clone","","",139,[[],["bind_",4]]],[11,"clone","","",140,[[],["value_",4]]],[11,"clone","","",141,[[],["unaryop_",4]]],[11,"clone","","",142,[[],["binop_",4]]],[11,"clone","","",143,[[],["quantkind_",4]]],[11,"clone","","",144,[[],["exp_",4]]],[11,"clone","","",145,[[],["sequenceitem_",4]]],[11,"clone","move_lang::shared::remembering_unique_map","",148,[[],["rememberinguniquemap",3]]],[11,"clone","move_lang::shared::unique_map","",149,[[],["uniquemap",3]]],[11,"clone","move_lang::shared::unique_set","",150,[[],["uniqueset",3]]],[11,"clone","move_lang::shared","",151,[[],["address",3]]],[11,"clone","","",154,[[],["counter",3]]],[11,"clone","move_lang","",172,[[],["pass",4]]],[11,"default","move_lang::shared::unique_map","",149,[[],["uniquemap",3]]],[11,"default","move_lang::shared","",151,[[],["address",3]]],[11,"cmp","move_lang::expansion::ast","",43,[[["specid",3]],["ordering",4]]],[11,"cmp","move_lang::hlir::ast","",54,[[["typename_",4]],["ordering",4]]],[11,"cmp","","",55,[[["basetype_",4]],["ordering",4]]],[11,"cmp","","",62,[[["label",3]],["ordering",4]]],[11,"cmp","move_lang::naming::ast","",87,[[["builtintypename_",4]],["ordering",4]]],[11,"cmp","","",88,[[["typename_",4]],["ordering",4]]],[11,"cmp","","",89,[[["tparamid",3]],["ordering",4]]],[11,"cmp","","",90,[[["tparam",3]],["ordering",4]]],[11,"cmp","","",98,[[["tvar",3]],["ordering",4]]],[11,"cmp","move_lang::parser::ast","",103,[[["modulename",3]],["ordering",4]]],[11,"cmp","","",108,[[["field",3]],["ordering",4]]],[11,"cmp","","",109,[[["structname",3]],["ordering",4]]],[11,"cmp","","",112,[[["functionname",3]],["ordering",4]]],[11,"cmp","","",117,[[["constantname",3]],["ordering",4]]],[11,"cmp","","",136,[[["kind_",4]],["ordering",4]]],[11,"cmp","","",138,[[["var",3]],["ordering",4]]],[11,"cmp","","",104,[[["moduleident",3]],["ordering",4]]],[11,"cmp","move_lang::shared::unique_set","",150,[[["uniqueset",3]],["ordering",4]]],[11,"cmp","move_lang::shared","",151,[[["address",3]],["ordering",4]]],[11,"cmp","move_lang","",172,[[["pass",4]],["ordering",4]]],[11,"eq","move_lang::cfgir::ast","",3,[[["constant",3]]]],[11,"ne","","",3,[[["constant",3]]]],[11,"eq","","",4,[[["functionbody_",4]]]],[11,"ne","","",4,[[["functionbody_",4]]]],[11,"eq","","",6,[[["function",3]]]],[11,"ne","","",6,[[["function",3]]]],[11,"eq","move_lang::expansion::ast","",18,[[["structdefinition",3]]]],[11,"ne","","",18,[[["structdefinition",3]]]],[11,"eq","","",19,[[["structfields",4]]]],[11,"ne","","",19,[[["structfields",4]]]],[11,"eq","","",20,[[["functionsignature",3]]]],[11,"ne","","",20,[[["functionsignature",3]]]],[11,"eq","","",21,[[["functionbody_",4]]]],[11,"ne","","",21,[[["functionbody_",4]]]],[11,"eq","","",43,[[["specid",3]]]],[11,"ne","","",43,[[["specid",3]]]],[11,"eq","","",22,[[["function",3]]]],[11,"ne","","",22,[[["function",3]]]],[11,"eq","","",23,[[["constant",3]]]],[11,"ne","","",23,[[["constant",3]]]],[11,"eq","","",24,[[["specblock_",3]]]],[11,"ne","","",24,[[["specblock_",3]]]],[11,"eq","","",25,[[["specblockmember_",4]]]],[11,"ne","","",25,[[["specblockmember_",4]]]],[11,"eq","","",33,[[["pragmaproperty_",3]]]],[11,"ne","","",33,[[["pragmaproperty_",3]]]],[11,"eq","","",34,[[["pragmavalue",4]]]],[11,"ne","","",34,[[["pragmavalue",4]]]],[11,"eq","","",35,[[["moduleaccess_",4]]]],[11,"ne","","",35,[[["moduleaccess_",4]]]],[11,"eq","","",36,[[["type_",4]]]],[11,"ne","","",36,[[["type_",4]]]],[11,"eq","","",37,[[["lvalue_",4]]]],[11,"ne","","",37,[[["lvalue_",4]]]],[11,"eq","","",38,[[["expdotted_",4]]]],[11,"ne","","",38,[[["expdotted_",4]]]],[11,"eq","","",39,[[["value_",4]]]],[11,"ne","","",39,[[["value_",4]]]],[11,"eq","","",40,[[["exp_",4]]]],[11,"ne","","",40,[[["exp_",4]]]],[11,"eq","","",42,[[["sequenceitem_",4]]]],[11,"ne","","",42,[[["sequenceitem_",4]]]],[11,"eq","move_lang::hlir::ast","",47,[[["structdefinition",3]]]],[11,"ne","","",47,[[["structdefinition",3]]]],[11,"eq","","",48,[[["structfields",4]]]],[11,"ne","","",48,[[["structfields",4]]]],[11,"eq","","",49,[[["constant",3]]]],[11,"ne","","",49,[[["constant",3]]]],[11,"eq","","",50,[[["functionsignature",3]]]],[11,"ne","","",50,[[["functionsignature",3]]]],[11,"eq","","",51,[[["functionbody_",4]]]],[11,"ne","","",51,[[["functionbody_",4]]]],[11,"eq","","",53,[[["function",3]]]],[11,"ne","","",53,[[["function",3]]]],[11,"eq","","",54,[[["typename_",4]]]],[11,"ne","","",54,[[["typename_",4]]]],[11,"eq","","",55,[[["basetype_",4]]]],[11,"ne","","",55,[[["basetype_",4]]]],[11,"eq","","",56,[[["singletype_",4]]]],[11,"ne","","",56,[[["singletype_",4]]]],[11,"eq","","",57,[[["type_",4]]]],[11,"ne","","",57,[[["type_",4]]]],[11,"eq","","",58,[[["statement_",4]]]],[11,"ne","","",58,[[["statement_",4]]]],[11,"eq","","",62,[[["label",3]]]],[11,"ne","","",62,[[["label",3]]]],[11,"eq","","",63,[[["command_",4]]]],[11,"ne","","",63,[[["command_",4]]]],[11,"eq","","",68,[[["lvalue_",4]]]],[11,"ne","","",68,[[["lvalue_",4]]]],[11,"eq","","",69,[[["unitcase",4]]]],[11,"eq","","",70,[[["modulecall",3]]]],[11,"ne","","",70,[[["modulecall",3]]]],[11,"eq","","",71,[[["builtinfunction_",4]]]],[11,"ne","","",71,[[["builtinfunction_",4]]]],[11,"eq","","",72,[[["unannotatedexp_",4]]]],[11,"ne","","",72,[[["unannotatedexp_",4]]]],[11,"eq","","",76,[[["exp",3]]]],[11,"ne","","",76,[[["exp",3]]]],[11,"eq","","",77,[[["explistitem",4]]]],[11,"ne","","",77,[[["explistitem",4]]]],[11,"eq","move_lang::naming::ast","",81,[[["structdefinition",3]]]],[11,"ne","","",81,[[["structdefinition",3]]]],[11,"eq","","",82,[[["structfields",4]]]],[11,"ne","","",82,[[["structfields",4]]]],[11,"eq","","",83,[[["functionsignature",3]]]],[11,"ne","","",83,[[["functionsignature",3]]]],[11,"eq","","",84,[[["functionbody_",4]]]],[11,"ne","","",84,[[["functionbody_",4]]]],[11,"eq","","",85,[[["function",3]]]],[11,"ne","","",85,[[["function",3]]]],[11,"eq","","",86,[[["constant",3]]]],[11,"ne","","",86,[[["constant",3]]]],[11,"eq","","",87,[[["builtintypename_",4]]]],[11,"eq","","",88,[[["typename_",4]]]],[11,"ne","","",88,[[["typename_",4]]]],[11,"eq","","",89,[[["tparamid",3]]]],[11,"ne","","",89,[[["tparamid",3]]]],[11,"eq","","",90,[[["tparam",3]]]],[11,"ne","","",90,[[["tparam",3]]]],[11,"eq","","",98,[[["tvar",3]]]],[11,"ne","","",98,[[["tvar",3]]]],[11,"eq","","",91,[[["type_",4]]]],[11,"ne","","",91,[[["type_",4]]]],[11,"eq","","",92,[[["lvalue_",4]]]],[11,"ne","","",92,[[["lvalue_",4]]]],[11,"eq","","",93,[[["expdotted_",4]]]],[11,"ne","","",93,[[["expdotted_",4]]]],[11,"eq","","",94,[[["builtinfunction_",4]]]],[11,"ne","","",94,[[["builtinfunction_",4]]]],[11,"eq","","",95,[[["exp_",4]]]],[11,"ne","","",95,[[["exp_",4]]]],[11,"eq","","",97,[[["sequenceitem_",4]]]],[11,"ne","","",97,[[["sequenceitem_",4]]]],[11,"eq","move_lang::parser::ast","",102,[[["use",4]]]],[11,"ne","","",102,[[["use",4]]]],[11,"eq","","",103,[[["modulename",3]]]],[11,"ne","","",103,[[["modulename",3]]]],[11,"eq","","",107,[[["friend_",4]]]],[11,"ne","","",107,[[["friend_",4]]]],[11,"eq","","",108,[[["field",3]]]],[11,"ne","","",108,[[["field",3]]]],[11,"eq","","",109,[[["structname",3]]]],[11,"ne","","",109,[[["structname",3]]]],[11,"eq","","",110,[[["structdefinition",3]]]],[11,"ne","","",110,[[["structdefinition",3]]]],[11,"eq","","",111,[[["structfields",4]]]],[11,"ne","","",111,[[["structfields",4]]]],[11,"eq","","",112,[[["functionname",3]]]],[11,"ne","","",112,[[["functionname",3]]]],[11,"eq","","",113,[[["functionsignature",3]]]],[11,"ne","","",113,[[["functionsignature",3]]]],[11,"eq","","",114,[[["functionvisibility",4]]]],[11,"ne","","",114,[[["functionvisibility",4]]]],[11,"eq","","",115,[[["functionbody_",4]]]],[11,"ne","","",115,[[["functionbody_",4]]]],[11,"eq","","",116,[[["function",3]]]],[11,"ne","","",116,[[["function",3]]]],[11,"eq","","",117,[[["constantname",3]]]],[11,"ne","","",117,[[["constantname",3]]]],[11,"eq","","",118,[[["constant",3]]]],[11,"ne","","",118,[[["constant",3]]]],[11,"eq","","",119,[[["specblock_",3]]]],[11,"ne","","",119,[[["specblock_",3]]]],[11,"eq","","",120,[[["specblocktarget_",4]]]],[11,"ne","","",120,[[["specblocktarget_",4]]]],[11,"eq","","",121,[[["pragmaproperty_",3]]]],[11,"ne","","",121,[[["pragmaproperty_",3]]]],[11,"eq","","",122,[[["pragmavalue",4]]]],[11,"ne","","",122,[[["pragmavalue",4]]]],[11,"eq","","",123,[[["specapplypattern_",3]]]],[11,"ne","","",123,[[["specapplypattern_",3]]]],[11,"eq","","",124,[[["specapplyfragment_",4]]]],[11,"ne","","",124,[[["specapplyfragment_",4]]]],[11,"eq","","",125,[[["specblockmember_",4]]]],[11,"ne","","",125,[[["specblockmember_",4]]]],[11,"eq","","",133,[[["specconditionkind",4]]]],[11,"eq","","",134,[[["invariantkind",4]]]],[11,"eq","","",135,[[["moduleaccess_",4]]]],[11,"ne","","",135,[[["moduleaccess_",4]]]],[11,"eq","","",136,[[["kind_",4]]]],[11,"eq","","",137,[[["type_",4]]]],[11,"ne","","",137,[[["type_",4]]]],[11,"eq","","",138,[[["var",3]]]],[11,"ne","","",138,[[["var",3]]]],[11,"eq","","",139,[[["bind_",4]]]],[11,"ne","","",139,[[["bind_",4]]]],[11,"eq","","",140,[[["value_",4]]]],[11,"ne","","",140,[[["value_",4]]]],[11,"eq","","",141,[[["unaryop_",4]]]],[11,"eq","","",142,[[["binop_",4]]]],[11,"eq","","",143,[[["quantkind_",4]]]],[11,"eq","","",144,[[["exp_",4]]]],[11,"ne","","",144,[[["exp_",4]]]],[11,"eq","","",145,[[["sequenceitem_",4]]]],[11,"ne","","",145,[[["sequenceitem_",4]]]],[11,"eq","","",104,[[["moduleident",3]]]],[11,"eq","move_lang::shared::remembering_unique_map","",148,[[["rememberinguniquemap",3]]]],[11,"eq","move_lang::shared::unique_map","",149,[[["uniquemap",3]]]],[11,"eq","move_lang::shared::unique_set","",150,[[["uniqueset",3]]]],[11,"eq","move_lang::shared","",151,[[["address",3]]]],[11,"ne","","",151,[[["address",3]]]],[11,"eq","","",154,[[["counter",3]]]],[11,"ne","","",154,[[["counter",3]]]],[11,"eq","move_lang::typing::ast","",158,[[["functionbody_",4]]]],[11,"ne","","",158,[[["functionbody_",4]]]],[11,"eq","","",159,[[["function",3]]]],[11,"ne","","",159,[[["function",3]]]],[11,"eq","","",160,[[["constant",3]]]],[11,"ne","","",160,[[["constant",3]]]],[11,"eq","","",161,[[["lvalue_",4]]]],[11,"ne","","",161,[[["lvalue_",4]]]],[11,"eq","","",162,[[["modulecall",3]]]],[11,"ne","","",162,[[["modulecall",3]]]],[11,"eq","","",163,[[["builtinfunction_",4]]]],[11,"ne","","",163,[[["builtinfunction_",4]]]],[11,"eq","","",164,[[["unannotatedexp_",4]]]],[11,"ne","","",164,[[["unannotatedexp_",4]]]],[11,"eq","","",169,[[["exp",3]]]],[11,"ne","","",169,[[["exp",3]]]],[11,"eq","","",170,[[["sequenceitem_",4]]]],[11,"ne","","",170,[[["sequenceitem_",4]]]],[11,"eq","","",171,[[["explistitem",4]]]],[11,"ne","","",171,[[["explistitem",4]]]],[11,"eq","move_lang","",172,[[["pass",4]]]],[11,"partial_cmp","move_lang::expansion::ast","",43,[[["specid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",43,[[["specid",3]]]],[11,"le","","",43,[[["specid",3]]]],[11,"gt","","",43,[[["specid",3]]]],[11,"ge","","",43,[[["specid",3]]]],[11,"partial_cmp","move_lang::hlir::ast","",54,[[["typename_",4]],[["option",4],["ordering",4]]]],[11,"lt","","",54,[[["typename_",4]]]],[11,"le","","",54,[[["typename_",4]]]],[11,"gt","","",54,[[["typename_",4]]]],[11,"ge","","",54,[[["typename_",4]]]],[11,"partial_cmp","","",55,[[["basetype_",4]],[["option",4],["ordering",4]]]],[11,"lt","","",55,[[["basetype_",4]]]],[11,"le","","",55,[[["basetype_",4]]]],[11,"gt","","",55,[[["basetype_",4]]]],[11,"ge","","",55,[[["basetype_",4]]]],[11,"partial_cmp","","",62,[[["label",3]],[["option",4],["ordering",4]]]],[11,"lt","","",62,[[["label",3]]]],[11,"le","","",62,[[["label",3]]]],[11,"gt","","",62,[[["label",3]]]],[11,"ge","","",62,[[["label",3]]]],[11,"partial_cmp","move_lang::naming::ast","",87,[[["builtintypename_",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",88,[[["typename_",4]],[["option",4],["ordering",4]]]],[11,"lt","","",88,[[["typename_",4]]]],[11,"le","","",88,[[["typename_",4]]]],[11,"gt","","",88,[[["typename_",4]]]],[11,"ge","","",88,[[["typename_",4]]]],[11,"partial_cmp","","",89,[[["tparamid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",89,[[["tparamid",3]]]],[11,"le","","",89,[[["tparamid",3]]]],[11,"gt","","",89,[[["tparamid",3]]]],[11,"ge","","",89,[[["tparamid",3]]]],[11,"partial_cmp","","",90,[[["tparam",3]],[["option",4],["ordering",4]]]],[11,"lt","","",90,[[["tparam",3]]]],[11,"le","","",90,[[["tparam",3]]]],[11,"gt","","",90,[[["tparam",3]]]],[11,"ge","","",90,[[["tparam",3]]]],[11,"partial_cmp","","",98,[[["tvar",3]],[["option",4],["ordering",4]]]],[11,"lt","","",98,[[["tvar",3]]]],[11,"le","","",98,[[["tvar",3]]]],[11,"gt","","",98,[[["tvar",3]]]],[11,"ge","","",98,[[["tvar",3]]]],[11,"partial_cmp","move_lang::parser::ast","",103,[[["modulename",3]],[["option",4],["ordering",4]]]],[11,"lt","","",103,[[["modulename",3]]]],[11,"le","","",103,[[["modulename",3]]]],[11,"gt","","",103,[[["modulename",3]]]],[11,"ge","","",103,[[["modulename",3]]]],[11,"partial_cmp","","",108,[[["field",3]],[["option",4],["ordering",4]]]],[11,"lt","","",108,[[["field",3]]]],[11,"le","","",108,[[["field",3]]]],[11,"gt","","",108,[[["field",3]]]],[11,"ge","","",108,[[["field",3]]]],[11,"partial_cmp","","",109,[[["structname",3]],[["option",4],["ordering",4]]]],[11,"lt","","",109,[[["structname",3]]]],[11,"le","","",109,[[["structname",3]]]],[11,"gt","","",109,[[["structname",3]]]],[11,"ge","","",109,[[["structname",3]]]],[11,"partial_cmp","","",112,[[["functionname",3]],[["option",4],["ordering",4]]]],[11,"lt","","",112,[[["functionname",3]]]],[11,"le","","",112,[[["functionname",3]]]],[11,"gt","","",112,[[["functionname",3]]]],[11,"ge","","",112,[[["functionname",3]]]],[11,"partial_cmp","","",117,[[["constantname",3]],[["option",4],["ordering",4]]]],[11,"lt","","",117,[[["constantname",3]]]],[11,"le","","",117,[[["constantname",3]]]],[11,"gt","","",117,[[["constantname",3]]]],[11,"ge","","",117,[[["constantname",3]]]],[11,"partial_cmp","","",136,[[["kind_",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",138,[[["var",3]],[["option",4],["ordering",4]]]],[11,"lt","","",138,[[["var",3]]]],[11,"le","","",138,[[["var",3]]]],[11,"gt","","",138,[[["var",3]]]],[11,"ge","","",138,[[["var",3]]]],[11,"partial_cmp","","",104,[[["moduleident",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","move_lang::shared::unique_set","",150,[[["uniqueset",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","move_lang::shared","",151,[[["address",3]],[["option",4],["ordering",4]]]],[11,"lt","","",151,[[["address",3]]]],[11,"le","","",151,[[["address",3]]]],[11,"gt","","",151,[[["address",3]]]],[11,"ge","","",151,[[["address",3]]]],[11,"partial_cmp","move_lang","",172,[[["pass",4]],[["option",4],["ordering",4]]]],[11,"fmt","move_lang::cfgir::ast","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::compiled_unit","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::expansion::ast","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::hlir::ast","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::naming::ast","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::parser::ast","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::shared::remembering_unique_map","",148,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::shared::unique_map","",149,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::shared::unique_set","",150,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::shared","",151,[[["formatter",3]],["result",6]]],[11,"fmt","","",154,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::typing::ast","",155,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",158,[[["formatter",3]],["result",6]]],[11,"fmt","","",159,[[["formatter",3]],["result",6]]],[11,"fmt","","",160,[[["formatter",3]],["result",6]]],[11,"fmt","","",161,[[["formatter",3]],["result",6]]],[11,"fmt","","",162,[[["formatter",3]],["result",6]]],[11,"fmt","","",163,[[["formatter",3]],["result",6]]],[11,"fmt","","",164,[[["formatter",3]],["result",6]]],[11,"fmt","","",169,[[["formatter",3]],["result",6]]],[11,"fmt","","",170,[[["formatter",3]],["result",6]]],[11,"fmt","","",171,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::expansion::ast","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::hlir::ast","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::naming::ast","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::parser::ast","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::shared::ast_debug","",147,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::shared","",151,[[["formatter",3]],["result",6]]],[11,"fmt","move_lang::typing::ast","",163,[[["formatter",3]],["result",6]]],[11,"hash","move_lang::expansion::ast","",43,[[]]],[11,"hash","move_lang::hlir::ast","",62,[[]]],[11,"hash","move_lang::naming::ast","",89,[[]]],[11,"hash","","",90,[[]]],[11,"hash","","",98,[[]]],[11,"hash","move_lang::parser::ast","",103,[[]]],[11,"hash","","",108,[[]]],[11,"hash","","",109,[[]]],[11,"hash","","",112,[[]]],[11,"hash","","",117,[[]]],[11,"hash","","",136,[[]]],[11,"hash","","",138,[[]]],[11,"hash","","",104,[[]]],[11,"hash","move_lang::shared::unique_set","",150,[[]]],[11,"hash","move_lang::shared","",151,[[]]],[11,"hash","","",154,[[]]],[11,"try_from","","",151,[[],[["string",3],["result",4],["address",3]]]],[11,"fmt","","",151,[[["formatter",3]],["result",6]]],[11,"fmt","","",151,[[["formatter",3]],["result",6]]]],"p":[[3,"Program"],[3,"Script"],[3,"ModuleDefinition"],[3,"Constant"],[4,"FunctionBody_"],[13,"Defined"],[3,"Function"],[4,"LoopEnd"],[3,"BlockInfo"],[3,"VarInfo"],[3,"SpecInfo"],[3,"FunctionInfo"],[4,"CompiledUnit"],[13,"Module"],[13,"Script"],[3,"Program"],[3,"Script"],[3,"ModuleDefinition"],[3,"StructDefinition"],[4,"StructFields"],[3,"FunctionSignature"],[4,"FunctionBody_"],[3,"Function"],[3,"Constant"],[3,"SpecBlock_"],[4,"SpecBlockMember_"],[13,"Condition"],[13,"Function"],[13,"Variable"],[13,"Let"],[13,"Include"],[13,"Apply"],[13,"Pragma"],[3,"PragmaProperty_"],[4,"PragmaValue"],[4,"ModuleAccess_"],[4,"Type_"],[4,"LValue_"],[4,"ExpDotted_"],[4,"Value_"],[4,"Exp_"],[13,"Unit"],[4,"SequenceItem_"],[3,"SpecId"],[3,"Program"],[3,"Script"],[3,"ModuleDefinition"],[3,"StructDefinition"],[4,"StructFields"],[3,"Constant"],[3,"FunctionSignature"],[4,"FunctionBody_"],[13,"Defined"],[3,"Function"],[4,"TypeName_"],[4,"BaseType_"],[4,"SingleType_"],[4,"Type_"],[4,"Statement_"],[13,"IfElse"],[13,"While"],[13,"Loop"],[3,"Label"],[4,"Command_"],[13,"Return"],[13,"IgnoreAndPop"],[13,"Jump"],[13,"JumpIf"],[4,"LValue_"],[4,"UnitCase"],[3,"ModuleCall"],[4,"BuiltinFunction_"],[4,"UnannotatedExp_"],[13,"Unit"],[13,"Move"],[13,"Copy"],[3,"Exp"],[4,"ExpListItem"],[3,"Program"],[3,"Script"],[3,"ModuleDefinition"],[3,"StructDefinition"],[4,"StructFields"],[3,"FunctionSignature"],[4,"FunctionBody_"],[3,"Function"],[3,"Constant"],[4,"BuiltinTypeName_"],[4,"TypeName_"],[3,"TParamID"],[3,"TParam"],[4,"Type_"],[4,"LValue_"],[4,"ExpDotted_"],[4,"BuiltinFunction_"],[4,"Exp_"],[13,"Unit"],[4,"SequenceItem_"],[3,"TVar"],[3,"Program"],[4,"Definition"],[3,"Script"],[4,"Use"],[3,"ModuleName"],[3,"ModuleIdent"],[3,"ModuleDefinition"],[4,"ModuleMember"],[4,"Friend_"],[3,"Field"],[3,"StructName"],[3,"StructDefinition"],[4,"StructFields"],[3,"FunctionName"],[3,"FunctionSignature"],[4,"FunctionVisibility"],[4,"FunctionBody_"],[3,"Function"],[3,"ConstantName"],[3,"Constant"],[3,"SpecBlock_"],[4,"SpecBlockTarget_"],[3,"PragmaProperty_"],[4,"PragmaValue"],[3,"SpecApplyPattern_"],[4,"SpecApplyFragment_"],[4,"SpecBlockMember_"],[13,"Condition"],[13,"Function"],[13,"Variable"],[13,"Let"],[13,"Include"],[13,"Apply"],[13,"Pragma"],[4,"SpecConditionKind"],[4,"InvariantKind"],[4,"ModuleAccess_"],[4,"Kind_"],[4,"Type_"],[3,"Var"],[4,"Bind_"],[4,"Value_"],[4,"UnaryOp_"],[4,"BinOp_"],[4,"QuantKind_"],[4,"Exp_"],[4,"SequenceItem_"],[8,"AstDebug"],[3,"AstWriter"],[3,"RememberingUniqueMap"],[3,"UniqueMap"],[3,"UniqueSet"],[3,"Address"],[8,"TName"],[8,"Identifier"],[3,"Counter"],[3,"Program"],[3,"Script"],[3,"ModuleDefinition"],[4,"FunctionBody_"],[3,"Function"],[3,"Constant"],[4,"LValue_"],[3,"ModuleCall"],[4,"BuiltinFunction_"],[4,"UnannotatedExp_"],[13,"Unit"],[13,"Move"],[13,"Copy"],[13,"Loop"],[3,"Exp"],[4,"SequenceItem_"],[4,"ExpListItem"],[4,"Pass"],[4,"PassResult"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[6,"BasicBlocks"],[6,"Friend"],[6,"Name"]]},\
"move_lang_functional_tests":{"doc":"","i":[],"p":[]},\
"move_lang_test_utils":{"doc":"","i":[[3,"StringError","move_lang_test_utils","",null,null],[17,"SENDER","","",null,null],[17,"STD_LIB_DIR","","",null,null],[17,"STD_LIB_COMPILED_DIR","","",null,null],[17,"FUNCTIONAL_TEST_DIR","","",null,null],[17,"MOVE_CHECK_DIR","","",null,null],[17,"STD_LIB_TRANSACTION_SCRIPTS_DIR","","",null,null],[17,"PATH_TO_IR_TESTS","","",null,null],[17,"MIGRATION_SUB_DIR","","",null,null],[17,"TODO_EXTENSION","","",null,null],[17,"MOVE_EXTENSION","","",null,null],[17,"IR_EXTENSION","","",null,null],[17,"DEBUG_MODULE_FILE_NAME","","",null,null],[17,"COMPLETED_DIRECTORIES","","",null,null],[5,"minimal_stdlib_files","","",null,[[],[["string",3],["vec",3]]]],[5,"error","","",null,[[["string",3]],["result",6]]],[5,"ir_tests","","",null,[[]]],[5,"translated_ir_test_name","","",null,[[],[["string",3],["option",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"description","","",0,[[]]]],"p":[[3,"StringError"]]},\
"move_model":{"doc":"","i":[[0,"ast","move_model","Contains AST definitions for the specification language …",null,null],[3,"SpecVarDecl","move_model::ast","Declarations",null,null],[12,"loc","","",0,null],[12,"name","","",0,null],[12,"type_params","","",0,null],[12,"type_","","",0,null],[3,"SpecFunDecl","","",null,null],[12,"loc","","",1,null],[12,"name","","",1,null],[12,"type_params","","",1,null],[12,"params","","",1,null],[12,"context_params","","",1,null],[12,"result_type","","",1,null],[12,"used_spec_vars","","",1,null],[12,"used_memory","","",1,null],[12,"uninterpreted","","",1,null],[12,"is_move_fun","","",1,null],[12,"is_native","","",1,null],[12,"body","","",1,null],[4,"ConditionKind","","Conditions",null,null],[13,"Assert","","",2,null],[13,"Assume","","",2,null],[13,"Decreases","","",2,null],[13,"AbortsIf","","",2,null],[13,"AbortsWith","","",2,null],[13,"SucceedsIf","","",2,null],[13,"Modifies","","",2,null],[13,"Emits","","",2,null],[13,"Ensures","","",2,null],[13,"Requires","","",2,null],[13,"RequiresModule","","",2,null],[13,"Invariant","","",2,null],[13,"InvariantModule","","",2,null],[13,"InvariantUpdate","","",2,null],[13,"VarUpdate","","",2,null],[13,"VarPack","","",2,null],[13,"VarUnpack","","",2,null],[11,"get_spec_var_target","","If this is an assignment to a spec var, return it.",2,[[],["option",4]]],[11,"allows_old","","Returns true of this condition allows the <code>old(..)</code> …",2,[[]]],[11,"allowed_on_public_fun_decl","","Returns true if this condition is allowed on a public …",2,[[]]],[11,"allowed_on_private_fun_decl","","Returns true if this condition is allowed on a private …",2,[[]]],[11,"allowed_on_fun_impl","","Returns true if this condition is allowed in a function …",2,[[]]],[11,"allowed_on_struct","","Returns true if this condition is allowed on a struct.",2,[[]]],[11,"allowed_on_module","","Returns true if this condition is allowed on a module.",2,[[]]],[4,"QuantKind","","",null,null],[13,"Forall","","",3,null],[13,"Exists","","",3,null],[3,"Condition","","",null,null],[12,"loc","","",4,null],[12,"kind","","",4,null],[12,"properties","","",4,null],[12,"exp","","",4,null],[12,"additional_exps","","",4,null],[11,"all_exps","","Return all expressions in the condition, the primary one …",4,[[]]],[6,"PropertyBag","","SpecificationsA set of properties stemming from pragmas.",null,null],[4,"PropertyValue","","The value of a property.",null,null],[13,"Value","","",5,null],[13,"Symbol","","",5,null],[13,"QualifiedSymbol","","",5,null],[3,"Spec","","Specification and properties associated with a language …",null,null],[12,"loc","","",6,null],[12,"conditions","","",6,null],[12,"properties","","",6,null],[12,"on_impl","","",6,null],[11,"has_conditions","","",6,[[]]],[11,"filter","","",6,[[]]],[11,"filter_kind","","",6,[[["conditionkind",4]]]],[11,"any","","",6,[[]]],[11,"any_kind","","",6,[[["conditionkind",4]]]],[3,"SpecBlockInfo","","Information about a specification block in the source. …",null,null],[12,"loc","","The location of the entire spec block.",7,null],[12,"target","","The target of the spec block.",7,null],[12,"member_locs","","The locations of all members of the spec block.",7,null],[4,"SpecBlockTarget","","Describes the target of a spec block.",null,null],[13,"Module","","",8,null],[13,"Struct","","",8,null],[13,"Function","","",8,null],[13,"FunctionCode","","",8,null],[13,"Schema","","",8,null],[3,"GlobalInvariant","","Describes a global invariant.",null,null],[12,"id","","",9,null],[12,"loc","","",9,null],[12,"kind","","",9,null],[12,"mem_usage","","",9,null],[12,"spec_var_usage","","",9,null],[12,"declaring_module","","",9,null],[12,"properties","","",9,null],[12,"cond","","",9,null],[6,"TempIndex","","ExpressionsA type alias for temporaries. Those are locals …",null,null],[4,"Exp","","The type of expressions.",null,null],[13,"Invalid","","Represents an invalid expression. This is used as a stub …",10,null],[13,"Value","","Represents a value.",10,null],[13,"LocalVar","","Represents a reference to a local variable introduced by …",10,null],[13,"Temporary","","Represents a reference to a temporary used in bytecode.",10,null],[13,"SpecVar","","Represents a reference to a global specification (ghost) …",10,null],[13,"Call","","Represents a call to an operation. The <code>Operation</code> enum …",10,null],[13,"Invoke","","Represents an invocation of a function value, as a lambda.",10,null],[13,"Lambda","","Represents a lambda.",10,null],[13,"Quant","","Represents a quantified formula over multiple variables …",10,null],[13,"Block","","Represents a block which contains a set of variable …",10,null],[13,"IfElse","","Represents a conditional.",10,null],[11,"node_id","","",10,[[],["nodeid",3]]],[11,"call_args","","",10,[[]]],[11,"node_ids","","",10,[[],[["nodeid",3],["vec",3]]]],[11,"locals","","Returns the locals used in this expression.",10,[[],[["btreeset",3],["symbol",3]]]],[11,"temporaries","","Returns the temporaries used in this expression.",10,[[],[["tempindex",6],["btreeset",3]]]],[11,"visit","","Visits expression, calling visitor on each …",10,[[]]],[11,"visit_pre_post","","Visits expression, calling visitor on each …",10,[[]]],[11,"rewrite","","Rewrites this expression based on the rewriter function. …",10,[[],["exp",4]]],[11,"module_usage","","Returns the set of module ids used by this expression.",10,[[["btreeset",3]]]],[4,"Operation","","",null,null],[13,"Function","","",11,null],[13,"Pack","","",11,null],[13,"Tuple","","",11,null],[13,"Select","","",11,null],[13,"UpdateField","","",11,null],[13,"Result","","",11,null],[13,"Index","","",11,null],[13,"Slice","","",11,null],[13,"Range","","",11,null],[13,"Add","","",11,null],[13,"Sub","","",11,null],[13,"Mul","","",11,null],[13,"Mod","","",11,null],[13,"Div","","",11,null],[13,"BitOr","","",11,null],[13,"BitAnd","","",11,null],[13,"Xor","","",11,null],[13,"Shl","","",11,null],[13,"Shr","","",11,null],[13,"Implies","","",11,null],[13,"And","","",11,null],[13,"Or","","",11,null],[13,"Eq","","",11,null],[13,"Neq","","",11,null],[13,"Lt","","",11,null],[13,"Gt","","",11,null],[13,"Le","","",11,null],[13,"Ge","","",11,null],[13,"Not","","",11,null],[13,"Len","","",11,null],[13,"TypeValue","","",11,null],[13,"TypeDomain","","",11,null],[13,"ResourceDomain","","",11,null],[13,"Global","","",11,null],[13,"Exists","","",11,null],[13,"CanModify","","",11,null],[13,"Old","","",11,null],[13,"Trace","","",11,null],[13,"Empty","","",11,null],[13,"Single","","",11,null],[13,"Update","","",11,null],[13,"Concat","","",11,null],[13,"MaxU8","","",11,null],[13,"MaxU64","","",11,null],[13,"MaxU128","","",11,null],[13,"AbortFlag","","",11,null],[13,"AbortCode","","",11,null],[13,"WellFormed","","",11,null],[13,"BoxValue","","",11,null],[13,"UnboxValue","","",11,null],[13,"EmptyEventStore","","",11,null],[13,"ExtendEventStore","","",11,null],[13,"EventStoreIncludes","","",11,null],[13,"EventStoreIncludedIn","","",11,null],[13,"NoOp","","",11,null],[6,"MemoryLabel","","A label used for referring to a specific memory in …",null,null],[3,"LocalVarDecl","","",null,null],[12,"id","","",12,null],[12,"name","","",12,null],[12,"binding","","",12,null],[4,"Value","","",null,null],[13,"Address","","",13,null],[13,"Number","","",13,null],[13,"Bool","","",13,null],[13,"ByteArray","","",13,null],[11,"is_pure","","Determines whether this operation is pure (does not …",11,[[]]],[11,"is_pure","","Determines whether this expression is pure (does not …",10,[[]]],[3,"ModuleName","","NamesRepresents a module name, consisting of address and …",null,null],[11,"new","","",14,[[["biguint",3],["symbol",3]],["modulename",3]]],[11,"from_str","","",14,[[["symbol",3]],["modulename",3]]],[11,"addr","","",14,[[],["biguint",3]]],[11,"name","","",14,[[],["symbol",3]]],[11,"is_script","","Determine whether this is a script. The move-lang …",14,[[]]],[11,"display","","Creates a value implementing the Display trait which …",14,[[["symbolpool",3]],["modulenamedisplay",3]]],[11,"display_full","","Creates a value implementing the Display trait which …",14,[[["symbolpool",3]],["modulenamedisplay",3]]],[3,"ModuleNameDisplay","","A helper to support module names in formatting.",null,null],[3,"QualifiedSymbol","","",null,null],[12,"module_name","","",15,null],[12,"symbol","","",15,null],[11,"display","","Creates a value implementing the Display trait which …",15,[[["symbolpool",3]],["qualifiedsymboldisplay",3]]],[11,"display_simple","","Creates a value implementing the Display trait which …",15,[[["symbolpool",3]],["qualifiedsymboldisplay",3]]],[11,"display_full","","Creates a value implementing the Display trait which …",15,[[["symbolpool",3]],["qualifiedsymboldisplay",3]]],[3,"QualifiedSymbolDisplay","","A helper to support qualified symbols in formatting.",null,null],[11,"display","","Creates a display of an expression which can be used in …",10,[[["globalenv",3]],["expdisplay",3]]],[3,"ExpDisplay","","Helper type for expression display.",null,null],[11,"display","","Creates a display of an operation which can be used in …",11,[[["globalenv",3],["nodeid",3]],["operationdisplay",3]]],[3,"OperationDisplay","","Helper type for operation display.",null,null],[0,"code_writer","move_model","A helper for generating structured code.",null,null],[3,"CodeWriter","move_model::code_writer","A helper to emit code. Supports indentation and maintains …",null,null],[3,"CodeWriterLabel","","A label which can be created at the code writers current …",null,null],[11,"new","","Creates new code writer, with the given default location.",16,[[["loc",3]],["codewriter",3]]],[11,"create_label","","Creates a label at which code can be inserted later.",16,[[],["codewriterlabel",3]]],[11,"insert_at_label","","Inserts code at the previously created label.",16,[[["codewriterlabel",3]]]],[11,"process_result","","Calls a function to process the code written so far. This …",16,[[["fnmut",8]]]],[11,"extract_result","","Extracts the output as a string. Leaves the writers data …",16,[[],["string",3]]],[11,"set_location","","Sets the current location. This location will be …",16,[[["loc",3]]]],[11,"get_source_location","","Given a byte index in the written output, return the best …",16,[[["byteindex",3]],[["loc",3],["option",4]]]],[11,"get_output_byte_index","","Given line/column location, determine ByteIndex of that …",16,[[["lineindex",3],["columnindex",3]],[["option",4],["byteindex",3]]]],[11,"indent","","Indents any subsequently written output. The current line …",16,[[]]],[11,"unindent","","Undo previously done indentation.",16,[[]]],[11,"emit","","Emit a string. The string will be broken down into lines …",16,[[]]],[11,"emit_line","","Emits a string and then terminates the line.",16,[[]]],[0,"exp_rewriter","move_model","",null,null],[3,"ExpRewriter","move_model::exp_rewriter","Rewriter for expressions, allowing to substitute locals …",null,null],[4,"RewriteTarget","","A target for expression rewrites of either an …",null,null],[13,"LocalVar","","",17,null],[13,"Temporary","","",17,null],[11,"new","","Creates a new rewriter with the given replacer map.",18,[[["globalenv",3]]]],[11,"set_type_args","","Adds a type argument list to this rewriter. Generic type …",18,[[]]],[11,"rewrite","","Runs the rewriter.",18,[[["exp",4]],["exp",4]]],[11,"rewrite_vec","","",18,[[],[["vec",3],["exp",4]]]],[0,"model","move_model","Provides a model for a set of Move modules (and scripts, …",null,null],[17,"SCRIPT_MODULE_NAME","move_model::model","ConstantsA name we use to represent a script as a module.",null,null],[17,"SCRIPT_BYTECODE_FUN_NAME","","Names used in the bytecode/AST to represent the main …",null,null],[3,"Loc","","LocationsA location, consisting of a FileId and a span in …",null,null],[11,"new","","",19,[[["span",3],["fileid",3]],["loc",3]]],[11,"span","","",19,[[],["span",3]]],[11,"file_id","","",19,[[],["fileid",3]]],[11,"at_end","","",19,[[],["loc",3]]],[11,"at_start","","",19,[[],["loc",3]]],[11,"enclosing","","Creates a location which encloses all the locations in …",19,[[],["loc",3]]],[6,"MoveIrLoc","","Alias for the Loc variant of MoveIR. This uses a …",null,null],[6,"RawIndex","","IdentifiersIdentifiers are opaque values used to …",null,null],[3,"ModuleId","","Identifier for a module.",null,null],[3,"NamedConstantId","","Identifier for a named constant, relative to module.",null,null],[3,"StructId","","Identifier for a structure/resource, relative to module.",null,null],[3,"FieldId","","Identifier for a field of a structure, relative to struct.",null,null],[3,"FunId","","Identifier for a Move function, relative to module.",null,null],[3,"SchemaId","","Identifier for a schema.",null,null],[3,"SpecFunId","","Identifier for a specification function, relative to …",null,null],[3,"SpecVarId","","Identifier for a specification variable, relative to …",null,null],[3,"NodeId","","Identifier for a node in the AST, relative to a module. …",null,null],[3,"GlobalId","","A global id. Instances of this type represent unique …",null,null],[3,"QualifiedId","","Some identifier qualified by a module.",null,null],[12,"module_id","","",20,null],[12,"id","","",20,null],[11,"new","","",21,[[["symbol",3]]]],[11,"symbol","","",21,[[],["symbol",3]]],[11,"new","","",22,[[["symbol",3]]]],[11,"symbol","","",22,[[],["symbol",3]]],[11,"new","","",23,[[["symbol",3]]]],[11,"symbol","","",23,[[],["symbol",3]]],[11,"new","","",24,[[["symbol",3]]]],[11,"symbol","","",24,[[],["symbol",3]]],[11,"new","","",25,[[["symbol",3]]]],[11,"symbol","","",25,[[],["symbol",3]]],[11,"new","","",26,[[]]],[11,"as_usize","","",26,[[]]],[11,"new","","",27,[[]]],[11,"as_usize","","",27,[[]]],[11,"new","","",28,[[]]],[11,"as_usize","","",28,[[]]],[11,"new","","",29,[[]]],[11,"to_usize","","",29,[[]]],[11,"new","","",30,[[]]],[11,"as_usize","","",30,[[]]],[11,"qualified","","",29,[[],["qualifiedid",3]]],[4,"VerificationScope","","Verification ScopeDefines what functions to verify.",null,null],[13,"Public","","Verify only public functions.",31,null],[13,"All","","Verify all functions.",31,null],[13,"None","","Verify no functions",31,null],[3,"GlobalEnv","","Global EnvironmentGlobal environment for a set of modules.",null,null],[12,"module_data","","List of loaded modules, in order they have been provided …",32,null],[12,"used_spec_funs","","A set containing spec functions which are called/used in …",32,null],[11,"new","","Creates a new environment.",32,[[]]],[11,"set_extension","","Stores extension data in the environment. This can be …",32,[[["any",8]]]],[11,"get_extension","","Retrieves extension data from the environment. Use as in …",32,[[],[["rc",3],["option",4]]]],[11,"has_extension","","Checks whether there is an extension of type <code>T</code>.",32,[[]]],[11,"new_global_id","","Create a new global id unique to this environment.",32,[[],["globalid",3]]],[11,"symbol_pool","","Returns a reference to the symbol pool owned by this …",32,[[],["symbolpool",3]]],[11,"add_source","","Adds a source to this environment, returning a FileId for …",32,[[],["fileid",3]]],[11,"add_documentation","","Adds documentation for a file.",32,[[["btreemap",3],["byteindex",3],["string",3],["fileid",3]]]],[11,"add_diag","","Adds diagnostic to the environment.",32,[[["diagnostic",3]]]],[11,"error_with_notes","","Adds an error to this environment, with notes.",32,[[["loc",3],["vec",3],["string",3]]]],[11,"error","","Adds an error to this environment, without notes.",32,[[["loc",3]]]],[11,"warn","","Adds a warning to this environment.",32,[[["loc",3]]]],[11,"unknown_loc","","Returns the unknown location.",32,[[],["loc",3]]],[11,"unknown_move_ir_loc","","Returns a Move IR version of the unknown location which …",32,[[],["moveirloc",6]]],[11,"internal_loc","","Returns the internal location.",32,[[],["loc",3]]],[11,"to_loc","","Converts a Loc as used by the move-lang compiler to the …",32,[[["moveirloc",6]],["loc",3]]],[11,"get_file_id","","Returns the file id for a file name, if defined.",32,[[],[["option",4],["fileid",3]]]],[11,"file_id_to_idx","","Maps a FileId to an index which can be mapped back to a …",32,[[["fileid",3]]]],[11,"file_idx_to_id","","Maps a an index which was obtained by <code>file_id_to_idx</code> back …",32,[[],["fileid",3]]],[11,"get_file_and_location","","Returns file name and line/column position for a …",32,[[["loc",3]],["option",4]]],[11,"get_location","","Returns line/column position for a location, if available.",32,[[["loc",3]],[["location",3],["option",4]]]],[11,"get_source","","Return the source text for the given location.",32,[[["loc",3]],[["spanoutofboundserror",3],["result",4]]]],[11,"get_source_file_names","","Return the source file names.",32,[[],[["vec",3],["string",3]]]],[11,"get_file_count","","",32,[[]]],[11,"has_errors","","Returns true if diagnostics have error severity or worse.",32,[[]]],[11,"has_warnings","","Returns true if diagnostics have warning severity or …",32,[[]]],[11,"report_errors","","Writes accumulated errors to writer.",32,[[]]],[11,"report_warnings","","Writes accumulated diagnostics with warning severity or …",32,[[]]],[11,"add_global_invariant","","Adds a global invariant to this environment.",32,[[["globalinvariant",3]]]],[11,"get_global_invariant","","Get global invariant by id.",32,[[["globalid",3]],[["option",4],["globalinvariant",3]]]],[11,"get_global_invariants_for_memory","","Return the global invariants which refer to the given …",32,[[["qualifiedid",3],["structid",3]],[["vec",3],["globalid",3]]]],[11,"get_global_invariants_by_module","","",32,[[["moduleid",3]],[["btreeset",3],["globalid",3]]]],[11,"is_spec_fun_used","","Returns true if a spec fun is used in specs.",32,[[["moduleid",3],["specfunid",3]]]],[11,"is_wellknown_event_handle_type","","Returns true if the type represents the well-known event …",32,[[["type",4]]]],[11,"add","","Adds a new module to the environment. StructData and …",32,[[["moveirloc",6],["specvardecl",3],["namedconstantid",3],["vec",3],["btreemap",3],["structid",3],["btreemap",3],["sourcemap",3],["structdata",3],["funid",3],["specfundecl",3],["vec",3],["loc",3],["functiondata",3],["spec",3],["specblockinfo",3],["btreemap",3],["vec",3],["compiledmodule",3],["namedconstantdata",3]]]],[11,"create_named_constant_data","","Creates data for a named constant.",32,[[["loc",3],["symbol",3],["type",4],["value",4]],["namedconstantdata",3]]],[11,"create_function_data","","Creates data for a function, adding any information not …",32,[[["loc",3],["functiondefinitionindex",3],["spec",3],["symbol",3],["compiledmodule",3],["vec",3]],["functiondata",3]]],[11,"create_struct_data","","Creates data for a struct. Currently all information is …",32,[[["loc",3],["structdefinitionindex",3],["spec",3],["symbol",3],["compiledmodule",3]],["structdata",3]]],[11,"find_module","","Finds a module by name and returns an environment for it.",32,[[["modulename",3]],[["option",4],["moduleenv",3]]]],[11,"find_module_by_name","","Finds a module by simple name and returns an environment …",32,[[["symbol",3]],[["option",4],["moduleenv",3]]]],[11,"find_struct_by_tag","","Gets a StructEnv in this module by its <code>StructTag</code>",32,[[["structtag",3]],[["qualifiedid",3],["option",4]]]],[11,"get_enclosing_module","","Return the module enclosing this location.",32,[[["loc",3]],[["option",4],["moduleenv",3]]]],[11,"get_enclosing_function","","Returns the function enclosing this location.",32,[[["loc",3]],[["option",4],["functionenv",3]]]],[11,"get_enclosing_struct","","Returns the struct enclosing this location.",32,[[["loc",3]],[["structenv",3],["option",4]]]],[11,"get_function","","Return the <code>FunctionEnv</code> for <code>fun</code>",32,[[["funid",3],["qualifiedid",3]],["functionenv",3]]],[11,"get_module_count","","",32,[[]]],[11,"get_module","","Gets a module by id.",32,[[["moduleid",3]],["moduleenv",3]]],[11,"get_modules","","Returns an iterator for all modules in the environment.",32,[[]]],[11,"get_bytecode_modules","","Returns an iterator for all bytecode modules in the …",32,[[]]],[11,"get_all_structs_with_conditions","","Returns all structs in all modules which carry invariants.",32,[[],[["type",4],["vec",3]]]],[11,"get_doc","","Get documentation associated with an item at Loc.",32,[[["loc",3]]]],[11,"is_property_true","","Returns true if the boolean property is true.",32,[[["propertybag",6]],["option",4]]],[11,"get_num_property","","Returns the value of a number property.",32,[[["propertybag",6]],["option",4]]],[11,"get_struct_tag","","Attempt to compute a struct tag for (<code>mid</code>, <code>sid</code>, <code>ts</code>). …",32,[[["moduleid",3],["structid",3]],[["structtag",3],["option",4]]]],[11,"get_node_loc","","Gets the location of the given node.",32,[[["nodeid",3]],["loc",3]]],[11,"get_node_type","","Gets the type of the given node.",32,[[["nodeid",3]],["type",4]]],[11,"get_node_type_opt","","Gets the type of the given node, if available.",32,[[["nodeid",3]],[["type",4],["option",4]]]],[11,"next_free_node_number","","Returns the next free node number.",32,[[]]],[11,"new_node_id","","Allocates a new node id.",32,[[],["nodeid",3]]],[11,"new_node","","Allocates a new node id and assigns location and type to …",32,[[["loc",3],["type",4]],["nodeid",3]]],[11,"set_node_type","","Sets type for the given node id.",32,[[["type",4],["nodeid",3]]]],[11,"set_node_instantiation","","Sets instantiation for the given node id.",32,[[["type",4],["nodeid",3],["vec",3]]]],[11,"get_node_instantiation","","Gets the type parameter instantiation associated with the …",32,[[["nodeid",3]],[["type",4],["vec",3]]]],[11,"get_node_instantiation_opt","","Gets the type parameter instantiation associated with the …",32,[[["nodeid",3]],[["option",4],["vec",3]]]],[3,"ModuleData","","Module EnvironmentRepresents data for a module.",null,null],[12,"name","","Module name.",33,null],[12,"id","","Id of this module in the global env.",33,null],[12,"module","","Module byte code.",33,null],[12,"named_constants","","Named constant data",33,null],[12,"struct_data","","Struct data.",33,null],[12,"struct_idx_to_id","","Mapping from struct definition index to id in above map.",33,null],[12,"function_data","","Function data.",33,null],[12,"function_idx_to_id","","Mapping from function definition index to id in above map.",33,null],[12,"spec_vars","","Specification variables, in SpecVarId order.",33,null],[12,"spec_funs","","Specification functions, in SpecFunId order.",33,null],[12,"module_spec","","Module level specification.",33,null],[12,"source_map","","Module source location information.",33,null],[12,"loc","","The location of this module.",33,null],[12,"spec_block_infos","","A list of spec block infos, for documentation generation.",33,null],[11,"stub","","",33,[[["modulename",3],["moduleid",3],["compiledmodule",3]]]],[3,"ModuleEnv","","Represents a module environment.",null,null],[12,"env","","Reference to the outer env.",34,null],[11,"get_id","","Returns the id of this module in the global env.",34,[[],["moduleid",3]]],[11,"get_name","","Returns the name of this module.",34,[[],["modulename",3]]],[11,"get_full_name_str","","Returns full name as a string.",34,[[],["string",3]]],[11,"get_identifier","","Returns the VM identifier for this module",34,[[],["identifier",3]]],[11,"is_script_module","","Returns true if this is a module representing a script.",34,[[]]],[11,"is_target","","Returns true of this module is target of compilation. A …",34,[[]]],[11,"get_source_path","","Returns the path to source file of this module.",34,[[],["osstr",3]]],[11,"get_dependencies","","Return the set of language storage ModuleId\'s that this …",34,[[],[["vec",3],["moduleid",3]]]],[11,"get_using_modules","","Returns the set of modules that use this one.",34,[[],[["btreeset",3],["moduleid",3]]]],[11,"get_used_modules","","Returns the set of modules this one uses.",34,[[],[["btreeset",3],["moduleid",3]]]],[11,"is_transitive_dependency","","Returns true if the given module is a transitive …",34,[[["moduleid",3]]]],[11,"get_doc","","Returns documentation associated with this module.",34,[[]]],[11,"get_spec_block_infos","","Returns spec block documentation infos.",34,[[]]],[11,"symbol_pool","","Shortcut for accessing the symbol pool.",34,[[],["symbolpool",3]]],[11,"get_verified_module","","Gets the underlying bytecode module.",34,[[],["compiledmodule",3]]],[11,"find_named_constant","","Gets a <code>NamedConstantEnv</code> in this module by name",34,[[["symbol",3]],[["namedconstantenv",3],["option",4]]]],[11,"get_named_constant","","Gets a <code>NamedConstantEnv</code> in this module by the constant\'s …",34,[[["namedconstantid",3]],["namedconstantenv",3]]],[11,"into_named_constant","","Gets a <code>NamedConstantEnv</code> by id",34,[[["namedconstantid",3]],["namedconstantenv",3]]],[11,"get_named_constant_count","","Gets the number of named constants in this module.",34,[[]]],[11,"get_named_constants","","Returns iterator over <code>NamedConstantEnv</code>s in this module.",34,[[]]],[11,"into_named_constants","","Returns an iterator over <code>NamedConstantEnv</code>s in this module.",34,[[]]],[11,"find_function","","Gets a FunctionEnv in this module by name.",34,[[["symbol",3]],[["option",4],["functionenv",3]]]],[11,"get_function","","Gets a FunctionEnv by id.",34,[[["funid",3]],["functionenv",3]]],[11,"into_function","","Gets a FunctionEnv by id.",34,[[["funid",3]],["functionenv",3]]],[11,"get_function_count","","Gets the number of functions in this module.",34,[[]]],[11,"get_functions","","Returns iterator over FunctionEnvs in this module.",34,[[]]],[11,"into_functions","","Returns iterator over FunctionEnvs in this module.",34,[[]]],[11,"get_used_function","","Gets FunctionEnv for a function used in this module, via …",34,[[["functionhandleindex",3]],["functionenv",3]]],[11,"try_get_function_id","","Gets the function id from a definition index.",34,[[["functiondefinitionindex",3]],[["funid",3],["option",4]]]],[11,"get_function_def_idx","","Gets the function definition index for the given function …",34,[[["funid",3]],["functiondefinitionindex",3]]],[11,"find_struct","","Gets a StructEnv in this module by name.",34,[[["symbol",3]],[["structenv",3],["option",4]]]],[11,"find_struct_by_identifier","","Gets a StructEnv in this module by identifier",34,[[["identifier",3]],[["option",4],["structid",3]]]],[11,"get_struct_id","","Gets the struct id from a definition index which must be …",34,[[["structdefinitionindex",3]],["structid",3]]],[11,"get_struct","","Gets a StructEnv by id.",34,[[["structid",3]],["structenv",3]]],[11,"get_struct_by_def_idx","","",34,[[["structdefinitionindex",3]],["structenv",3]]],[11,"into_struct","","Gets a StructEnv by id, consuming this module env.",34,[[["structid",3]],["structenv",3]]],[11,"get_struct_count","","Gets the number of structs in this module.",34,[[]]],[11,"get_structs","","Returns iterator over structs in this module.",34,[[]]],[11,"into_structs","","Returns iterator over structs in this module.",34,[[]]],[11,"globalize_signature","","Globalizes a signature local to this module.",34,[[["signaturetoken",4]],["type",4]]],[11,"globalize_signatures","","Globalizes a list of signatures.",34,[[],[["type",4],["vec",3]]]],[11,"get_type_actuals","","Gets a list of type actuals associated with the index in …",34,[[["option",4],["signatureindex",3]],[["type",4],["vec",3]]]],[11,"get_constant","","Retrieve a constant from the pool",34,[[["constantpoolindex",3]],["vmconstant",3]]],[11,"get_constant_value","","Converts a constant to the specified type. The type must …",34,[[["vmconstant",3]],["movevalue",4]]],[11,"self_address","","Return the <code>AccountAdress</code> of this module",34,[[],["accountaddress",3]]],[11,"get_address_identifier","","Retrieve an address identifier from the pool",34,[[["addressidentifierindex",3]],["biguint",3]]],[11,"addr_to_big_uint","","Converts an address identifier to a number representing …",34,[[["accountaddress",3]],["biguint",3]]],[11,"get_spec_vars","","Returns specification variables of this module.",34,[[]]],[11,"get_spec_var","","Gets spec var by id.",34,[[["specvarid",3]],["specvardecl",3]]],[11,"find_spec_var","","Find spec var by name.",34,[[["symbol",3]],[["option",4],["specvardecl",3]]]],[11,"get_spec_funs","","Returns specification functions of this module.",34,[[]]],[11,"get_spec_fun","","Gets spec fun by id.",34,[[["specfunid",3]],["specfundecl",3]]],[11,"get_spec","","Gets module specification.",34,[[],["spec",3]]],[11,"spec_fun_is_used","","Returns whether a spec fun is ever called or not.",34,[[["specfunid",3]]]],[11,"get_spec_funs_of_name","","Get all spec fun overloads with the given name.",34,[[["symbol",3]]]],[3,"StructData","","Struct Environment",null,null],[3,"StructEnv","","",null,null],[12,"module_env","","Reference to enclosing module.",35,null],[11,"get_name","","Returns the name of this struct.",35,[[],["symbol",3]]],[11,"get_full_name_str","","Gets full name as string.",35,[[],["string",3]]],[11,"get_identifier","","Returns the VM identifier for this struct",35,[[],["identifier",3]]],[11,"symbol_pool","","Shortcut for accessing the symbol pool.",35,[[],["symbolpool",3]]],[11,"get_loc","","Returns the location of this struct.",35,[[],["loc",3]]],[11,"get_doc","","Get documentation associated with this struct.",35,[[]]],[11,"get_properties","","Returns properties from pragmas.",35,[[],["propertybag",6]]],[11,"get_id","","Gets the id associated with this struct.",35,[[],["structid",3]]],[11,"get_qualified_id","","Gets the qualified id of this struct.",35,[[],[["qualifiedid",3],["structid",3]]]],[11,"is_native","","Determines whether this struct is native.",35,[[]]],[11,"is_vector","","Determines whether this struct is the well-known vector …",35,[[]]],[11,"is_resource","","Determines whether this struct is a resource type.",35,[[]]],[11,"get_fields","","Get an iterator for the fields, ordered by offset.",35,[[]]],[11,"get_field_count","","Return the number of fields in the struct.",35,[[]]],[11,"get_field","","Gets a field by its id.",35,[[["fieldid",3]],["fieldenv",3]]],[11,"find_field","","Find a field by its name.",35,[[["symbol",3]],[["fieldenv",3],["option",4]]]],[11,"get_field_by_offset","","Gets a field by its offset.",35,[[],["fieldenv",3]]],[11,"get_type_parameters","","Returns the type parameters associated with this struct.",35,[[],[["typeparameter",3],["vec",3]]]],[11,"get_named_type_parameters","","Returns the type parameters associated with this struct, …",35,[[],[["typeparameter",3],["vec",3]]]],[11,"has_conditions","","Returns true if this struct has specifcation conditions.",35,[[]]],[11,"get_spec","","Returns the data invariants associated with this struct.",35,[[],["spec",3]]],[3,"FieldData","","Field Environment",null,null],[3,"FieldEnv","","",null,null],[12,"struct_env","","Reference to enclosing struct.",36,null],[11,"get_name","","Gets the name of this field.",36,[[],["symbol",3]]],[11,"get_id","","Gets the id of this field.",36,[[],["fieldid",3]]],[11,"get_identifier","","Returns the VM identifier for this field",36,[[],["identifier",3]]],[11,"get_doc","","Get documentation associated with this field.",36,[[]]],[11,"get_type","","Gets the type of this field.",36,[[],["type",4]]],[11,"get_offset","","Get field offset.",36,[[]]],[3,"NamedConstantData","","Named Constant Environment",null,null],[3,"NamedConstantEnv","","",null,null],[12,"module_env","","Reference to enclosing module.",37,null],[11,"get_name","","Returns the name of this constant",37,[[],["symbol",3]]],[11,"get_id","","Returns the id of this constant",37,[[],["namedconstantid",3]]],[11,"get_doc","","Returns documentation associated with this constant",37,[[]]],[11,"get_loc","","Returns the location of this constant",37,[[],["loc",3]]],[11,"get_type","","Returns the type of the constant",37,[[],["type",4]]],[11,"get_value","","Returns the value of this constant",37,[[],["value",4]]],[3,"TypeParameter","","Function EnvironmentRepresents a type parameter.",null,null],[12,"0","","",38,null],[12,"1","","",38,null],[4,"TypeConstraint","","",null,null],[13,"None","","",39,null],[13,"Copyable","","",39,null],[13,"Resource","","",39,null],[3,"Parameter","","Represents a parameter.",null,null],[12,"0","","",40,null],[12,"1","","",40,null],[3,"FunctionData","","",null,null],[11,"stub","","",41,[[["functionhandleindex",3],["functiondefinitionindex",3],["symbol",3]]]],[3,"FunctionEnv","","",null,null],[12,"module_env","","Reference to enclosing module.",42,null],[11,"get_name","","Returns the name of this function.",42,[[],["symbol",3]]],[11,"get_full_name_str","","Gets full name as string.",42,[[],["string",3]]],[11,"get_identifier","","Returns the VM identifier for this function",42,[[],["identifier",3]]],[11,"get_id","","Gets the id of this function.",42,[[],["funid",3]]],[11,"get_qualified_id","","Gets the qualified id of this function.",42,[[],[["funid",3],["qualifiedid",3]]]],[11,"get_doc","","Get documentation associated with this function.",42,[[]]],[11,"get_def_idx","","Gets the definition index of this function.",42,[[],["functiondefinitionindex",3]]],[11,"symbol_pool","","Shortcut for accessing the symbol pool.",42,[[],["symbolpool",3]]],[11,"get_loc","","Returns the location of this function.",42,[[],["loc",3]]],[11,"get_spec_loc","","Returns the location of the specification block of this …",42,[[],["loc",3]]],[11,"get_bytecode_loc","","Returns the location of the bytecode at the given offset.",42,[[],["loc",3]]],[11,"get_bytecode","","Returns the bytecode associated with this function.",42,[[]]],[11,"is_pragma_true","","Returns the value of a boolean pragma for this function. …",42,[[]]],[11,"is_pragma_false","","Returns true if the value of a boolean pragma for this …",42,[[]]],[11,"is_num_pragma_set","","Returns whether the value of a numeric pragma is …",42,[[]]],[11,"get_num_pragma","","Returns the value of a numeric pragma for this function. …",42,[[]]],[11,"get_ident_pragma","","Returns the value of a pragma representing an identifier …",42,[[],[["option",4],["rc",3]]]],[11,"get_func_env_from_pragma","","Returns the FunctionEnv of the function identified by the …",42,[[],[["option",4],["functionenv",3]]]],[11,"is_native","","Returns true if this function is native.",42,[[]]],[11,"is_intrinsic","","Returns true if this function has the pragma intrinsic …",42,[[]]],[11,"is_opaque","","Returns true if this function is opaque.",42,[[]]],[11,"is_public","","Returns true if this function is public.",42,[[]]],[11,"are_invariants_disabled_in_body","","Returns true if invariants are declared disabled in body …",42,[[]]],[11,"are_invariants_disabled_at_call","","Returns true if invariants are declared disabled in body …",42,[[]]],[11,"is_mutating","","Returns true if this function mutates any references …",42,[[]]],[11,"get_friend_name","","Returns the name of the friend(the only allowed caller) …",42,[[],[["option",4],["rc",3]]]],[11,"has_friend","","Returns true if a friend is specified for this function.",42,[[]]],[11,"get_friend_env","","Returns the FunctionEnv of the friend function if the …",42,[[],[["option",4],["functionenv",3]]]],[11,"get_transitive_friend","","Returns the FunctionEnv of the transitive friend of the …",42,[[],["functionenv",3]]],[11,"get_type_parameters","","Returns the type parameters associated with this function.",42,[[],[["typeparameter",3],["vec",3]]]],[11,"get_named_type_parameters","","Returns the type parameters with the real names.",42,[[],[["typeparameter",3],["vec",3]]]],[11,"get_parameter_count","","",42,[[]]],[11,"is_parameter","","Return <code>true</code> if idx is a formal parameter index",42,[[]]],[11,"get_parameters","","Returns the regular parameters associated with this …",42,[[],[["vec",3],["parameter",3]]]],[11,"get_return_types","","Returns return types of this function.",42,[[],[["type",4],["vec",3]]]],[11,"get_return_type","","Returns return type at given index.",42,[[],["type",4]]],[11,"get_return_count","","Returns the number of return values of this function.",42,[[]]],[11,"get_local_name","","Get the name to be used for a local. If the local is an …",42,[[],["symbol",3]]],[11,"is_temporary","","Returns true if the index is for a temporary, not user …",42,[[]]],[11,"get_local_count","","Gets the number of proper locals of this function. Those …",42,[[]]],[11,"get_local_type","","Gets the type of the local at index. This must use an …",42,[[],["type",4]]],[11,"get_spec","","Returns associated specification.",42,[[],["spec",3]]],[11,"get_acquires_global_resources","","Returns the acquired global resource types.",42,[[],[["vec",3],["structid",3]]]],[11,"get_modify_targets","","Computes the modified targets of the spec clause, as a …",42,[[],[["btreemap",3],["qualifiedid",3],["vec",3]]]],[11,"should_verify","","Determine whether the function is target of verification.",42,[[["verificationscope",4]]]],[11,"is_explicitly_not_verified","","Determine whether this function is explicitly deactivated …",42,[[]]],[11,"get_calling_functions","","Get the functions that call this one",42,[[],[["btreeset",3],["qualifiedid",3]]]],[11,"get_called_functions","","Get the functions that this one calls",42,[[],[["btreeset",3],["qualifiedid",3]]]],[11,"get_simple_name_string","","Returns the function name excluding the address and the …",42,[[],[["string",3],["rc",3]]]],[11,"get_name_string","","Returns the function name with the module name excluding …",42,[[],["rc",3]]],[3,"LocDisplay","","Formatting",null,null],[11,"display","","",19,[[["globalenv",3]],["locdisplay",3]]],[11,"display_line_only","","",19,[[["globalenv",3]],["locdisplay",3]]],[0,"pragmas","move_model","Provides pragmas and properties of the specification …",null,null],[17,"VERIFY_PRAGMA","move_model::pragmas","Pragma indicating whether verification should be …",null,null],[17,"TIMEOUT_PRAGMA","","Pragma defining a timeout.",null,null],[17,"SEED_PRAGMA","","Pragma defining a random seed.",null,null],[17,"VERIFY_DURATION_ESTIMATE_PRAGMA","","Pragma indicating an estimate how long verification …",null,null],[17,"INTRINSIC_PRAGMA","","Pragma indicating whether implementation of function …",null,null],[17,"OPAQUE_PRAGMA","","Pragma indicating whether implementation of function …",null,null],[17,"EMITS_IS_PARTIAL_PRAGMA","","Pragma indicating whether emits specification should be …",null,null],[17,"EMITS_IS_STRICT_PRAGMA","","Pragma indicating whether no emits specification should …",null,null],[17,"ABORTS_IF_IS_PARTIAL_PRAGMA","","Pragma indicating whether aborts_if specification should …",null,null],[17,"ABORTS_IF_IS_STRICT_PRAGMA","","Pragma indicating whether no explicit aborts_if …",null,null],[17,"REQUIRES_IF_ABORTS_PRAGMA","","Pragma indicating that requires are also enforced if the …",null,null],[17,"ALWAYS_ABORTS_TEST_PRAGMA","","Pragma indicating that the function will run smoke tests",null,null],[17,"ADDITION_OVERFLOW_UNCHECKED_PRAGMA","","Pragma indicating that adding u64 or u128 values should …",null,null],[17,"ASSUME_NO_ABORT_FROM_HERE_PRAGMA","","Pragma indicating that aborts from this function shall be …",null,null],[17,"EXPORT_ENSURES_PRAGMA","","Pragma which indicates that the function\'s abort and …",null,null],[17,"FRIEND_PRAGMA","","Pragma indicating that the function can only be called …",null,null],[17,"DISABLE_INVARIANTS_IN_BODY_PRAGMA","","Pragma indicating that invariants are not to be checked …",null,null],[17,"DELEGATE_INVARIANTS_TO_CALLER_PRAGMA","","Pragma indicating that invariants are not to be checked …",null,null],[5,"is_pragma_valid_for_block","","Checks whether a pragma is valid in a specific spec block.",null,[[["specblockcontext",4]]]],[17,"CONDITION_INJECTED_PROP","","Internal property attached to conditions if they are …",null,null],[17,"CONDITION_EXPORT_PROP","","Property which can be attached to conditions to make them …",null,null],[17,"CONDITION_GLOBAL_PROP","","Property which can be attached to a module invariant to …",null,null],[17,"CONDITION_ISOLATED_PROP","","Property which can be attached to a global invariant to …",null,null],[17,"CONDITION_ABSTRACT_PROP","","Abstract property which can be used together with an …",null,null],[17,"CONDITION_CONCRETE_PROP","","Opposite to the abstract property.",null,null],[17,"CONDITION_ABORT_ASSUME_PROP","","Property which indicates that an aborts_if should be …",null,null],[17,"CONDITION_ABORT_ASSERT_PROP","","Property which indicates that an aborts_if should be …",null,null],[17,"CONDITION_DEACTIVATED_PROP","","A property which can be attached to any condition to …",null,null],[17,"CONDITION_CHECK_ABORT_CODES_PROP","","A property which can be attached to an aborts_with to …",null,null],[5,"is_property_valid_for_condition","","A function which determines whether a property is valid …",null,[[["conditionkind",4]]]],[0,"symbol","move_model","Contains definitions of symbols -- internalized strings …",null,null],[3,"Symbol","move_model::symbol","Representation of a symbol.",null,null],[11,"display","","",43,[[["symbolpool",3]],["symboldisplay",3]]],[3,"SymbolDisplay","","A helper to support symbols in formatting.",null,null],[3,"SymbolPool","","A pool of symbols. Allows to lookup a symbol by a string …",null,null],[11,"new","","Creates a new SymbolPool.",44,[[],["symbolpool",3]]],[11,"make","","Looks up a symbol by its string representation. If a …",44,[[],["symbol",3]]],[11,"string","","Returns the string representation of this symbol, as an …",44,[[["symbol",3]],[["string",3],["rc",3]]]],[0,"ty","move_model","Contains types and related functions.",null,null],[4,"Type","move_model::ty","Represents a type.",null,null],[13,"Primitive","","",45,null],[13,"Tuple","","",45,null],[13,"Vector","","",45,null],[13,"Struct","","",45,null],[13,"TypeParameter","","",45,null],[13,"Reference","","",45,null],[13,"Fun","","",45,null],[13,"TypeDomain","","",45,null],[13,"ResourceDomain","","",45,null],[13,"TypeLocal","","",45,null],[13,"Error","","",45,null],[13,"Var","","",45,null],[17,"BOOL_TYPE","","",null,null],[17,"NUM_TYPE","","",null,null],[4,"PrimitiveType","","Represents a primitive (builtin) type.",null,null],[13,"Bool","","",46,null],[13,"U8","","",46,null],[13,"U64","","",46,null],[13,"U128","","",46,null],[13,"Address","","",46,null],[13,"Signer","","",46,null],[13,"Num","","",46,null],[13,"Range","","",46,null],[13,"TypeValue","","",46,null],[13,"EventStore","","",46,null],[3,"Substitution","","A type substitution.",null,null],[3,"TypeError","","Represents an type error resulting from unification.",null,null],[12,"message","","",47,null],[11,"is_spec","","Returns true if this type is a specification language …",46,[[]]],[11,"into_type_tag","","Attempt to convert this type into a …",46,[[],[["option",4],["typetag",4]]]],[11,"new_prim","","",45,[[["primitivetype",4]],["type",4]]],[11,"is_reference","","Determines whether this is a reference.",45,[[]]],[11,"is_mutable_reference","","Determines whether this is a mutable reference.",45,[[]]],[11,"is_immutable_reference","","Determines whether this is an immutable reference.",45,[[]]],[11,"is_struct","","Determines whether this type is a struct.",45,[[]]],[11,"is_struct_or_vector_of_struct","","Determines whether this is a struct, or a vector of …",45,[[]]],[11,"is_spec","","Returns true if this type is a specification language …",45,[[]]],[11,"is_number","","Returns true if this is any number type.",45,[[]]],[11,"skip_reference","","Skip reference type.",45,[[],["type",4]]],[11,"replace_struct_instantiation","","If this is a struct type, replace the type instantiation.",45,[[],["type",4]]],[11,"get_struct","","If this is a struct type, return the associated struct …",45,[[["globalenv",3]],["option",4]]],[11,"require_struct","","Require this to be a struct, if so extracts its content.",45,[[]]],[11,"instantiate","","Instantiates type parameters in this type.",45,[[],["type",4]]],[11,"contains","","Checks whether this type contains a type for which the …",45,[[]]],[11,"is_incomplete","","Returns true if this type is incomplete, i.e. contains …",45,[[]]],[11,"is_open","","Return true if this type contains free type variables",45,[[]]],[11,"module_usage","","Compute used modules in this type, adding them to the …",45,[[["btreeset",3]]]],[11,"into_struct_tag","","",45,[[["globalenv",3]],[["structtag",3],["option",4]]]],[11,"into_type_tag","","Attempt to convert this type into a …",45,[[["globalenv",3]],[["option",4],["typetag",4]]]],[11,"from_type_tag","","Create a <code>Type</code> from <code>t</code>",45,[[["globalenv",3],["typetag",4]]]],[11,"get_vars","","Get the unbound type variables in the type.",45,[[],["btreeset",3]]],[11,"new","","Creates a new substitution.",48,[[]]],[11,"bind","","Binds the type variables.",48,[[["type",4]]]],[11,"specialize","","Specializes the type, substituting all variables bound in …",48,[[["type",4]],["type",4]]],[11,"unify","","Unify two types, returning the unified type.",48,[[["typedisplaycontext",4],["type",4]],[["type",4],["result",4],["typeerror",3]]]],[4,"TypeDisplayContext","","Data providing context for displaying types.",null,null],[13,"WithoutEnv","","",49,null],[12,"symbol_pool","move_model::ty::TypeDisplayContext","",50,null],[12,"reverse_struct_table","","",50,null],[13,"WithEnv","move_model::ty","",49,null],[12,"env","move_model::ty::TypeDisplayContext","",51,null],[12,"type_param_names","","",51,null],[11,"symbol_pool","move_model::ty","",49,[[],["symbolpool",3]]],[3,"TypeDisplay","","Helper for type displays.",null,null],[11,"display","","",45,[[["typedisplaycontext",4]],["typedisplay",3]]],[5,"run_model_builder","move_model","",null,[[["option",4],["vec",3],["string",3]],[["result",6],["globalenv",3]]]],[5,"run_bytecode_model_builder","","Build a <code>GlobalEnv</code> from a collection of <code>CompiledModule</code>\'s. …",null,[[["compiledmodule",3],["vec",3]],[["result",6],["globalenv",3]]]],[14,"emit","","Macro to emit a simple or formatted string.",null,null],[14,"emitln","","Macro to emit a simple or formatted string followed by a …",null,null],[11,"from","move_model::ast","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"equivalent","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"equivalent","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"equivalent","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"equivalent","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"equivalent","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"equivalent","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"equivalent","","",14,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_string","","",52,[[],["string",3]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"equivalent","","",15,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_string","","",53,[[],["string",3]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_string","","",54,[[],["string",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_string","","",55,[[],["string",3]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","move_model::code_writer","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","move_model::exp_rewriter","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","move_model::model","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"equivalent","","",19,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"equivalent","","",29,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"equivalent","","",21,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"equivalent","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"equivalent","","",25,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"equivalent","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"equivalent","","",23,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"equivalent","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"equivalent","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"equivalent","","",28,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"equivalent","","",30,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"equivalent","","",20,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"test_only_hash","","",31,[[],["hashvalue",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"equivalent","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"equivalent","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_string","","",60,[[],["string",3]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"from","move_model::symbol","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"equivalent","","",43,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_string","","",61,[[],["string",3]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","move_model::ty","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"equivalent","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"equivalent","","",46,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_string","","",62,[[],["string",3]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"clone","move_model::ast","",1,[[],["specfundecl",3]]],[11,"clone","","",2,[[],["conditionkind",4]]],[11,"clone","","",3,[[],["quantkind",4]]],[11,"clone","","",4,[[],["condition",3]]],[11,"clone","","",5,[[],["propertyvalue",4]]],[11,"clone","","",6,[[],["spec",3]]],[11,"clone","","",7,[[],["specblockinfo",3]]],[11,"clone","","",8,[[],["specblocktarget",4]]],[11,"clone","","",9,[[],["globalinvariant",3]]],[11,"clone","","",10,[[],["exp",4]]],[11,"clone","","",11,[[],["operation",4]]],[11,"clone","","",12,[[],["localvardecl",3]]],[11,"clone","","",13,[[],["value",4]]],[11,"clone","","",14,[[],["modulename",3]]],[11,"clone","","",15,[[],["qualifiedsymbol",3]]],[11,"clone","move_model::code_writer","",56,[[],["codewriterlabel",3]]],[11,"clone","move_model::model","",19,[[],["loc",3]]],[11,"clone","","",29,[[],["moduleid",3]]],[11,"clone","","",21,[[],["namedconstantid",3]]],[11,"clone","","",24,[[],["structid",3]]],[11,"clone","","",25,[[],["fieldid",3]]],[11,"clone","","",22,[[],["funid",3]]],[11,"clone","","",23,[[],["schemaid",3]]],[11,"clone","","",26,[[],["specfunid",3]]],[11,"clone","","",27,[[],["specvarid",3]]],[11,"clone","","",28,[[],["nodeid",3]]],[11,"clone","","",30,[[],["globalid",3]]],[11,"clone","","",20,[[],["qualifiedid",3]]],[11,"clone","","",31,[[],["verificationscope",4]]],[11,"clone","","",34,[[],["moduleenv",3]]],[11,"clone","","",35,[[],["structenv",3]]],[11,"clone","","",38,[[],["typeparameter",3]]],[11,"clone","","",39,[[],["typeconstraint",4]]],[11,"clone","","",40,[[],["parameter",3]]],[11,"clone","","",42,[[],["functionenv",3]]],[11,"clone","move_model::symbol","",43,[[],["symbol",3]]],[11,"clone","move_model::ty","",45,[[],["type",4]]],[11,"clone","","",46,[[],["primitivetype",4]]],[11,"clone","","",48,[[],["substitution",3]]],[11,"default","move_model::ast","",6,[[],["spec",3]]],[11,"default","move_model::model","",19,[[]]],[11,"default","","",31,[[]]],[11,"default","","",32,[[]]],[11,"default","move_model::symbol","",44,[[]]],[11,"default","move_model::ty","",48,[[]]],[11,"cmp","move_model::ast","",8,[[["specblocktarget",4]],["ordering",4]]],[11,"cmp","","",14,[[["modulename",3]],["ordering",4]]],[11,"cmp","","",15,[[["qualifiedsymbol",3]],["ordering",4]]],[11,"cmp","move_model::model","",19,[[["loc",3]],["ordering",4]]],[11,"cmp","","",29,[[["moduleid",3]],["ordering",4]]],[11,"cmp","","",21,[[["namedconstantid",3]],["ordering",4]]],[11,"cmp","","",24,[[["structid",3]],["ordering",4]]],[11,"cmp","","",25,[[["fieldid",3]],["ordering",4]]],[11,"cmp","","",22,[[["funid",3]],["ordering",4]]],[11,"cmp","","",23,[[["schemaid",3]],["ordering",4]]],[11,"cmp","","",26,[[["specfunid",3]],["ordering",4]]],[11,"cmp","","",27,[[["specvarid",3]],["ordering",4]]],[11,"cmp","","",28,[[["nodeid",3]],["ordering",4]]],[11,"cmp","","",30,[[["globalid",3]],["ordering",4]]],[11,"cmp","","",20,[[["qualifiedid",3]],["ordering",4]]],[11,"cmp","","",38,[[["typeparameter",3]],["ordering",4]]],[11,"cmp","","",39,[[["typeconstraint",4]],["ordering",4]]],[11,"cmp","move_model::symbol","",43,[[["symbol",3]],["ordering",4]]],[11,"cmp","move_model::ty","",45,[[["type",4]],["ordering",4]]],[11,"cmp","","",46,[[["primitivetype",4]],["ordering",4]]],[11,"eq","move_model::ast","",2,[[["conditionkind",4]]]],[11,"ne","","",2,[[["conditionkind",4]]]],[11,"eq","","",3,[[["quantkind",4]]]],[11,"eq","","",8,[[["specblocktarget",4]]]],[11,"ne","","",8,[[["specblocktarget",4]]]],[11,"eq","","",10,[[["exp",4]]]],[11,"ne","","",10,[[["exp",4]]]],[11,"eq","","",11,[[["operation",4]]]],[11,"ne","","",11,[[["operation",4]]]],[11,"eq","","",12,[[["localvardecl",3]]]],[11,"ne","","",12,[[["localvardecl",3]]]],[11,"eq","","",13,[[["value",4]]]],[11,"ne","","",13,[[["value",4]]]],[11,"eq","","",14,[[["modulename",3]]]],[11,"ne","","",14,[[["modulename",3]]]],[11,"eq","","",15,[[["qualifiedsymbol",3]]]],[11,"ne","","",15,[[["qualifiedsymbol",3]]]],[11,"eq","move_model::model","",19,[[["loc",3]]]],[11,"ne","","",19,[[["loc",3]]]],[11,"eq","","",29,[[["moduleid",3]]]],[11,"ne","","",29,[[["moduleid",3]]]],[11,"eq","","",21,[[["namedconstantid",3]]]],[11,"ne","","",21,[[["namedconstantid",3]]]],[11,"eq","","",24,[[["structid",3]]]],[11,"ne","","",24,[[["structid",3]]]],[11,"eq","","",25,[[["fieldid",3]]]],[11,"ne","","",25,[[["fieldid",3]]]],[11,"eq","","",22,[[["funid",3]]]],[11,"ne","","",22,[[["funid",3]]]],[11,"eq","","",23,[[["schemaid",3]]]],[11,"ne","","",23,[[["schemaid",3]]]],[11,"eq","","",26,[[["specfunid",3]]]],[11,"ne","","",26,[[["specfunid",3]]]],[11,"eq","","",27,[[["specvarid",3]]]],[11,"ne","","",27,[[["specvarid",3]]]],[11,"eq","","",28,[[["nodeid",3]]]],[11,"ne","","",28,[[["nodeid",3]]]],[11,"eq","","",30,[[["globalid",3]]]],[11,"ne","","",30,[[["globalid",3]]]],[11,"eq","","",20,[[["qualifiedid",3]]]],[11,"ne","","",20,[[["qualifiedid",3]]]],[11,"eq","","",31,[[["verificationscope",4]]]],[11,"eq","","",38,[[["typeparameter",3]]]],[11,"ne","","",38,[[["typeparameter",3]]]],[11,"eq","","",39,[[["typeconstraint",4]]]],[11,"eq","move_model::symbol","",43,[[["symbol",3]]]],[11,"ne","","",43,[[["symbol",3]]]],[11,"eq","move_model::ty","",45,[[["type",4]]]],[11,"ne","","",45,[[["type",4]]]],[11,"eq","","",46,[[["primitivetype",4]]]],[11,"partial_cmp","move_model::ast","",8,[[["specblocktarget",4]],[["option",4],["ordering",4]]]],[11,"lt","","",8,[[["specblocktarget",4]]]],[11,"le","","",8,[[["specblocktarget",4]]]],[11,"gt","","",8,[[["specblocktarget",4]]]],[11,"ge","","",8,[[["specblocktarget",4]]]],[11,"partial_cmp","","",14,[[["modulename",3]],[["option",4],["ordering",4]]]],[11,"lt","","",14,[[["modulename",3]]]],[11,"le","","",14,[[["modulename",3]]]],[11,"gt","","",14,[[["modulename",3]]]],[11,"ge","","",14,[[["modulename",3]]]],[11,"partial_cmp","","",15,[[["qualifiedsymbol",3]],[["option",4],["ordering",4]]]],[11,"lt","","",15,[[["qualifiedsymbol",3]]]],[11,"le","","",15,[[["qualifiedsymbol",3]]]],[11,"gt","","",15,[[["qualifiedsymbol",3]]]],[11,"ge","","",15,[[["qualifiedsymbol",3]]]],[11,"partial_cmp","move_model::model","",19,[[["loc",3]],[["option",4],["ordering",4]]]],[11,"lt","","",19,[[["loc",3]]]],[11,"le","","",19,[[["loc",3]]]],[11,"gt","","",19,[[["loc",3]]]],[11,"ge","","",19,[[["loc",3]]]],[11,"partial_cmp","","",29,[[["moduleid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",29,[[["moduleid",3]]]],[11,"le","","",29,[[["moduleid",3]]]],[11,"gt","","",29,[[["moduleid",3]]]],[11,"ge","","",29,[[["moduleid",3]]]],[11,"partial_cmp","","",21,[[["namedconstantid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",21,[[["namedconstantid",3]]]],[11,"le","","",21,[[["namedconstantid",3]]]],[11,"gt","","",21,[[["namedconstantid",3]]]],[11,"ge","","",21,[[["namedconstantid",3]]]],[11,"partial_cmp","","",24,[[["structid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",24,[[["structid",3]]]],[11,"le","","",24,[[["structid",3]]]],[11,"gt","","",24,[[["structid",3]]]],[11,"ge","","",24,[[["structid",3]]]],[11,"partial_cmp","","",25,[[["fieldid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",25,[[["fieldid",3]]]],[11,"le","","",25,[[["fieldid",3]]]],[11,"gt","","",25,[[["fieldid",3]]]],[11,"ge","","",25,[[["fieldid",3]]]],[11,"partial_cmp","","",22,[[["funid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",22,[[["funid",3]]]],[11,"le","","",22,[[["funid",3]]]],[11,"gt","","",22,[[["funid",3]]]],[11,"ge","","",22,[[["funid",3]]]],[11,"partial_cmp","","",23,[[["schemaid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",23,[[["schemaid",3]]]],[11,"le","","",23,[[["schemaid",3]]]],[11,"gt","","",23,[[["schemaid",3]]]],[11,"ge","","",23,[[["schemaid",3]]]],[11,"partial_cmp","","",26,[[["specfunid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",26,[[["specfunid",3]]]],[11,"le","","",26,[[["specfunid",3]]]],[11,"gt","","",26,[[["specfunid",3]]]],[11,"ge","","",26,[[["specfunid",3]]]],[11,"partial_cmp","","",27,[[["specvarid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",27,[[["specvarid",3]]]],[11,"le","","",27,[[["specvarid",3]]]],[11,"gt","","",27,[[["specvarid",3]]]],[11,"ge","","",27,[[["specvarid",3]]]],[11,"partial_cmp","","",28,[[["nodeid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",28,[[["nodeid",3]]]],[11,"le","","",28,[[["nodeid",3]]]],[11,"gt","","",28,[[["nodeid",3]]]],[11,"ge","","",28,[[["nodeid",3]]]],[11,"partial_cmp","","",30,[[["globalid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",30,[[["globalid",3]]]],[11,"le","","",30,[[["globalid",3]]]],[11,"gt","","",30,[[["globalid",3]]]],[11,"ge","","",30,[[["globalid",3]]]],[11,"partial_cmp","","",20,[[["qualifiedid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",20,[[["qualifiedid",3]]]],[11,"le","","",20,[[["qualifiedid",3]]]],[11,"gt","","",20,[[["qualifiedid",3]]]],[11,"ge","","",20,[[["qualifiedid",3]]]],[11,"partial_cmp","","",38,[[["typeparameter",3]],[["option",4],["ordering",4]]]],[11,"lt","","",38,[[["typeparameter",3]]]],[11,"le","","",38,[[["typeparameter",3]]]],[11,"gt","","",38,[[["typeparameter",3]]]],[11,"ge","","",38,[[["typeparameter",3]]]],[11,"partial_cmp","","",39,[[["typeconstraint",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","move_model::symbol","",43,[[["symbol",3]],[["option",4],["ordering",4]]]],[11,"lt","","",43,[[["symbol",3]]]],[11,"le","","",43,[[["symbol",3]]]],[11,"gt","","",43,[[["symbol",3]]]],[11,"ge","","",43,[[["symbol",3]]]],[11,"partial_cmp","move_model::ty","",45,[[["type",4]],[["option",4],["ordering",4]]]],[11,"lt","","",45,[[["type",4]]]],[11,"le","","",45,[[["type",4]]]],[11,"gt","","",45,[[["type",4]]]],[11,"ge","","",45,[[["type",4]]]],[11,"partial_cmp","","",46,[[["primitivetype",4]],[["option",4],["ordering",4]]]],[11,"fmt","move_model::ast","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","move_model::code_writer","",56,[[["formatter",3]],["result",6]]],[11,"fmt","move_model::model","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","move_model::symbol","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","move_model::ty","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","move_model::ast","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",52,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",53,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",54,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",55,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","move_model","",63,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","move_model::model","",60,[[["formatter",3]],["result",6]]],[11,"fmt","move_model::symbol","",61,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","move_model::ty","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"hash","move_model::ast","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","move_model::model","",29,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",20,[[]]],[11,"hash","move_model::symbol","",43,[[]]],[11,"hash","move_model::ty","",45,[[]]],[11,"hash","","",46,[[]]],[11,"deserialize","move_model::model","",31,[[],["result",4]]],[11,"serialize","","",31,[[],["result",4]]]],"p":[[3,"SpecVarDecl"],[3,"SpecFunDecl"],[4,"ConditionKind"],[4,"QuantKind"],[3,"Condition"],[4,"PropertyValue"],[3,"Spec"],[3,"SpecBlockInfo"],[4,"SpecBlockTarget"],[3,"GlobalInvariant"],[4,"Exp"],[4,"Operation"],[3,"LocalVarDecl"],[4,"Value"],[3,"ModuleName"],[3,"QualifiedSymbol"],[3,"CodeWriter"],[4,"RewriteTarget"],[3,"ExpRewriter"],[3,"Loc"],[3,"QualifiedId"],[3,"NamedConstantId"],[3,"FunId"],[3,"SchemaId"],[3,"StructId"],[3,"FieldId"],[3,"SpecFunId"],[3,"SpecVarId"],[3,"NodeId"],[3,"ModuleId"],[3,"GlobalId"],[4,"VerificationScope"],[3,"GlobalEnv"],[3,"ModuleData"],[3,"ModuleEnv"],[3,"StructEnv"],[3,"FieldEnv"],[3,"NamedConstantEnv"],[3,"TypeParameter"],[4,"TypeConstraint"],[3,"Parameter"],[3,"FunctionData"],[3,"FunctionEnv"],[3,"Symbol"],[3,"SymbolPool"],[4,"Type"],[4,"PrimitiveType"],[3,"TypeError"],[3,"Substitution"],[4,"TypeDisplayContext"],[13,"WithoutEnv"],[13,"WithEnv"],[3,"ModuleNameDisplay"],[3,"QualifiedSymbolDisplay"],[3,"ExpDisplay"],[3,"OperationDisplay"],[3,"CodeWriterLabel"],[3,"StructData"],[3,"FieldData"],[3,"NamedConstantData"],[3,"LocDisplay"],[3,"SymbolDisplay"],[3,"TypeDisplay"],[6,"MemoryLabel"]]},\
"move_prover":{"doc":"","i":[[0,"cli","move_prover","Functionality related to the command line interface of …",null,null],[17,"INLINE_PRELUDE","move_prover::cli","Represents the virtual path to the boogie prelude which …",null,null],[3,"Options","","Represents options provided to the tool. Most of those …",null,null],[12,"prelude_path","","Path to the boogie prelude. The special string …",0,null],[12,"output_path","","The path to the boogie output which represents the …",0,null],[12,"verbosity_level","","Verbosity level for logging.",0,null],[12,"run_docgen","","Whether to run the documentation generator instead of the …",0,null],[12,"run_abigen","","Whether to run the ABI generator instead of the prover.",0,null],[12,"run_errmapgen","","Whether to run the error map generator instead of the …",0,null],[12,"run_read_write_set","","Whether to run the read write set analysis instead of the …",0,null],[12,"account_address","","An account address to use if none is specified in the …",0,null],[12,"move_sources","","The paths to the Move sources.",0,null],[12,"move_deps","","The paths to any dependencies for the Move sources. Those …",0,null],[12,"prover","","Options for the prover.",0,null],[12,"backend","","Options for the prover backend.",0,null],[12,"inv_v2","","Whether to use the v2 invariant scheme.",0,null],[12,"docgen","","Options for the documentation generator.",0,null],[12,"abigen","","Options for the ABI generator.",0,null],[12,"errmapgen","","Options for the error map generator. TODO: this currently …",0,null],[12,"experimental_pipeline","","Whether to run experimental pipeline",0,null],[12,"strong_edges","","Whether to use strong edges in borrow analtsis",0,null],[7,"DEFAULT_OPTIONS","","",null,null],[11,"create_from_toml","","Creates options from toml configuration source.",0,[[],[["result",6],["options",3]]]],[11,"create_from_toml_file","","Creates options from toml configuration file.",0,[[],[["result",6],["options",3]]]],[11,"create_from_args","","",0,[[],[["result",6],["options",3]]]],[11,"setup_logging","","Sets up logging based on provided options. This should be …",0,[[]]],[11,"setup_logging_for_test","","",0,[[]]],[11,"enable_debug","","Convenience function to enable debugging (like high …",0,[[]]],[5,"run_move_prover","move_prover","",null,[[["options",3]],["result",6]]],[5,"run_move_prover_errors_to_stderr","","",null,[[["options",3]],["result",6]]],[11,"from","move_prover::cli","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"clone","","",0,[[],["options",3]]],[11,"default","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]]],"p":[[3,"Options"]]},\
"move_prover_test_utils":{"doc":"","i":[[0,"baseline_test","move_prover_test_utils","A module supporting baseline (golden) tests.",null,null],[5,"verify_or_update_baseline","move_prover_test_utils::baseline_test","Verifies or updates baseline file for the given generated …",null,[[["path",3]],["result",6]]],[17,"DEFAULT_SENDER","move_prover_test_utils","",null,null],[5,"read_env_var","","",null,[[],["string",3]]],[5,"read_bool_env_var","","",null,[[]]],[5,"extract_test_directives","","",null,[[["path",3]],[["result",6],["vec",3]]]]],"p":[]},\
"move_vm_integration_tests":{"doc":"","i":[],"p":[]},\
"move_vm_natives":{"doc":"","i":[[0,"account","move_vm_natives","",null,null],[5,"native_create_signer","move_vm_natives::account","",null,[[["value",3],["vecdeque",3],["type",4],["vec",3]],[["nativeresult",3],["partialvmresult",6]]]],[5,"native_destroy_signer","","",null,[[["value",3],["vecdeque",3],["type",4],["vec",3]],[["nativeresult",3],["partialvmresult",6]]]],[0,"bcs","move_vm_natives","",null,null],[5,"native_to_bytes","move_vm_natives::bcs","Rust implementation of Move\'s …",null,[[["value",3],["vecdeque",3],["type",4],["vec",3]],[["nativeresult",3],["partialvmresult",6]]]],[0,"debug","move_vm_natives","",null,null],[5,"native_print","move_vm_natives::debug","",null,[[["value",3],["vecdeque",3],["type",4],["vec",3]],[["nativeresult",3],["partialvmresult",6]]]],[5,"native_print_stack_trace","","",null,[[["value",3],["vecdeque",3],["type",4],["vec",3]],[["nativeresult",3],["partialvmresult",6]]]],[0,"event","move_vm_natives","",null,null],[5,"native_emit_event","move_vm_natives::event","",null,[[["value",3],["vecdeque",3],["type",4],["vec",3]],[["nativeresult",3],["partialvmresult",6]]]],[0,"hash","move_vm_natives","",null,null],[5,"native_sha2_256","move_vm_natives::hash","",null,[[["value",3],["vecdeque",3],["type",4],["vec",3]],[["nativeresult",3],["partialvmresult",6]]]],[5,"native_sha3_256","","",null,[[["value",3],["vecdeque",3],["type",4],["vec",3]],[["nativeresult",3],["partialvmresult",6]]]],[0,"signature","move_vm_natives","",null,null],[5,"native_ed25519_publickey_validation","move_vm_natives::signature","",null,[[["value",3],["vecdeque",3],["type",4],["vec",3]],[["nativeresult",3],["partialvmresult",6]]]],[5,"native_ed25519_signature_verification","","",null,[[["value",3],["vecdeque",3],["type",4],["vec",3]],[["nativeresult",3],["partialvmresult",6]]]],[0,"signer","move_vm_natives","",null,null],[5,"native_borrow_address","move_vm_natives::signer","",null,[[["value",3],["vecdeque",3],["type",4],["vec",3]],[["nativeresult",3],["partialvmresult",6]]]],[0,"vector","move_vm_natives","",null,null],[5,"native_empty","move_vm_natives::vector","",null,[[["value",3],["vecdeque",3],["type",4],["vec",3]],[["nativeresult",3],["partialvmresult",6]]]],[5,"native_length","","",null,[[["value",3],["vecdeque",3],["type",4],["vec",3]],[["nativeresult",3],["partialvmresult",6]]]],[5,"native_push_back","","",null,[[["value",3],["vecdeque",3],["type",4],["vec",3]],[["nativeresult",3],["partialvmresult",6]]]],[5,"native_borrow","","",null,[[["value",3],["vecdeque",3],["type",4],["vec",3]],[["nativeresult",3],["partialvmresult",6]]]],[5,"native_pop","","",null,[[["value",3],["vecdeque",3],["type",4],["vec",3]],[["nativeresult",3],["partialvmresult",6]]]],[5,"native_destroy_empty","","",null,[[["value",3],["vecdeque",3],["type",4],["vec",3]],[["nativeresult",3],["partialvmresult",6]]]],[5,"native_swap","","",null,[[["value",3],["vecdeque",3],["type",4],["vec",3]],[["nativeresult",3],["partialvmresult",6]]]]],"p":[]},\
"move_vm_runtime":{"doc":"The core Move VM logic.","i":[[0,"data_cache","move_vm_runtime","",null,null],[8,"RemoteCache","move_vm_runtime::data_cache","Trait for the Move VM to abstract storage operations.",null,null],[10,"get_module","","",0,[[["moduleid",3]],[["option",4],["vmresult",6]]]],[10,"get_resource","","",0,[[["structtag",3],["accountaddress",3]],[["option",4],["partialvmresult",6]]]],[3,"AccountDataCache","","",null,null],[0,"logging","move_vm_runtime","",null,null],[8,"LogContext","move_vm_runtime::logging","",null,null],[10,"alert","","",1,[[]]],[3,"NoContextLog","","",null,null],[11,"name","","",2,[[["string",3]]]],[11,"new","","",2,[[]]],[5,"expect_no_verification_errors","","",null,[[["vmerror",3]],["vmerror",3]]],[0,"move_vm","move_vm_runtime","",null,null],[3,"MoveVM","move_vm_runtime::move_vm","",null,null],[11,"new","","",3,[[]]],[11,"new_session","","Create a new Session backed by the given storage.",3,[[],[["session",3],["remotecache",8]]]],[0,"session","move_vm_runtime","",null,null],[3,"Session","move_vm_runtime::session","",null,null],[11,"execute_function","","Execute a Move function with the given arguments. This is …",4,[[["vec",3],["moduleid",3],["vec",3],["coststrategy",3],["identstr",3],["typetag",4],["vec",3]],[["vmresult",6],["vec",3]]]],[11,"execute_script_function","","Execute a Move script function with the given arguments.",4,[[["moduleid",3],["vec",3],["identstr",3],["typetag",4],["vec",3],["vec",3],["coststrategy",3],["vec",3],["accountaddress",3]],[["vmresult",6],["vec",3]]]],[11,"execute_script","","Execute a transaction script.",4,[[["vec",3],["vec",3],["vec",3],["coststrategy",3],["typetag",4],["vec",3],["accountaddress",3]],["vmresult",6]]],[11,"publish_module","","Publish the given module.",4,[[["vec",3],["coststrategy",3],["accountaddress",3]],["vmresult",6]]],[11,"num_mutated_accounts","","",4,[[["accountaddress",3]]]],[11,"finish","","Finish up the session and produce the side effects.",4,[[],["vmresult",6]]],[14,"trace","move_vm_runtime","",null,null],[11,"from","move_vm_runtime::data_cache","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","move_vm_runtime::logging","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","move_vm_runtime::move_vm","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","move_vm_runtime::session","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"alert","move_vm_runtime::logging","",2,[[]]],[11,"clone","","",2,[[],["nocontextlog",3]]],[11,"visit","","",2,[[["visitor",8]]]]],"p":[[8,"RemoteCache"],[8,"LogContext"],[3,"NoContextLog"],[3,"MoveVM"],[3,"Session"],[3,"AccountDataCache"]]},\
"move_vm_test_utils":{"doc":"","i":[[3,"BlankStorage","move_vm_test_utils","A dummy storage containing no modules or resources.",null,null],[3,"DeltaStorage","","The new storage can be used for additional computations …",null,null],[3,"InMemoryStorage","","Simple in-memory storage that can be used as a Move VM …",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"clone","","",0,[[],["blankstorage",3]]],[11,"clone","","",1,[[],["deltastorage",3]]],[11,"clone","","",2,[[],["inmemorystorage",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"get_module","","",0,[[["moduleid",3]],[["option",4],["vmresult",6]]]],[11,"get_resource","","",0,[[["structtag",3],["accountaddress",3]],[["partialvmresult",6],["option",4]]]],[11,"get_module","","",1,[[["moduleid",3]],[["option",4],["vmresult",6]]]],[11,"get_resource","","",1,[[["structtag",3],["accountaddress",3]],[["partialvmresult",6],["option",4]]]],[11,"get_module","","",2,[[["moduleid",3]],[["option",4],["vmresult",6]]]],[11,"get_resource","","",2,[[["structtag",3],["accountaddress",3]],[["partialvmresult",6],["option",4]]]],[11,"new","","",0,[[]]],[11,"new","","",1,[[["changeset",3]]]],[11,"apply","","",2,[[["changeset",3]],["result",6]]],[11,"new","","",2,[[]]],[11,"publish_or_overwrite_module","","",2,[[["vec",3],["moduleid",3]]]],[11,"publish_or_overwrite_resource","","",2,[[["vec",3],["accountaddress",3],["structtag",3]]]]],"p":[[3,"BlankStorage"],[3,"DeltaStorage"],[3,"InMemoryStorage"]]},\
"move_vm_types":{"doc":"","i":[[0,"data_store","move_vm_types","",null,null],[8,"DataStore","move_vm_types::data_store","Provide an implementation for bytecodes related to data …",null,null],[10,"load_resource","","Try to load a resource from remote storage and create a …",0,[[["accountaddress",3],["type",4]],[["partialvmresult",6],["globalvalue",3]]]],[10,"load_module","","Get the serialized format of a <code>CompiledModule</code> given a …",0,[[["moduleid",3]],[["vec",3],["vmresult",6]]]],[10,"publish_module","","Publish a module.",0,[[["moduleid",3],["vec",3]],["vmresult",6]]],[10,"exists_module","","Check if this module exists.",0,[[["moduleid",3]],["vmresult",6]]],[10,"emit_event","","Emit an event to the EventStore",0,[[["vec",3],["type",4],["value",3]],["partialvmresult",6]]],[0,"gas_schedule","move_vm_types","This module lays out the basic abstract costing schedule …",null,null],[3,"CostStrategy","move_vm_types::gas_schedule","The Move VM implementation for gas charging.",null,null],[11,"transaction","","A transaction <code>CostStrategy</code>. Charge for every operation …",1,[[["gascarrier",6],["costtable",3],["gasunits",3]]]],[11,"system","","A system <code>CostStrategy</code> does not charge for operations.",1,[[["gascarrier",6],["costtable",3],["gasunits",3]]]],[11,"cost_table","","Return the <code>CostTable</code> behind this <code>CostStrategy</code>.",1,[[],["costtable",3]]],[11,"remaining_gas","","Return the gas left.",1,[[],[["gascarrier",6],["gasunits",3]]]],[11,"deduct_gas","","Charge a given amount of gas and fail if not enough gas …",1,[[["gascarrier",6],["internalgasunits",3]],["partialvmresult",6]]],[11,"charge_instr_with_size","","Charge an instruction over data with a given size and …",1,[[["gascarrier",6],["opcodes",4],["abstractmemorysize",3]],["partialvmresult",6]]],[11,"charge_instr","","Charge an instruction and fail if not enough gas units …",1,[[["opcodes",4]],["partialvmresult",6]]],[11,"charge_intrinsic_gas","","Charge gas related to the overall size of a transaction …",1,[[["gascarrier",6],["abstractmemorysize",3]],["vmresult",6]]],[11,"disable_metering","","",1,[[]]],[11,"enable_metering","","",1,[[]]],[5,"new_from_instructions","","",null,[[["vec",3],["vec",3],["gascost",3]],["costtable",3]]],[5,"zero_cost_schedule","","",null,[[],["costtable",3]]],[5,"calculate_intrinsic_gas","","Calculate the intrinsic gas for the transaction based …",null,[[["gascarrier",6],["gasconstants",3],["abstractmemorysize",3]],[["gascarrier",6],["internalgasunits",3]]]],[4,"NativeCostIndex","","",null,null],[13,"SHA2_256","","",2,null],[13,"SHA3_256","","",2,null],[13,"ED25519_VERIFY","","",2,null],[13,"ED25519_THRESHOLD_VERIFY","","",2,null],[13,"BCS_TO_BYTES","","",2,null],[13,"LENGTH","","",2,null],[13,"EMPTY","","",2,null],[13,"BORROW","","",2,null],[13,"BORROW_MUT","","",2,null],[13,"PUSH_BACK","","",2,null],[13,"POP_BACK","","",2,null],[13,"DESTROY_EMPTY","","",2,null],[13,"SWAP","","",2,null],[13,"ED25519_VALIDATE_KEY","","",2,null],[13,"SIGNER_BORROW","","",2,null],[13,"CREATE_SIGNER","","",2,null],[13,"DESTROY_SIGNER","","",2,null],[13,"EMIT_EVENT","","",2,null],[0,"loaded_data","move_vm_types","Loaded definition of code data used in runtime.",null,null],[0,"runtime_types","move_vm_types::loaded_data","",null,null],[17,"TYPE_DEPTH_MAX","move_vm_types::loaded_data::runtime_types","",null,null],[3,"StructType","","",null,null],[12,"fields","","",3,null],[12,"abilities","","",3,null],[12,"type_parameters","","",3,null],[12,"name","","",3,null],[12,"module","","",3,null],[12,"struct_def","","",3,null],[4,"Type","","",null,null],[13,"Bool","","",4,null],[13,"U8","","",4,null],[13,"U64","","",4,null],[13,"U128","","",4,null],[13,"Address","","",4,null],[13,"Signer","","",4,null],[13,"Vector","","",4,null],[13,"Struct","","",4,null],[13,"StructInstantiation","","",4,null],[13,"Reference","","",4,null],[13,"MutableReference","","",4,null],[13,"TyParam","","",4,null],[11,"subst","","",4,[[],[["type",4],["partialvmresult",6]]]],[0,"natives","move_vm_types","",null,null],[0,"function","move_vm_types::natives","Native Function Support",null,null],[4,"StatusCode","move_vm_types::natives::function","We don\'t derive Arbitrary on this enum because it is too …",null,null],[13,"UNKNOWN_VALIDATION_STATUS","","",5,null],[13,"INVALID_SIGNATURE","","",5,null],[13,"INVALID_AUTH_KEY","","",5,null],[13,"SEQUENCE_NUMBER_TOO_OLD","","",5,null],[13,"SEQUENCE_NUMBER_TOO_NEW","","",5,null],[13,"INSUFFICIENT_BALANCE_FOR_TRANSACTION_FEE","","",5,null],[13,"TRANSACTION_EXPIRED","","",5,null],[13,"SENDING_ACCOUNT_DOES_NOT_EXIST","","",5,null],[13,"REJECTED_WRITE_SET","","",5,null],[13,"INVALID_WRITE_SET","","",5,null],[13,"EXCEEDED_MAX_TRANSACTION_SIZE","","",5,null],[13,"UNKNOWN_SCRIPT","","",5,null],[13,"UNKNOWN_MODULE","","",5,null],[13,"MAX_GAS_UNITS_EXCEEDS_MAX_GAS_UNITS_BOUND","","",5,null],[13,"MAX_GAS_UNITS_BELOW_MIN_TRANSACTION_GAS_UNITS","","",5,null],[13,"GAS_UNIT_PRICE_BELOW_MIN_BOUND","","",5,null],[13,"GAS_UNIT_PRICE_ABOVE_MAX_BOUND","","",5,null],[13,"INVALID_GAS_SPECIFIER","","",5,null],[13,"SENDING_ACCOUNT_FROZEN","","",5,null],[13,"UNABLE_TO_DESERIALIZE_ACCOUNT","","",5,null],[13,"CURRENCY_INFO_DOES_NOT_EXIST","","",5,null],[13,"INVALID_MODULE_PUBLISHER","","",5,null],[13,"NO_ACCOUNT_ROLE","","",5,null],[13,"BAD_CHAIN_ID","","",5,null],[13,"SEQUENCE_NUMBER_TOO_BIG","","",5,null],[13,"BAD_TRANSACTION_FEE_CURRENCY","","",5,null],[13,"UNKNOWN_VERIFICATION_ERROR","","",5,null],[13,"INDEX_OUT_OF_BOUNDS","","",5,null],[13,"INVALID_SIGNATURE_TOKEN","","",5,null],[13,"RECURSIVE_STRUCT_DEFINITION","","",5,null],[13,"FIELD_MISSING_TYPE_ABILITY","","",5,null],[13,"INVALID_FALL_THROUGH","","",5,null],[13,"NEGATIVE_STACK_SIZE_WITHIN_BLOCK","","",5,null],[13,"INVALID_MAIN_FUNCTION_SIGNATURE","","",5,null],[13,"DUPLICATE_ELEMENT","","",5,null],[13,"INVALID_MODULE_HANDLE","","",5,null],[13,"UNIMPLEMENTED_HANDLE","","",5,null],[13,"LOOKUP_FAILED","","",5,null],[13,"TYPE_MISMATCH","","",5,null],[13,"MISSING_DEPENDENCY","","",5,null],[13,"POP_WITHOUT_DROP_ABILITY","","",5,null],[13,"BR_TYPE_MISMATCH_ERROR","","",5,null],[13,"ABORT_TYPE_MISMATCH_ERROR","","",5,null],[13,"STLOC_TYPE_MISMATCH_ERROR","","",5,null],[13,"STLOC_UNSAFE_TO_DESTROY_ERROR","","",5,null],[13,"UNSAFE_RET_LOCAL_OR_RESOURCE_STILL_BORROWED","","",5,null],[13,"RET_TYPE_MISMATCH_ERROR","","",5,null],[13,"RET_BORROWED_MUTABLE_REFERENCE_ERROR","","",5,null],[13,"FREEZEREF_TYPE_MISMATCH_ERROR","","",5,null],[13,"FREEZEREF_EXISTS_MUTABLE_BORROW_ERROR","","",5,null],[13,"BORROWFIELD_TYPE_MISMATCH_ERROR","","",5,null],[13,"BORROWFIELD_BAD_FIELD_ERROR","","",5,null],[13,"BORROWFIELD_EXISTS_MUTABLE_BORROW_ERROR","","",5,null],[13,"COPYLOC_UNAVAILABLE_ERROR","","",5,null],[13,"COPYLOC_WITHOUT_COPY_ABILITY","","",5,null],[13,"COPYLOC_EXISTS_BORROW_ERROR","","",5,null],[13,"MOVELOC_UNAVAILABLE_ERROR","","",5,null],[13,"MOVELOC_EXISTS_BORROW_ERROR","","",5,null],[13,"BORROWLOC_REFERENCE_ERROR","","",5,null],[13,"BORROWLOC_UNAVAILABLE_ERROR","","",5,null],[13,"BORROWLOC_EXISTS_BORROW_ERROR","","",5,null],[13,"CALL_TYPE_MISMATCH_ERROR","","",5,null],[13,"CALL_BORROWED_MUTABLE_REFERENCE_ERROR","","",5,null],[13,"PACK_TYPE_MISMATCH_ERROR","","",5,null],[13,"UNPACK_TYPE_MISMATCH_ERROR","","",5,null],[13,"READREF_TYPE_MISMATCH_ERROR","","",5,null],[13,"READREF_WITHOUT_COPY_ABILITY","","",5,null],[13,"READREF_EXISTS_MUTABLE_BORROW_ERROR","","",5,null],[13,"WRITEREF_TYPE_MISMATCH_ERROR","","",5,null],[13,"WRITEREF_WITHOUT_DROP_ABILITY","","",5,null],[13,"WRITEREF_EXISTS_BORROW_ERROR","","",5,null],[13,"WRITEREF_NO_MUTABLE_REFERENCE_ERROR","","",5,null],[13,"INTEGER_OP_TYPE_MISMATCH_ERROR","","",5,null],[13,"BOOLEAN_OP_TYPE_MISMATCH_ERROR","","",5,null],[13,"EQUALITY_OP_TYPE_MISMATCH_ERROR","","",5,null],[13,"EXISTS_WITHOUT_KEY_ABILITY_OR_BAD_ARGUMENT","","",5,null],[13,"BORROWGLOBAL_TYPE_MISMATCH_ERROR","","",5,null],[13,"BORROWGLOBAL_WITHOUT_KEY_ABILITY","","",5,null],[13,"MOVEFROM_TYPE_MISMATCH_ERROR","","",5,null],[13,"MOVEFROM_WITHOUT_KEY_ABILITY","","",5,null],[13,"MOVETO_TYPE_MISMATCH_ERROR","","",5,null],[13,"MOVETO_WITHOUT_KEY_ABILITY","","",5,null],[13,"MODULE_ADDRESS_DOES_NOT_MATCH_SENDER","","",5,null],[13,"NO_MODULE_HANDLES","","",5,null],[13,"POSITIVE_STACK_SIZE_AT_BLOCK_END","","",5,null],[13,"MISSING_ACQUIRES_ANNOTATION","","",5,null],[13,"EXTRANEOUS_ACQUIRES_ANNOTATION","","",5,null],[13,"DUPLICATE_ACQUIRES_ANNOTATION","","",5,null],[13,"INVALID_ACQUIRES_ANNOTATION","","",5,null],[13,"GLOBAL_REFERENCE_ERROR","","",5,null],[13,"CONSTRAINT_NOT_SATISFIED","","",5,null],[13,"NUMBER_OF_TYPE_ARGUMENTS_MISMATCH","","",5,null],[13,"LOOP_IN_INSTANTIATION_GRAPH","","",5,null],[13,"ZERO_SIZED_STRUCT","","",5,null],[13,"LINKER_ERROR","","",5,null],[13,"INVALID_CONSTANT_TYPE","","",5,null],[13,"MALFORMED_CONSTANT_DATA","","",5,null],[13,"EMPTY_CODE_UNIT","","",5,null],[13,"INVALID_LOOP_SPLIT","","",5,null],[13,"INVALID_LOOP_BREAK","","",5,null],[13,"INVALID_LOOP_CONTINUE","","",5,null],[13,"UNSAFE_RET_UNUSED_VALUES_WITHOUT_DROP","","",5,null],[13,"TOO_MANY_LOCALS","","",5,null],[13,"GENERIC_MEMBER_OPCODE_MISMATCH","","",5,null],[13,"FUNCTION_RESOLUTION_FAILURE","","",5,null],[13,"INVALID_OPERATION_IN_SCRIPT","","",5,null],[13,"DUPLICATE_MODULE_NAME","","",5,null],[13,"BACKWARD_INCOMPATIBLE_MODULE_UPDATE","","",5,null],[13,"CYCLIC_MODULE_DEPENDENCY","","",5,null],[13,"NUMBER_OF_ARGUMENTS_MISMATCH","","",5,null],[13,"INVALID_PARAM_TYPE_FOR_DESERIALIZATION","","",5,null],[13,"FAILED_TO_DESERIALIZE_ARGUMENT","","",5,null],[13,"NUMBER_OF_SIGNER_ARGUMENTS_MISMATCH","","",5,null],[13,"CALLED_SCRIPT_VISIBLE_FROM_NON_SCRIPT_VISIBLE","","",5,null],[13,"EXECUTE_SCRIPT_FUNCTION_CALLED_ON_NON_SCRIPT_VISIBLE","","",5,null],[13,"INVALID_FRIEND_DECL_WITH_SELF","","",5,null],[13,"INVALID_FRIEND_DECL_WITH_MODULES_OUTSIDE_ACCOUNT_ADDRESS","","",5,null],[13,"INVALID_FRIEND_DECL_WITH_MODULES_IN_DEPENDENCIES","","",5,null],[13,"CYCLIC_MODULE_FRIENDSHIP","","",5,null],[13,"UNKNOWN_INVARIANT_VIOLATION_ERROR","","",5,null],[13,"EMPTY_VALUE_STACK","","",5,null],[13,"PC_OVERFLOW","","",5,null],[13,"VERIFICATION_ERROR","","",5,null],[13,"STORAGE_ERROR","","",5,null],[13,"INTERNAL_TYPE_ERROR","","",5,null],[13,"EVENT_KEY_MISMATCH","","",5,null],[13,"UNREACHABLE","","",5,null],[13,"VM_STARTUP_FAILURE","","",5,null],[13,"UNEXPECTED_ERROR_FROM_KNOWN_MOVE_FUNCTION","","",5,null],[13,"VERIFIER_INVARIANT_VIOLATION","","",5,null],[13,"UNEXPECTED_VERIFIER_ERROR","","",5,null],[13,"UNEXPECTED_DESERIALIZATION_ERROR","","",5,null],[13,"FAILED_TO_SERIALIZE_WRITE_SET_CHANGES","","",5,null],[13,"FAILED_TO_DESERIALIZE_RESOURCE","","",5,null],[13,"TYPE_RESOLUTION_FAILURE","","",5,null],[13,"UNKNOWN_BINARY_ERROR","","",5,null],[13,"MALFORMED","","",5,null],[13,"BAD_MAGIC","","",5,null],[13,"UNKNOWN_VERSION","","",5,null],[13,"UNKNOWN_TABLE_TYPE","","",5,null],[13,"UNKNOWN_SIGNATURE_TYPE","","",5,null],[13,"UNKNOWN_SERIALIZED_TYPE","","",5,null],[13,"UNKNOWN_OPCODE","","",5,null],[13,"BAD_HEADER_TABLE","","",5,null],[13,"UNEXPECTED_SIGNATURE_TYPE","","",5,null],[13,"DUPLICATE_TABLE","","",5,null],[13,"UNKNOWN_ABILITY","","",5,null],[13,"UNKNOWN_NATIVE_STRUCT_FLAG","","",5,null],[13,"BAD_U64","","",5,null],[13,"BAD_U128","","",5,null],[13,"VALUE_SERIALIZATION_ERROR","","",5,null],[13,"VALUE_DESERIALIZATION_ERROR","","",5,null],[13,"CODE_DESERIALIZATION_ERROR","","",5,null],[13,"INVALID_FLAG_BITS","","",5,null],[13,"UNKNOWN_RUNTIME_STATUS","","",5,null],[13,"EXECUTED","","",5,null],[13,"OUT_OF_GAS","","",5,null],[13,"RESOURCE_DOES_NOT_EXIST","","",5,null],[13,"RESOURCE_ALREADY_EXISTS","","",5,null],[13,"MISSING_DATA","","",5,null],[13,"DATA_FORMAT_ERROR","","",5,null],[13,"ABORTED","","",5,null],[13,"ARITHMETIC_ERROR","","",5,null],[13,"EXECUTION_STACK_OVERFLOW","","",5,null],[13,"CALL_STACK_OVERFLOW","","",5,null],[13,"VM_MAX_TYPE_DEPTH_REACHED","","",5,null],[13,"VM_MAX_VALUE_DEPTH_REACHED","","",5,null],[13,"UNKNOWN_STATUS","","",5,null],[3,"PartialVMError","","",null,null],[8,"NativeContext","","<code>NativeContext</code> - Native function context.",null,null],[10,"print_stack_trace","","Prints stack trace.",6,[[],["partialvmresult",6]]],[10,"cost_table","","Gets cost table ref.",6,[[],["costtable",3]]],[10,"save_event","","Saves contract event. Returns true if successful",6,[[["vec",3],["type",4],["value",3]],["partialvmresult",6]]],[10,"type_to_type_layout","","Get the a data layout via the type.",6,[[["type",4]],[["option",4],["partialvmresult",6]]]],[3,"NativeResult","","Result of a native function execution requires charges …",null,null],[12,"cost","","The cost for running that function, whether successfully …",7,null],[12,"result","","Result of execution. This is either the return values or …",7,null],[11,"ok","","Return values of a successful execution.",7,[[["gascarrier",6],["internalgasunits",3],["smallvec",3]]]],[11,"err","","Failed execution. The failure is a runtime failure in the …",7,[[["gascarrier",6],["internalgasunits",3]]]],[5,"native_gas","","Return the native gas entry in <code>CostTable</code> for the given …",null,[[["costtable",3],["nativecostindex",4]],[["gascarrier",6],["internalgasunits",3]]]],[0,"values","move_vm_types","",null,null],[0,"values_impl","move_vm_types::values","",null,null],[0,"debug","move_vm_types::values::values_impl","",null,null],[5,"print_reference","move_vm_types::values::values_impl::debug","",null,[[["reference",3]],["partialvmresult",6]]],[5,"print_locals","","",null,[[["locals",3]],["partialvmresult",6]]],[5,"print_value","","",null,[[["value",3]],["partialvmresult",6]]],[0,"prop","move_vm_types::values::values_impl","",null,null],[5,"value_strategy_with_layout","move_vm_types::values::values_impl::prop","",null,[[["movetypelayout",4]]]],[5,"layout_strategy","","",null,[[]]],[5,"layout_and_value_strategy","","",null,[[]]],[3,"SignerRef","move_vm_types::values::values_impl","",null,null],[3,"VectorRef","","",null,null],[3,"Vector","","",null,null],[3,"StructRef","","A reference to a Move struct that allows you to take a …",null,null],[3,"Reference","","A generic Move reference that offers two functinalities: …",null,null],[3,"Value","","A Move value -- a wrapper around <code>ValueImpl</code> which can be …",null,null],[3,"Locals","","The locals for a function frame. It allows values to be …",null,null],[4,"IntegerValue","","An integer value in Move.",null,null],[13,"U8","","",8,null],[13,"U64","","",8,null],[13,"U128","","",8,null],[3,"Struct","","A Move struct.",null,null],[3,"GlobalValue","","A wrapper around <code>GlobalValueImpl</code>, representing a \\\"slot\\\" …",null,null],[4,"GlobalValueEffect","","Simple enum for the change state of a GlobalValue, used …",null,null],[13,"None","","There was no value, or the value was not changed",9,null],[13,"Deleted","","The value was removed",9,null],[13,"Changed","","Updated with a new value",9,null],[11,"copy_value","","",10,[[],["partialvmresult",6]]],[11,"equals","","",10,[[],["partialvmresult",6]]],[11,"read_ref","","",11,[[],[["partialvmresult",6],["value",3]]]],[11,"read_ref","","",12,[[],[["partialvmresult",6],["value",3]]]],[11,"write_ref","","",12,[[["value",3]],["partialvmresult",6]]],[11,"borrow_field","","",11,[[],[["partialvmresult",6],["value",3]]]],[11,"borrow_loc","","",13,[[],[["partialvmresult",6],["value",3]]]],[11,"borrow_signer","","",14,[[],[["partialvmresult",6],["value",3]]]],[11,"new","","",13,[[]]],[11,"copy_loc","","",13,[[],[["partialvmresult",6],["value",3]]]],[11,"move_loc","","",13,[[],[["partialvmresult",6],["value",3]]]],[11,"store_loc","","",13,[[["value",3]],["partialvmresult",6]]],[11,"u8","","",10,[[]]],[11,"u64","","",10,[[]]],[11,"u128","","",10,[[]]],[11,"bool","","",10,[[]]],[11,"address","","",10,[[["accountaddress",3]]]],[11,"signer","","",10,[[["accountaddress",3]]]],[11,"transaction_argument_signer_reference","","Create a \\\"unowned\\\" reference to a signer value (&signer) …",10,[[["accountaddress",3]]]],[11,"struct_","","",10,[[["struct",3]]]],[11,"vector_u8","","",10,[[]]],[11,"vector_u64","","",10,[[]]],[11,"vector_u128","","",10,[[]]],[11,"vector_bool","","",10,[[]]],[11,"vector_address","","",10,[[]]],[11,"vector_for_testing_only","","",10,[[]]],[8,"VMValueCast","","",null,null],[10,"cast","","",15,[[],["partialvmresult",6]]],[11,"value_as","","",10,[[],["partialvmresult",6]]],[11,"value_as","","",8,[[],["partialvmresult",6]]],[11,"add_checked","","",8,[[],["partialvmresult",6]]],[11,"sub_checked","","",8,[[],["partialvmresult",6]]],[11,"mul_checked","","",8,[[],["partialvmresult",6]]],[11,"div_checked","","",8,[[],["partialvmresult",6]]],[11,"rem_checked","","",8,[[],["partialvmresult",6]]],[11,"bit_or","","",8,[[],["partialvmresult",6]]],[11,"bit_and","","",8,[[],["partialvmresult",6]]],[11,"bit_xor","","",8,[[],["partialvmresult",6]]],[11,"shl_checked","","",8,[[],["partialvmresult",6]]],[11,"shr_checked","","",8,[[],["partialvmresult",6]]],[11,"lt","","",8,[[],["partialvmresult",6]]],[11,"le","","",8,[[],["partialvmresult",6]]],[11,"gt","","",8,[[],["partialvmresult",6]]],[11,"ge","","",8,[[],["partialvmresult",6]]],[11,"into_value","","",8,[[],["value",3]]],[11,"cast_u8","","",8,[[],["partialvmresult",6]]],[11,"cast_u64","","",8,[[],["partialvmresult",6]]],[11,"cast_u128","","",8,[[],["partialvmresult",6]]],[17,"INDEX_OUT_OF_BOUNDS","","",null,null],[17,"POP_EMPTY_VEC","","",null,null],[17,"DESTROY_NON_EMPTY_VEC","","",null,null],[11,"len","","",16,[[["type",4]],[["partialvmresult",6],["value",3]]]],[11,"push_back","","",16,[[["type",4],["value",3]],["partialvmresult",6]]],[11,"borrow_elem","","",16,[[["gascarrier",6],["internalgasunits",3],["type",4]],[["partialvmresult",6],["nativeresult",3]]]],[11,"pop","","",16,[[["gascarrier",6],["internalgasunits",3],["type",4]],[["partialvmresult",6],["nativeresult",3]]]],[11,"swap","","",16,[[["gascarrier",6],["internalgasunits",3],["type",4]],[["partialvmresult",6],["nativeresult",3]]]],[11,"empty","","",17,[[["gascarrier",6],["internalgasunits",3],["type",4]],[["partialvmresult",6],["nativeresult",3]]]],[11,"destroy_empty","","",17,[[["gascarrier",6],["internalgasunits",3],["type",4]],[["partialvmresult",6],["nativeresult",3]]]],[11,"size","","",18,[[],[["gascarrier",6],["abstractmemorysize",3]]]],[11,"size","","",10,[[],[["gascarrier",6],["abstractmemorysize",3]]]],[11,"size","","",12,[[],[["gascarrier",6],["abstractmemorysize",3]]]],[11,"size","","",19,[[],[["gascarrier",6],["abstractmemorysize",3]]]],[11,"pack","","",18,[[["intoiterator",8]]]],[11,"unpack","","",18,[[],["partialvmresult",6]]],[11,"none","","",19,[[]]],[11,"cached","","",19,[[["value",3]],["partialvmresult",6]]],[11,"move_from","","",19,[[],[["partialvmresult",6],["value",3]]]],[11,"move_to","","",19,[[["value",3]],["partialvmresult",6]]],[11,"borrow_global","","",19,[[],[["partialvmresult",6],["value",3]]]],[11,"exists","","",19,[[],["partialvmresult",6]]],[11,"into_effect","","",19,[[],[["partialvmresult",6],["globalvalueeffect",4]]]],[11,"is_mutated","","",19,[[]]],[11,"simple_deserialize","","",10,[[["movetypelayout",4]],[["option",4],["value",3]]]],[11,"simple_serialize","","",10,[[["movetypelayout",4]],[["option",4],["vec",3]]]],[11,"simple_deserialize","","",18,[[["movestructlayout",3]],[["struct",3],["option",4]]]],[11,"simple_serialize","","",18,[[["movestructlayout",3]],[["option",4],["vec",3]]]],[11,"deserialize_constant","","",10,[[["constant",3]],[["option",4],["value",3]]]],[14,"pop_arg","move_vm_types","Return the argument at the top of the stack.",null,null],[11,"from","move_vm_types::gas_schedule","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","move_vm_types::loaded_data::runtime_types","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","move_vm_types::natives::function","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"test_only_hash","","",5,[[],["hashvalue",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","move_vm_types::values::values_impl","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"partial_cmp","move_vm_types::natives::function","",5,[[["statuscode",4]],[["ordering",4],["option",4]]]],[11,"serialize","","",5,[[],["result",4]]],[11,"cmp","","",5,[[["statuscode",4]],["ordering",4]]],[11,"deserialize","","",5,[[],[["statuscode",4],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["result",4],["error",3]]]],[11,"arbitrary_with","","",5,[[]]],[11,"hash","","",5,[[]]],[11,"clone","","",5,[[],["statuscode",4]]],[11,"eq","","",5,[[["statuscode",4]]]],[11,"try_from","","",5,[[],[["result",4],["statuscode",4]]]],[11,"fmt","","",20,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","","",20,[[],["partialvmerror",3]]],[11,"fmt","","",20,[[["formatter",3]],[["result",4],["error",3]]]],[11,"cast","move_vm_types::values::values_impl","",10,[[],["partialvmresult",6]]],[11,"cast","","",10,[[],["partialvmresult",6]]],[11,"cast","","",10,[[],["partialvmresult",6]]],[11,"cast","","",10,[[],["partialvmresult",6]]],[11,"cast","","",10,[[],[["accountaddress",3],["partialvmresult",6]]]],[11,"cast","","",10,[[],[["partialvmresult",6],["integervalue",4]]]],[11,"cast","","",10,[[],[["partialvmresult",6],["reference",3]]]],[11,"cast","","",10,[[],[["struct",3],["partialvmresult",6]]]],[11,"cast","","",10,[[],[["partialvmresult",6],["structref",3]]]],[11,"cast","","",10,[[],[["partialvmresult",6],["vec",3]]]],[11,"cast","","",10,[[],[["signerref",3],["partialvmresult",6]]]],[11,"cast","","",10,[[],[["vectorref",3],["partialvmresult",6]]]],[11,"cast","","",10,[[],[["vector",3],["partialvmresult",6]]]],[11,"cast","","",8,[[],["partialvmresult",6]]],[11,"cast","","",8,[[],["partialvmresult",6]]],[11,"cast","","",8,[[],["partialvmresult",6]]],[11,"clone","move_vm_types::gas_schedule","",2,[[],["nativecostindex",4]]],[11,"clone","move_vm_types::loaded_data::runtime_types","",3,[[],["structtype",3]]],[11,"clone","","",4,[[],["type",4]]],[11,"cmp","move_vm_types::gas_schedule","",2,[[["nativecostindex",4]],["ordering",4]]],[11,"cmp","move_vm_types::loaded_data::runtime_types","",3,[[["structtype",3]],["ordering",4]]],[11,"cmp","","",4,[[["type",4]],["ordering",4]]],[11,"eq","move_vm_types::gas_schedule","",2,[[["nativecostindex",4]]]],[11,"eq","move_vm_types::loaded_data::runtime_types","",3,[[["structtype",3]]]],[11,"ne","","",3,[[["structtype",3]]]],[11,"eq","","",4,[[["type",4]]]],[11,"ne","","",4,[[["type",4]]]],[11,"partial_cmp","move_vm_types::gas_schedule","",2,[[["nativecostindex",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","move_vm_types::loaded_data::runtime_types","",3,[[["structtype",3]],[["option",4],["ordering",4]]]],[11,"lt","","",3,[[["structtype",3]]]],[11,"le","","",3,[[["structtype",3]]]],[11,"gt","","",3,[[["structtype",3]]]],[11,"ge","","",3,[[["structtype",3]]]],[11,"partial_cmp","","",4,[[["type",4]],[["option",4],["ordering",4]]]],[11,"lt","","",4,[[["type",4]]]],[11,"le","","",4,[[["type",4]]]],[11,"gt","","",4,[[["type",4]]]],[11,"ge","","",4,[[["type",4]]]],[11,"fmt","move_vm_types::gas_schedule","",2,[[["formatter",3]],["result",6]]],[11,"fmt","move_vm_types::loaded_data::runtime_types","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","move_vm_types::values::values_impl","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"hash","move_vm_types::gas_schedule","",2,[[]]],[11,"hash","move_vm_types::loaded_data::runtime_types","",3,[[]]],[11,"hash","","",4,[[]]],[11,"status_type","move_vm_types::natives::function","Return the status type for this status code",5,[[],["statustype",4]]],[11,"all_data","","",20,[[]]],[11,"finish","","",20,[[["location",4]],["vmerror",3]]],[11,"new","","",20,[[["statuscode",4]],["partialvmerror",3]]],[11,"major_status","","",20,[[],["statuscode",4]]],[11,"with_sub_status","","",20,[[],["partialvmerror",3]]],[11,"with_message","","",20,[[["string",3]],["partialvmerror",3]]],[11,"at_index","","",20,[[["indexkind",4]],["partialvmerror",3]]],[11,"at_indices","","",20,[[["vec",3],["global",3]],["partialvmerror",3]]],[11,"at_code_offset","","",20,[[["functiondefinitionindex",3]],["partialvmerror",3]]],[11,"at_code_offsets","","",20,[[["vec",3],["global",3]],["partialvmerror",3]]],[11,"append_message_with_separator","","Append the message <code>message</code> to the message field of the VM …",20,[[["string",3]],["partialvmerror",3]]],[11,"as_move_value","move_vm_types::values::values_impl","",10,[[["movetypelayout",4]],["movevalue",4]]]],"p":[[8,"DataStore"],[3,"CostStrategy"],[4,"NativeCostIndex"],[3,"StructType"],[4,"Type"],[4,"StatusCode"],[8,"NativeContext"],[3,"NativeResult"],[4,"IntegerValue"],[4,"GlobalValueEffect"],[3,"Value"],[3,"StructRef"],[3,"Reference"],[3,"Locals"],[3,"SignerRef"],[8,"VMValueCast"],[3,"VectorRef"],[3,"Vector"],[3,"Struct"],[3,"GlobalValue"],[3,"PartialVMError"]]},\
"netcore":{"doc":"Core types and traits for building Peer to Peer networks.","i":[[0,"framing","netcore","",null,null],[5,"read_u16frame","netcore::framing","Read a u16 length prefixed frame from <code>Stream</code> into <code>buf</code>.",null,[[["bytesmut",3]]]],[5,"write_u16frame","","Write the contents of <code>buf</code> to <code>stream</code> prefixed with a u16 …",null,[[]]],[0,"transport","netcore","Low-level module for establishing connections with peers",null,null],[0,"and_then","netcore::transport","",null,null],[3,"AndThen","netcore::transport::and_then","An [<code>AndThen</code>] is a transport which applies a closure (F) …",null,null],[3,"AndThenStream","","Listener stream returned by listen_on on an AndThen …",null,null],[3,"AndThenFuture","","Future generated by the [<code>AndThen</code>] transport.",null,null],[0,"boxed","netcore::transport","",null,null],[6,"Listener","netcore::transport::boxed","",null,null],[6,"Inbound","","",null,null],[6,"Outbound","","",null,null],[3,"BoxedTransport","","See the boxed method for more information.",null,null],[0,"memory","netcore::transport","",null,null],[3,"MemoryTransport","netcore::transport::memory","Transport to build in-memory connections",null,null],[3,"Listener","","",null,null],[11,"new","","",0,[[["memorylistener",3]]]],[0,"proxy_protocol","netcore::transport","An implementation of ProxyProtocol for HAProxy…",null,null],[5,"read_header","netcore::transport::proxy_protocol","Read a proxy protocol event and unwrap the address …",null,[[["networkaddress",3]]]],[0,"tcp","netcore::transport","TCP Transport",null,null],[3,"TcpTransport","netcore::transport::tcp","Transport to build TCP connections",null,null],[12,"ttl","","TTL to set for opened sockets, or <code>None</code> to keep default.",1,null],[12,"nodelay","","<code>TCP_NODELAY</code> to set for opened sockets, or <code>None</code> to keep …",1,null],[3,"TcpListenerStream","","",null,null],[3,"TcpOutbound","","",null,null],[3,"TcpSocket","","A wrapper around a tokio TcpStream",null,null],[4,"ConnectionOrigin","netcore::transport","Origin of how a Connection was established.",null,null],[13,"Inbound","","<code>Inbound</code> indicates that we are the listener for this …",2,null],[13,"Outbound","","<code>Outbound</code> indicates that we are the dialer for this …",2,null],[11,"as_str","","",2,[[]]],[8,"Transport","","A Transport is responsible for establishing connections …",null,null],[16,"Output","","The result of establishing a connection.",3,null],[16,"Error","","The Error type of errors which can happen while …",3,null],[16,"Listener","","A stream of <code>Inbound</code> connections and the address of the …",3,null],[16,"Inbound","","A pending <code>Output</code> for an inbound connection, obtained from …",3,null],[16,"Outbound","","A pending <code>Output</code> for an outbound connection, obtained …",3,null],[10,"listen_on","","Listens on the given [<code>NetworkAddress</code>], returning a stream …",3,[[["networkaddress",3]],["result",4]]],[10,"dial","","Dials the given [<code>NetworkAddress</code>], returning a future for …",3,[[["networkaddress",3],["peerid",3]],["result",4]]],[8,"TransportExt","","An extension trait for [<code>Transport</code>]s that provides a …",null,null],[11,"boxed","","Turns a [<code>Transport</code>] into an abstract boxed transport.",4,[[],["boxedtransport",3]]],[11,"and_then","","Applies a function producing an asynchronous result to …",4,[[],["andthen",3]]],[11,"from","netcore::transport::and_then","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"try_poll_next","","",6,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_future","","",7,[[]]],[11,"try_poll","","",7,[[["context",3],["pin",3]],["poll",4]]],[11,"vzip","","",7,[[]]],[11,"from","netcore::transport::boxed","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","netcore::transport::memory","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"try_poll_next","","",0,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"vzip","","",0,[[]]],[11,"from","netcore::transport::tcp","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"try_poll_next","","",10,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"into_future","","",11,[[]]],[11,"try_poll","","",11,[[["context",3],["pin",3]],["poll",4]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","netcore::transport","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"equivalent","","",2,[[]]],[11,"listen_on","netcore::transport::and_then","",5,[[["networkaddress",3]],["result",4]]],[11,"dial","","",5,[[["networkaddress",3],["peerid",3]],["result",4]]],[11,"listen_on","netcore::transport::boxed","",8,[[["networkaddress",3]],["result",4]]],[11,"dial","","",8,[[["networkaddress",3],["peerid",3]],["result",4]]],[11,"listen_on","netcore::transport::memory","",9,[[["networkaddress",3]],["result",4]]],[11,"dial","","",9,[[["networkaddress",3],["peerid",3]],["result",4]]],[11,"listen_on","netcore::transport::tcp","",1,[[["networkaddress",3]],["result",4]]],[11,"dial","","",1,[[["networkaddress",3],["peerid",3]],["result",4]]],[11,"clone","netcore::transport::memory","",9,[[],["memorytransport",3]]],[11,"clone","netcore::transport::tcp","",1,[[],["tcptransport",3]]],[11,"clone","netcore::transport","",2,[[],["connectionorigin",4]]],[11,"default","netcore::transport::memory","",9,[[],["memorytransport",3]]],[11,"default","netcore::transport::tcp","",1,[[],["tcptransport",3]]],[11,"eq","netcore::transport","",2,[[["connectionorigin",4]]]],[11,"fmt","netcore::transport::and_then","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","netcore::transport::memory","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","netcore::transport::tcp","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","netcore::transport","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"hash","","",2,[[]]],[11,"poll","netcore::transport::and_then","",7,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","netcore::transport::tcp","",11,[[["context",3],["pin",3]],["poll",4]]],[11,"serialize","netcore::transport","",2,[[],["result",4]]],[11,"poll_next","netcore::transport::and_then","",6,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_next","netcore::transport::memory","",0,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_next","netcore::transport::tcp","",10,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_read","","",12,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",12,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",12,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_close","","",12,[[["context",3],["pin",3]],[["poll",4],["result",6]]]]],"p":[[3,"Listener"],[3,"TcpTransport"],[4,"ConnectionOrigin"],[8,"Transport"],[8,"TransportExt"],[3,"AndThen"],[3,"AndThenStream"],[3,"AndThenFuture"],[3,"BoxedTransport"],[3,"MemoryTransport"],[3,"TcpListenerStream"],[3,"TcpOutbound"],[3,"TcpSocket"]]},\
"network":{"doc":"","i":[[0,"connectivity_manager","network","The ConnectivityManager actor is responsible for ensuring …",null,null],[0,"builder","network::connectivity_manager","",null,null],[6,"ConnectivityManagerService","network::connectivity_manager::builder","",null,null],[3,"ConnectivityManagerBuilder","","",null,null],[11,"create","","",0,[[["arc",3],["option",4],["networkcontext",3],["connectionrequestsender",3],["rwlock",3],["timeservice",4],["arc",3],["peerset",6],["receiver",6]]]],[11,"conn_mgr_reqs_tx","","",0,[[],[["connectivityrequest",4],["sender",3]]]],[11,"build","","",0,[[["handle",3]]]],[11,"start","","",0,[[["handle",3]]]],[3,"ConnectivityManager","network::connectivity_manager","The ConnectivityManager actor.",null,null],[4,"DiscoverySource","","Different sources for peer addresses, ordered by priority …",null,null],[13,"OnChain","","",1,null],[13,"Config","","",1,null],[18,"NUM_VARIANTS","","The number of variants in this enum.",1,null],[4,"ConnectivityRequest","","Requests received by the [<code>ConnectivityManager</code>] manager …",null,null],[13,"UpdateDiscoveredPeers","","Update set of discovered peers and associated info",2,null],[13,"GetConnectedSize","","Gets current size of connected peers. This is useful in …",2,null],[13,"GetDialQueueSize","","Gets current size of dial queue. This is useful in tests.",2,null],[11,"new","","Creates a new instance of the [<code>ConnectivityManager</code>] actor.",3,[[["arc",3],["networkcontext",3],["peerset",6],["connectionrequestsender",3],["duration",3],["rwlock",3],["timeservice",4],["connectivityrequest",4],["arc",3],["receiver",3],["option",4],["receiver",6]]]],[11,"start","","Starts the [<code>ConnectivityManager</code>] actor.",3,[[]]],[0,"constants","network","",null,null],[17,"INBOUND_RPC_TIMEOUT_MS","network::constants","A collection of constants and default values for …",null,null],[17,"MAX_CONCURRENT_OUTBOUND_RPCS","","Limit on concurrent Outbound RPC requests before …",null,null],[17,"MAX_CONCURRENT_INBOUND_RPCS","","Limit on concurrent Inbound RPC requests before …",null,null],[17,"NETWORK_CHANNEL_SIZE","","",null,null],[17,"MAX_FRAME_SIZE","","",null,null],[17,"MAX_CONCURRENT_NETWORK_REQS","","",null,null],[17,"MAX_CONCURRENT_NETWORK_NOTIFS","","",null,null],[0,"counters","network","",null,null],[17,"REQUEST_LABEL","network::counters","",null,null],[17,"RESPONSE_LABEL","","",null,null],[17,"CANCELED_LABEL","","",null,null],[17,"DECLINED_LABEL","","",null,null],[17,"RECEIVED_LABEL","","",null,null],[17,"SENT_LABEL","","",null,null],[17,"SUCCEEDED_LABEL","","",null,null],[17,"FAILED_LABEL","","",null,null],[7,"DIEM_NETWORK_PEERS","","",null,null],[7,"DIEM_CONNECTIONS","","",null,null],[5,"connections","","",null,[[["connectionorigin",4],["networkcontext",3]],["intgauge",6]]],[7,"DIEM_NETWORK_PEER_CONNECTED","","",null,null],[5,"peer_connected","","",null,[[["peerid",3],["networkcontext",3]]]],[5,"inc_by_with_context","","Increments the counter based on <code>NetworkContext</code>",null,[[["networkcontext",3],["intcountervec",6]]]],[7,"DIEM_NETWORK_PENDING_CONNECTION_UPGRADES","","",null,null],[5,"pending_connection_upgrades","","",null,[[["connectionorigin",4],["networkcontext",3]],["intgauge",6]]],[7,"DIEM_NETWORK_CONNECTION_UPGRADE_TIME","","",null,null],[5,"connection_upgrade_time","","",null,[[["connectionorigin",4],["networkcontext",3]],["histogram",3]]],[7,"DIEM_NETWORK_DISCOVERY_NOTES","","",null,null],[7,"DIEM_NETWORK_RPC_MESSAGES","","",null,null],[5,"rpc_messages","","",null,[[["networkcontext",3]],["intcounter",6]]],[7,"DIEM_NETWORK_RPC_BYTES","","",null,null],[5,"rpc_bytes","","",null,[[["networkcontext",3]],["intcounter",6]]],[7,"INVALID_NETWORK_MESSAGES","","",null,null],[7,"PEER_SEND_FAILURES","","",null,null],[7,"DIEM_NETWORK_OUTBOUND_RPC_REQUEST_LATENCY","","",null,null],[5,"outbound_rpc_request_latency","","",null,[[["protocolid",4],["networkcontext",3]],["histogram",3]]],[7,"DIEM_NETWORK_INBOUND_RPC_HANDLER_LATENCY","","",null,null],[5,"inbound_rpc_handler_latency","","",null,[[["protocolid",4],["networkcontext",3]],["histogram",3]]],[7,"DIEM_NETWORK_DIRECT_SEND_MESSAGES","","",null,null],[5,"direct_send_messages","","",null,[[["networkcontext",3]],["intcounter",6]]],[7,"DIEM_NETWORK_DIRECT_SEND_BYTES","","",null,null],[5,"direct_send_bytes","","",null,[[["networkcontext",3]],["intcounter",6]]],[7,"PENDING_NETWORK_NOTIFICATIONS","","Counters(queued,dequeued,dropped) related to inbound …",null,null],[7,"PENDING_NETWORK_REQUESTS","","Counter of pending requests in Network Provider",null,null],[7,"PENDING_HEALTH_CHECKER_NETWORK_EVENTS","","Counter of pending network events to Health Checker.",null,null],[7,"PENDING_DISCOVERY_NETWORK_EVENTS","","Counter of pending network events to Discovery.",null,null],[7,"PENDING_PEER_MANAGER_REQUESTS","","Counter of pending requests in Peer Manager",null,null],[7,"PENDING_CONNECTIVITY_MANAGER_REQUESTS","","Channel Counters",null,null],[7,"PENDING_CONNECTION_HANDLER_NOTIFICATIONS","","Counter of pending Connection Handler notifications to …",null,null],[7,"PENDING_PEER_MANAGER_DIAL_REQUESTS","","Counter of pending dial requests in Peer Manager",null,null],[7,"PENDING_WIRE_MESSAGES","","Counter of messages pending in queue to be sent out on …",null,null],[7,"PENDING_DIRECT_SEND_REQUESTS","","Counter of pending requests in Direct Send",null,null],[7,"PENDING_DIRECT_SEND_NOTIFICATIONS","","Counter of pending Direct Send notifications to Network …",null,null],[7,"PENDING_RPC_REQUESTS","","Counter of pending requests in RPC",null,null],[7,"PENDING_RPC_NOTIFICATIONS","","Counter of pending RPC notifications to Network Provider",null,null],[7,"PENDING_PEER_REQUESTS","","Counter of pending requests for each remote peer",null,null],[7,"PENDING_PEER_RPC_NOTIFICATIONS","","Counter of pending RPC events from Peer to Rpc actor.",null,null],[7,"PENDING_PEER_DIRECT_SEND_NOTIFICATIONS","","Counter of pending DirectSend events from Peer to …",null,null],[7,"PENDING_PEER_NETWORK_NOTIFICATIONS","","Counter of pending connection notifications from Peer to …",null,null],[7,"NETWORK_RATE_LIMIT_METRICS","","",null,null],[0,"error","network","",null,null],[3,"NetworkError","network::error","Errors propagated from the network module.",null,null],[4,"NetworkErrorKind","","",null,null],[13,"IoError","","",4,null],[13,"BcsError","","",4,null],[13,"PeerManagerError","","",4,null],[13,"NotConnected","","",4,null],[0,"logging","network","This module is to contain all networking logging …",null,null],[3,"NetworkSchema","network::logging","",null,null],[11,"connection_id","","",5,[[["connectionid",3]]]],[11,"connection_origin","","",5,[[["connectionorigin",4]]]],[11,"discovery_source","","",5,[[["discoverysource",4]]]],[11,"network_address","","",5,[[["networkaddress",3]]]],[11,"network_context","","",5,[[["networkcontext",3]]]],[11,"remote_peer","","",5,[[["peerid",3]]]],[11,"new","","",5,[[["networkcontext",3]]]],[11,"connection_metadata","","",5,[[["connectionmetadata",3]]]],[11,"connection_metadata_with_address","","",5,[[["connectionmetadata",3]]]],[0,"noise","network","This crate implements wrappers around our Noise …",null,null],[0,"error","network::noise","",null,null],[4,"NoiseHandshakeError","network::noise::error","Different errors than can be raised when negotiating a …",null,null],[13,"MissingServerPublicKey","","",6,null],[13,"BuildClientHandshakeMessageFailed","","",6,null],[13,"ClientWriteFailed","","",6,null],[13,"ClientReadFailed","","",6,null],[13,"ClientFlushFailed","","",6,null],[13,"ClientFinalizeFailed","","",6,null],[13,"ServerReadFailed","","",6,null],[13,"InvalidClientPeerId","","",6,null],[13,"SelfDialDetected","","",6,null],[13,"ClientExpectingDifferentPubkey","","",6,null],[13,"ServerParseClient","","",6,null],[13,"UnauthenticatedClientPubkey","","",6,null],[13,"UnauthenticatedClient","","",6,null],[13,"ClientPeerIdMismatch","","",6,null],[13,"MissingAntiReplayTimestamp","","",6,null],[13,"ServerReplayDetected","","",6,null],[13,"BuildServerHandshakeMessageFailed","","",6,null],[13,"ServerWriteFailed","","",6,null],[11,"should_security_log","","Errors that are either clear bugs or indicate some …",6,[[]]],[0,"handshake","network::noise","The handshake module implements the handshake part of the …",null,null],[3,"AntiReplayTimestamps","network::noise::handshake","In a mutually authenticated network, a client message is …",null,null],[18,"TIMESTAMP_SIZE","","The timestamp is sent as a payload, so that it is …",7,null],[11,"now","","obtain the current timestamp",7,[[]]],[11,"is_replay","","Returns true if the timestamp has already been observed …",7,[[["publickey",3]]]],[11,"store_timestamp","","Stores the timestamp",7,[[["publickey",3]]]],[4,"HandshakeAuthMode","","Noise handshake authentication mode.",null,null],[13,"Mutual","","In <code>Mutual</code> mode, both sides will authenticate each other …",8,null],[12,"anti_replay_timestamps","network::noise::handshake::HandshakeAuthMode","",9,null],[12,"trusted_peers","","",9,null],[13,"MaybeMutual","network::noise::handshake","In <code>MaybeMutual</code> mode, the dialer authenticates the server …",8,null],[11,"mutual","","",8,[[["arc",3],["rwlock",3]]]],[11,"maybe_mutual","","",8,[[["arc",3],["rwlock",3]]]],[11,"server_only","","",8,[[]]],[3,"NoiseUpgrader","","The Noise configuration to be used to perform a protocol …",null,null],[12,"network_context","","The validator\'s network context",10,null],[11,"new","","Create a new NoiseConfig with the provided keypair and …",10,[[["arc",3],["networkcontext",3],["handshakeauthmode",4],["privatekey",3]]]],[11,"upgrade_with_noise","","Perform a protocol upgrade on an underlying connection. …",10,[[["publickey",3],["option",4],["connectionorigin",4]]]],[11,"upgrade_outbound","","Perform an outbound protocol upgrade on this connection.",10,[[["publickey",3]]]],[11,"upgrade_inbound","","Perform an inbound protocol upgrade on this connection.",10,[[]]],[0,"stream","network::noise","The socket module implements the post-handshake part of …",null,null],[3,"NoiseStream","network::noise::stream","A Noise stream with a remote peer.",null,null],[11,"new","","Create a NoiseStream from a socket and a noise …",11,[[["noisesession",3]]]],[11,"get_remote_static","","Pull out the static public key of the remote",11,[[],["publickey",3]]],[0,"fuzzing","network::noise","",null,null],[7,"KEYPAIRS","network::noise::fuzzing","",null,null],[5,"generate_corpus","","",null,[[["valuegenerator",3]],["vec",3]]],[5,"fuzz_initiator","","Fuzz a client during the handshake",null,[[]]],[5,"fuzz_responder","","Fuzz a server during the handshake",null,[[]]],[5,"fuzz_post_handshake","","Fuzz a peer post-handshake",null,[[]]],[0,"peer","network","[<code>Peer</code>] manages a single connection to a remote peer after …",null,null],[0,"fuzzing","network::peer","",null,null],[5,"generate_corpus","network::peer::fuzzing","Generate a sequence of <code>NetworkMessage</code>, bcs serialize …",null,[[["valuegenerator",3]],["vec",3]]],[5,"fuzz","","Fuzz the <code>Peer</code> actor\'s inbound message handling.",null,[[]]],[4,"PeerRequest","network::peer","Requests [<code>Peer</code>] receives from the <code>PeerManager</code>.",null,null],[13,"SendRpc","","Send an RPC request to peer.",12,null],[13,"SendDirectSend","","Fire-and-forget style message send to peer.",12,null],[4,"PeerNotification","","Notifications that [<code>Peer</code>] sends to the <code>PeerManager</code>.",null,null],[13,"RecvRpc","","A new RPC request has been received from peer.",13,null],[13,"RecvMessage","","A new message has been received from peer.",13,null],[4,"DisconnectReason","","The reason for closing a connection.",null,null],[13,"Requested","","",14,null],[13,"ConnectionLost","","",14,null],[3,"Peer","","The <code>Peer</code> actor manages a single connection to another …",null,null],[11,"new","","",15,[[["arc",3],["protocolid",6],["sender",3],["peernotification",4],["duration",3],["connection",3],["sender",3],["networkcontext",3],["transportnotification",4],["option",4],["receiver",3],["timeservice",4],["peerrequest",4],["sharedbucket",6],["handle",3]]]],[11,"start","","",15,[[]]],[0,"peer_manager","network","The PeerManager module is responsible for establishing …",null,null],[0,"builder","network::peer_manager","",null,null],[4,"AuthenticationMode","network::peer_manager::builder","",null,null],[13,"ServerOnly","","Inbound and outbound connections are secured with …",16,null],[13,"Mutual","","Inbound and outbound connections are secured with …",16,null],[3,"PeerManagerBuilder","","",null,null],[11,"create","","",17,[[["chainid",3],["arc",3],["networkcontext",3],["networkaddress",3],["rwlock",3],["timeservice",4],["authenticationmode",4],["arc",3],["option",4],["ratelimitconfig",3]]]],[11,"listen_address","","",17,[[],["networkaddress",3]]],[11,"connection_reqs_tx","","",17,[[],[["sender",3],["peerid",3],["connectionrequest",4]]]],[11,"add_connection_event_listener","","",17,[[],["receiver",6]]],[11,"build","","Create the configured transport and start PeerManager. …",17,[[["handle",3]]]],[11,"start","","",17,[[["handle",3]]]],[11,"add_protocol_handler","","Add a handler for given protocols using raw bytes.",17,[[["protocolid",6],["vec",3],["queuestyle",4],["option",4],["intcountervec",6]]]],[0,"conn_notifs_channel","network::peer_manager","<code>conn_notifs_channel</code> is a channel which delivers to the …",null,null],[6,"Sender","network::peer_manager::conn_notifs_channel","",null,null],[6,"Receiver","","",null,null],[5,"new","","",null,[[]]],[4,"PeerManagerError","network::peer_manager","",null,null],[13,"Error","","",18,null],[13,"IoError","","",18,null],[13,"TransportError","","",18,null],[13,"ShuttingDownPeer","","",18,null],[13,"NotConnected","","",18,null],[13,"AlreadyConnected","","",18,null],[13,"OneshotSenderDropped","","",18,null],[13,"MpscSendError","","",18,null],[13,"BcsError","","",18,null],[13,"WireReadError","","",18,null],[13,"WireWriteError","","",18,null],[4,"PeerManagerRequest","","Request received by PeerManager from upstream actors.",null,null],[13,"SendRpc","","Send an RPC request to a remote peer.",19,null],[13,"SendDirectSend","","Fire-and-forget style message send to a remote peer.",19,null],[4,"PeerManagerNotification","","Notifications sent by PeerManager to upstream actors.",null,null],[13,"RecvRpc","","A new RPC request has been received from a remote peer.",20,null],[13,"RecvMessage","","A new message has been received from a remote peer.",20,null],[4,"ConnectionRequest","","",null,null],[13,"DialPeer","","",21,null],[13,"DisconnectPeer","","",21,null],[4,"ConnectionNotification","","",null,null],[13,"NewPeer","","Connection with a new peer has been established.",22,null],[13,"LostPeer","","Connection to a peer has been terminated. This could have …",22,null],[3,"PeerManagerRequestSender","","Convenience wrapper which makes it easy to issue …",null,null],[3,"ConnectionRequestSender","","Convenience wrapper which makes it easy to issue …",null,null],[11,"new","","Construct a new PeerManagerRequestSender with a raw …",23,[[["sender",3],["peermanagerrequest",4]]]],[11,"send_to","","Send a fire-and-forget direct-send message to remote peer.",23,[[["protocolid",6],["peerid",3],["bytes",3]],[["result",4],["peermanagererror",4]]]],[11,"send_to_many","","Send the <em>same</em> message to many recipients using the …",23,[[["protocolid",6],["bytes",3]],[["result",4],["peermanagererror",4]]]],[11,"send_rpc","","Sends a unary RPC to a remote peer and waits to either …",23,[[["protocolid",6],["peerid",3],["bytes",3],["duration",3]]]],[11,"new","","Construct a new ConnectionRequestSender with a raw …",24,[[["sender",3],["peerid",3],["connectionrequest",4]]]],[11,"dial_peer","","",24,[[["networkaddress",3],["peerid",3]]]],[11,"disconnect_peer","","",24,[[["peerid",3]]]],[6,"IpAddrTokenBucketLimiter","","",null,null],[3,"PeerManager","","Responsible for handling and maintaining connections to …",null,null],[11,"new","","Construct a new PeerManager actor",25,[[["arc",3],["protocolid",6],["connectionrequest",4],["peermanagerrequest",4],["receiver",3],["arc",3],["sender",6],["networkaddress",3],["vec",3],["networkcontext",3],["peerid",3],["ipaddrtokenbucketlimiter",6],["receiver",3],["rwlock",3],["timeservice",4],["sender",3],["hashmap",3],["handle",3]]]],[11,"update_connected_peers_metrics","","",25,[[]]],[11,"listen_addr","","Get the [<code>NetworkAddress</code>] we\'re listening for incoming …",25,[[],["networkaddress",3]]],[11,"start","","Start listening on the set address and return a future …",25,[[]]],[4,"TransportNotification","","",null,null],[13,"NewConnection","","",26,null],[13,"Disconnected","","",26,null],[0,"protocols","network","Protocols used by network module for external APIs and …",null,null],[0,"direct_send","network::protocols","",null,null],[3,"Message","network::protocols::direct_send","",null,null],[12,"protocol_id","","Message type.",27,null],[12,"mdata","","Serialized message data.",27,null],[0,"network","network::protocols","Convenience Network API for Diem",null,null],[8,"Message","network::protocols::network","",null,null],[4,"Event","","Events received by network clients in a validator",null,null],[13,"Message","","New inbound direct-send message from peer.",28,null],[13,"RpcRequest","","New inbound rpc request. The request is fulfilled by …",28,null],[13,"NewPeer","","Peer which we have a newly established connection with.",28,null],[13,"LostPeer","","Peer with which we\'ve lost our connection.",28,null],[3,"NetworkEvents","","A <code>Stream</code> of <code>Event<TMessage></code> from the lower network layer …",null,null],[8,"NewNetworkEvents","","Trait specifying the signature for <code>new()</code> <code>NetworkEvents</code>",null,null],[10,"new","","",29,[[["peermanagernotification",4],["receiver",3],["peerid",3],["connectionnotification",4],["receiver",3]]]],[3,"NetworkSender","","<code>NetworkSender</code> is the generic interface from upper network …",null,null],[8,"NewNetworkSender","","Trait specifying the signature for <code>new()</code> <code>NetworkSender</code>s",null,null],[10,"new","","",30,[[["connectionrequestsender",3],["peermanagerrequestsender",3]]]],[11,"dial_peer","","Request that a given Peer be dialed at the provided …",31,[[["networkaddress",3],["peerid",3]]]],[11,"disconnect_peer","","Request that a given Peer be disconnected and …",31,[[["peerid",3]]]],[11,"send_to","","Send a protobuf message to a single recipient. Provides a …",31,[[["protocolid",6],["peerid",3]],[["networkerror",3],["result",4]]]],[11,"send_to_many","","Send a protobuf message to a many recipients. Provides a …",31,[[["protocolid",6]],[["networkerror",3],["result",4]]]],[11,"send_rpc","","Send a protobuf rpc request to a single recipient while …",31,[[["protocolid",6],["peerid",3],["duration",3]]]],[0,"rpc","network::protocols","Implementation of the unary RPC protocol as per DiemNet …",null,null],[0,"error","network::protocols::rpc","Rpc protocol errors",null,null],[4,"RpcError","network::protocols::rpc::error","",null,null],[13,"Error","","",32,null],[13,"IoError","","",32,null],[13,"BcsError","","",32,null],[13,"NotConnected","","",32,null],[13,"InvalidRpcResponse","","",32,null],[13,"UnexpectedRpcResponse","","",32,null],[13,"UnexpectedRpcRequest","","",32,null],[13,"UnexpectedResponseChannelCancel","","",32,null],[13,"ApplicationError","","",32,null],[13,"MpscSendError","","",32,null],[13,"TooManyPending","","",32,null],[13,"TimedOut","","",32,null],[3,"InboundRpcRequest","network::protocols::rpc","A wrapper struct for an inbound rpc request and its …",null,null],[12,"protocol_id","","The [<code>ProtocolId</code>] for which of our upstream application …",33,null],[12,"data","","The serialized request data received from the sender. At …",33,null],[12,"res_tx","","Channel over which the rpc response is sent from the …",33,null],[3,"OutboundRpcRequest","","A wrapper struct for an outbound rpc request and its …",null,null],[12,"protocol_id","","The remote peer\'s application module that should handle …",34,null],[12,"data","","The serialized request data to be sent to the receiver. …",34,null],[12,"res_tx","","Channel over which the rpc response is sent from the rpc …",34,null],[12,"timeout","","The timeout duration for the entire rpc call. If the …",34,null],[3,"InboundRpcs","","<code>InboundRpcs</code> handles new inbound rpc requests off the …",null,null],[11,"new","","",35,[[["arc",3],["networkcontext",3],["timeservice",4],["peerid",3],["duration",3]]]],[11,"handle_inbound_request","","Handle a new inbound <code>RpcRequest</code> message off the wire.",35,[[["sender",3],["rpcrequest",3]],[["result",4],["rpcerror",4]]]],[11,"next_completed_response","","Method for <code>Peer</code> actor to drive the pending inbound rpc …",35,[[]]],[11,"send_outbound_response","","Handle a completed response from the application handler. …",35,[[["sender",3],["rpcresponse",3],["result",4],["rpcerror",4]]]],[3,"OutboundRpcs","","<code>OutboundRpcs</code> handles new outbound rpc requests made from …",null,null],[11,"new","","",36,[[["arc",3],["networkcontext",3],["timeservice",4],["peerid",3]]]],[11,"handle_outbound_request","","Handle a new outbound rpc request from the application …",36,[[["sender",3],["outboundrpcrequest",3]]]],[11,"next_completed_request","","Method for <code>Peer</code> actor to drive the pending outbound rpc …",36,[[]]],[11,"handle_completed_request","","Handle a newly completed task from the …",36,[[["requestid",6],["result",4],["rpcerror",4]]]],[11,"handle_inbound_response","","Handle a new inbound <code>RpcResponse</code> message. If we have a …",36,[[["rpcresponse",3]]]],[0,"health_checker","network::protocols","Protocol used to ensure peer liveness",null,null],[0,"builder","network::protocols::health_checker","",null,null],[3,"HealthCheckerBuilder","network::protocols::health_checker::builder","",null,null],[11,"create","","",37,[[["arc",3],["networkcontext",3],["timeservice",4],["healthcheckernetworksender",3],["healthcheckernetworkevents",6]]]],[11,"build","","",37,[[["handle",3]]]],[11,"start","","",37,[[["handle",3]]]],[6,"HealthCheckerNetworkEvents","network::protocols::health_checker","The interface from Network to HealthChecker layer.",null,null],[3,"HealthCheckerNetworkSender","","The interface from HealthChecker to Networking layer.",null,null],[5,"network_endpoint_config","","Configuration for the network endpoints to support …",null,[[]]],[11,"send_rpc","","Send a HealthChecker Ping RPC request to remote peer …",38,[[["duration",3],["peerid",3],["healthcheckermsg",4]]]],[11,"disconnect_peer","","",38,[[["peerid",3]]]],[4,"HealthCheckerMsg","","",null,null],[13,"Ping","","",39,null],[13,"Pong","","",39,null],[3,"Ping","","",null,null],[3,"Pong","","",null,null],[3,"HealthChecker","","The actor performing health checks by running the Ping …",null,null],[11,"new","","Create new instance of the [<code>HealthChecker</code>] actor.",40,[[["arc",3],["networkcontext",3],["timeservice",4],["healthcheckernetworksender",3],["healthcheckernetworkevents",6],["duration",3]]]],[11,"start","","",40,[[]]],[0,"identity","network::protocols","Protocol used to exchange supported protocol information …",null,null],[5,"exchange_handshake","network::protocols::identity","The Handshake exchange protocol.",null,[[["handshakemsg",3]]]],[0,"wire","network::protocols","This module defines the structs transported during the …",null,null],[0,"handshake","network::protocols::wire","",null,null],[0,"v1","network::protocols::wire::handshake","This module defines the structs transported during the …",null,null],[4,"ProtocolId","network::protocols::wire::handshake::v1","Unique identifier associated with each application …",null,null],[13,"ConsensusRpc","","",41,null],[13,"ConsensusDirectSend","","",41,null],[13,"MempoolDirectSend","","",41,null],[13,"StateSyncDirectSend","","",41,null],[13,"DiscoveryDirectSend","","",41,null],[13,"HealthCheckerRpc","","",41,null],[11,"as_str","","",41,[[]]],[3,"SupportedProtocols","","A bit vector of supported [<code>ProtocolId</code>]s.",null,null],[4,"MessagingProtocolVersion","","Enum representing different versions of the Diem network …",null,null],[13,"V1","","",42,null],[4,"HandshakeError","","An enum to list the possible errors during the diem …",null,null],[13,"InvalidChainId","","",43,null],[13,"InvalidNetworkId","","",43,null],[13,"NoCommonProtocols","","",43,null],[3,"HandshakeMsg","","The HandshakeMsg contains a mapping from […",null,null],[12,"supported_protocols","","",44,null],[12,"chain_id","","",44,null],[12,"network_id","","",44,null],[11,"perform_handshake","","This function:",44,[[["handshakemsg",3]],[["result",4],["handshakeerror",4]]]],[0,"messaging","network::protocols::wire","",null,null],[0,"v1","network::protocols::wire::messaging","This module defines the DiemNet v1 message types, how …",null,null],[4,"NetworkMessage","network::protocols::wire::messaging::v1","Most primitive message type set on the network.",null,null],[13,"Error","","",45,null],[13,"RpcRequest","","",45,null],[13,"RpcResponse","","",45,null],[13,"DirectSendMsg","","",45,null],[4,"ErrorCode","","",null,null],[13,"ParsingError","","Failed to parse NetworkMessage when interpreting …",46,null],[13,"NotSupported","","A message was received for a protocol that is not …",46,null],[11,"parsing_error","","",46,[[]]],[3,"ParsingErrorType","","Flags an invalid network message with as much header …",null,null],[4,"NotSupportedType","","Flags an unsupported network message.  This is a message …",null,null],[13,"RpcRequest","","",47,null],[13,"DirectSendMsg","","",47,null],[6,"RequestId","","Create alias RequestId for u32.",null,null],[6,"Priority","","Create alias Priority for u8.",null,null],[3,"RpcRequest","","",null,null],[12,"protocol_id","","<code>protocol_id</code> is a variant of the ProtocolId enum.",48,null],[12,"request_id","","RequestId for the RPC Request.",48,null],[12,"priority","","Request priority in the range 0..=255.",48,null],[12,"raw_request","","Request payload. This will be parsed by the …",48,null],[3,"RpcResponse","","",null,null],[12,"request_id","","RequestId for corresponding request. This is copied as is …",49,null],[12,"priority","","Response priority in the range 0..=255. This will likely …",49,null],[12,"raw_response","","Response payload.",49,null],[3,"DirectSendMsg","","",null,null],[12,"protocol_id","","<code>protocol_id</code> is a variant of the ProtocolId enum.",50,null],[12,"priority","","Message priority in the range 0..=255.",50,null],[12,"raw_msg","","Message payload.",50,null],[4,"ReadError","","Errors from reading and deserializing network messages …",null,null],[13,"DeserializeError","","",51,null],[13,"IoError","","",51,null],[4,"WriteError","","Errors from serializing and sending network messages on …",null,null],[13,"SerializeError","","",52,null],[13,"IoError","","",52,null],[5,"network_message_frame_codec","","Returns a fully configured length-delimited codec for …",null,[[],["lengthdelimitedcodec",3]]],[3,"NetworkMessageStream","","A <code>Stream</code> of inbound <code>NetworkMessage</code>s read and deserialized …",null,null],[11,"new","","",53,[[["option",4],["sharedbucket",6]]]],[3,"NetworkMessageSink","","A <code>Sink</code> of outbound <code>NetworkMessage</code>s that will be …",null,null],[11,"new","","",54,[[["option",4],["sharedbucket",6]]]],[0,"transport","network","",null,null],[17,"TRANSPORT_TIMEOUT","network::transport","A timeout for the connection to open and complete all of …",null,null],[17,"SUPPORTED_MESSAGING_PROTOCOL","","Currently supported messaging protocol version. TODO: Add …",null,null],[17,"DIEM_TCP_TRANSPORT","","tcp::Transport with Diem-specific configuration applied.",null,null],[8,"TSocket","","A trait alias for \\\"socket-like\\\" things.",null,null],[3,"ConnectionId","","Unique local identifier for a connection.",null,null],[3,"ConnectionMetadata","","Metadata associated with an established and fully …",null,null],[12,"remote_peer_id","","",55,null],[12,"connection_id","","",55,null],[12,"addr","","",55,null],[12,"origin","","",55,null],[12,"messaging_protocol","","",55,null],[12,"application_protocols","","",55,null],[12,"role","","",55,null],[11,"new","","",55,[[["networkaddress",3],["supportedprotocols",3],["peerid",3],["connectionid",3],["connectionorigin",4],["peerrole",4],["messagingprotocolversion",4]],["connectionmetadata",3]]],[11,"mock","","",55,[[["peerid",3]],["connectionmetadata",3]]],[11,"mock_with_role_and_origin","","",55,[[["peerrole",4],["peerid",3],["connectionorigin",4]],["connectionmetadata",3]]],[3,"Connection","","The <code>Connection</code> struct consists of connection metadata and …",null,null],[12,"socket","","",56,null],[12,"metadata","","",56,null],[3,"DiemNetTransport","","The common DiemNet Transport.",null,null],[11,"new","","",57,[[["arc",3],["chainid",3],["networkcontext",3],["timeservice",4],["supportedprotocols",3],["handshakeauthmode",4],["privatekey",3]]]],[11,"dial","","Dial a peer at <code>addr</code>. If the <code>addr</code> is not supported or …",57,[[["networkaddress",3],["peerid",3]],["result",6]]],[11,"listen_on","","Listen on address <code>addr</code>. If the <code>addr</code> is not supported or …",57,[[["networkaddress",3]],["result",6]]],[0,"fuzzing","network","",null,null],[5,"fuzz_network_handshake_protocol_exchange","network::fuzzing","Fuzzing the handshake protocol, which negotiates …",null,[[["handshakemsg",3],["vec",3]]]],[5,"fuzz_network_handshake_protocol_negotiation","","Same function as fuzz_network_handshake_protocol_exchange …",null,[[["handshakemsg",3]]]],[5,"exchange_handshake_input","","Builds two HandshakeMsg and serializes the second one. It …",null,[[]]],[5,"perform_handshake_input","","Builds two HandshakeMsg and serializes the second one. It …",null,[[]]],[0,"testutils","network","",null,null],[0,"fake_socket","network::testutils","This module exposes two types of sockets useful for tests:",null,null],[3,"ReadOnlyTestSocket","network::testutils::fake_socket","",null,null],[11,"new","","",58,[[]]],[11,"set_fragmented_read","","reads will be done byte-by-byte",58,[[]]],[11,"set_trailing","","reads will never return pending, but 0s",58,[[]]],[3,"ReadOnlyTestSocketVec","","",null,null],[11,"new","","",59,[[["vec",3]]]],[11,"set_fragmented_read","","reads will be done byte-by-byte",59,[[]]],[11,"set_trailing","","reads will never return pending, but 0s",59,[[]]],[3,"ReadWriteTestSocket","","",null,null],[11,"save_writing","","the vec passed as argument will expand to store any …",60,[[["vec",3]]]],[11,"set_fragmented_read","","reads will be done byte-by-byte",60,[[]]],[11,"set_fragmented_write","","writes will be done byte-by-byte",60,[[]]],[11,"new_pair","","Creates a new pair of sockets",60,[[]]],[6,"DisconnectReason","network","",null,null],[6,"ConnectivityRequest","","",null,null],[6,"ProtocolId","","",null,null],[11,"from","network::connectivity_manager::builder","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","network::connectivity_manager","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"equivalent","","",1,[[]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","network::error","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_string","","",61,[[],["string",3]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"init","","",61,[[]]],[11,"deref","","",61,[[]]],[11,"deref_mut","","",61,[[]]],[11,"drop","","",61,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"equivalent","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","network::logging","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","network::noise::error","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","network::noise::handshake","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","network::noise::stream","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","network::peer","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"test_only_hash","","",14,[[],["hashvalue",3]]],[11,"equivalent","","",14,[[]]],[11,"erased_serialize","","",14,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","network::peer_manager::builder","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","network::peer_manager","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"test_only_hash","","",19,[[],["hashvalue",3]]],[11,"erased_serialize","","",19,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"test_only_hash","","",21,[[],["hashvalue",3]]],[11,"erased_serialize","","",21,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"test_only_hash","","",22,[[],["hashvalue",3]]],[11,"erased_serialize","","",22,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"test_only_hash","","",26,[[],["hashvalue",3]]],[11,"erased_serialize","","",26,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","network::protocols::direct_send","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"test_only_hash","","",27,[[],["hashvalue",3]]],[11,"equivalent","","",27,[[]]],[11,"erased_serialize","","",27,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"from","network::protocols::network","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"init","","",62,[[]]],[11,"deref","","",62,[[]]],[11,"deref_mut","","",62,[[]]],[11,"drop","","",62,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"from","network::protocols::rpc::error","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_string","","",32,[[],["string",3]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"from","network::protocols::rpc","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"test_only_hash","","",34,[[],["hashvalue",3]]],[11,"erased_serialize","","",34,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"from","network::protocols::health_checker::builder","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"from","network::protocols::health_checker","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"test_only_hash","","",39,[[],["hashvalue",3]]],[11,"erased_serialize","","",39,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"test_only_hash","","",63,[[],["hashvalue",3]]],[11,"erased_serialize","","",63,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",63,[[]]],[11,"deref","","",63,[[]]],[11,"deref_mut","","",63,[[]]],[11,"drop","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"test_only_hash","","",64,[[],["hashvalue",3]]],[11,"erased_serialize","","",64,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",64,[[]]],[11,"deref","","",64,[[]]],[11,"deref_mut","","",64,[[]]],[11,"drop","","",64,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"from","network::protocols::wire::handshake::v1","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"to_string","","",41,[[],["string",3]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"test_only_hash","","",41,[[],["hashvalue",3]]],[11,"equivalent","","",41,[[]]],[11,"erased_serialize","","",41,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",41,[[]]],[11,"deref","","",41,[[]]],[11,"deref_mut","","",41,[[]]],[11,"drop","","",41,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"test_only_hash","","",65,[[],["hashvalue",3]]],[11,"erased_serialize","","",65,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",65,[[]]],[11,"deref","","",65,[[]]],[11,"deref_mut","","",65,[[]]],[11,"drop","","",65,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"to_string","","",42,[[],["string",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"test_only_hash","","",42,[[],["hashvalue",3]]],[11,"equivalent","","",42,[[]]],[11,"erased_serialize","","",42,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_string","","",43,[[],["string",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"test_only_hash","","",44,[[],["hashvalue",3]]],[11,"erased_serialize","","",44,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"from","network::protocols::wire::messaging::v1","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"test_only_hash","","",45,[[],["hashvalue",3]]],[11,"erased_serialize","","",45,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"test_only_hash","","",46,[[],["hashvalue",3]]],[11,"erased_serialize","","",46,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",46,[[]]],[11,"deref","","",46,[[]]],[11,"deref_mut","","",46,[[]]],[11,"drop","","",46,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"test_only_hash","","",66,[[],["hashvalue",3]]],[11,"erased_serialize","","",66,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",66,[[]]],[11,"deref","","",66,[[]]],[11,"deref_mut","","",66,[[]]],[11,"drop","","",66,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"test_only_hash","","",47,[[],["hashvalue",3]]],[11,"erased_serialize","","",47,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",47,[[]]],[11,"deref","","",47,[[]]],[11,"deref_mut","","",47,[[]]],[11,"drop","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"test_only_hash","","",48,[[],["hashvalue",3]]],[11,"erased_serialize","","",48,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",48,[[]]],[11,"deref","","",48,[[]]],[11,"deref_mut","","",48,[[]]],[11,"drop","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"test_only_hash","","",49,[[],["hashvalue",3]]],[11,"erased_serialize","","",49,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",49,[[]]],[11,"deref","","",49,[[]]],[11,"deref_mut","","",49,[[]]],[11,"drop","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"test_only_hash","","",50,[[],["hashvalue",3]]],[11,"erased_serialize","","",50,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",50,[[]]],[11,"deref","","",50,[[]]],[11,"deref_mut","","",50,[[]]],[11,"drop","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_string","","",51,[[],["string",3]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"init","","",51,[[]]],[11,"deref","","",51,[[]]],[11,"deref_mut","","",51,[[]]],[11,"drop","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_string","","",52,[[],["string",3]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"init","","",52,[[]]],[11,"deref","","",52,[[]]],[11,"deref_mut","","",52,[[]]],[11,"drop","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"try_poll_next","","",53,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"init","","",53,[[]]],[11,"deref","","",53,[[]]],[11,"deref_mut","","",53,[[]]],[11,"drop","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"init","","",54,[[]]],[11,"deref","","",54,[[]]],[11,"deref_mut","","",54,[[]]],[11,"drop","","",54,[[]]],[11,"from","network::transport","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"test_only_hash","","",67,[[],["hashvalue",3]]],[11,"equivalent","","",67,[[]]],[11,"erased_serialize","","",67,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",67,[[]]],[11,"deref","","",67,[[]]],[11,"deref_mut","","",67,[[]]],[11,"drop","","",67,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"to_string","","",55,[[],["string",3]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"test_only_hash","","",55,[[],["hashvalue",3]]],[11,"erased_serialize","","",55,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",55,[[]]],[11,"deref","","",55,[[]]],[11,"deref_mut","","",55,[[]]],[11,"drop","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"init","","",56,[[]]],[11,"deref","","",56,[[]]],[11,"deref_mut","","",56,[[]]],[11,"drop","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"init","","",57,[[]]],[11,"deref","","",57,[[]]],[11,"deref_mut","","",57,[[]]],[11,"drop","","",57,[[]]],[11,"from","network::testutils::fake_socket","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"init","","",58,[[]]],[11,"deref","","",58,[[]]],[11,"deref_mut","","",58,[[]]],[11,"drop","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"init","","",59,[[]]],[11,"deref","","",59,[[]]],[11,"deref_mut","","",59,[[]]],[11,"drop","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"init","","",60,[[]]],[11,"deref","","",60,[[]]],[11,"deref_mut","","",60,[[]]],[11,"drop","","",60,[[]]],[11,"new","network::protocols::network","",62,[[["peermanagernotification",4],["receiver",3],["peerid",3],["connectionnotification",4],["receiver",3]]]],[11,"new","","",31,[[["connectionrequestsender",3],["peermanagerrequestsender",3]]]],[11,"new","network::protocols::health_checker","",38,[[["connectionrequestsender",3],["peermanagerrequestsender",3]]]],[11,"from","network::error","",61,[[["networkerrorkind",4]],["networkerror",3]]],[11,"from","","",61,[[["error",3]],["networkerror",3]]],[11,"from","","",61,[[["error",3]],["networkerror",3]]],[11,"from","","",61,[[["error",4]],["networkerror",3]]],[11,"from","","",61,[[["peermanagererror",4]],["networkerror",3]]],[11,"from","network::peer_manager","",18,[[["error",3]]]],[11,"from","","",18,[[["error",3]]]],[11,"from","","",18,[[["readerror",4]]]],[11,"from","","",18,[[["writeerror",4]]]],[11,"from","","",18,[[["canceled",3]]]],[11,"from","","",18,[[["error",4]]]],[11,"from","","",18,[[["senderror",3]]]],[11,"from","network::protocols::rpc::error","",32,[[["error",3]]]],[11,"from","","",32,[[["error",3]]]],[11,"from","","",32,[[["error",4]]]],[11,"from","","",32,[[["senderror",3]]]],[11,"from","","",32,[[["peermanagererror",4]]]],[11,"from","","",32,[[["canceled",3]]]],[11,"from","","",32,[[["elapsed",3]],["rpcerror",4]]],[11,"from","network::protocols::wire::handshake::v1","",65,[[]]],[11,"from","network::protocols::wire::messaging::v1","",51,[[["error",3]]]],[11,"from","","",52,[[["error",3]]]],[11,"from","network::transport","",67,[[],["connectionid",3]]],[11,"clone","network::connectivity_manager","",1,[[],["discoverysource",4]]],[11,"clone","network::error","",4,[[],["networkerrorkind",4]]],[11,"clone","network::peer","",14,[[],["disconnectreason",4]]],[11,"clone","network::peer_manager","",22,[[],["connectionnotification",4]]],[11,"clone","","",23,[[],["peermanagerrequestsender",3]]],[11,"clone","","",24,[[],["connectionrequestsender",3]]],[11,"clone","network::protocols::direct_send","",27,[[],["message",3]]],[11,"clone","network::protocols::network","",31,[[],["networksender",3]]],[11,"clone","network::protocols::health_checker","",38,[[],["healthcheckernetworksender",3]]],[11,"clone","","",39,[[],["healthcheckermsg",4]]],[11,"clone","","",63,[[],["ping",3]]],[11,"clone","","",64,[[],["pong",3]]],[11,"clone","network::protocols::wire::handshake::v1","",41,[[],["protocolid",4]]],[11,"clone","","",65,[[],["supportedprotocols",3]]],[11,"clone","","",42,[[],["messagingprotocolversion",4]]],[11,"clone","","",44,[[],["handshakemsg",3]]],[11,"clone","network::protocols::wire::messaging::v1","",45,[[],["networkmessage",4]]],[11,"clone","","",46,[[],["errorcode",4]]],[11,"clone","","",66,[[],["parsingerrortype",3]]],[11,"clone","","",47,[[],["notsupportedtype",4]]],[11,"clone","","",48,[[],["rpcrequest",3]]],[11,"clone","","",49,[[],["rpcresponse",3]]],[11,"clone","","",50,[[],["directsendmsg",3]]],[11,"clone","network::transport","",67,[[],["connectionid",3]]],[11,"clone","","",55,[[],["connectionmetadata",3]]],[11,"default","network::noise::handshake","",7,[[],["antireplaytimestamps",3]]],[11,"default","network::protocols::wire::handshake::v1","",65,[[],["supportedprotocols",3]]],[11,"default","","",44,[[],["handshakemsg",3]]],[11,"default","network::transport","",67,[[],["connectionid",3]]],[11,"cmp","network::connectivity_manager","",1,[[["discoverysource",4]],["ordering",4]]],[11,"cmp","network::protocols::wire::handshake::v1","",42,[[["messagingprotocolversion",4]],["ordering",4]]],[11,"eq","network::connectivity_manager","",1,[[["discoverysource",4]]]],[11,"eq","network::error","",4,[[["networkerrorkind",4]]]],[11,"eq","network::peer","",13,[[["peernotification",4]]]],[11,"ne","","",13,[[["peernotification",4]]]],[11,"eq","","",14,[[["disconnectreason",4]]]],[11,"eq","network::peer_manager","",22,[[["connectionnotification",4]]]],[11,"ne","","",22,[[["connectionnotification",4]]]],[11,"eq","network::protocols::direct_send","",27,[[["message",3]]]],[11,"ne","","",27,[[["message",3]]]],[11,"eq","network::protocols::network","",28,[[["event",4]]]],[11,"eq","network::protocols::rpc","",33,[[]]],[11,"eq","network::protocols::wire::handshake::v1","",41,[[["protocolid",4]]]],[11,"eq","","",65,[[["supportedprotocols",3]]]],[11,"ne","","",65,[[["supportedprotocols",3]]]],[11,"eq","","",42,[[["messagingprotocolversion",4]]]],[11,"eq","network::protocols::wire::messaging::v1","",45,[[["networkmessage",4]]]],[11,"ne","","",45,[[["networkmessage",4]]]],[11,"eq","","",46,[[["errorcode",4]]]],[11,"ne","","",46,[[["errorcode",4]]]],[11,"eq","","",66,[[["parsingerrortype",3]]]],[11,"ne","","",66,[[["parsingerrortype",3]]]],[11,"eq","","",47,[[["notsupportedtype",4]]]],[11,"ne","","",47,[[["notsupportedtype",4]]]],[11,"eq","","",48,[[["rpcrequest",3]]]],[11,"ne","","",48,[[["rpcrequest",3]]]],[11,"eq","","",49,[[["rpcresponse",3]]]],[11,"ne","","",49,[[["rpcresponse",3]]]],[11,"eq","","",50,[[["directsendmsg",3]]]],[11,"ne","","",50,[[["directsendmsg",3]]]],[11,"eq","network::transport","",67,[[["connectionid",3]]]],[11,"ne","","",67,[[["connectionid",3]]]],[11,"eq","","",55,[[["connectionmetadata",3]]]],[11,"ne","","",55,[[["connectionmetadata",3]]]],[11,"partial_cmp","network::connectivity_manager","",1,[[["discoverysource",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","network::protocols::wire::handshake::v1","",42,[[["messagingprotocolversion",4]],[["option",4],["ordering",4]]]],[11,"fmt","network::connectivity_manager","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","network::error","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","network::noise::error","",6,[[["formatter",3]],["result",6]]],[11,"fmt","network::noise::stream","",11,[[["formatter",3]],["result",6]]],[11,"fmt","network::peer","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","network::peer_manager::builder","",16,[[["formatter",3]],["result",6]]],[11,"fmt","network::peer_manager","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","network::protocols::direct_send","",27,[[["formatter",3]],["result",6]]],[11,"fmt","network::protocols::network","",28,[[["formatter",3]],["result",6]]],[11,"fmt","network::protocols::rpc::error","",32,[[["formatter",3]],["result",6]]],[11,"fmt","network::protocols::rpc","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","network::protocols::health_checker","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","network::protocols::wire::handshake::v1","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","network::protocols::wire::messaging::v1","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","network::transport","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","network::testutils::fake_socket","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","network::connectivity_manager","",1,[[["formatter",3]],["result",6]]],[11,"fmt","network::error","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","network::noise::error","",6,[[["formatter",3]],["result",6]]],[11,"fmt","network::peer","",14,[[["formatter",3]],["result",6]]],[11,"fmt","network::peer_manager","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","network::protocols::rpc::error","",32,[[["formatter",3]],["result",6]]],[11,"fmt","network::protocols::wire::handshake::v1","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","network::protocols::wire::messaging::v1","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","network::transport","",55,[[["formatter",3]],["result",6]]],[11,"hash","network::protocols::wire::handshake::v1","",41,[[]]],[11,"hash","","",42,[[]]],[11,"hash","network::transport","",67,[[]]],[11,"try_into","network::protocols::wire::handshake::v1","",65,[[],[["vec",3],["result",6]]]],[11,"source","network::error","",61,[[],[["error",8],["option",4]]]],[11,"source","network::peer_manager","",18,[[],[["error",8],["option",4]]]],[11,"source","network::protocols::rpc::error","",32,[[],[["error",8],["option",4]]]],[11,"source","network::protocols::wire::messaging::v1","",51,[[],[["error",8],["option",4]]]],[11,"source","","",52,[[],[["error",8],["option",4]]]],[11,"deserialize","network::protocols::health_checker","",39,[[],["result",4]]],[11,"deserialize","","",63,[[],["result",4]]],[11,"deserialize","","",64,[[],["result",4]]],[11,"deserialize","network::protocols::wire::handshake::v1","",41,[[],["result",4]]],[11,"deserialize","","",65,[[],["result",4]]],[11,"deserialize","","",42,[[],["result",4]]],[11,"deserialize","","",44,[[],["result",4]]],[11,"deserialize","network::protocols::wire::messaging::v1","",45,[[],["result",4]]],[11,"deserialize","","",46,[[],["result",4]]],[11,"deserialize","","",66,[[],["result",4]]],[11,"deserialize","","",47,[[],["result",4]]],[11,"deserialize","","",48,[[],["result",4]]],[11,"deserialize","","",49,[[],["result",4]]],[11,"deserialize","","",50,[[],["result",4]]],[11,"serialize","network::connectivity_manager","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","network::peer","",14,[[],["result",4]]],[11,"serialize","network::peer_manager","",19,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","","",22,[[],["result",4]]],[11,"serialize","","",26,[[],["result",4]]],[11,"serialize","network::protocols::direct_send","",27,[[],["result",4]]],[11,"serialize","network::protocols::rpc","",34,[[],["result",4]]],[11,"serialize","network::protocols::health_checker","",39,[[],["result",4]]],[11,"serialize","","",63,[[],["result",4]]],[11,"serialize","","",64,[[],["result",4]]],[11,"serialize","network::protocols::wire::handshake::v1","",41,[[],["result",4]]],[11,"serialize","","",65,[[],["result",4]]],[11,"serialize","","",42,[[],["result",4]]],[11,"serialize","","",44,[[],["result",4]]],[11,"serialize","network::protocols::wire::messaging::v1","",45,[[],["result",4]]],[11,"serialize","","",46,[[],["result",4]]],[11,"serialize","","",66,[[],["result",4]]],[11,"serialize","","",47,[[],["result",4]]],[11,"serialize","","",48,[[],["result",4]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","","",50,[[],["result",4]]],[11,"serialize","network::transport","",67,[[],["result",4]]],[11,"serialize","","",55,[[],["result",4]]],[11,"arbitrary_with","network::protocols::wire::handshake::v1","",41,[[]]],[11,"arbitrary_with","","",65,[[]]],[11,"arbitrary_with","","",42,[[]]],[11,"arbitrary_with","network::protocols::wire::messaging::v1","",45,[[]]],[11,"arbitrary_with","","",46,[[]]],[11,"arbitrary_with","","",66,[[]]],[11,"arbitrary_with","","",47,[[]]],[11,"arbitrary_with","","",48,[[]]],[11,"arbitrary_with","","",49,[[]]],[11,"arbitrary_with","","",50,[[]]],[11,"visit","network::logging","",5,[[["visitor",8]]]],[11,"is_terminated","network::protocols::network","",62,[[]]],[11,"poll_next","","",62,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",62,[[]]],[11,"poll_next","network::protocols::wire::messaging::v1","",53,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_ready","","",54,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",54,[[["networkmessage",4],["pin",3]],["result",4]]],[11,"poll_flush","","",54,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",54,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_read","network::noise::stream","",11,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_read","network::testutils::fake_socket","",58,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",59,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",60,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_write","network::noise::stream","",11,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",11,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_close","","",11,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write","network::testutils::fake_socket","",58,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",58,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_close","","Attempt to close the channel. Cannot Fail.",58,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",59,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",59,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_close","","Attempt to close the channel. Cannot Fail.",59,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",60,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",60,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_close","","Attempt to close the channel. Cannot Fail.",60,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"dial","network::transport","",57,[[["networkaddress",3],["peerid",3]],["result",6]]],[11,"listen_on","","",57,[[["networkaddress",3]],["result",6]]],[11,"from_transport_error","network::peer_manager","",18,[[["into",8],["error",3]]]]],"p":[[3,"ConnectivityManagerBuilder"],[4,"DiscoverySource"],[4,"ConnectivityRequest"],[3,"ConnectivityManager"],[4,"NetworkErrorKind"],[3,"NetworkSchema"],[4,"NoiseHandshakeError"],[3,"AntiReplayTimestamps"],[4,"HandshakeAuthMode"],[13,"Mutual"],[3,"NoiseUpgrader"],[3,"NoiseStream"],[4,"PeerRequest"],[4,"PeerNotification"],[4,"DisconnectReason"],[3,"Peer"],[4,"AuthenticationMode"],[3,"PeerManagerBuilder"],[4,"PeerManagerError"],[4,"PeerManagerRequest"],[4,"PeerManagerNotification"],[4,"ConnectionRequest"],[4,"ConnectionNotification"],[3,"PeerManagerRequestSender"],[3,"ConnectionRequestSender"],[3,"PeerManager"],[4,"TransportNotification"],[3,"Message"],[4,"Event"],[8,"NewNetworkEvents"],[8,"NewNetworkSender"],[3,"NetworkSender"],[4,"RpcError"],[3,"InboundRpcRequest"],[3,"OutboundRpcRequest"],[3,"InboundRpcs"],[3,"OutboundRpcs"],[3,"HealthCheckerBuilder"],[3,"HealthCheckerNetworkSender"],[4,"HealthCheckerMsg"],[3,"HealthChecker"],[4,"ProtocolId"],[4,"MessagingProtocolVersion"],[4,"HandshakeError"],[3,"HandshakeMsg"],[4,"NetworkMessage"],[4,"ErrorCode"],[4,"NotSupportedType"],[3,"RpcRequest"],[3,"RpcResponse"],[3,"DirectSendMsg"],[4,"ReadError"],[4,"WriteError"],[3,"NetworkMessageStream"],[3,"NetworkMessageSink"],[3,"ConnectionMetadata"],[3,"Connection"],[3,"DiemNetTransport"],[3,"ReadOnlyTestSocket"],[3,"ReadOnlyTestSocketVec"],[3,"ReadWriteTestSocket"],[3,"NetworkError"],[3,"NetworkEvents"],[3,"Ping"],[3,"Pong"],[3,"SupportedProtocols"],[3,"ParsingErrorType"],[3,"ConnectionId"]]},\
"network_builder":{"doc":"","i":[[4,"RpcError","network_builder","",null,null],[13,"Error","","",0,null],[13,"IoError","","",0,null],[13,"BcsError","","",0,null],[13,"NotConnected","","",0,null],[13,"InvalidRpcResponse","","",0,null],[13,"UnexpectedRpcResponse","","",0,null],[13,"UnexpectedRpcRequest","","",0,null],[13,"UnexpectedResponseChannelCancel","","",0,null],[13,"ApplicationError","","",0,null],[13,"MpscSendError","","",0,null],[13,"TooManyPending","","",0,null],[13,"TimedOut","","",0,null],[0,"builder","","Remotely authenticated vs. unauthenticated network …",null,null],[3,"NetworkBuilder","network_builder::builder","Build Network module with custom configuration values. …",null,null],[11,"new","","Return a new NetworkBuilder initialized with default …",1,[[["rwlock",3],["networkaddress",3],["timeservice",4],["chainid",3],["arc",3],["authenticationmode",4],["arc",3],["ratelimitconfig",3],["option",4],["networkcontext",3]]]],[11,"new_for_test","","",1,[[["timeservice",4],["rwlock",3],["arc",3],["chainid",3],["networkaddress",3],["authenticationmode",4],["arc",3],["peerset",6],["networkcontext",3]],["networkbuilder",3]]],[11,"create","","Create a new NetworkBuilder based on the provided …",1,[[["chainid",3],["roletype",4],["networkconfig",3],["timeservice",4]],["networkbuilder",3]]],[11,"build","","Create the configured Networking components.",1,[[["handle",3]]]],[11,"start","","Start the built Networking components.",1,[[]]],[11,"reconfig_subscriptions","","",1,[[],["vec",3]]],[11,"network_context","","",1,[[],[["networkcontext",3],["arc",3]]]],[11,"conn_mgr_reqs_tx","","",1,[[],[["sender",3],["option",4]]]],[11,"listen_address","","",1,[[],["networkaddress",3]]],[11,"add_connectivity_manager","","Add a [<code>ConnectivityManager</code>] to the network.",1,[[["rwlock",3],["peerset",6],["arc",3]]]],[11,"add_protocol_handler","","Adds a endpoints for the provided configuration.  Returns …",1,[[]]],[0,"dummy","network_builder","Integration tests for validator_network.",null,null],[3,"DummyMsg","network_builder::dummy","",null,null],[12,"0","","",2,null],[5,"network_endpoint_config","","",null,[[]]],[6,"DummyNetworkEvents","","TODO(davidiw): In DummyNetwork, replace DummyMsg with a …",null,null],[3,"DummyNetworkSender","","",null,null],[11,"send_to","","",3,[[["peerid",3],["dummymsg",3]],[["networkerror",3],["result",4]]]],[11,"send_rpc","","",3,[[["peerid",3],["dummymsg",3],["duration",3]]]],[3,"DummyNetwork","","",null,null],[12,"runtime","","",4,null],[12,"dialer_peer_id","","",4,null],[12,"dialer_events","","",4,null],[12,"dialer_sender","","",4,null],[12,"listener_peer_id","","",4,null],[12,"listener_events","","",4,null],[12,"listener_sender","","",4,null],[5,"setup_network","","The following sets up a 2 peer network and verifies …",null,[[],["dummynetwork",3]]],[11,"from","network_builder","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","network_builder::builder","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","network_builder::dummy","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["result",4],["ok",3],["error",3]]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"source","network_builder","",0,[[],[["error",8],["option",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"from","","",0,[[["error",3]],["rpcerror",4]]],[11,"from","","",0,[[["elapsed",3]],["rpcerror",4]]],[11,"from","","",0,[[["canceled",3]],["rpcerror",4]]],[11,"from","","",0,[[["senderror",3]],["rpcerror",4]]],[11,"from","","",0,[[["error",4]],["rpcerror",4]]],[11,"from","","",0,[[["peermanagererror",4]],["rpcerror",4]]],[11,"from","","",0,[[["error",3]],["rpcerror",4]]],[11,"clone","network_builder::dummy","",2,[[],["dummymsg",3]]],[11,"clone","","",3,[[],["dummynetworksender",3]]],[11,"eq","","",2,[[["dummymsg",3]]]],[11,"ne","","",2,[[["dummymsg",3]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"serialize","","",2,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"new","","",3,[[["peermanagerrequestsender",3],["connectionrequestsender",3]]]]],"p":[[4,"RpcError"],[3,"NetworkBuilder"],[3,"DummyMsg"],[3,"DummyNetworkSender"],[3,"DummyNetwork"]]},\
"network_simple_onchain_discovery":{"doc":"","i":[[0,"builder","network_simple_onchain_discovery","",null,null],[3,"ConfigurationChangeListenerBuilder","network_simple_onchain_discovery::builder","",null,null],[11,"create","","",0,[[["sender",3],["networkcontext",3],["encryptor",3],["onchainconfigpayload",3],["publickey",3],["arc",3],["receiver",3],["connectivityrequest",4]],["configurationchangelistenerbuilder",3]]],[11,"build","","",0,[[]]],[11,"start","","",0,[[["handle",3]]]],[7,"EVENT_PROCESSING_LOOP_IDLE_DURATION_S","network_simple_onchain_discovery","Histogram of idle time of spent in event processing loop",null,null],[7,"EVENT_PROCESSING_LOOP_BUSY_DURATION_S","","Histogram of busy time of spent in event processing loop",null,null],[7,"DISCOVERY_COUNTS","","",null,null],[7,"NETWORK_KEY_MISMATCH","","",null,null],[3,"ConfigurationChangeListener","","Listener which converts published  updates from the …",null,null],[5,"gen_simple_discovery_reconfig_subscription","","",null,[[]]],[11,"new","","Creates a new ConfigurationChangeListener",1,[[["sender",3],["networkcontext",3],["encryptor",3],["onchainconfigpayload",3],["publickey",3],["arc",3],["receiver",3],["connectivityrequest",4]]]],[11,"start","","Starts the listener to wait on reconfiguration events.",1,[[]]],[11,"from","network_simple_onchain_discovery::builder","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","network_simple_onchain_discovery","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]]],"p":[[3,"ConfigurationChangeListenerBuilder"],[3,"ConfigurationChangeListener"]]},\
"num_variants":{"doc":"Add an associated constant to an enum describing the …","i":[[24,"NumVariants","num_variants","Derives an associated constant with the number of …",null,null]],"p":[]},\
"proxy":{"doc":"","i":[[3,"Proxy","proxy","",null,null],[11,"new","","",0,[[]]],[11,"http","","",0,[[],["option",4]]],[11,"https","","",0,[[],["option",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]]],"p":[[3,"Proxy"]]},\
"resource_viewer":{"doc":"","i":[[3,"AnnotatedAccountStateBlob","resource_viewer","",null,null],[3,"AnnotatedMoveStruct","","",null,null],[12,"abilities","","",0,null],[12,"type_","","",0,null],[12,"value","","",0,null],[4,"AnnotatedMoveValue","","AnnotatedMoveValue is a fully expanded version of on …",null,null],[13,"U8","","",1,null],[13,"U64","","",1,null],[13,"U128","","",1,null],[13,"Bool","","",1,null],[13,"Address","","",1,null],[13,"Vector","","",1,null],[13,"Bytes","","",1,null],[13,"Struct","","",1,null],[3,"MoveValueAnnotator","","",null,null],[11,"new","","",2,[[["remotecache",8]]]],[11,"new_no_stdlib","","",2,[[["remotecache",8]]]],[11,"view_access_path","","",2,[[["accesspath",3]],[["result",6],["annotatedmovestruct",3]]]],[11,"view_resource","","",2,[[["structtag",3]],[["result",6],["annotatedmovestruct",3]]]],[11,"view_contract_event","","",2,[[["contractevent",4]],[["result",6],["annotatedmovevalue",4]]]],[11,"view_account_state","","",2,[[["accountstate",3]],[["result",6],["annotatedaccountstateblob",3]]]],[3,"NullStateView","","",null,null],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"default","","",4,[[],["nullstateview",3]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"get","","",4,[[["accesspath",3]],[["result",6],["option",4]]]],[11,"multi_get","","",4,[[],[["vec",3],["result",6]]]],[11,"is_genesis","","",4,[[]]],[11,"get_module","","",4,[[["moduleid",3]],[["option",4],["vmresult",6]]]],[11,"get_resource","","",4,[[["structtag",3],["accountaddress",3]],[["option",4],["partialvmresult",6]]]]],"p":[[3,"AnnotatedMoveStruct"],[4,"AnnotatedMoveValue"],[3,"MoveValueAnnotator"],[3,"AnnotatedAccountStateBlob"],[3,"NullStateView"]]},\
"safety_rules":{"doc":"","i":[[0,"fuzzing_utils","safety_rules","",null,null],[0,"fuzzing","safety_rules::fuzzing_utils","",null,null],[5,"fuzz_initialize","safety_rules::fuzzing_utils::fuzzing","",null,[[["epochchangeproof",3]],[["error",4],["result",4]]]],[5,"fuzz_construct_and_sign_vote","","",null,[[["maybesignedvoteproposal",3]],[["vote",3],["result",4],["error",4]]]],[5,"fuzz_handle_message","","",null,[[["safetyrulesinput",4]],[["result",4],["vec",3],["error",4]]]],[5,"fuzz_sign_proposal","","",null,[[["blockdata",3]],[["block",3],["result",4],["error",4]]]],[5,"fuzz_sign_timeout","","",null,[[["timeout",3]],[["result",4],["error",4],["ed25519signature",3]]]],[5,"arb_accumulator_extension_proof","safety_rules::fuzzing_utils","",null,[[]]],[5,"arb_block","","",null,[[]]],[5,"arb_block_data","","",null,[[]]],[5,"arb_block_type_proposal","","",null,[[]]],[5,"arb_maybe_signed_vote_proposal","","",null,[[]]],[5,"arb_epoch_change_proof","","",null,[[]]],[5,"arb_timeout","","",null,[[]]],[5,"arb_epoch_state","","",null,[[]]],[5,"arb_quorum_cert","","",null,[[]]],[5,"arb_validator_consensus_info","","",null,[[]]],[5,"arb_safety_rules_input","","",null,[[]]],[0,"test_utils","safety_rules","",null,null],[6,"Proof","safety_rules::test_utils","",null,null],[5,"empty_proof","","",null,[[],["proof",6]]],[5,"make_genesis","","",null,[[["validatorsigner",3]]]],[5,"make_proposal_with_qc_and_proof","","",null,[[["round",6],["validatorsigner",3],["payload",6],["proof",6],["quorumcert",3],["option",4],["ed25519privatekey",3]],["maybesignedvoteproposal",3]]],[5,"make_proposal_with_qc","","",null,[[["round",6],["validatorsigner",3],["quorumcert",3],["option",4],["ed25519privatekey",3]],["maybesignedvoteproposal",3]]],[5,"make_proposal_with_parent_and_overrides","","",null,[[["round",6],["maybesignedvoteproposal",3],["option",4],["ed25519privatekey",3],["option",4],["epochstate",3],["option",4],["payload",6],["validatorsigner",3],["option",4]],["maybesignedvoteproposal",3]]],[5,"make_proposal_with_parent","","",null,[[["round",6],["maybesignedvoteproposal",3],["payload",6],["option",4],["validatorsigner",3],["option",4],["ed25519privatekey",3]],["maybesignedvoteproposal",3]]],[5,"validator_signers_to_ledger_info","","",null,[[],["ledgerinfo",3]]],[5,"validator_signers_to_waypoint","","",null,[[],["waypoint",3]]],[5,"test_storage","","",null,[[["validatorsigner",3]],["persistentsafetystorage",3]]],[5,"test_safety_rules","","Returns a safety rules instance for testing purposes.",null,[[],["safetyrules",3]]],[5,"test_safety_rules_uninitialized","","Returns a safety rules instance that has not been …",null,[[],["safetyrules",3]]],[5,"test_serializer","","Returns a simple serializer for testing purposes.",null,[[],["serializerservice",3]]],[3,"ConsensusState","safety_rules","Public representation of the internal state of …",null,null],[4,"Error","","Different reasons for proposal rejection",null,null],[13,"IncorrectEpoch","","",0,null],[13,"IncorrectRound","","",0,null],[13,"IncorrectLastVotedRound","","",0,null],[13,"IncorrectPreferredRound","","",0,null],[13,"InvalidAccumulatorExtension","","",0,null],[13,"InvalidEpochChangeProof","","",0,null],[13,"InternalError","","",0,null],[13,"InvalidLedgerInfo","","",0,null],[13,"InvalidProposal","","",0,null],[13,"InvalidQuorumCertificate","","",0,null],[13,"NotInitialized","","",0,null],[13,"SecureStorageMissingDataError","","",0,null],[13,"SecureStorageUnexpectedError","","",0,null],[13,"SerializationError","","",0,null],[13,"ValidatorKeyNotFound","","",0,null],[13,"ValidatorNotInSet","","",0,null],[13,"VoteProposalSignatureNotFound","","",0,null],[3,"PersistentSafetyStorage","","SafetyRules needs an abstract storage interface to act as …",null,null],[3,"Process","","",null,null],[3,"SafetyRules","","@TODO consider a cache of verified QCs to cut down on …",null,null],[3,"SafetyRulesManager","","",null,null],[8,"TSafetyRules","","Interface for SafetyRules",null,null],[10,"consensus_state","","Provides the internal state of SafetyRules for monitoring …",1,[[],[["consensusstate",3],["error",4],["result",4]]]],[10,"initialize","","Initialize SafetyRules using an Epoch ending LedgerInfo, …",1,[[["epochchangeproof",3]],[["error",4],["result",4]]]],[10,"construct_and_sign_vote","","Attempts to vote for a given proposal following the …",1,[[["maybesignedvoteproposal",3]],[["vote",3],["result",4],["error",4]]]],[10,"sign_proposal","","As the holder of the private key, SafetyRules also signs …",1,[[["blockdata",3]],[["block",3],["result",4],["error",4]]]],[10,"sign_timeout","","As the holder of the private key, SafetyRules also signs …",1,[[["timeout",3]],[["result",4],["error",4],["ed25519signature",3]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"equivalent","","",2,[[]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"consensus_state","","",5,[[],[["consensusstate",3],["error",4],["result",4]]]],[11,"initialize","","",5,[[["epochchangeproof",3]],[["error",4],["result",4]]]],[11,"construct_and_sign_vote","","",5,[[["maybesignedvoteproposal",3]],[["vote",3],["result",4],["error",4]]]],[11,"sign_proposal","","",5,[[["blockdata",3]],[["block",3],["result",4],["error",4]]]],[11,"sign_timeout","","",5,[[["timeout",3]],[["result",4],["error",4],["ed25519signature",3]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","","",0,[[["error",4]]]],[11,"clone","","",2,[[],["consensusstate",3]]],[11,"clone","","",0,[[],["error",4]]],[11,"default","","",2,[[],["consensusstate",3]]],[11,"eq","","",2,[[["consensusstate",3]]]],[11,"ne","","",2,[[["consensusstate",3]]]],[11,"eq","","",0,[[["error",4]]]],[11,"ne","","",0,[[["error",4]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"new","","",2,[[["waypoint",3],["safetydata",3]]]],[11,"epoch","","Returns the current epoch",2,[[]]],[11,"last_voted_round","","Returns the last round that was voted on",2,[[],["round",6]]],[11,"preferred_round","","A \\\"preferred block\\\" is the two-chain head with the …",2,[[],["round",6]]],[11,"waypoint","","Last known checkpoint this should map to a LedgerInfo …",2,[[],["waypoint",3]]],[11,"in_validator_set","","Indicating whether the validator is validator set",2,[[]]],[11,"safety_data","","Return a copy of the safety data.",2,[[],["safetydata",3]]],[11,"initialize","","Use this to instantiate a PersistentStorage for a new …",3,[[["storage",4],["author",6],["waypoint",3],["ed25519privatekey",3]]]],[11,"new","","Use this to instantiate a PersistentStorage with an …",3,[[["storage",4]]]],[11,"author","","",3,[[],[["author",6],["error",4],["result",4]]]],[11,"consensus_key_for_version","","",3,[[["ed25519publickey",3]],[["result",4],["ed25519privatekey",3],["error",4]]]],[11,"execution_public_key","","",3,[[],[["error",4],["result",4],["ed25519publickey",3]]]],[11,"sign","","",3,[[["ed25519publickey",3],["string",3]],[["result",4],["error",4],["ed25519signature",3]]]],[11,"safety_data","","",3,[[],[["safetydata",3],["error",4],["result",4]]]],[11,"set_safety_data","","",3,[[["safetydata",3]],[["error",4],["result",4]]]],[11,"waypoint","","",3,[[],[["waypoint",3],["result",4],["error",4]]]],[11,"set_waypoint","","",3,[[["waypoint",3]],[["error",4],["result",4]]]],[11,"internal_store","","",3,[[],["storage",4]]],[11,"new","","",4,[[["safetyrulesconfig",3]]]],[11,"start","","",4,[[]]],[11,"new","","Constructs a new instance of SafetyRules with the given …",5,[[["persistentsafetystorage",3]]]],[11,"construct_ledger_info","","Produces a LedgerInfo that either commits a block based …",5,[[["block",3],["hashvalue",3]],[["result",4],["error",4],["ledgerinfo",3]]]],[11,"new","","",6,[[["safetyrulesconfig",3]]]],[11,"new_local","","",6,[[["persistentsafetystorage",3]]]],[11,"new_process","","",6,[[["socketaddr",4]]]],[11,"new_serializer","","",6,[[["persistentsafetystorage",3]]]],[11,"new_thread","","",6,[[["persistentsafetystorage",3]]]],[11,"client","","",6,[[],[["tsafetyrules",8],["box",3]]]]],"p":[[4,"Error"],[8,"TSafetyRules"],[3,"ConsensusState"],[3,"PersistentSafetyStorage"],[3,"Process"],[3,"SafetyRules"],[3,"SafetyRulesManager"]]},\
"schemadb":{"doc":"This library implements a schematized DB on top of RocksDB…","i":[[0,"schema","schemadb","This module provides traits that define the behavior of a …",null,null],[8,"KeyCodec","schemadb::schema","This trait defines a type that can serve as a [<code>Schema::Key</code>…",null,null],[10,"encode_key","","Converts <code>self</code> to bytes to be stored in DB.",0,[[],[["vec",3],["result",6]]]],[10,"decode_key","","Converts bytes fetched from DB to <code>Self</code>.",0,[[],["result",6]]],[8,"ValueCodec","","This trait defines a type that can serve as a […",null,null],[10,"encode_value","","Converts <code>self</code> to bytes to be stored in DB.",1,[[],[["vec",3],["result",6]]]],[10,"decode_value","","Converts bytes fetched from DB to <code>Self</code>.",1,[[],["result",6]]],[8,"SeekKeyCodec","","This defines a type that can be used to seek a …",null,null],[10,"encode_seek_key","","Converts <code>self</code> to bytes which is used to seek the …",2,[[],[["vec",3],["result",6]]]],[8,"Schema","","This trait defines a schema: an association of a column …",null,null],[18,"COLUMN_FAMILY_NAME","","The column family name associated with this struct. Note: …",3,null],[16,"Key","","Type of the key.",3,null],[16,"Value","","Type of the value.",3,null],[5,"assert_encode_decode","","Helper used in tests to assert a (key, value) pair for a …",null,[[]]],[6,"ReadOptions","schemadb","Type alias to <code>rocksdb::ReadOptions</code>. See <code>rocksdb doc</code>",null,null],[6,"Options","","Type alias to <code>rocksdb::Options</code>.",null,null],[6,"ColumnFamilyName","","Type alias to improve readability.",null,null],[17,"DEFAULT_CF_NAME","","Name for the <code>default</code> column family that\'s always open by …",null,null],[3,"SchemaBatch","","<code>SchemaBatch</code> holds a collection of updates that can be …",null,null],[11,"new","","Creates an empty batch.",4,[[]]],[11,"put","","Adds an insert/update operation to the batch.",4,[[],["result",6]]],[11,"delete","","Adds a delete operation to the batch.",4,[[],["result",6]]],[4,"ScanDirection","","",null,null],[13,"Forward","","",5,null],[13,"Backward","","",5,null],[3,"SchemaIterator","","DB Iterator parameterized on [<code>Schema</code>] that seeks with […",null,null],[11,"seek_to_first","","Seeks to the first key.",6,[[]]],[11,"seek_to_last","","Seeks to the last key.",6,[[]]],[11,"seek","","Seeks to the first key whose binary representation is …",6,[[],["result",6]]],[11,"seek_for_prev","","Seeks to the last key whose binary representation is less …",6,[[],["result",6]]],[3,"DB","","This DB is a schematized RocksDB wrapper where all data …",null,null],[11,"open","","Create db with all the column families provided if it …",7,[[["columnfamilyname",6],["vec",3],["options",3]],["result",6]]],[11,"open_readonly","","Open db in readonly mode Note that this still assumes …",7,[[["columnfamilyname",6],["vec",3],["options",3]],["result",6]]],[11,"open_as_secondary","","Open db as secondary. This allows to read the DB in …",7,[[["columnfamilyname",6],["vec",3],["asref",8],["path",3],["options",3]],["result",6]]],[11,"get","","Reads single record by key.",7,[[],[["result",6],["option",4]]]],[11,"put","","Writes single record.",7,[[],["result",6]]],[11,"range_delete","","Delete all keys in range [begin, end).",7,[[],["result",6]]],[11,"iter","","Returns a forward [<code>SchemaIterator</code>] on a certain schema.",7,[[["readoptions",6]],[["result",6],["schemaiterator",3]]]],[11,"rev_iter","","Returns a backward [<code>SchemaIterator</code>] on a certain schema.",7,[[["readoptions",6]],[["result",6],["schemaiterator",3]]]],[11,"write_schemas","","Writes a group of records wrapped in a [<code>SchemaBatch</code>].",7,[[["schemabatch",3]],["result",6]]],[11,"flush_all","","Flushes all memtable data. This is only used for testing …",7,[[],["result",6]]],[11,"get_property","","",7,[[],["result",6]]],[14,"define_schema","","Macro for defining a SchemaDB schema.",null,null],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"next","","",6,[[],["option",4]]],[11,"default","","",4,[[],["schemabatch",3]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]]],"p":[[8,"KeyCodec"],[8,"ValueCodec"],[8,"SeekKeyCodec"],[8,"Schema"],[3,"SchemaBatch"],[4,"ScanDirection"],[3,"SchemaIterator"],[3,"DB"]]},\
"scratchpad":{"doc":"This crate provides in-memory representation of Diem core …","i":[[4,"AccountStatus","scratchpad","<code>AccountStatus</code> describes the result of querying an account …",null,null],[13,"ExistsInScratchPad","","The account exists in the tree, therefore we can give its …",0,null],[13,"ExistsInDB","","The account does not exist in the tree, but exists in DB. …",0,null],[13,"DoesNotExist","","The account does not exist in either the tree or DB. This …",0,null],[13,"Unknown","","We do not know if this account exists or not and need to …",0,null],[8,"ProofRead","","A type that implements <code>ProofRead</code> can provide proof for …",null,null],[10,"get_proof","","Gets verified proof for this key in persistent storage.",1,[[["hashvalue",3]],[["sparsemerkleproof",3],["option",4]]]],[3,"SparseMerkleTree","","The Sparse Merkle Tree implementation.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"equivalent","","",0,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"default","","",2,[[]]],[11,"eq","","",0,[[["accountstatus",4]]]],[11,"ne","","",0,[[["accountstatus",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"new","","Constructs a Sparse Merkle Tree with a root hash. This is …",2,[[["hashvalue",3]]]],[11,"update","","Constructs a new Sparse Merkle Tree as if we are updating …",2,[[["vec",3]],[["result",4],["updateerror",4]]]],[11,"batch_update","","Constructs a new Sparse Merkle Tree as if we are updating …",2,[[["vec",3],["vec",3]],[["updateerror",4],["result",4]]]],[11,"get","","Queries a <code>key</code> in this <code>SparseMerkleTree</code>.",2,[[["hashvalue",3]],["accountstatus",4]]],[11,"root_hash","","Returns the root hash of this tree.",2,[[],["hashvalue",3]]],[11,"prune","","Prunes a tree by replacing every node reachable from root …",2,[[]]]],"p":[[4,"AccountStatus"],[8,"ProofRead"],[3,"SparseMerkleTree"]]},\
"seed_peer_generator":{"doc":"","i":[[0,"utils","seed_peer_generator","",null,null],[5,"gen_validator_full_node_seed_peer_config","seed_peer_generator::utils","Retrieve the Fullnode seed peers from JSON-RPC",null,[[["string",3]],[["result",6],["peerset",6]]]]],"p":[]},\
"serializer_tests":{"doc":"","i":[],"p":[]},\
"short_hex_str":{"doc":"","i":[[3,"ShortHexStr","short_hex_str","An efficient container for formatting a byte slice as a …",null,null],[3,"InputTooShortError","","",null,null],[18,"SOURCE_LENGTH","","",0,null],[18,"LENGTH","","",0,null],[11,"try_from_bytes","","Format a new <code>ShortHexStr</code> from a byte slice.",0,[[],[["result",4],["shorthexstr",3],["inputtooshorterror",3]]]],[11,"as_str","","",0,[[]]],[8,"AsShortHexStr","","",null,null],[10,"short_str","","",1,[[],["shorthexstr",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"clone","","",0,[[],["shorthexstr",3]]],[11,"cmp","","",0,[[["shorthexstr",3]],["ordering",4]]],[11,"eq","","",0,[[["shorthexstr",3]]]],[11,"ne","","",0,[[["shorthexstr",3]]]],[11,"partial_cmp","","",0,[[["shorthexstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["shorthexstr",3]]]],[11,"le","","",0,[[["shorthexstr",3]]]],[11,"gt","","",0,[[["shorthexstr",3]]]],[11,"ge","","",0,[[["shorthexstr",3]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"serialize","","",0,[[],["result",4]]]],"p":[[3,"ShortHexStr"],[8,"AsShortHexStr"],[3,"InputTooShortError"]]},\
"smoke_test":{"doc":"","i":[],"p":[]},\
"socket_bench_server":{"doc":"","i":[[3,"Args","socket_bench_server","",null,null],[12,"tcp_addr","","",0,null],[12,"tcp_noise_addr","","",0,null],[12,"msg_lens","","",0,null],[11,"from_env","","",0,[[]]],[5,"build_memsocket_noise_transport","","Build a MemorySocket + Noise transport",null,[[]]],[5,"build_tcp_noise_transport","","Build a Tcp + Noise transport",null,[[]]],[5,"server_stream_handler","","Server side handler for send throughput benchmark when …",null,[[]]],[5,"start_stream_server","","",null,[[["networkaddress",3],["handle",3]],["networkaddress",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"Args"]]},\
"state_sync":{"doc":"Used to perform catching up between nodes for committed …","i":[[0,"bootstrapper","state_sync","",null,null],[3,"StateSyncBootstrapper","state_sync::bootstrapper","Creates and bootstraps new state syncs and creates …",null,null],[11,"bootstrap","","",0,[[["waypoint",3],["commitnotification",3],["vec",3],["sender",3],["vec",3],["arc",3],["nodeconfig",3],["box",3],["chunkexecutor",8],["dbreader",8],["reconfigsubscription",6]]]],[11,"bootstrap_with_executor_proxy","","",0,[[["waypoint",3],["sender",3],["runtime",3],["vec",3],["commitnotification",3],["executorproxytrait",8],["nodeconfig",3]]]],[11,"create_client","","",0,[[],["statesyncclient",3]]],[0,"chunk_request","state_sync","",null,null],[4,"TargetType","state_sync::chunk_request","We\'re currently considering several types of chunk …",null,null],[13,"TargetLedgerInfo","","The response is built relative to the target (or end of …",1,null],[13,"HighestAvailable","","The response is built relative to the highest available …",1,null],[12,"target_li","state_sync::chunk_request::TargetType","",2,null],[12,"timeout_ms","","",2,null],[13,"Waypoint","state_sync::chunk_request","The response is built relative to a LedgerInfo at a given …",1,null],[11,"epoch","","",1,[[],["option",4]]],[11,"version","","",1,[[],["option",4]]],[3,"GetChunkRequest","","",null,null],[12,"known_version","","The response should start with <code>known_version + 1</code>.",3,null],[12,"current_epoch","","Epoch the chunk response is supposed to belong to (i.e., …",3,null],[12,"limit","","Max size of a chunk response.",3,null],[12,"target","","The target of the given request.",3,null],[11,"new","","",3,[[["version",6],["targettype",4]]]],[0,"chunk_response","state_sync","",null,null],[4,"ResponseLedgerInfo","state_sync::chunk_response","The response can carry different LedgerInfo types …",null,null],[13,"VerifiableLedgerInfo","","A typical response carries a LedgerInfo with signatures …",4,null],[13,"ProgressiveLedgerInfo","","A response to <code>TargetType::HighestAvailable</code> chunk request …",4,null],[12,"target_li","state_sync::chunk_response::ResponseLedgerInfo","",5,null],[12,"highest_li","","",5,null],[13,"LedgerInfoForWaypoint","state_sync::chunk_response","During the initial catchup upon startup the chunks carry …",4,null],[12,"waypoint_li","state_sync::chunk_response::ResponseLedgerInfo","",6,null],[12,"end_of_epoch_li","","",6,null],[11,"version","state_sync::chunk_response","The version of the LedgerInfo relative to which the …",4,[[],["version",6]]],[3,"GetChunkResponse","","The returned chunk is bounded by the end of the …",null,null],[12,"response_li","","The proofs are built relative to the LedgerInfo in …",7,null],[12,"txn_list_with_proof","","Chunk of transactions with proof corresponding to the …",7,null],[11,"new","","",7,[[["responseledgerinfo",4],["transactionlistwithproof",3]]]],[0,"client","state_sync","",null,null],[3,"SyncRequest","state_sync::client","A sync request for a specified target ledger info.",null,null],[12,"callback","","",8,null],[12,"last_commit_timestamp","","",8,null],[12,"target","","",8,null],[3,"CommitNotification","","A commit notification to notify state sync of new commits.",null,null],[12,"callback","","",9,null],[12,"committed_transactions","","",9,null],[12,"reconfiguration_events","","",9,null],[4,"CoordinatorMessage","","Messages used by the StateSyncClient for communication …",null,null],[13,"SyncRequest","","",10,null],[13,"CommitNotification","","",10,null],[13,"GetSyncState","","",10,null],[13,"WaitForInitialization","","",10,null],[3,"StateSyncClient","","A client used for communicating with a …",null,null],[11,"new","","",11,[[["unboundedsender",3],["coordinatormessage",4]]]],[11,"sync_to","","Sync node\'s state to target ledger info (LI). In case of …",11,[[["ledgerinfowithsignatures",4]]]],[11,"commit","","Notifies state sync about newly committed transactions.",11,[[["transaction",4],["contractevent",4],["vec",3],["vec",3]]]],[11,"get_state","","Returns information about the state sync internal state. …",11,[[]]],[11,"wait_until_initialized","","Waits until state sync is caught up with the waypoint …",11,[[]]],[0,"coordinator","state_sync","",null,null],[0,"error","","",null,null],[4,"Error","state_sync::error","",null,null],[13,"CallbackSendFailed","","",12,null],[13,"ConsensusIsExecuting","","",12,null],[13,"FullNodeSyncRequest","","",12,null],[13,"IntegerOverflow","","",12,null],[13,"InvalidChunkRequest","","",12,null],[13,"NetworkError","","",12,null],[13,"NoAvailablePeers","","",12,null],[13,"NoSyncRequestFound","","",12,null],[13,"NoTransactionsCommitted","","",12,null],[13,"OldSyncRequestVersion","","",12,null],[13,"PeerIsNotUpstream","","",12,null],[13,"ProcessInvalidChunk","","",12,null],[13,"ReceivedChunkForOutdatedRequest","","",12,null],[13,"ReceivedChunkFromDownstream","","",12,null],[13,"ReceivedEmptyChunk","","",12,null],[13,"ReceivedNonSequentialChunk","","",12,null],[13,"ReceivedWrongChunkType","","",12,null],[13,"SenderDroppedError","","",12,null],[13,"SyncedBeyondTarget","","",12,null],[13,"UninitializedError","","",12,null],[13,"UnexpectedError","","",12,null],[0,"executor_proxy","state_sync","",null,null],[8,"ExecutorProxyTrait","state_sync::executor_proxy","Proxies interactions with execution and storage for state …",null,null],[10,"get_local_storage_state","","Sync the local state with the latest in storage.",13,[[],[["result",4],["syncstate",3],["error",4]]]],[10,"execute_chunk","","Execute and commit a batch of transactions",13,[[["ledgerinfowithsignatures",4],["option",4],["transactionlistwithproof",3]],[["error",4],["result",4]]]],[10,"get_chunk","","Gets chunk of transactions given the known version, …",13,[[],[["error",4],["result",4],["transactionlistwithproof",3]]]],[10,"get_epoch_change_ledger_info","","Get the epoch changing ledger info for the given epoch so …",13,[[],[["result",4],["error",4],["ledgerinfowithsignatures",4]]]],[10,"get_epoch_ending_ledger_info","","Get ledger info at an epoch boundary version.",13,[[],[["result",4],["error",4],["ledgerinfowithsignatures",4]]]],[10,"get_version_timestamp","","Returns the ledger\'s timestamp for the given version in …",13,[[],[["result",4],["error",4]]]],[10,"publish_on_chain_config_updates","","publishes on-chain config updates to subscribed components",13,[[["vec",3],["contractevent",4]],[["error",4],["result",4]]]],[0,"network","state_sync","Interface between State Sync and Network layers.",null,null],[4,"StateSyncMessage","state_sync::network","State sync network messages",null,null],[13,"GetChunkRequest","","",14,null],[13,"GetChunkResponse","","",14,null],[6,"StateSyncEvents","","The interface from Network to StateSync layer.",null,null],[3,"StateSyncSender","","The interface from StateSync to Networking layer.",null,null],[11,"send_to","","",15,[[["peerid",3],["statesyncmessage",4]],[["error",4],["result",4]]]],[5,"network_endpoint_config","","Configuration for the network endpoints to support state …",null,[[]]],[0,"shared_components","state_sync","",null,null],[3,"SyncState","state_sync::shared_components","SyncState contains the following fields:",null,null],[11,"new","","",16,[[["executedtrees",3],["epochstate",3],["ledgerinfowithsignatures",4]]]],[11,"committed_epoch","","",16,[[]]],[11,"committed_ledger_info","","",16,[[],["ledgerinfowithsignatures",4]]],[11,"committed_version","","",16,[[]]],[11,"synced_version","","Returns the highest available version in the local …",16,[[]]],[11,"trusted_epoch","","",16,[[]]],[11,"verify_ledger_info","","",16,[[["ledgerinfowithsignatures",4]],[["error",4],["result",4]]]],[0,"fuzzing","state_sync","",null,null],[5,"test_state_sync_msg_fuzzer_impl","state_sync::fuzzing","",null,[[["statesyncmessage",4]]]],[5,"arb_state_sync_msg","","",null,[[]]],[11,"from","state_sync::bootstrapper","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","state_sync::chunk_request","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"equivalent","","",1,[[]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"equivalent","","",3,[[]]],[11,"erased_serialize","","",3,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","state_sync::chunk_response","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"test_only_hash","","",4,[[],["hashvalue",3]]],[11,"equivalent","","",4,[[]]],[11,"erased_serialize","","",4,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"test_only_hash","","",7,[[],["hashvalue",3]]],[11,"equivalent","","",7,[[]]],[11,"erased_serialize","","",7,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","state_sync::client","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","state_sync::error","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"test_only_hash","","",12,[[],["hashvalue",3]]],[11,"erased_serialize","","",12,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","state_sync::network","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"test_only_hash","","",14,[[],["hashvalue",3]]],[11,"erased_serialize","","",14,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","state_sync::shared_components","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","state_sync::error","",12,[[["networkerror",3]]]],[11,"from","","",12,[[["senderror",3]]]],[11,"from","","",12,[[["canceled",3]]]],[11,"clone","state_sync::chunk_request","",1,[[],["targettype",4]]],[11,"clone","","",3,[[],["getchunkrequest",3]]],[11,"clone","state_sync::chunk_response","",4,[[],["responseledgerinfo",4]]],[11,"clone","","",7,[[],["getchunkresponse",3]]],[11,"clone","state_sync::error","",12,[[],["error",4]]],[11,"clone","state_sync::network","",14,[[],["statesyncmessage",4]]],[11,"clone","","",15,[[],["statesyncsender",3]]],[11,"clone","state_sync::shared_components","",16,[[],["syncstate",3]]],[11,"eq","state_sync::chunk_request","",1,[[["targettype",4]]]],[11,"ne","","",1,[[["targettype",4]]]],[11,"eq","","",3,[[["getchunkrequest",3]]]],[11,"ne","","",3,[[["getchunkrequest",3]]]],[11,"eq","state_sync::chunk_response","",4,[[["responseledgerinfo",4]]]],[11,"ne","","",4,[[["responseledgerinfo",4]]]],[11,"eq","","",7,[[["getchunkresponse",3]]]],[11,"ne","","",7,[[["getchunkresponse",3]]]],[11,"eq","state_sync::error","",12,[[["error",4]]]],[11,"ne","","",12,[[["error",4]]]],[11,"fmt","state_sync::chunk_request","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","state_sync::chunk_response","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","state_sync::error","",12,[[["formatter",3]],["result",6]]],[11,"fmt","state_sync::network","",14,[[["formatter",3]],["result",6]]],[11,"fmt","state_sync::shared_components","",16,[[["formatter",3]],["result",6]]],[11,"fmt","state_sync::chunk_request","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","state_sync::chunk_response","",7,[[["formatter",3]],["result",6]]],[11,"fmt","state_sync::error","",12,[[["formatter",3]],["result",6]]],[11,"deserialize","state_sync::chunk_request","",1,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","state_sync::chunk_response","",4,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","state_sync::error","",12,[[],["result",4]]],[11,"deserialize","state_sync::network","",14,[[],["result",4]]],[11,"serialize","state_sync::chunk_request","",1,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","state_sync::chunk_response","",4,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","state_sync::error","",12,[[],["result",4]]],[11,"serialize","state_sync::network","",14,[[],["result",4]]],[11,"arbitrary_with","state_sync::chunk_request","",3,[[]]],[11,"arbitrary_with","","",1,[[]]],[11,"arbitrary_with","state_sync::chunk_response","",7,[[]]],[11,"arbitrary_with","","",4,[[]]],[11,"new","state_sync::network","",15,[[["peermanagerrequestsender",3],["connectionrequestsender",3]]]]],"p":[[3,"StateSyncBootstrapper"],[4,"TargetType"],[13,"HighestAvailable"],[3,"GetChunkRequest"],[4,"ResponseLedgerInfo"],[13,"ProgressiveLedgerInfo"],[13,"LedgerInfoForWaypoint"],[3,"GetChunkResponse"],[3,"SyncRequest"],[3,"CommitNotification"],[4,"CoordinatorMessage"],[3,"StateSyncClient"],[4,"Error"],[8,"ExecutorProxyTrait"],[4,"StateSyncMessage"],[3,"StateSyncSender"],[3,"SyncState"]]},\
"storage_client":{"doc":"","i":[[3,"StorageClient","storage_client","",null,null],[11,"new","","",0,[[["socketaddr",4]]]],[11,"get_account_state_with_proof_by_version","","",0,[[["version",6],["accountaddress",3]],[["error",4],["result",4]]]],[11,"get_startup_info","","",0,[[],[["error",4],["result",4],["option",4]]]],[11,"save_transactions","","",0,[[["option",4],["version",6],["vec",3],["transactiontocommit",3],["ledgerinfowithsignatures",4]],[["result",4],["error",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"get_account_state_with_proof_by_version","","",0,[[["accountaddress",3]],["result",6]]],[11,"get_startup_info","","",0,[[],[["result",6],["option",4]]]],[11,"get_latest_account_state","","",0,[[["accountaddress",3]],[["result",6],["option",4]]]],[11,"get_latest_ledger_info","","",0,[[],[["result",6],["ledgerinfowithsignatures",4]]]],[11,"get_txn_by_account","","",0,[[["accountaddress",3]],[["result",6],["option",4]]]],[11,"get_transactions","","",0,[[],[["result",6],["transactionlistwithproof",3]]]],[11,"get_events","","",0,[[["order",4],["eventkey",3]],[["result",6],["vec",3]]]],[11,"get_events_with_proofs","","",0,[[["order",4],["eventkey",3],["option",4]],[["result",6],["vec",3]]]],[11,"get_state_proof","","",0,[[],["result",6]]],[11,"get_state_proof_with_ledger_info","","",0,[[["ledgerinfowithsignatures",4]],["result",6]]],[11,"get_account_state_with_proof","","",0,[[["version",6],["accountaddress",3]],[["result",6],["accountstatewithproof",3]]]],[11,"get_latest_state_root","","",0,[[],["result",6]]],[11,"get_latest_tree_state","","",0,[[],[["treestate",3],["result",6]]]],[11,"get_epoch_ending_ledger_infos","","",0,[[],[["epochchangeproof",3],["result",6]]]],[11,"get_epoch_ending_ledger_info","","",0,[[],[["result",6],["ledgerinfowithsignatures",4]]]],[11,"get_block_timestamp","","",0,[[],["result",6]]],[11,"save_transactions","","",0,[[["version",6],["option",4],["ledgerinfowithsignatures",4]],["result",6]]]],"p":[[3,"StorageClient"]]},\
"storage_interface":{"doc":"","i":[[0,"mock","storage_interface","This module provides mock dbreader for tests.",null,null],[3,"MockDbReader","storage_interface::mock","This is a mock of the dbreader in tests.",null,null],[0,"state_view","storage_interface","",null,null],[3,"VerifiedStateView","storage_interface::state_view","<code>VerifiedStateView</code> is like a snapshot of the global state …",null,null],[11,"new","","Constructs a [<code>VerifiedStateView</code>] with persistent state …",0,[[["option",4],["sparsemerkletree",3],["arc",3],["stateviewid",4],["dbreader",8],["version",6],["hashvalue",3]]]],[3,"StartupInfo","storage_interface","",null,null],[12,"latest_ledger_info","","The latest ledger info.",1,null],[12,"latest_epoch_state","","If the above ledger info doesn\'t carry a validator set, …",1,null],[12,"committed_tree_state","","",1,null],[12,"synced_tree_state","","",1,null],[11,"new","","",1,[[["epochstate",3],["ledgerinfowithsignatures",4],["option",4],["treestate",3],["option",4]]]],[11,"new_for_testing","","",1,[[]]],[11,"get_epoch_state","","",1,[[],["epochstate",3]]],[3,"TreeState","","",null,null],[12,"num_transactions","","",2,null],[12,"ledger_frozen_subtree_hashes","","",2,null],[12,"account_state_root_hash","","",2,null],[11,"new","","",2,[[["leafcount",6],["vec",3],["hashvalue",3]]]],[11,"describe","","",2,[[]]],[4,"Error","","",null,null],[13,"ServiceError","","",3,null],[12,"error","storage_interface::Error","",4,null],[13,"SerializationError","storage_interface","",3,null],[4,"Order","","",null,null],[13,"Ascending","","",5,null],[13,"Descending","","",5,null],[8,"DbReader","","Trait that is implemented by a DB that supports certain …",null,null],[10,"get_epoch_ending_ledger_infos","","See <code>DiemDB::get_epoch_ending_ledger_infos</code>.",6,[[],[["result",6],["epochchangeproof",3]]]],[10,"get_transactions","","See <code>DiemDB::get_transactions</code>.",6,[[["version",6]],[["result",6],["transactionlistwithproof",3]]]],[10,"get_events","","Returns events by given event key",6,[[["eventkey",3],["order",4]],[["result",6],["vec",3]]]],[10,"get_events_with_proofs","","Returns events by given event key",6,[[["eventkey",3],["order",4],["option",4]],[["result",6],["vec",3]]]],[10,"get_block_timestamp","","See <code>DiemDB::get_block_timestamp</code>.",6,[[],["result",6]]],[11,"get_last_version_before_timestamp","","Gets the version of the last transaction committed before …",6,[[["version",6]],[["version",6],["result",6]]]],[10,"get_latest_account_state","","See <code>DiemDB::get_latest_account_state</code>.",6,[[["accountaddress",3]],[["result",6],["option",4]]]],[10,"get_latest_ledger_info","","Returns the latest ledger info.",6,[[],[["result",6],["ledgerinfowithsignatures",4]]]],[11,"get_latest_version","","Returns the latest ledger info.",6,[[],[["version",6],["result",6]]]],[11,"get_latest_commit_metadata","","Returns the latest version and committed block timestamp",6,[[],["result",6]]],[10,"get_startup_info","","Gets information needed from storage during the main node …",6,[[],[["option",4],["result",6]]]],[10,"get_txn_by_account","","",6,[[["accountaddress",3],["version",6]],[["result",6],["option",4]]]],[10,"get_state_proof_with_ledger_info","","Returns proof of new state for a given ledger info with …",6,[[["ledgerinfowithsignatures",4]],["result",6]]],[10,"get_state_proof","","Returns proof of new state relative to version known to …",6,[[],["result",6]]],[10,"get_account_state_with_proof","","Returns the account state corresponding to the given …",6,[[["accountaddress",3],["version",6]],[["accountstatewithproof",3],["result",6]]]],[10,"get_account_state_with_proof_by_version","","",6,[[["accountaddress",3],["version",6]],["result",6]]],[10,"get_latest_state_root","","See <code>DiemDB::get_latest_state_root</code>.",6,[[],["result",6]]],[10,"get_latest_tree_state","","Gets the latest TreeState no matter if db has been …",6,[[],[["result",6],["treestate",3]]]],[10,"get_epoch_ending_ledger_info","","Get the ledger info of the epoch that <code>known_version</code> …",6,[[],[["result",6],["ledgerinfowithsignatures",4]]]],[11,"get_latest_transaction_info_option","","Gets the latest transaction info. N.B. Unlike …",6,[[],[["result",6],["option",4]]]],[11,"get_accumulator_root_hash","","Gets the transaction accumulator root hash at specified …",6,[[["version",6]],[["result",6],["hashvalue",3]]]],[8,"DbWriter","","Trait that is implemented by a DB that supports certain …",null,null],[10,"save_transactions","","Persist transactions. Called by the executor module when …",7,[[["option",4],["version",6],["ledgerinfowithsignatures",4]],["result",6]]],[3,"DbReaderWriter","","",null,null],[12,"reader","","",8,null],[12,"writer","","",8,null],[11,"new","","",8,[[["dbreader",8],["dbwriter",8]]]],[11,"from_arc","","",8,[[["arc",3],["dbreader",8],["dbwriter",8]]]],[11,"wrap","","",8,[[["dbreader",8],["dbwriter",8]]]],[4,"StorageRequest","","Network types for storage service",null,null],[13,"GetAccountStateWithProofByVersionRequest","","",9,null],[13,"GetStartupInfoRequest","","",9,null],[13,"SaveTransactionsRequest","","",9,null],[3,"GetAccountStateWithProofByVersionRequest","","",null,null],[12,"address","","The access path to query with.",10,null],[12,"version","","The version the query is based on.",10,null],[11,"new","","Constructor.",10,[[["accountaddress",3],["version",6]]]],[3,"SaveTransactionsRequest","","",null,null],[12,"txns_to_commit","","",11,null],[12,"first_version","","",11,null],[12,"ledger_info_with_signatures","","",11,null],[11,"new","","Constructor.",11,[[["ledgerinfowithsignatures",4],["vec",3],["option",4],["version",6],["transactiontocommit",3]]]],[11,"from","storage_interface::mock","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","storage_interface::state_view","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","storage_interface","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"vzip","","",1,[[]]],[11,"equivalent","","",1,[[]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"equivalent","","",2,[[]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"vzip","","",3,[[]]],[11,"erased_serialize","","",3,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"equivalent","","",5,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"test_only_hash","","",9,[[],["hashvalue",3]]],[11,"vzip","","",9,[[]]],[11,"erased_serialize","","",9,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"test_only_hash","","",10,[[],["hashvalue",3]]],[11,"vzip","","",10,[[]]],[11,"equivalent","","",10,[[]]],[11,"erased_serialize","","",10,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"test_only_hash","","",11,[[],["hashvalue",3]]],[11,"vzip","","",11,[[]]],[11,"equivalent","","",11,[[]]],[11,"erased_serialize","","",11,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"get_epoch_ending_ledger_infos","storage_interface::mock","",12,[[],[["result",6],["epochchangeproof",3]]]],[11,"get_transactions","","",12,[[["version",6]],[["result",6],["transactionlistwithproof",3]]]],[11,"get_events","","Returns events by given event key",12,[[["eventkey",3],["order",4]],[["result",6],["vec",3]]]],[11,"get_events_with_proofs","","Returns events by given event key",12,[[["eventkey",3],["order",4],["option",4]],[["result",6],["vec",3]]]],[11,"get_block_timestamp","","",12,[[],["result",6]]],[11,"get_latest_account_state","","",12,[[["accountaddress",3]],[["result",6],["option",4]]]],[11,"get_latest_ledger_info","","Returns the latest ledger info.",12,[[],[["result",6],["ledgerinfowithsignatures",4]]]],[11,"get_startup_info","","",12,[[],[["option",4],["result",6]]]],[11,"get_txn_by_account","","",12,[[["accountaddress",3],["version",6]],[["result",6],["option",4]]]],[11,"get_state_proof_with_ledger_info","","",12,[[["ledgerinfowithsignatures",4]],["result",6]]],[11,"get_state_proof","","",12,[[],["result",6]]],[11,"get_account_state_with_proof","","",12,[[["accountaddress",3],["version",6]],[["accountstatewithproof",3],["result",6]]]],[11,"get_account_state_with_proof_by_version","","",12,[[["accountaddress",3],["version",6]],["result",6]]],[11,"get_latest_state_root","","",12,[[],["result",6]]],[11,"get_latest_tree_state","","",12,[[],[["result",6],["treestate",3]]]],[11,"get_epoch_ending_ledger_info","","",12,[[],[["result",6],["ledgerinfowithsignatures",4]]]],[11,"from","storage_interface","",3,[[["error",3]]]],[11,"from","","",3,[[["error",4]]]],[11,"from","","",3,[[["error",4]]]],[11,"from","","",8,[[]]],[11,"into","storage_interface::state_view","",0,[[]]],[11,"clone","storage_interface","",1,[[],["startupinfo",3]]],[11,"clone","","",2,[[],["treestate",3]]],[11,"clone","","",5,[[],["order",4]]],[11,"clone","","",8,[[],["dbreaderwriter",3]]],[11,"clone","","",9,[[],["storagerequest",4]]],[11,"clone","","",10,[[],["getaccountstatewithproofbyversionrequest",3]]],[11,"clone","","",11,[[],["savetransactionsrequest",3]]],[11,"eq","","",1,[[["startupinfo",3]]]],[11,"ne","","",1,[[["startupinfo",3]]]],[11,"eq","","",2,[[["treestate",3]]]],[11,"ne","","",2,[[["treestate",3]]]],[11,"eq","","",3,[[["error",4]]]],[11,"ne","","",3,[[["error",4]]]],[11,"eq","","",5,[[["order",4]]]],[11,"eq","","",10,[[["getaccountstatewithproofbyversionrequest",3]]]],[11,"ne","","",10,[[["getaccountstatewithproofbyversionrequest",3]]]],[11,"eq","","",11,[[["savetransactionsrequest",3]]]],[11,"ne","","",11,[[["savetransactionsrequest",3]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"id","storage_interface::state_view","",0,[[],["stateviewid",4]]],[11,"get","","",0,[[["accesspath",3]],[["result",6],["option",4]]]],[11,"multi_get","","",0,[[],[["vec",3],["result",6]]]],[11,"is_genesis","","",0,[[]]]],"p":[[3,"VerifiedStateView"],[3,"StartupInfo"],[3,"TreeState"],[4,"Error"],[13,"ServiceError"],[4,"Order"],[8,"DbReader"],[8,"DbWriter"],[3,"DbReaderWriter"],[4,"StorageRequest"],[3,"GetAccountStateWithProofByVersionRequest"],[3,"SaveTransactionsRequest"],[3,"MockDbReader"]]},\
"storage_service":{"doc":"This crate implements the storage service.","i":[[5,"start_storage_service_with_db","storage_service","Starts storage service with a given DiemDB",null,[[["nodeconfig",3],["arc",3],["diemdb",3]],["joinhandle",3]]],[3,"StorageService","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"clone","","",0,[[],["storageservice",3]]]],"p":[[3,"StorageService"]]},\
"subscription_service":{"doc":"Generic pub/sub service framework","i":[[3,"SubscriptionService","subscription_service","",null,null],[12,"name","","",0,null],[11,"subscribe","","Constructs an subscription object for <code>items</code> Returns the …",0,[[]]],[11,"publish","","",0,[[],["result",6]]],[11,"subscribed_items","","",0,[[]]],[6,"ReconfigSubscription","","A subscription service for on-chain reconfiguration …",null,null],[3,"SubscriptionBundle","","",null,null],[12,"configs","","",1,null],[12,"events","","",1,null],[11,"new","","",1,[[["configid",3],["eventkey",3],["vec",3],["vec",3]]]],[11,"subscribe_all","","",0,[[["configid",3],["eventkey",3],["vec",3],["vec",3]]]],[11,"subscribe_all","","",2,[[["configid",3],["eventkey",3],["vec",3],["vec",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"clone","","",1,[[],["subscriptionbundle",3]]]],"p":[[3,"SubscriptionService"],[3,"SubscriptionBundle"],[6,"ReconfigSubscription"]]},\
"swiss_knife":{"doc":"","i":[[0,"helpers","swiss_knife","",null,null],[3,"Response","swiss_knife::helpers","",null,null],[12,"error_message","","",0,null],[12,"data","","",0,null],[5,"exit_success_with_data","","",null,[[["serialize",8]]]],[5,"exit_with_error","","",null,[[["display",8]]]],[5,"hex_decode","","",null,[[],["vec",3]]],[5,"read_stdin","","",null,[[],["string",3]]],[5,"coin_tag_parser","","",null,[[],["typetag",4]]],[5,"account_address_parser","","",null,[[],["accountaddress",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]]],"p":[[3,"Response"]]},\
"test_generation":{"doc":"","i":[[0,"abstract_state","test_generation","",null,null],[4,"BorrowState","test_generation::abstract_state","The BorrowState denotes whether a local is <code>Available</code> or …",null,null],[13,"Available","","",0,null],[13,"Unavailable","","",0,null],[3,"AbstractValue","","This models a value on the stack or in the locals",null,null],[12,"token","","Represents the type of the value",1,null],[12,"abilities","","Represents the abilities of the value",1,null],[4,"Mutability","","This models the mutability of a reference",null,null],[13,"Mutable","","Represents a mutable reference",2,null],[13,"Immutable","","Represents an immutable reference",2,null],[13,"Either","","When we don\'t need to specify whether the reference is …",2,null],[11,"new_primitive","","Create a new primitive <code>AbstractValue</code> given its type; the …",1,[[["signaturetoken",4]],["abstractvalue",3]]],[11,"new_reference","","Create a new reference <code>AbstractValue</code> given its type and …",1,[[["signaturetoken",4],["abilityset",3]],["abstractvalue",3]]],[11,"new_struct","","Create a new struct <code>AbstractValue</code> given its type and kind",1,[[["signaturetoken",4],["abilityset",3]],["abstractvalue",3]]],[11,"new_value","","",1,[[["signaturetoken",4],["abilityset",3]],["abstractvalue",3]]],[11,"is_generic","","Predicate on whether the type of the abstract value is …",1,[[]]],[3,"CallGraph","","",null,null],[11,"new","","",3,[[]]],[11,"add_call","","",3,[[["functionhandleindex",3]]]],[11,"can_call","","",3,[[["functionhandleindex",3]],[["vec",3],["functionhandleindex",3]]]],[11,"max_calling_depth","","",3,[[["functionhandleindex",3]]]],[11,"call_depth","","None if recursive, Some(index) if non-recursive, and …",3,[[["functionhandleindex",3]],["option",4]]],[3,"InstantiableModule","","During the generation of a bytecode sequence, specific …",null,null],[12,"module","","",4,null],[11,"new","","",4,[[["compiledmodule",3]]]],[11,"add_instantiation","","If the <code>instantiant</code> is not in the <code>instantiations</code> table, …",4,[[["signaturetoken",4],["vec",3]],["signatureindex",3]]],[11,"add_struct_instantiation","","If the <code>instantiant</code> is not in the <code>struct_instantiations</code> …",4,[[["structdefinstantiation",3]],["structdefinstantiationindex",3]]],[11,"add_function_instantiation","","If the <code>instantiant</code> is not in the <code>function_instantiations</code> …",4,[[["functioninstantiation",3]],["functioninstantiationindex",3]]],[11,"add_field_instantiation","","If the <code>instantiant</code> is not in the <code>field_instantiations</code> …",4,[[["fieldinstantiation",3]],["fieldinstantiationindex",3]]],[11,"instantiantiation_at","","Returns the type instantiation at <code>index</code>. Errors if the …",4,[[["signatureindex",3]],["vec",3]]],[11,"struct_instantiantiation_at","","Returns the struct instantiation at <code>index</code>. Errors if the …",4,[[["structdefinstantiationindex",3]],["structdefinstantiation",3]]],[11,"function_instantiantiation_at","","Returns the struct instantiation at <code>index</code>. Errors if the …",4,[[["functioninstantiationindex",3]],["functioninstantiation",3]]],[11,"field_instantiantiation_at","","Returns the struct instantiation at <code>index</code>. Errors if the …",4,[[["fieldinstantiationindex",3]],["fieldinstantiation",3]]],[11,"instantiate","","Consumes self, and adds the instantiations that have been …",4,[[],["compiledmodulemut",3]]],[3,"AbstractState","","An AbstractState represents an abstract view of the …",null,null],[12,"instantiation","","A vector of type kinds for any generic function type …",5,null],[12,"module","","The module state",5,null],[12,"acquires_global_resources","","The global resources acquired by the function …",5,null],[12,"call_graph","","",5,null],[11,"new","","Create a new AbstractState with empty stack, locals, and …",5,[[],["abstractstate",3]]],[11,"from_locals","","Create a new AbstractState given a list of <code>SignatureTokens</code>…",5,[[["compiledmodulemut",3],["vec",3],["abilityset",3],["vec",3],["structdefinitionindex",3],["callgraph",3],["hashmap",3]],["abstractstate",3]]],[11,"register_copy","","Get the register value",5,[[],[["abstractvalue",3],["option",4]]]],[11,"register_move","","Get the register value and set it to <code>None</code>",5,[[],[["abstractvalue",3],["option",4]]]],[11,"register_set","","Set the register value and set it to <code>None</code>",5,[[["abstractvalue",3]]]],[11,"stack_push","","Add a <code>AbstractValue</code> to the stack",5,[[["abstractvalue",3]]]],[11,"stack_push_register","","Add a <code>AbstractValue</code> to the stack from the register If the …",5,[[],[["vmerror",3],["result",4]]]],[11,"stack_pop","","Remove an <code>AbstractValue</code> from the stack if it exists to …",5,[[],[["vmerror",3],["result",4]]]],[11,"stack_peek","","Get the <code>AbstractValue</code> at index <code>index</code> on the stack if it …",5,[[],[["abstractvalue",3],["option",4]]]],[11,"stack_len","","Get the length of the stack.",5,[[]]],[11,"local_exists","","Check if the local at index <code>i</code> exists",5,[[]]],[11,"local_get","","Get the local at index <code>i</code> if it exists",5,[[],["option",4]]],[11,"local_take","","Place the local at index <code>i</code> if it exists into the register …",5,[[],[["vmerror",3],["result",4]]]],[11,"local_take_borrow","","Place a reference to the local at index <code>i</code> if it exists …",5,[[["mutability",4]],[["vmerror",3],["result",4]]]],[11,"local_set","","Set the availability of the local at index <code>i</code> If it does …",5,[[["borrowstate",4]],[["vmerror",3],["result",4]]]],[11,"local_availability_is","","Check whether a local is in a particular <code>BorrowState</code> If …",5,[[["borrowstate",4]],[["vmerror",3],["result",4]]]],[11,"local_has_ability","","Check whether a local has a particular <code>Ability</code> If the …",5,[[["ability",4]],[["vmerror",3],["result",4]]]],[11,"local_insert","","Insert a local at index <code>i</code> as <code>Available</code>",5,[[["abstractvalue",3],["borrowstate",4]]]],[11,"local_place","","Insert a local at index <code>i</code> as <code>Available</code> from the register …",5,[[],[["vmerror",3],["result",4]]]],[11,"get_locals","","Get all of the locals",5,[[],["hashmap",3]]],[11,"abort","","Set the abstract state to be <code>aborted</code> when a precondition …",5,[[]]],[11,"has_aborted","","Whether the state is aborted",5,[[]]],[11,"allow_control_flow","","Set the abstract state to allow generation of control …",5,[[]]],[11,"is_control_flow_allowed","","Predicate determining if control flow instructions can be …",5,[[]]],[11,"is_final","","The final state is one where the stack is empty",5,[[]]],[0,"borrow_graph","test_generation","",null,null],[4,"EdgeType","test_generation::borrow_graph","The <code>EdgeType</code> is either weak or strong. A weak edge …",null,null],[13,"Weak","","",6,null],[13,"Strong","","",6,null],[3,"BorrowGraph","","The <code>BorrowGraph</code> stores information sufficient to …",null,null],[11,"new","","Construct a new <code>BorrowGraph</code> given the number of locals it …",7,[[],["borrowgraph",3]]],[11,"fresh_partition","","Add a new partition to the graph containing nonce <code>n</code> This …",7,[[],[["result",4],["string",3]]]],[11,"partition_mutability","","Determine whether a partition is mutable, immutable, or …",7,[[],[["result",4],["mutability",4],["string",3]]]],[11,"partition_freezable","","Determine whether the given partition is freezable. This …",7,[[],[["result",4],["string",3]]]],[11,"edges_consistent","","Determine whether two edges are consistent; i.e. whether …",7,[[]]],[0,"bytecode_generator","test_generation","",null,null],[3,"FunctionGenerationContext","test_generation::bytecode_generator","Context containing information about a function",null,null],[12,"function_handle_index","","",8,null],[12,"starting_call_height","","",8,null],[12,"locals_len","","",8,null],[12,"bytecode_len","","",8,null],[11,"new","","",8,[[["functionhandleindex",3]]]],[11,"incr_instruction_count","","",8,[[],["option",4]]],[3,"BytecodeGenerator","","Generates a sequence of bytecode instructions. This …",null,null],[11,"new","","The <code>BytecodeGenerator</code> is instantiated with a seed to use …",9,[[["stdrng",3]]]],[11,"apply_instruction","","Transition an abstract state, <code>state</code> to the next state and …",9,[[["abstractstate",3],["bytecode",4],["vec",3],["functiongenerationcontext",3]],[["abstractstate",3],["option",4]]]],[11,"generate_block","","Given a valid starting state <code>abstract_state_in</code>, generate …",9,[[["abstractstate",3],["compiledmodulemut",3],["functiongenerationcontext",3]],["option",4]]],[11,"generate","","Generate the body of a function definition given a set of …",9,[[["functiongenerationcontext",3],["callgraph",3],["compiledmodulemut",3],["functionhandle",3]],[["option",4],["vec",3]]]],[11,"generate_module","","",9,[[["compiledmodulemut",3]],[["compiledmodulemut",3],["option",4]]]],[11,"inhabit_with_bytecode_seq","","Generate a sequence of instructions whose overall effect …",9,[[["instantiablemodule",3],["signaturetoken",4]],[["bytecode",4],["vec",3]]]],[0,"config","test_generation","",null,null],[17,"MUTATION_TOLERANCE","test_generation::config","This defines how tolerant the generator will be about …",null,null],[17,"MAX_CFG_BLOCKS","","This defines the maximum number of blocks that will be …",null,null],[17,"NEGATE_PRECONDITIONS","","Whether preconditions will be negated to generate invalid …",null,null],[17,"NEGATION_PROBABILITY","","The probability that preconditions will be negated for a …",null,null],[17,"ALLOW_MEMORY_UNSAFE","","Whether generation of instructions that require borrow …",null,null],[17,"RUN_ON_VM","","Whether the generated programs should be run on the VM …",null,null],[17,"EXECUTE_UNVERIFIED_MODULE","","Whether generated modules will be executed even if they …",null,null],[17,"GAS_METERING","","Whether gas will be metered when running generated …",null,null],[17,"CALL_STACK_LIMIT","","Call stack height limit. This is defined in the VM, and …",null,null],[17,"VALUE_STACK_LIMIT","","The value stack size limit. This is defined in the VM and …",null,null],[17,"INHABITATION_INSTRUCTION_LIMIT","","Certain randomly generated types can lead to extremely …",null,null],[5,"module_generation_settings","","The module generation settings that are used for …",null,[[],["modulegeneratoroptions",3]]],[3,"Args","","Command line arguments for the tool",null,null],[12,"num_iterations","","The optional number of programs that will be generated. …",10,null],[12,"output_path","","Path where a serialized module should be saved. If <code>None</code>, …",10,null],[12,"seed","","The optional seed used for test generation.",10,null],[12,"num_threads","","The optional number of threads to use for test generation.",10,null],[0,"control_flow_graph","test_generation","",null,null],[3,"BasicBlock","test_generation::control_flow_graph","This represents a basic block in a control flow graph",null,null],[11,"new","","",11,[[],["basicblock",3]]],[11,"get_locals_in","","Get the locals coming into the block",11,[[],["hashmap",3]]],[11,"get_locals_out","","Get the locals going out of the block",11,[[],["hashmap",3]]],[11,"set_instructions","","Set the list of instructions that comprise the block",11,[[["bytecode",4],["vec",3]]]],[3,"CFG","","A control flow graph",null,null],[11,"new","","Construct a control flow graph that contains empty basic …",12,[[["stdrng",3],["signature",3]],["cfg",3]]],[11,"get_basic_blocks","","Get a reference to all of the basic blocks of the CFG",12,[[],["hashmap",3]]],[11,"get_basic_blocks_mut","","Get a mutable reference to all of the basic blocks of the …",12,[[],["hashmap",3]]],[11,"get_children_ids","","Retrieve the block IDs of all children of the given basic …",12,[[],["vec",3]]],[11,"num_children","","Retrieve the number of children the given basic block …",12,[[]]],[11,"get_parent_ids","","Retrieve the block IDs of all parents of the given basic …",12,[[],["vec",3]]],[11,"num_parents","","Retrieve the number of parents the given basic block …",12,[[]]],[11,"serialize_block_order","","Decide the serialization order of the blocks in the CFG",12,[[],["vec",3]]],[11,"serialize","","Serialize the control flow graph into a sequence of …",12,[[],[["bytecode",4],["vec",3]]]],[0,"error","test_generation","",null,null],[3,"VMError","test_generation::error","This struct represents an error that is returned during …",null,null],[11,"new","","",13,[[["string",3]],["vmerror",3]]],[0,"summaries","test_generation","",null,null],[6,"Precondition","test_generation::summaries","A <code>Precondition</code> is a boolean predicate on an <code>AbstractState</code>.",null,null],[6,"NonInstantiableEffect","","A <code>Effect</code> is a function that transforms on <code>AbstractState</code> …",null,null],[6,"InstantiableEffect","","",null,null],[6,"FunctionInstantiableEffect","","",null,null],[4,"Effects","","",null,null],[13,"NoTyParams","","",14,null],[13,"TyParams","","",14,null],[13,"TyParamsCall","","",14,null],[3,"Summary","","The <code>Summary</code> of a bytecode instruction contains a list of …",null,null],[12,"preconditions","","",15,null],[12,"effects","","",15,null],[5,"instruction_summary","","Return the <code>Summary</code> for a bytecode instruction, <code>instruction</code>",null,[[["bytecode",4]],["summary",3]]],[0,"transitions","test_generation","",null,null],[3,"Subst","test_generation::transitions","A substitution is a mapping from type formal index to the …",null,null],[12,"subst","","",16,null],[11,"new","","",16,[[]]],[11,"check_and_add","","NB that the position of arguments here matters. We can …",16,[[["signaturetoken",4],["abstractstate",3]]]],[11,"instantiation","","Return the instantiation from the substitution that has …",16,[[],[["signaturetoken",4],["vec",3]]]],[5,"abilities_for_token","","Given a signature token, returns the abilities of this …",null,[[["abstractstate",3],["signaturetoken",4]],["abilityset",3]]],[5,"abilities_for_instantiation","","Given a locals signature index, determine the abilities …",null,[[["abstractstate",3]],[["abilityset",3],["vec",3]]]],[5,"stack_has_integer","","Determine whether the stack contains an integer value at …",null,[[["abstractstate",3]]]],[5,"stack_top_is_castable_to","","",null,[[["signaturetoken",4],["abstractstate",3]]]],[5,"stack_has_ability","","Determine the abstract value at <code>index</code> is of the given …",null,[[["abstractstate",3],["ability",4]]]],[5,"stack_has_all_abilities","","",null,[[["abstractstate",3],["abilityset",3]]]],[5,"local_has_ability","","Check whether the local at <code>index</code> has the given ability",null,[[["abstractstate",3],["ability",4]]]],[5,"stack_has","","Determine whether the stack is at least of size <code>index</code>. If …",null,[[["abstractstate",3],["abstractvalue",3],["option",4]]]],[5,"stack_has_polymorphic_eq","","Determine whether two tokens on the stack have the same …",null,[[["abstractstate",3]]]],[5,"stack_local_polymorphic_eq","","Determine whether an abstract value on the stack and a …",null,[[["abstractstate",3]]]],[5,"local_exists","","Check whether the local at <code>index</code> exists",null,[[["abstractstate",3]]]],[5,"local_availability_is","","Check whether the local at <code>index</code> is of the given …",null,[[["abstractstate",3],["borrowstate",4]]]],[5,"stack_ref_polymorphic_eq","","Determine whether an abstract value on the stack that is …",null,[[["abstractstate",3]]]],[5,"stack_pop","","Pop from the top of the stack.",null,[[["abstractstate",3]],[["result",4],["abstractstate",3],["vmerror",3]]]],[4,"StackBinOpResult","","",null,null],[13,"Left","","",17,null],[13,"Right","","",17,null],[13,"Other","","",17,null],[5,"stack_bin_op","","Perform a binary operation using the top two values on …",null,[[["abstractstate",3],["stackbinopresult",4]],[["result",4],["abstractstate",3],["vmerror",3]]]],[5,"stack_push","","Push given abstract_value to the top of the stack.",null,[[["abstractstate",3],["abstractvalue",3]],[["result",4],["abstractstate",3],["vmerror",3]]]],[5,"stack_push_register","","Push to the top of the stack from the register.",null,[[["abstractstate",3]],[["result",4],["abstractstate",3],["vmerror",3]]]],[5,"local_set","","Set the availability of local at <code>index</code>",null,[[["abstractstate",3],["borrowstate",4]],[["result",4],["abstractstate",3],["vmerror",3]]]],[5,"local_take","","Put copy of the local at <code>index</code> in register",null,[[["abstractstate",3]],[["result",4],["abstractstate",3],["vmerror",3]]]],[5,"local_take_borrow","","Put reference to local at <code>index</code> in register",null,[[["abstractstate",3],["mutability",4]],[["result",4],["abstractstate",3],["vmerror",3]]]],[5,"local_place","","Insert the register value into the locals at <code>index</code>",null,[[["abstractstate",3]],[["result",4],["abstractstate",3],["vmerror",3]]]],[5,"stack_satisfies_struct_instantiation","","",null,[[["abstractstate",3],["structdefinstantiationindex",3]]]],[5,"stack_satisfies_struct_signature","","Determine whether the struct at the given index can be …",null,[[["abstractstate",3],["structdefinitionindex",3],["signatureindex",3],["option",4]]]],[5,"get_struct_instantiation_for_state","","",null,[[["abstractstate",3],["structdefinstantiationindex",3]]]],[5,"stack_has_struct","","Determine if a struct (of the given signature) is at the …",null,[[["abstractstate",3],["structdefinitionindex",3]]]],[5,"stack_has_struct_inst","","",null,[[["abstractstate",3],["structdefinstantiationindex",3]]]],[5,"struct_abilities","","Determine if a struct at the given index is a resource",null,[[["abstractstate",3],["structdefinitionindex",3],["signature",3]],["abilityset",3]]],[5,"struct_inst_abilities","","",null,[[["abstractstate",3],["structdefinstantiationindex",3]],["abilityset",3]]],[5,"stack_struct_has_field_inst","","",null,[[["abstractstate",3],["fieldinstantiationindex",3]]]],[5,"stack_struct_has_field","","",null,[[["abstractstate",3],["fieldhandleindex",3]]]],[5,"stack_has_reference","","Determine whether the stack has a reference at <code>index</code> with …",null,[[["abstractstate",3],["mutability",4]]]],[5,"stack_struct_inst_popn","","",null,[[["abstractstate",3],["structdefinstantiationindex",3]],[["result",4],["abstractstate",3],["vmerror",3]]]],[5,"stack_struct_popn","","Pop the number of stack values required to construct the …",null,[[["abstractstate",3],["structdefinitionindex",3]],[["result",4],["abstractstate",3],["vmerror",3]]]],[5,"create_struct_from_inst","","",null,[[["abstractstate",3],["structdefinstantiationindex",3]],[["result",4],["abstractstate",3],["vmerror",3]]]],[5,"create_struct","","Construct a struct from abstract values on the stack The …",null,[[["abstractstate",3],["structdefinitionindex",3],["signatureindex",3],["option",4]],[["result",4],["abstractstate",3],["vmerror",3]]]],[5,"stack_unpack_struct_instantiation","","",null,[[["abstractstate",3]]]],[5,"stack_unpack_struct_inst","","",null,[[["abstractstate",3],["structdefinstantiationindex",3]],[["result",4],["abstractstate",3],["vmerror",3]]]],[5,"stack_unpack_struct","","Push the fields of a struct as <code>AbstractValue</code>s to the stack",null,[[["abstractstate",3],["structdefinitionindex",3],["signatureindex",3],["option",4]],[["result",4],["abstractstate",3],["vmerror",3]]]],[5,"struct_ref_instantiation","","",null,[[["abstractstate",3]],[["result",4],["vec",3],["vmerror",3]]]],[5,"stack_struct_borrow_field","","Push the field at <code>field_index</code> of a struct as an …",null,[[["abstractstate",3],["fieldhandleindex",3]],[["result",4],["abstractstate",3],["vmerror",3]]]],[5,"stack_struct_borrow_field_inst","","",null,[[["abstractstate",3],["fieldinstantiationindex",3]],[["result",4],["abstractstate",3],["vmerror",3]]]],[5,"register_dereference","","Dereference the value stored in the register. If the …",null,[[["abstractstate",3]],[["result",4],["abstractstate",3],["vmerror",3]]]],[5,"stack_push_register_borrow","","Push a reference to a register value with the given …",null,[[["abstractstate",3],["mutability",4]],[["result",4],["abstractstate",3],["vmerror",3]]]],[5,"stack_satisfies_function_signature","","Determine whether the function at the given index can be …",null,[[["abstractstate",3],["functionhandleindex",3]]]],[5,"stack_satisfies_function_inst_signature","","",null,[[["functioninstantiationindex",3],["abstractstate",3]]]],[5,"function_can_acquire_resource","","Whether the function acquires any global resources or not",null,[[["abstractstate",3]]]],[5,"stack_function_call","","Simulate calling the function at <code>function_index</code>",null,[[["abstractstate",3],["signatureindex",3],["option",4],["functionhandleindex",3]],[["result",4],["abstractstate",3],["vmerror",3]]]],[5,"stack_function_inst_call","","",null,[[["functioninstantiationindex",3],["abstractstate",3]],[["result",4],["abstractstate",3],["vmerror",3]]]],[5,"get_function_instantiation_for_state","","",null,[[["functioninstantiationindex",3],["abstractstate",3]]]],[5,"stack_function_popn","","Pop the number of stack values required to call the …",null,[[["abstractstate",3],["functionhandleindex",3]],[["result",4],["abstractstate",3],["vmerror",3]]]],[5,"stack_function_inst_popn","","",null,[[["functioninstantiationindex",3],["abstractstate",3]],[["result",4],["abstractstate",3],["vmerror",3]]]],[5,"memory_safe","","TODO: This is a temporary function that represents memory …",null,[[["abstractstate",3],["option",4]]]],[4,"Status","test_generation","",null,null],[13,"VerificationFailure","","",18,null],[13,"ExecutionFailure","","",18,null],[13,"Valid","","",18,null],[5,"module_frame_generation","","",null,[[["compiledmodulemut",3],["option",4],["status",4],["sender",3],["receiver",3]]]],[5,"bytecode_generation","","",null,[[["compiledmodulemut",3],["status",4],["stdrng",3],["string",3],["sender",3],["option",4],["receiver",3]]]],[5,"run_generation","","Run generate_bytecode for the range passed in and test …",null,[[["args",3]]]],[5,"abilities","","",null,[[["signaturetoken",4]],["abilityset",3]]],[14,"state_stack_has","","Wrapper for enclosing the arguments of <code>stack_has</code> so that …",null,null],[14,"state_stack_is_castable","","Determines if the type at the top of the abstract stack …",null,null],[14,"state_stack_has_integer","","Wrapper for enclosing the arguments of <code>stack_has_integer</code> …",null,null],[14,"state_stack_has_ability","","Wrapper for enclosing the arguments of <code>stack_kind_is</code> so …",null,null],[14,"state_stack_has_polymorphic_eq","","Wrapper for for enclosing the arguments of …",null,null],[14,"state_stack_pop","","Wrapper for enclosing the arguments of <code>stack_pop</code> so that …",null,null],[14,"state_stack_push","","Wrapper for enclosing the arguments of <code>stack_push</code> so that …",null,null],[14,"state_stack_push_register","","Wrapper for enclosing the arguments of <code>stack_push_register</code>…",null,null],[14,"state_stack_local_polymorphic_eq","","Wrapper for enclosing the arguments of …",null,null],[14,"state_local_exists","","Wrapper for enclosing the arguments of <code>local_exists</code> so …",null,null],[14,"state_local_availability_is","","Wrapper for enclosing the arguments of …",null,null],[14,"state_local_has_ability","","Wrapper for enclosing the arguments of …",null,null],[14,"state_local_set","","Wrapper for enclosing the arguments of <code>local_set</code> so that …",null,null],[14,"state_local_take","","Wrapper for enclosing the arguments of <code>local_take</code> so that …",null,null],[14,"state_local_take_borrow","","Wrapper for enclosing the arguments of <code>local_take_borrow</code> …",null,null],[14,"state_local_place","","Wrapper for enclosing the arguments of <code>local_palce</code> so …",null,null],[14,"state_stack_ref_polymorphic_eq","","Wrapper for enclosing the arguments of …",null,null],[14,"state_stack_satisfies_struct_signature","","Wrapper for enclosing the arguments of …",null,null],[14,"state_stack_struct_inst_popn","","Wrapper for enclosing the arguments of …",null,null],[14,"state_stack_struct_popn","","Wrapper for enclosing the arguments of <code>stack_struct_popn</code> …",null,null],[14,"state_create_struct","","Wrapper for enclosing the arguments of <code>stack_pack_struct</code> …",null,null],[14,"state_create_struct_from_inst","","",null,null],[14,"state_stack_has_struct","","Wrapper for enclosing the arguments of <code>stack_has_struct</code> …",null,null],[14,"state_stack_has_struct_inst","","",null,null],[14,"state_stack_unpack_struct","","Wrapper for enclosing the arguments of <code>stack_unpack_struct</code>…",null,null],[14,"state_stack_unpack_struct_inst","","",null,null],[14,"state_struct_has_key","","Wrapper for enclosing the arguments of <code>struct_abilities</code> …",null,null],[14,"state_struct_inst_has_key","","",null,null],[14,"state_stack_struct_has_field","","Wrapper for enclosing the arguments of <code>struct_has_field</code> …",null,null],[14,"state_stack_struct_has_field_inst","","",null,null],[14,"state_stack_struct_borrow_field","","Wrapper for enclosing the arguments of …",null,null],[14,"state_stack_struct_borrow_field_inst","","",null,null],[14,"state_stack_has_reference","","Wrapper for enclosing the arguments of <code>stack_has_reference</code>…",null,null],[14,"state_register_dereference","","Wrapper for enclosing the arguments of …",null,null],[14,"state_stack_push_register_borrow","","Wrapper for enclosing the arguments of …",null,null],[14,"state_stack_satisfies_function_signature","","Wrapper for enclosing the arguments of …",null,null],[14,"state_stack_satisfies_function_inst_signature","","",null,null],[14,"state_stack_function_popn","","Wrapper for enclosing the arguments of <code>stack_function_popn</code>…",null,null],[14,"state_stack_function_inst_popn","","",null,null],[14,"state_stack_function_call","","Wrapper for enclosing the arguments of <code>stack_function_call</code>…",null,null],[14,"state_stack_function_inst_call","","",null,null],[14,"function_instantiation_for_state","","Determine the proper type instantiation for function call …",null,null],[14,"state_function_can_acquire_resource","","Wrapper for enclosing the arguments of …",null,null],[14,"state_memory_safe","","Wrapper for enclosing the arguments of <code>memory_safe</code> so …",null,null],[14,"state_never","","Predicate that is false for every state.",null,null],[14,"state_stack_bin_op","","",null,null],[14,"state_control_flow","","Predicate that is false for every state, unless control …",null,null],[14,"struct_instantiation_for_state","","Determine the proper type instantiation for struct in the …",null,null],[14,"unpack_instantiation_for_state","","Determine the proper type instantiation for struct in the …",null,null],[14,"with_ty_param","","A wrapper around type instantiation, that allows …",null,null],[11,"from","test_generation::abstract_state","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","test_generation::borrow_graph","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","test_generation::bytecode_generator","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","test_generation::config","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","test_generation::control_flow_graph","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","test_generation::error","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","test_generation::summaries","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","test_generation::transitions","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","test_generation","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"clone","test_generation::abstract_state","",0,[[],["borrowstate",4]]],[11,"clone","","",1,[[],["abstractvalue",3]]],[11,"clone","","",2,[[],["mutability",4]]],[11,"clone","","",3,[[],["callgraph",3]]],[11,"clone","","",4,[[],["instantiablemodule",3]]],[11,"clone","","",5,[[],["abstractstate",3]]],[11,"clone","test_generation::borrow_graph","",6,[[],["edgetype",4]]],[11,"clone","","",7,[[],["borrowgraph",3]]],[11,"clone","test_generation::bytecode_generator","",8,[[],["functiongenerationcontext",3]]],[11,"clone","test_generation::control_flow_graph","",11,[[],["basicblock",3]]],[11,"clone","","",12,[[],["cfg",3]]],[11,"clone","test_generation","",18,[[],["status",4]]],[11,"default","test_generation::abstract_state","",5,[[]]],[11,"default","test_generation::control_flow_graph","",11,[[],["basicblock",3]]],[11,"default","test_generation::transitions","",16,[[],["subst",3]]],[11,"eq","test_generation::abstract_state","",0,[[["borrowstate",4]]]],[11,"eq","","",1,[[["abstractvalue",3]]]],[11,"ne","","",1,[[["abstractvalue",3]]]],[11,"eq","","",2,[[["mutability",4]]]],[11,"eq","","",3,[[["callgraph",3]]]],[11,"ne","","",3,[[["callgraph",3]]]],[11,"eq","test_generation::borrow_graph","",6,[[["edgetype",4]]]],[11,"eq","","",7,[[["borrowgraph",3]]]],[11,"ne","","",7,[[["borrowgraph",3]]]],[11,"eq","test_generation::bytecode_generator","",8,[[["functiongenerationcontext",3]]]],[11,"ne","","",8,[[["functiongenerationcontext",3]]]],[11,"eq","test_generation","",18,[[["status",4]]]],[11,"fmt","test_generation::abstract_state","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","test_generation::borrow_graph","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","test_generation::bytecode_generator","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","test_generation::config","",10,[[["formatter",3]],["result",6]]],[11,"fmt","test_generation::control_flow_graph","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","test_generation::error","",13,[[["formatter",3]],["result",6]]],[11,"fmt","test_generation","",18,[[["formatter",3]],["result",6]]],[11,"fmt","test_generation::abstract_state","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","test_generation::error","",13,[[["formatter",3]],["result",6]]],[11,"clap","test_generation::config","",10,[[],["app",3]]],[11,"from_clap","","",10,[[["argmatches",3]]]],[11,"augment_clap","","",10,[[["app",3]],["app",3]]],[11,"is_subcommand","","",10,[[]]]],"p":[[4,"BorrowState"],[3,"AbstractValue"],[4,"Mutability"],[3,"CallGraph"],[3,"InstantiableModule"],[3,"AbstractState"],[4,"EdgeType"],[3,"BorrowGraph"],[3,"FunctionGenerationContext"],[3,"BytecodeGenerator"],[3,"Args"],[3,"BasicBlock"],[3,"CFG"],[3,"VMError"],[4,"Effects"],[3,"Summary"],[3,"Subst"],[4,"StackBinOpResult"],[4,"Status"]]},\
"transaction_builder":{"doc":"","i":[[4,"ScriptCall","transaction_builder","Structured representation of a call into a known Move …",null,null],[13,"AddCurrencyToAccount","","SummaryAdds a zero <code>Currency</code> balance to the sending <code>account</code>…",0,null],[12,"currency","transaction_builder::ScriptCall","",1,null],[13,"AddRecoveryRotationCapability","transaction_builder","SummaryStores the sending accounts ability to rotate its …",0,null],[12,"recovery_address","transaction_builder::ScriptCall","",2,null],[13,"AddValidatorAndReconfigure","transaction_builder","SummaryAdds a validator account to the validator set, and …",0,null],[12,"sliding_nonce","transaction_builder::ScriptCall","",3,null],[12,"validator_name","","",3,null],[12,"validator_address","","",3,null],[13,"Burn","transaction_builder","SummaryBurns all coins held in the preburn resource at …",0,null],[12,"token","transaction_builder::ScriptCall","",4,null],[12,"sliding_nonce","","",4,null],[12,"preburn_address","","",4,null],[13,"BurnTxnFees","transaction_builder","SummaryBurns the transaction fees collected in the …",0,null],[12,"coin_type","transaction_builder::ScriptCall","",5,null],[13,"CancelBurn","transaction_builder","SummaryCancels and returns all coins held in the preburn …",0,null],[12,"token","transaction_builder::ScriptCall","",6,null],[12,"preburn_address","","",6,null],[13,"CreateChildVaspAccount","transaction_builder","SummaryCreates a Child VASP account with its parent being …",0,null],[12,"coin_type","transaction_builder::ScriptCall","",7,null],[12,"child_address","","",7,null],[12,"auth_key_prefix","","",7,null],[12,"add_all_currencies","","",7,null],[12,"child_initial_balance","","",7,null],[13,"CreateDesignatedDealer","transaction_builder","SummaryCreates a Designated Dealer account with the …",0,null],[12,"currency","transaction_builder::ScriptCall","",8,null],[12,"sliding_nonce","","",8,null],[12,"addr","","",8,null],[12,"auth_key_prefix","","",8,null],[12,"human_name","","",8,null],[12,"add_all_currencies","","",8,null],[13,"CreateParentVaspAccount","transaction_builder","SummaryCreates a Parent VASP account with the specified …",0,null],[12,"coin_type","transaction_builder::ScriptCall","",9,null],[12,"sliding_nonce","","",9,null],[12,"new_account_address","","",9,null],[12,"auth_key_prefix","","",9,null],[12,"human_name","","",9,null],[12,"add_all_currencies","","",9,null],[13,"CreateRecoveryAddress","transaction_builder","SummaryInitializes the sending account as a recovery …",0,null],[13,"CreateValidatorAccount","","SummaryCreates a Validator account. This transaction can …",0,null],[12,"sliding_nonce","transaction_builder::ScriptCall","",10,null],[12,"new_account_address","","",10,null],[12,"auth_key_prefix","","",10,null],[12,"human_name","","",10,null],[13,"CreateValidatorOperatorAccount","transaction_builder","SummaryCreates a Validator Operator account. This …",0,null],[12,"sliding_nonce","transaction_builder::ScriptCall","",11,null],[12,"new_account_address","","",11,null],[12,"auth_key_prefix","","",11,null],[12,"human_name","","",11,null],[13,"FreezeAccount","transaction_builder","SummaryFreezes the account at <code>address</code>. The sending …",0,null],[12,"sliding_nonce","transaction_builder::ScriptCall","",12,null],[12,"to_freeze_account","","",12,null],[13,"PeerToPeerWithMetadata","transaction_builder","SummaryTransfers a given number of coins in a specified …",0,null],[12,"currency","transaction_builder::ScriptCall","",13,null],[12,"payee","","",13,null],[12,"amount","","",13,null],[12,"metadata","","",13,null],[12,"metadata_signature","","",13,null],[13,"Preburn","transaction_builder","SummaryMoves a specified number of coins in a given …",0,null],[12,"token","transaction_builder::ScriptCall","",14,null],[12,"amount","","",14,null],[13,"PublishSharedEd25519PublicKey","transaction_builder","SummaryRotates the authentication key of the sending …",0,null],[12,"public_key","transaction_builder::ScriptCall","",15,null],[13,"RegisterValidatorConfig","transaction_builder","SummaryUpdates a validator\'s configuration. This does not …",0,null],[12,"validator_account","transaction_builder::ScriptCall","",16,null],[12,"consensus_pubkey","","",16,null],[12,"validator_network_addresses","","",16,null],[12,"fullnode_network_addresses","","",16,null],[13,"RemoveValidatorAndReconfigure","transaction_builder","SummaryThis script removes a validator account from the …",0,null],[12,"sliding_nonce","transaction_builder::ScriptCall","",17,null],[12,"validator_name","","",17,null],[12,"validator_address","","",17,null],[13,"RotateAuthenticationKey","transaction_builder","SummaryRotates the transaction sender\'s authentication …",0,null],[12,"new_key","transaction_builder::ScriptCall","",18,null],[13,"RotateAuthenticationKeyWithNonce","transaction_builder","SummaryRotates the sender\'s authentication key to the …",0,null],[12,"sliding_nonce","transaction_builder::ScriptCall","",19,null],[12,"new_key","","",19,null],[13,"RotateAuthenticationKeyWithNonceAdmin","transaction_builder","SummaryRotates the specified account\'s authentication key …",0,null],[12,"sliding_nonce","transaction_builder::ScriptCall","",20,null],[12,"new_key","","",20,null],[13,"RotateAuthenticationKeyWithRecoveryAddress","transaction_builder","SummaryRotates the authentication key of a specified …",0,null],[12,"recovery_address","transaction_builder::ScriptCall","",21,null],[12,"to_recover","","",21,null],[12,"new_key","","",21,null],[13,"RotateDualAttestationInfo","transaction_builder","SummaryUpdates the url used for off-chain communication, …",0,null],[12,"new_url","transaction_builder::ScriptCall","",22,null],[12,"new_key","","",22,null],[13,"RotateSharedEd25519PublicKey","transaction_builder","SummaryRotates the authentication key in a …",0,null],[12,"public_key","transaction_builder::ScriptCall","",23,null],[13,"SetValidatorConfigAndReconfigure","transaction_builder","SummaryUpdates a validator\'s configuration, and triggers …",0,null],[12,"validator_account","transaction_builder::ScriptCall","",24,null],[12,"consensus_pubkey","","",24,null],[12,"validator_network_addresses","","",24,null],[12,"fullnode_network_addresses","","",24,null],[13,"SetValidatorOperator","transaction_builder","SummarySets the validator operator for a validator in the …",0,null],[12,"operator_name","transaction_builder::ScriptCall","",25,null],[12,"operator_account","","",25,null],[13,"SetValidatorOperatorWithNonceAdmin","transaction_builder","SummarySets the validator operator for a validator in the …",0,null],[12,"sliding_nonce","transaction_builder::ScriptCall","",26,null],[12,"operator_name","","",26,null],[12,"operator_account","","",26,null],[13,"TieredMint","transaction_builder","SummaryMints a specified number of coins in a currency to …",0,null],[12,"coin_type","transaction_builder::ScriptCall","",27,null],[12,"sliding_nonce","","",27,null],[12,"designated_dealer_address","","",27,null],[12,"mint_amount","","",27,null],[12,"tier_index","","",27,null],[13,"UnfreezeAccount","transaction_builder","SummaryUnfreezes the account at <code>address</code>. The sending …",0,null],[12,"sliding_nonce","transaction_builder::ScriptCall","",28,null],[12,"to_unfreeze_account","","",28,null],[13,"UpdateDiemVersion","transaction_builder","SummaryUpdates the Diem major version that is stored …",0,null],[12,"sliding_nonce","transaction_builder::ScriptCall","",29,null],[12,"major","","",29,null],[13,"UpdateDualAttestationLimit","transaction_builder","SummaryUpdate the dual attestation limit on-chain. …",0,null],[12,"sliding_nonce","transaction_builder::ScriptCall","",30,null],[12,"new_micro_xdx_limit","","",30,null],[13,"UpdateExchangeRate","transaction_builder","SummaryUpdate the rough on-chain exchange rate between a …",0,null],[12,"currency","transaction_builder::ScriptCall","",31,null],[12,"sliding_nonce","","",31,null],[12,"new_exchange_rate_numerator","","",31,null],[12,"new_exchange_rate_denominator","","",31,null],[13,"UpdateMintingAbility","transaction_builder","SummaryScript to allow or disallow minting of new coins …",0,null],[12,"currency","transaction_builder::ScriptCall","",32,null],[12,"allow_minting","","",32,null],[5,"encode_add_currency_to_account_script","transaction_builder","SummaryAdds a zero <code>Currency</code> balance to the sending <code>account</code>…",null,[[["typetag",4]],["script",3]]],[5,"encode_add_recovery_rotation_capability_script","","SummaryStores the sending accounts ability to rotate its …",null,[[["accountaddress",3]],["script",3]]],[5,"encode_add_validator_and_reconfigure_script","","SummaryAdds a validator account to the validator set, and …",null,[[["accountaddress",3],["vec",3],["global",3]],["script",3]]],[5,"encode_burn_script","","SummaryBurns all coins held in the preburn resource at …",null,[[["typetag",4],["accountaddress",3]],["script",3]]],[5,"encode_burn_txn_fees_script","","SummaryBurns the transaction fees collected in the …",null,[[["typetag",4]],["script",3]]],[5,"encode_cancel_burn_script","","SummaryCancels and returns all coins held in the preburn …",null,[[["typetag",4],["accountaddress",3]],["script",3]]],[5,"encode_create_child_vasp_account_script","","SummaryCreates a Child VASP account with its parent being …",null,[[["accountaddress",3],["vec",3],["typetag",4],["global",3]],["script",3]]],[5,"encode_create_designated_dealer_script","","SummaryCreates a Designated Dealer account with the …",null,[[["accountaddress",3],["vec",3],["typetag",4],["global",3]],["script",3]]],[5,"encode_create_parent_vasp_account_script","","SummaryCreates a Parent VASP account with the specified …",null,[[["accountaddress",3],["vec",3],["typetag",4],["global",3]],["script",3]]],[5,"encode_create_recovery_address_script","","SummaryInitializes the sending account as a recovery …",null,[[],["script",3]]],[5,"encode_create_validator_account_script","","SummaryCreates a Validator account. This transaction can …",null,[[["accountaddress",3],["vec",3],["global",3]],["script",3]]],[5,"encode_create_validator_operator_account_script","","SummaryCreates a Validator Operator account. This …",null,[[["accountaddress",3],["vec",3],["global",3]],["script",3]]],[5,"encode_freeze_account_script","","SummaryFreezes the account at <code>address</code>. The sending …",null,[[["accountaddress",3]],["script",3]]],[5,"encode_peer_to_peer_with_metadata_script","","SummaryTransfers a given number of coins in a specified …",null,[[["accountaddress",3],["vec",3],["typetag",4],["global",3]],["script",3]]],[5,"encode_preburn_script","","SummaryMoves a specified number of coins in a given …",null,[[["typetag",4]],["script",3]]],[5,"encode_publish_shared_ed25519_public_key_script","","SummaryRotates the authentication key of the sending …",null,[[["vec",3],["global",3]],["script",3]]],[5,"encode_register_validator_config_script","","SummaryUpdates a validator\'s configuration. This does not …",null,[[["accountaddress",3],["vec",3],["global",3]],["script",3]]],[5,"encode_remove_validator_and_reconfigure_script","","SummaryThis script removes a validator account from the …",null,[[["accountaddress",3],["vec",3],["global",3]],["script",3]]],[5,"encode_rotate_authentication_key_script","","SummaryRotates the transaction sender\'s authentication …",null,[[["vec",3],["global",3]],["script",3]]],[5,"encode_rotate_authentication_key_with_nonce_script","","SummaryRotates the sender\'s authentication key to the …",null,[[["vec",3],["global",3]],["script",3]]],[5,"encode_rotate_authentication_key_with_nonce_admin_script","","SummaryRotates the specified account\'s authentication key …",null,[[["vec",3],["global",3]],["script",3]]],[5,"encode_rotate_authentication_key_with_recovery_address_script","","SummaryRotates the authentication key of a specified …",null,[[["accountaddress",3],["vec",3],["global",3]],["script",3]]],[5,"encode_rotate_dual_attestation_info_script","","SummaryUpdates the url used for off-chain communication, …",null,[[["vec",3],["global",3]],["script",3]]],[5,"encode_rotate_shared_ed25519_public_key_script","","SummaryRotates the authentication key in a …",null,[[["vec",3],["global",3]],["script",3]]],[5,"encode_set_validator_config_and_reconfigure_script","","SummaryUpdates a validator\'s configuration, and triggers …",null,[[["accountaddress",3],["vec",3],["global",3]],["script",3]]],[5,"encode_set_validator_operator_script","","SummarySets the validator operator for a validator in the …",null,[[["accountaddress",3],["vec",3],["global",3]],["script",3]]],[5,"encode_set_validator_operator_with_nonce_admin_script","","SummarySets the validator operator for a validator in the …",null,[[["accountaddress",3],["vec",3],["global",3]],["script",3]]],[5,"encode_tiered_mint_script","","SummaryMints a specified number of coins in a currency to …",null,[[["typetag",4],["accountaddress",3]],["script",3]]],[5,"encode_unfreeze_account_script","","SummaryUnfreezes the account at <code>address</code>. The sending …",null,[[["accountaddress",3]],["script",3]]],[5,"encode_update_diem_version_script","","SummaryUpdates the Diem major version that is stored …",null,[[],["script",3]]],[5,"encode_update_dual_attestation_limit_script","","SummaryUpdate the dual attestation limit on-chain. …",null,[[],["script",3]]],[5,"encode_update_exchange_rate_script","","SummaryUpdate the rough on-chain exchange rate between a …",null,[[["typetag",4]],["script",3]]],[5,"encode_update_minting_ability_script","","SummaryScript to allow or disallow minting of new coins …",null,[[["typetag",4]],["script",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"partial_cmp","","",0,[[["scriptcall",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["scriptcall",4]]]],[11,"le","","",0,[[["scriptcall",4]]]],[11,"gt","","",0,[[["scriptcall",4]]]],[11,"ge","","",0,[[["scriptcall",4]]]],[11,"eq","","",0,[[["scriptcall",4]]]],[11,"ne","","",0,[[["scriptcall",4]]]],[11,"clone","","",0,[[],["scriptcall",4]]],[11,"arbitrary_with","","",0,[[]]],[11,"encode","","Build a Diem <code>Script</code> from a structured object <code>ScriptCall</code>.",0,[[],["script",3]]],[11,"decode","","Try to recognize a Diem <code>Script</code> and convert it into a …",0,[[["script",3]],[["option",4],["scriptcall",4]]]]],"p":[[4,"ScriptCall"],[13,"AddCurrencyToAccount"],[13,"AddRecoveryRotationCapability"],[13,"AddValidatorAndReconfigure"],[13,"Burn"],[13,"BurnTxnFees"],[13,"CancelBurn"],[13,"CreateChildVaspAccount"],[13,"CreateDesignatedDealer"],[13,"CreateParentVaspAccount"],[13,"CreateValidatorAccount"],[13,"CreateValidatorOperatorAccount"],[13,"FreezeAccount"],[13,"PeerToPeerWithMetadata"],[13,"Preburn"],[13,"PublishSharedEd25519PublicKey"],[13,"RegisterValidatorConfig"],[13,"RemoveValidatorAndReconfigure"],[13,"RotateAuthenticationKey"],[13,"RotateAuthenticationKeyWithNonce"],[13,"RotateAuthenticationKeyWithNonceAdmin"],[13,"RotateAuthenticationKeyWithRecoveryAddress"],[13,"RotateDualAttestationInfo"],[13,"RotateSharedEd25519PublicKey"],[13,"SetValidatorConfigAndReconfigure"],[13,"SetValidatorOperator"],[13,"SetValidatorOperatorWithNonceAdmin"],[13,"TieredMint"],[13,"UnfreezeAccount"],[13,"UpdateDiemVersion"],[13,"UpdateDualAttestationLimit"],[13,"UpdateExchangeRate"],[13,"UpdateMintingAbility"]]},\
"transaction_builder_generated":{"doc":"","i":[[0,"stdlib","transaction_builder_generated","Conversion library between a structured representation of …",null,null],[4,"ScriptCall","transaction_builder_generated::stdlib","Structured representation of a call into a known Move …",null,null],[13,"AddCurrencyToAccount","","SummaryAdds a zero <code>Currency</code> balance to the sending <code>account</code>…",0,null],[12,"currency","transaction_builder_generated::stdlib::ScriptCall","",1,null],[13,"AddRecoveryRotationCapability","transaction_builder_generated::stdlib","SummaryStores the sending accounts ability to rotate its …",0,null],[12,"recovery_address","transaction_builder_generated::stdlib::ScriptCall","",2,null],[13,"AddValidatorAndReconfigure","transaction_builder_generated::stdlib","SummaryAdds a validator account to the validator set, and …",0,null],[12,"sliding_nonce","transaction_builder_generated::stdlib::ScriptCall","",3,null],[12,"validator_name","","",3,null],[12,"validator_address","","",3,null],[13,"Burn","transaction_builder_generated::stdlib","SummaryBurns all coins held in the preburn resource at …",0,null],[12,"token","transaction_builder_generated::stdlib::ScriptCall","",4,null],[12,"sliding_nonce","","",4,null],[12,"preburn_address","","",4,null],[13,"BurnTxnFees","transaction_builder_generated::stdlib","SummaryBurns the transaction fees collected in the …",0,null],[12,"coin_type","transaction_builder_generated::stdlib::ScriptCall","",5,null],[13,"CancelBurn","transaction_builder_generated::stdlib","SummaryCancels and returns all coins held in the preburn …",0,null],[12,"token","transaction_builder_generated::stdlib::ScriptCall","",6,null],[12,"preburn_address","","",6,null],[13,"CreateChildVaspAccount","transaction_builder_generated::stdlib","SummaryCreates a Child VASP account with its parent being …",0,null],[12,"coin_type","transaction_builder_generated::stdlib::ScriptCall","",7,null],[12,"child_address","","",7,null],[12,"auth_key_prefix","","",7,null],[12,"add_all_currencies","","",7,null],[12,"child_initial_balance","","",7,null],[13,"CreateDesignatedDealer","transaction_builder_generated::stdlib","SummaryCreates a Designated Dealer account with the …",0,null],[12,"currency","transaction_builder_generated::stdlib::ScriptCall","",8,null],[12,"sliding_nonce","","",8,null],[12,"addr","","",8,null],[12,"auth_key_prefix","","",8,null],[12,"human_name","","",8,null],[12,"add_all_currencies","","",8,null],[13,"CreateParentVaspAccount","transaction_builder_generated::stdlib","SummaryCreates a Parent VASP account with the specified …",0,null],[12,"coin_type","transaction_builder_generated::stdlib::ScriptCall","",9,null],[12,"sliding_nonce","","",9,null],[12,"new_account_address","","",9,null],[12,"auth_key_prefix","","",9,null],[12,"human_name","","",9,null],[12,"add_all_currencies","","",9,null],[13,"CreateRecoveryAddress","transaction_builder_generated::stdlib","SummaryInitializes the sending account as a recovery …",0,null],[13,"CreateValidatorAccount","","SummaryCreates a Validator account. This transaction can …",0,null],[12,"sliding_nonce","transaction_builder_generated::stdlib::ScriptCall","",10,null],[12,"new_account_address","","",10,null],[12,"auth_key_prefix","","",10,null],[12,"human_name","","",10,null],[13,"CreateValidatorOperatorAccount","transaction_builder_generated::stdlib","SummaryCreates a Validator Operator account. This …",0,null],[12,"sliding_nonce","transaction_builder_generated::stdlib::ScriptCall","",11,null],[12,"new_account_address","","",11,null],[12,"auth_key_prefix","","",11,null],[12,"human_name","","",11,null],[13,"FreezeAccount","transaction_builder_generated::stdlib","SummaryFreezes the account at <code>address</code>. The sending …",0,null],[12,"sliding_nonce","transaction_builder_generated::stdlib::ScriptCall","",12,null],[12,"to_freeze_account","","",12,null],[13,"PeerToPeerWithMetadata","transaction_builder_generated::stdlib","SummaryTransfers a given number of coins in a specified …",0,null],[12,"currency","transaction_builder_generated::stdlib::ScriptCall","",13,null],[12,"payee","","",13,null],[12,"amount","","",13,null],[12,"metadata","","",13,null],[12,"metadata_signature","","",13,null],[13,"Preburn","transaction_builder_generated::stdlib","SummaryMoves a specified number of coins in a given …",0,null],[12,"token","transaction_builder_generated::stdlib::ScriptCall","",14,null],[12,"amount","","",14,null],[13,"PublishSharedEd25519PublicKey","transaction_builder_generated::stdlib","SummaryRotates the authentication key of the sending …",0,null],[12,"public_key","transaction_builder_generated::stdlib::ScriptCall","",15,null],[13,"RegisterValidatorConfig","transaction_builder_generated::stdlib","SummaryUpdates a validator\'s configuration. This does not …",0,null],[12,"validator_account","transaction_builder_generated::stdlib::ScriptCall","",16,null],[12,"consensus_pubkey","","",16,null],[12,"validator_network_addresses","","",16,null],[12,"fullnode_network_addresses","","",16,null],[13,"RemoveValidatorAndReconfigure","transaction_builder_generated::stdlib","SummaryThis script removes a validator account from the …",0,null],[12,"sliding_nonce","transaction_builder_generated::stdlib::ScriptCall","",17,null],[12,"validator_name","","",17,null],[12,"validator_address","","",17,null],[13,"RotateAuthenticationKey","transaction_builder_generated::stdlib","SummaryRotates the transaction sender\'s authentication …",0,null],[12,"new_key","transaction_builder_generated::stdlib::ScriptCall","",18,null],[13,"RotateAuthenticationKeyWithNonce","transaction_builder_generated::stdlib","SummaryRotates the sender\'s authentication key to the …",0,null],[12,"sliding_nonce","transaction_builder_generated::stdlib::ScriptCall","",19,null],[12,"new_key","","",19,null],[13,"RotateAuthenticationKeyWithNonceAdmin","transaction_builder_generated::stdlib","SummaryRotates the specified account\'s authentication key …",0,null],[12,"sliding_nonce","transaction_builder_generated::stdlib::ScriptCall","",20,null],[12,"new_key","","",20,null],[13,"RotateAuthenticationKeyWithRecoveryAddress","transaction_builder_generated::stdlib","SummaryRotates the authentication key of a specified …",0,null],[12,"recovery_address","transaction_builder_generated::stdlib::ScriptCall","",21,null],[12,"to_recover","","",21,null],[12,"new_key","","",21,null],[13,"RotateDualAttestationInfo","transaction_builder_generated::stdlib","SummaryUpdates the url used for off-chain communication, …",0,null],[12,"new_url","transaction_builder_generated::stdlib::ScriptCall","",22,null],[12,"new_key","","",22,null],[13,"RotateSharedEd25519PublicKey","transaction_builder_generated::stdlib","SummaryRotates the authentication key in a …",0,null],[12,"public_key","transaction_builder_generated::stdlib::ScriptCall","",23,null],[13,"SetValidatorConfigAndReconfigure","transaction_builder_generated::stdlib","SummaryUpdates a validator\'s configuration, and triggers …",0,null],[12,"validator_account","transaction_builder_generated::stdlib::ScriptCall","",24,null],[12,"consensus_pubkey","","",24,null],[12,"validator_network_addresses","","",24,null],[12,"fullnode_network_addresses","","",24,null],[13,"SetValidatorOperator","transaction_builder_generated::stdlib","SummarySets the validator operator for a validator in the …",0,null],[12,"operator_name","transaction_builder_generated::stdlib::ScriptCall","",25,null],[12,"operator_account","","",25,null],[13,"SetValidatorOperatorWithNonceAdmin","transaction_builder_generated::stdlib","SummarySets the validator operator for a validator in the …",0,null],[12,"sliding_nonce","transaction_builder_generated::stdlib::ScriptCall","",26,null],[12,"operator_name","","",26,null],[12,"operator_account","","",26,null],[13,"TieredMint","transaction_builder_generated::stdlib","SummaryMints a specified number of coins in a currency to …",0,null],[12,"coin_type","transaction_builder_generated::stdlib::ScriptCall","",27,null],[12,"sliding_nonce","","",27,null],[12,"designated_dealer_address","","",27,null],[12,"mint_amount","","",27,null],[12,"tier_index","","",27,null],[13,"UnfreezeAccount","transaction_builder_generated::stdlib","SummaryUnfreezes the account at <code>address</code>. The sending …",0,null],[12,"sliding_nonce","transaction_builder_generated::stdlib::ScriptCall","",28,null],[12,"to_unfreeze_account","","",28,null],[13,"UpdateDiemVersion","transaction_builder_generated::stdlib","SummaryUpdates the Diem major version that is stored …",0,null],[12,"sliding_nonce","transaction_builder_generated::stdlib::ScriptCall","",29,null],[12,"major","","",29,null],[13,"UpdateDualAttestationLimit","transaction_builder_generated::stdlib","SummaryUpdate the dual attestation limit on-chain. …",0,null],[12,"sliding_nonce","transaction_builder_generated::stdlib::ScriptCall","",30,null],[12,"new_micro_xdx_limit","","",30,null],[13,"UpdateExchangeRate","transaction_builder_generated::stdlib","SummaryUpdate the rough on-chain exchange rate between a …",0,null],[12,"currency","transaction_builder_generated::stdlib::ScriptCall","",31,null],[12,"sliding_nonce","","",31,null],[12,"new_exchange_rate_numerator","","",31,null],[12,"new_exchange_rate_denominator","","",31,null],[13,"UpdateMintingAbility","transaction_builder_generated::stdlib","SummaryScript to allow or disallow minting of new coins …",0,null],[12,"currency","transaction_builder_generated::stdlib::ScriptCall","",32,null],[12,"allow_minting","","",32,null],[11,"encode","transaction_builder_generated::stdlib","Build a Diem <code>Script</code> from a structured object <code>ScriptCall</code>.",0,[[],["script",3]]],[11,"decode","","Try to recognize a Diem <code>Script</code> and convert it into a …",0,[[["script",3]],[["option",4],["scriptcall",4]]]],[5,"encode_add_currency_to_account_script","","SummaryAdds a zero <code>Currency</code> balance to the sending <code>account</code>…",null,[[["typetag",4]],["script",3]]],[5,"encode_add_recovery_rotation_capability_script","","SummaryStores the sending accounts ability to rotate its …",null,[[["accountaddress",3]],["script",3]]],[5,"encode_add_validator_and_reconfigure_script","","SummaryAdds a validator account to the validator set, and …",null,[[["vec",3],["accountaddress",3]],["script",3]]],[5,"encode_burn_script","","SummaryBurns all coins held in the preburn resource at …",null,[[["typetag",4],["accountaddress",3]],["script",3]]],[5,"encode_burn_txn_fees_script","","SummaryBurns the transaction fees collected in the …",null,[[["typetag",4]],["script",3]]],[5,"encode_cancel_burn_script","","SummaryCancels and returns all coins held in the preburn …",null,[[["typetag",4],["accountaddress",3]],["script",3]]],[5,"encode_create_child_vasp_account_script","","SummaryCreates a Child VASP account with its parent being …",null,[[["vec",3],["typetag",4],["accountaddress",3]],["script",3]]],[5,"encode_create_designated_dealer_script","","SummaryCreates a Designated Dealer account with the …",null,[[["vec",3],["typetag",4],["accountaddress",3]],["script",3]]],[5,"encode_create_parent_vasp_account_script","","SummaryCreates a Parent VASP account with the specified …",null,[[["vec",3],["typetag",4],["accountaddress",3]],["script",3]]],[5,"encode_create_recovery_address_script","","SummaryInitializes the sending account as a recovery …",null,[[],["script",3]]],[5,"encode_create_validator_account_script","","SummaryCreates a Validator account. This transaction can …",null,[[["vec",3],["accountaddress",3]],["script",3]]],[5,"encode_create_validator_operator_account_script","","SummaryCreates a Validator Operator account. This …",null,[[["vec",3],["accountaddress",3]],["script",3]]],[5,"encode_freeze_account_script","","SummaryFreezes the account at <code>address</code>. The sending …",null,[[["accountaddress",3]],["script",3]]],[5,"encode_peer_to_peer_with_metadata_script","","SummaryTransfers a given number of coins in a specified …",null,[[["vec",3],["typetag",4],["accountaddress",3]],["script",3]]],[5,"encode_preburn_script","","SummaryMoves a specified number of coins in a given …",null,[[["typetag",4]],["script",3]]],[5,"encode_publish_shared_ed25519_public_key_script","","SummaryRotates the authentication key of the sending …",null,[[["vec",3]],["script",3]]],[5,"encode_register_validator_config_script","","SummaryUpdates a validator\'s configuration. This does not …",null,[[["vec",3],["accountaddress",3]],["script",3]]],[5,"encode_remove_validator_and_reconfigure_script","","SummaryThis script removes a validator account from the …",null,[[["vec",3],["accountaddress",3]],["script",3]]],[5,"encode_rotate_authentication_key_script","","SummaryRotates the transaction sender\'s authentication …",null,[[["vec",3]],["script",3]]],[5,"encode_rotate_authentication_key_with_nonce_script","","SummaryRotates the sender\'s authentication key to the …",null,[[["vec",3]],["script",3]]],[5,"encode_rotate_authentication_key_with_nonce_admin_script","","SummaryRotates the specified account\'s authentication key …",null,[[["vec",3]],["script",3]]],[5,"encode_rotate_authentication_key_with_recovery_address_script","","SummaryRotates the authentication key of a specified …",null,[[["vec",3],["accountaddress",3]],["script",3]]],[5,"encode_rotate_dual_attestation_info_script","","SummaryUpdates the url used for off-chain communication, …",null,[[["vec",3]],["script",3]]],[5,"encode_rotate_shared_ed25519_public_key_script","","SummaryRotates the authentication key in a …",null,[[["vec",3]],["script",3]]],[5,"encode_set_validator_config_and_reconfigure_script","","SummaryUpdates a validator\'s configuration, and triggers …",null,[[["vec",3],["accountaddress",3]],["script",3]]],[5,"encode_set_validator_operator_script","","SummarySets the validator operator for a validator in the …",null,[[["vec",3],["accountaddress",3]],["script",3]]],[5,"encode_set_validator_operator_with_nonce_admin_script","","SummarySets the validator operator for a validator in the …",null,[[["vec",3],["accountaddress",3]],["script",3]]],[5,"encode_tiered_mint_script","","SummaryMints a specified number of coins in a currency to …",null,[[["typetag",4],["accountaddress",3]],["script",3]]],[5,"encode_unfreeze_account_script","","SummaryUnfreezes the account at <code>address</code>. The sending …",null,[[["accountaddress",3]],["script",3]]],[5,"encode_update_diem_version_script","","SummaryUpdates the Diem major version that is stored …",null,[[],["script",3]]],[5,"encode_update_dual_attestation_limit_script","","SummaryUpdate the dual attestation limit on-chain. …",null,[[],["script",3]]],[5,"encode_update_exchange_rate_script","","SummaryUpdate the rough on-chain exchange rate between a …",null,[[["typetag",4]],["script",3]]],[5,"encode_update_minting_ability_script","","SummaryScript to allow or disallow minting of new coins …",null,[[["typetag",4]],["script",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"clone","","",0,[[],["scriptcall",4]]],[11,"eq","","",0,[[["scriptcall",4]]]],[11,"ne","","",0,[[["scriptcall",4]]]],[11,"partial_cmp","","",0,[[["scriptcall",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["scriptcall",4]]]],[11,"le","","",0,[[["scriptcall",4]]]],[11,"gt","","",0,[[["scriptcall",4]]]],[11,"ge","","",0,[[["scriptcall",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"arbitrary_with","","",0,[[]]]],"p":[[4,"ScriptCall"],[13,"AddCurrencyToAccount"],[13,"AddRecoveryRotationCapability"],[13,"AddValidatorAndReconfigure"],[13,"Burn"],[13,"BurnTxnFees"],[13,"CancelBurn"],[13,"CreateChildVaspAccount"],[13,"CreateDesignatedDealer"],[13,"CreateParentVaspAccount"],[13,"CreateValidatorAccount"],[13,"CreateValidatorOperatorAccount"],[13,"FreezeAccount"],[13,"PeerToPeerWithMetadata"],[13,"Preburn"],[13,"PublishSharedEd25519PublicKey"],[13,"RegisterValidatorConfig"],[13,"RemoveValidatorAndReconfigure"],[13,"RotateAuthenticationKey"],[13,"RotateAuthenticationKeyWithNonce"],[13,"RotateAuthenticationKeyWithNonceAdmin"],[13,"RotateAuthenticationKeyWithRecoveryAddress"],[13,"RotateDualAttestationInfo"],[13,"RotateSharedEd25519PublicKey"],[13,"SetValidatorConfigAndReconfigure"],[13,"SetValidatorOperator"],[13,"SetValidatorOperatorWithNonceAdmin"],[13,"TieredMint"],[13,"UnfreezeAccount"],[13,"UpdateDiemVersion"],[13,"UpdateDualAttestationLimit"],[13,"UpdateExchangeRate"],[13,"UpdateMintingAbility"]]},\
"transaction_builder_generator":{"doc":"","i":[[0,"cpp","transaction_builder_generator","Support for code-generation in C++17.",null,null],[5,"output","transaction_builder_generator::cpp","Output a header-only library providing C++ transaction …",null,[[["option",4],["write",8]],["result",6]]],[5,"output_library_header","","Output the headers of a library providing C++ transaction …",null,[[["option",4],["write",8]],["result",6]]],[5,"output_library_body","","Output the function definitions of a library providing …",null,[[["option",4],["write",8]],["result",6]]],[3,"Installer","","",null,null],[11,"new","","",0,[[["pathbuf",3]]]],[0,"golang","transaction_builder_generator","Support for code-generation in Go >= 1.13.",null,null],[5,"output","transaction_builder_generator::golang","Output transaction builders and decoders in Go for the …",null,[[["string",3],["write",8],["option",4]],["result",6]]],[3,"Installer","","",null,null],[11,"new","","",1,[[["pathbuf",3],["string",3],["option",4]]]],[0,"java","transaction_builder_generator","Support for code-generation in Java 8.",null,null],[5,"write_source_files","transaction_builder_generator::java","Output transaction builders and decoders in Java for the …",null,[[["pathbuf",3]],["result",6]]],[3,"Installer","","",null,null],[11,"new","","",2,[[["pathbuf",3]]]],[0,"python3","transaction_builder_generator","Support for code-generation in Python 3.",null,null],[5,"output","transaction_builder_generator::python3","Output transaction builders in Python for the given ABIs.",null,[[["string",3],["write",8],["option",4]],["result",6]]],[3,"Installer","","",null,null],[11,"new","","",3,[[["pathbuf",3],["string",3],["option",4]]]],[0,"rust","transaction_builder_generator","Support for code-generation in Rust.",null,null],[5,"output","transaction_builder_generator::rust","Output transaction builders in Rust for the given ABIs. …",null,[[["write",8]],["result",6]]],[3,"Installer","","",null,null],[11,"new","","",4,[[["pathbuf",3],["string",3]]]],[0,"typescript","transaction_builder_generator","Support for code-generation in TypeScript.",null,null],[5,"output","transaction_builder_generator::typescript","Output transaction builders and decoders in TypeScript …",null,[[["write",8]],["result",6]]],[3,"Installer","","",null,null],[11,"new","","",5,[[["pathbuf",3]]]],[0,"csharp","transaction_builder_generator","",null,null],[5,"write_source_files","transaction_builder_generator::csharp","Output transaction builders and decoders in C# for the …",null,[[["pathbuf",3]],["result",6]]],[3,"Installer","","",null,null],[11,"new","","",6,[[["pathbuf",3]]]],[5,"read_abis","transaction_builder_generator","Read all ABI files in a directory.",null,[[["path",3],["asref",8]],[["result",6],["vec",3]]]],[8,"SourceInstaller","","How to copy ABI-generated source code for a given …",null,null],[16,"Error","","",7,null],[10,"install_transaction_builders","","Create a module exposing the transaction builders for the …",7,[[],["result",4]]],[5,"read_custom_code_from_paths","","How to read custom code to inject in Diem containers.",null,[[],["customcode",6]]],[11,"from","transaction_builder_generator::cpp","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","transaction_builder_generator::golang","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","transaction_builder_generator::java","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","transaction_builder_generator::python3","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","transaction_builder_generator::rust","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","transaction_builder_generator::typescript","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","transaction_builder_generator::csharp","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"install_transaction_builders","transaction_builder_generator::cpp","",0,[[],["result",4]]],[11,"install_transaction_builders","transaction_builder_generator::golang","",1,[[],["result",4]]],[11,"install_transaction_builders","transaction_builder_generator::java","",2,[[],["result",4]]],[11,"install_transaction_builders","transaction_builder_generator::python3","",3,[[],["result",4]]],[11,"install_transaction_builders","transaction_builder_generator::rust","",4,[[],["result",4]]],[11,"install_transaction_builders","transaction_builder_generator::typescript","",5,[[],["result",4]]],[11,"install_transaction_builders","transaction_builder_generator::csharp","",6,[[],["result",4]]]],"p":[[3,"Installer"],[3,"Installer"],[3,"Installer"],[3,"Installer"],[3,"Installer"],[3,"Installer"],[3,"Installer"],[8,"SourceInstaller"]]},\
"vm":{"doc":"","i":[[0,"access","vm","Defines accessors for compiled modules.",null,null],[8,"ModuleAccess","vm::access","Represents accessors for a compiled module.",null,null],[10,"as_module","","Returns the <code>CompiledModule</code> that will be used for accesses.",0,[[],["compiledmodule",3]]],[11,"self_handle_idx","","",0,[[],["modulehandleindex",3]]],[11,"self_handle","","Returns the <code>ModuleHandle</code> for <code>self</code>.",0,[[],["modulehandle",3]]],[11,"name","","Returns the name of the module.",0,[[],["identstr",3]]],[11,"address","","Returns the address of the module.",0,[[],["accountaddress",3]]],[11,"module_handle_at","","",0,[[["modulehandleindex",3]],["modulehandle",3]]],[11,"struct_handle_at","","",0,[[["structhandleindex",3]],["structhandle",3]]],[11,"function_handle_at","","",0,[[["functionhandleindex",3]],["functionhandle",3]]],[11,"field_handle_at","","",0,[[["fieldhandleindex",3]],["fieldhandle",3]]],[11,"struct_instantiation_at","","",0,[[["structdefinstantiationindex",3]],["structdefinstantiation",3]]],[11,"function_instantiation_at","","",0,[[["functioninstantiationindex",3]],["functioninstantiation",3]]],[11,"field_instantiation_at","","",0,[[["fieldinstantiationindex",3]],["fieldinstantiation",3]]],[11,"signature_at","","",0,[[["signatureindex",3]],["signature",3]]],[11,"identifier_at","","",0,[[["identifierindex",3]],["identstr",3]]],[11,"address_identifier_at","","",0,[[["addressidentifierindex",3]],["accountaddress",3]]],[11,"constant_at","","",0,[[["constantpoolindex",3]],["constant",3]]],[11,"struct_def_at","","",0,[[["structdefinitionindex",3]],["structdefinition",3]]],[11,"function_def_at","","",0,[[["functiondefinitionindex",3]],["functiondefinition",3]]],[11,"module_handles","","",0,[[]]],[11,"struct_handles","","",0,[[]]],[11,"function_handles","","",0,[[]]],[11,"field_handles","","",0,[[]]],[11,"struct_instantiations","","",0,[[]]],[11,"function_instantiations","","",0,[[]]],[11,"field_instantiations","","",0,[[]]],[11,"signatures","","",0,[[]]],[11,"constant_pool","","",0,[[]]],[11,"identifiers","","",0,[[]]],[11,"address_identifiers","","",0,[[]]],[11,"struct_defs","","",0,[[]]],[11,"function_defs","","",0,[[]]],[11,"friend_decls","","",0,[[]]],[11,"module_id_for_handle","","",0,[[["modulehandle",3]],["moduleid",3]]],[11,"self_id","","",0,[[],["moduleid",3]]],[11,"immediate_dependencies","","",0,[[],[["vec",3],["moduleid",3]]]],[11,"immediate_friends","","",0,[[],[["vec",3],["moduleid",3]]]],[8,"ScriptAccess","","Represents accessors for a compiled script.",null,null],[10,"as_script","","Returns the <code>CompiledScript</code> that will be used for accesses.",1,[[],["compiledscript",3]]],[11,"module_handle_at","","",1,[[["modulehandleindex",3]],["modulehandle",3]]],[11,"struct_handle_at","","",1,[[["structhandleindex",3]],["structhandle",3]]],[11,"function_handle_at","","",1,[[["functionhandleindex",3]],["functionhandle",3]]],[11,"signature_at","","",1,[[["signatureindex",3]],["signature",3]]],[11,"identifier_at","","",1,[[["identifierindex",3]],["identstr",3]]],[11,"address_identifier_at","","",1,[[["addressidentifierindex",3]],["accountaddress",3]]],[11,"constant_at","","",1,[[["constantpoolindex",3]],["constant",3]]],[11,"function_instantiation_at","","",1,[[["functioninstantiationindex",3]],["functioninstantiation",3]]],[11,"module_handles","","",1,[[]]],[11,"struct_handles","","",1,[[]]],[11,"function_handles","","",1,[[]]],[11,"function_instantiations","","",1,[[]]],[11,"signatures","","",1,[[]]],[11,"constant_pool","","",1,[[]]],[11,"identifiers","","",1,[[]]],[11,"address_identifiers","","",1,[[]]],[11,"code","","",1,[[],["codeunit",3]]],[11,"immediate_dependencies","","",1,[[],[["vec",3],["moduleid",3]]]],[0,"check_bounds","vm","",null,null],[3,"BoundsChecker","vm::check_bounds","",null,null],[11,"verify","","",2,[[["compiledmodulemut",3]],["partialvmresult",6]]],[0,"compatibility","vm","",null,null],[3,"Compatibility","vm::compatibility","The result of a linking and layout compatibility check. …",null,null],[12,"struct_and_function_linking","","If false, dependent modules that reference functions or …",3,null],[12,"struct_layout","","If false, attempting to read structs previously published …",3,null],[11,"is_fully_compatible","","Return true if the two module s compared in the …",3,[[]]],[11,"check","","Return compatibility assessment for <code>new_module</code> relative …",3,[[["module",3]],["compatibility",3]]],[0,"errors","vm","",null,null],[6,"VMResult","vm::errors","",null,null],[6,"BinaryLoaderResult","","",null,null],[6,"PartialVMResult","","",null,null],[4,"Location","","",null,null],[13,"Undefined","","",4,null],[13,"Script","","",4,null],[13,"Module","","",4,null],[3,"VMError","","",null,null],[11,"into_vm_status","","",5,[[],["vmstatus",4]]],[11,"major_status","","",5,[[],["statuscode",4]]],[11,"sub_status","","",5,[[],["option",4]]],[11,"message","","",5,[[],[["option",4],["string",3]]]],[11,"location","","",5,[[],["location",4]]],[11,"indices","","",5,[[],["vec",3]]],[11,"offsets","","",5,[[],["vec",3]]],[11,"status_type","","",5,[[],["statustype",4]]],[11,"all_data","","",5,[[]]],[3,"PartialVMError","","",null,null],[11,"all_data","","",6,[[]]],[11,"finish","","",6,[[["location",4]],["vmerror",3]]],[11,"new","","",6,[[["statuscode",4]]]],[11,"major_status","","",6,[[],["statuscode",4]]],[11,"with_sub_status","","",6,[[]]],[11,"with_message","","",6,[[["string",3]]]],[11,"at_index","","",6,[[["indexkind",4],["tableindex",6]]]],[11,"at_indices","","",6,[[["vec",3]]]],[11,"at_code_offset","","",6,[[["functiondefinitionindex",3],["codeoffset",6]]]],[11,"at_code_offsets","","",6,[[["vec",3]]]],[11,"append_message_with_separator","","Append the message <code>message</code> to the message field of the VM …",6,[[["string",3]]]],[5,"vm_status_of_result","","",null,[[["vmresult",6]],["vmstatus",4]]],[5,"offset_out_of_bounds","","",null,[[["statuscode",4],["functiondefinitionindex",3],["codeoffset",6],["indexkind",4]],["partialvmerror",3]]],[5,"bounds_error","","",null,[[["statuscode",4],["indexkind",4],["tableindex",6]],["partialvmerror",3]]],[5,"verification_error","","",null,[[["statuscode",4],["indexkind",4],["tableindex",6]],["partialvmerror",3]]],[0,"constant","vm","",null,null],[0,"deserializer","","",null,null],[4,"DeprecatedNominalResourceFlag","vm::deserializer","",null,null],[13,"NOMINAL_RESOURCE","","",7,null],[13,"NORMAL_STRUCT","","",7,null],[0,"file_format","vm","Binary format for transactions and modules.",null,null],[6,"TableIndex","vm::file_format","Generic index into one of the tables in the binary format.",null,null],[3,"ModuleHandleIndex","","Index into the <code>ModuleHandle</code> table.",null,null],[12,"0","","",8,null],[11,"new","","",8,[[["tableindex",6]]]],[3,"StructHandleIndex","","Index into the <code>StructHandle</code> table.",null,null],[12,"0","","",9,null],[11,"new","","",9,[[["tableindex",6]]]],[3,"FunctionHandleIndex","","Index into the <code>FunctionHandle</code> table.",null,null],[12,"0","","",10,null],[11,"new","","",10,[[["tableindex",6]]]],[3,"FieldHandleIndex","","Index into the <code>FieldHandle</code> table.",null,null],[12,"0","","",11,null],[11,"new","","",11,[[["tableindex",6]]]],[3,"StructDefInstantiationIndex","","Index into the <code>StructInstantiation</code> table.",null,null],[12,"0","","",12,null],[11,"new","","",12,[[["tableindex",6]]]],[3,"FunctionInstantiationIndex","","Index into the <code>FunctionInstantiation</code> table.",null,null],[12,"0","","",13,null],[11,"new","","",13,[[["tableindex",6]]]],[3,"FieldInstantiationIndex","","Index into the <code>FieldInstantiation</code> table.",null,null],[12,"0","","",14,null],[11,"new","","",14,[[["tableindex",6]]]],[3,"IdentifierIndex","","Index into the <code>Identifier</code> table.",null,null],[12,"0","","",15,null],[11,"new","","",15,[[["tableindex",6]]]],[3,"AddressIdentifierIndex","","Index into the <code>AddressIdentifier</code> table.",null,null],[12,"0","","",16,null],[11,"new","","",16,[[["tableindex",6]]]],[3,"ConstantPoolIndex","","Index into the <code>ConstantPool</code> table.",null,null],[12,"0","","",17,null],[11,"new","","",17,[[["tableindex",6]]]],[3,"SignatureIndex","","Index into the <code>Signature</code> table.",null,null],[12,"0","","",18,null],[11,"new","","",18,[[["tableindex",6]]]],[3,"StructDefinitionIndex","","Index into the <code>StructDefinition</code> table.",null,null],[12,"0","","",19,null],[11,"new","","",19,[[["tableindex",6]]]],[3,"FunctionDefinitionIndex","","Index into the <code>FunctionDefinition</code> table.",null,null],[12,"0","","",20,null],[11,"new","","",20,[[["tableindex",6]]]],[6,"LocalIndex","","Index of a local variable in a function.",null,null],[6,"MemberCount","","Max number of fields in a <code>StructDefinition</code>.",null,null],[6,"CodeOffset","","Index into the code stream for a jump. The offset is …",null,null],[6,"IdentifierPool","","The pool of identifiers.",null,null],[6,"AddressIdentifierPool","","The pool of address identifiers (addresses used in …",null,null],[6,"ConstantPool","","The pool of <code>Constant</code> values",null,null],[6,"TypeSignaturePool","","The pool of <code>TypeSignature</code> instances. Those are system and …",null,null],[6,"SignaturePool","","The pool of <code>Signature</code> instances. Every function …",null,null],[5,"self_module_name","","",null,[[],["identstr",3]]],[17,"NO_TYPE_ARGUMENTS","","Index 0 into the LocalsSignaturePool, which is guaranteed …",null,null],[3,"ModuleHandle","","A <code>ModuleHandle</code> is a reference to a MOVE module. It is …",null,null],[12,"address","","Index into the <code>AddressIdentifierIndex</code>. Identifies …",21,null],[12,"name","","The name of the module published in the code section for …",21,null],[3,"StructHandle","","A <code>StructHandle</code> is a reference to a user defined type. It …",null,null],[12,"module","","The module that defines the type.",22,null],[12,"name","","The name of the type.",22,null],[12,"abilities","","Contains the abilities for this struct For any …",22,null],[12,"type_parameters","","The type formals (identified by their index into the vec) …",22,null],[3,"FunctionHandle","","A <code>FunctionHandle</code> is a reference to a function. It is …",null,null],[12,"module","","The module that defines the function.",23,null],[12,"name","","The name of the function.",23,null],[12,"parameters","","The list of arguments to the function.",23,null],[12,"return_","","The list of return types.",23,null],[12,"type_parameters","","The type formals (identified by their index into the vec) …",23,null],[3,"FieldHandle","","A field access info (owner type and offset)",null,null],[12,"owner","","",24,null],[12,"field","","",24,null],[4,"StructFieldInformation","","<code>StructFieldInformation</code> indicates whether a struct is …",null,null],[13,"Native","","",25,null],[13,"Declared","","",25,null],[3,"StructDefInstantiation","","A complete or partial instantiation of a generic struct",null,null],[12,"def","","",26,null],[12,"type_parameters","","",26,null],[3,"FunctionInstantiation","","A complete or partial instantiation of a function",null,null],[12,"handle","","",27,null],[12,"type_parameters","","",27,null],[3,"FieldInstantiation","","A complete or partial instantiation of a field (or the …",null,null],[12,"handle","","",28,null],[12,"type_parameters","","",28,null],[3,"StructDefinition","","A <code>StructDefinition</code> is a type definition. It either …",null,null],[12,"struct_handle","","The <code>StructHandle</code> for this <code>StructDefinition</code>. This has the …",29,null],[12,"field_information","","Contains either",29,null],[11,"declared_field_count","","",29,[[],[["partialvmresult",6],["membercount",6]]]],[11,"field","","",29,[[],[["option",4],["fielddefinition",3]]]],[3,"FieldDefinition","","A <code>FieldDefinition</code> is the definition of a field: its name …",null,null],[12,"name","","The name of the field.",30,null],[12,"signature","","The type of the field.",30,null],[4,"Visibility","","<code>Visibility</code> restricts the accessibility of the associated …",null,null],[13,"Private","","Accessible within its defining module only.",31,null],[13,"Public","","Accessible by any module or script outside of its …",31,null],[13,"Script","","Accessible by any script or other <code>Script</code> functions from …",31,null],[13,"Friend","","Accessible by this module as well as modules declared in …",31,null],[3,"FunctionDefinition","","A <code>FunctionDefinition</code> is the implementation of a function. …",null,null],[12,"function","","The prototype of the function (module, name, signature).",32,null],[12,"visibility","","The visibility of this function.",32,null],[12,"acquires_global_resources","","List of locally defined types (declared in this module) …",32,null],[12,"code","","Code for this function.",32,null],[11,"is_native","","Returns whether the FunctionDefinition is native.",32,[[]]],[18,"NATIVE","","A native function implemented in Rust.",32,null],[3,"TypeSignature","","A type definition. <code>SignatureToken</code> allows the definition …",null,null],[12,"0","","",33,null],[3,"FunctionSignature","","A <code>FunctionSignature</code> in internally used to create a unique …",null,null],[12,"return_","","The list of return types.",34,null],[12,"parameters","","The list of arguments to the function.",34,null],[12,"type_parameters","","The type formals (identified by their index into the vec) …",34,null],[3,"Signature","","A <code>Signature</code> is the list of locals used by a function.",null,null],[12,"0","","",35,null],[11,"len","","Length of the <code>Signature</code>.",35,[[]]],[11,"is_empty","","Whether the function has no locals (both arguments or …",35,[[]]],[6,"TypeParameterIndex","","Type parameters are encoded as indices. This index can …",null,null],[4,"Ability","","An <code>Ability</code> classifies what operations are permitted for a …",null,null],[13,"Copy","","Allows values of types with this ability to be copied, …",36,null],[13,"Drop","","Allows values of types with this ability to be dropped, …",36,null],[13,"Store","","Allows values of types with this ability to exist inside …",36,null],[13,"Key","","Allows the type to serve as a key for global storage …",36,null],[11,"requires","","For a struct with ability <code>a</code>, each field needs to have the …",36,[[]]],[11,"required_by","","An inverse of <code>requires</code>, where x is in a.required_by() iff …",36,[[],["abilityset",3]]],[3,"AbilitySet","","A set of <code>Ability</code>s",null,null],[18,"EMPTY","","The empty ability set",37,null],[18,"PRIMITIVES","","Abilities for <code>Bool</code>, <code>U8</code>, <code>U64</code>, <code>U128</code>, and <code>Address</code>",37,null],[18,"REFERENCES","","Abilities for <code>Reference</code> and <code>MutableReference</code>",37,null],[18,"SIGNER","","Abilities for <code>Signer</code>",37,null],[18,"VECTOR","","Abilities for <code>Vector</code>, note they are predicated on the …",37,null],[18,"ALL","","Ability set containing all abilities",37,null],[11,"has_ability","","",37,[[["ability",4]]]],[11,"has_copy","","",37,[[]]],[11,"has_drop","","",37,[[]]],[11,"has_store","","",37,[[]]],[11,"has_key","","",37,[[]]],[11,"remove","","",37,[[["ability",4]]]],[11,"intersect","","",37,[[]]],[11,"union","","",37,[[]]],[11,"is_subset","","",37,[[]]],[11,"polymorphic_abilities","","For a polymorphic type, its actual abilities correspond …",37,[[]]],[11,"from_u8","","",37,[[],["option",4]]],[11,"into_u8","","",37,[[]]],[3,"AbilitySetIterator","","",null,null],[4,"SignatureToken","","A <code>SignatureToken</code> is a type declaration for a location.",null,null],[13,"Bool","","Boolean, <code>true</code> or <code>false</code>.",38,null],[13,"U8","","Unsigned integers, 8 bits length.",38,null],[13,"U64","","Unsigned integers, 64 bits length.",38,null],[13,"U128","","Unsigned integers, 128 bits length.",38,null],[13,"Address","","Address, a 16 bytes immutable type.",38,null],[13,"Signer","","Signer, a 16 bytes immutable type representing the …",38,null],[13,"Vector","","Vector",38,null],[13,"Struct","","User defined type",38,null],[13,"StructInstantiation","","",38,null],[13,"Reference","","Reference to a type.",38,null],[13,"MutableReference","","Mutable reference to a type.",38,null],[13,"TypeParameter","","Type parameter.",38,null],[3,"SignatureTokenPreorderTraversalIter","","An iterator to help traverse the <code>SignatureToken</code> in a …",null,null],[3,"SignatureTokenPreorderTraversalIterWithDepth","","Alternative preorder traversal iterator for …",null,null],[11,"signature_token_kind","","Returns the \\\"value kind\\\" for the <code>SignatureToken</code>",38,[[],["signaturetokenkind",4]]],[11,"is_integer","","",38,[[]]],[11,"is_reference","","Returns true if the <code>SignatureToken</code> is any kind of …",38,[[]]],[11,"is_mutable_reference","","Returns true if the <code>SignatureToken</code> is a mutable reference.",38,[[]]],[11,"is_signer","","Returns true if the <code>SignatureToken</code> is a signer",38,[[]]],[11,"is_valid_for_constant","","Returns true if the <code>SignatureToken</code> can represent a …",38,[[]]],[11,"debug_set_sh_idx","","Set the index to this one. Useful for random testing.",38,[[["structhandleindex",3]]]],[11,"preorder_traversal","","",38,[[],["signaturetokenpreordertraversaliter",3]]],[11,"preorder_traversal_with_depth","","",38,[[],["signaturetokenpreordertraversaliterwithdepth",3]]],[3,"Constant","","A <code>Constant</code> is a serialized value along with its type. …",null,null],[12,"type_","","",39,null],[12,"data","","",39,null],[3,"CodeUnit","","A <code>CodeUnit</code> is the body of a function. It has the function …",null,null],[12,"locals","","List of locals type. All locals are typed.",40,null],[12,"code","","Code stream, function body.",40,null],[4,"Bytecode","","<code>Bytecode</code> is a VM instruction of variable size. The type …",null,null],[13,"Pop","","Pop and discard the value at the top of the stack. The …",41,null],[13,"Ret","","Return from function, possibly with values according to …",41,null],[13,"BrTrue","","Branch to the instruction at position <code>CodeOffset</code> if the …",41,null],[13,"BrFalse","","Branch to the instruction at position <code>CodeOffset</code> if the …",41,null],[13,"Branch","","Branch unconditionally to the instruction at position …",41,null],[13,"LdU8","","Push a U8 constant onto the stack.",41,null],[13,"LdU64","","Push a U64 constant onto the stack.",41,null],[13,"LdU128","","Push a U128 constant onto the stack.",41,null],[13,"CastU8","","Convert the value at the top of the stack into u8.",41,null],[13,"CastU64","","Convert the value at the top of the stack into u64.",41,null],[13,"CastU128","","Convert the value at the top of the stack into u128.",41,null],[13,"LdConst","","Push a <code>Constant</code> onto the stack. The value is loaded and …",41,null],[13,"LdTrue","","Push <code>true</code> onto the stack.",41,null],[13,"LdFalse","","Push <code>false</code> onto the stack.",41,null],[13,"CopyLoc","","Push the local identified by <code>LocalIndex</code> onto the stack. …",41,null],[13,"MoveLoc","","Push the local identified by <code>LocalIndex</code> onto the stack. …",41,null],[13,"StLoc","","Pop value from the top of the stack and store it into the …",41,null],[13,"Call","","Call a function. The stack has the arguments pushed first …",41,null],[13,"CallGeneric","","",41,null],[13,"Pack","","Create an instance of the type specified via …",41,null],[13,"PackGeneric","","",41,null],[13,"Unpack","","Destroy an instance of a type and push the values bound …",41,null],[13,"UnpackGeneric","","",41,null],[13,"ReadRef","","Read a reference. The reference is on the stack, it is …",41,null],[13,"WriteRef","","Write to a reference. The reference and the value are on …",41,null],[13,"FreezeRef","","Convert a mutable reference to an immutable reference.",41,null],[13,"MutBorrowLoc","","Load a mutable reference to a local identified by …",41,null],[13,"ImmBorrowLoc","","Load an immutable reference to a local identified by …",41,null],[13,"MutBorrowField","","Load a mutable reference to a field identified by …",41,null],[13,"MutBorrowFieldGeneric","","Load a mutable reference to a field identified by …",41,null],[13,"ImmBorrowField","","Load an immutable reference to a field identified by …",41,null],[13,"ImmBorrowFieldGeneric","","Load an immutable reference to a field identified by …",41,null],[13,"MutBorrowGlobal","","Return a mutable reference to an instance of type …",41,null],[13,"MutBorrowGlobalGeneric","","",41,null],[13,"ImmBorrowGlobal","","Return an immutable reference to an instance of type …",41,null],[13,"ImmBorrowGlobalGeneric","","",41,null],[13,"Add","","Add the 2 u64 at the top of the stack and pushes the …",41,null],[13,"Sub","","Subtract the 2 u64 at the top of the stack and pushes the …",41,null],[13,"Mul","","Multiply the 2 u64 at the top of the stack and pushes the …",41,null],[13,"Mod","","Perform a modulo operation on the 2 u64 at the top of the …",41,null],[13,"Div","","Divide the 2 u64 at the top of the stack and pushes the …",41,null],[13,"BitOr","","Bitwise OR the 2 u64 at the top of the stack and pushes …",41,null],[13,"BitAnd","","Bitwise AND the 2 u64 at the top of the stack and pushes …",41,null],[13,"Xor","","Bitwise XOR the 2 u64 at the top of the stack and pushes …",41,null],[13,"Or","","Logical OR the 2 bool at the top of the stack and pushes …",41,null],[13,"And","","Logical AND the 2 bool at the top of the stack and pushes …",41,null],[13,"Not","","Logical NOT the bool at the top of the stack and pushes …",41,null],[13,"Eq","","Compare for equality the 2 value at the top of the stack …",41,null],[13,"Neq","","Compare for inequality the 2 value at the top of the …",41,null],[13,"Lt","","Perform a \\\"less than\\\" operation of the 2 u64 at the top …",41,null],[13,"Gt","","Perform a \\\"greater than\\\" operation of the 2 u64 at the …",41,null],[13,"Le","","Perform a \\\"less than or equal\\\" operation of the 2 u64 at …",41,null],[13,"Ge","","Perform a \\\"greater than or equal\\\" than operation of the 2 …",41,null],[13,"Abort","","Abort execution with errorcode",41,null],[13,"Nop","","No operation.",41,null],[13,"Exists","","Returns whether or not a given address has an object of …",41,null],[13,"ExistsGeneric","","",41,null],[13,"MoveFrom","","Move the instance of type StructDefinitionIndex, at the …",41,null],[13,"MoveFromGeneric","","",41,null],[13,"MoveTo","","Move the instance at the top of the stack to the address …",41,null],[13,"MoveToGeneric","","",41,null],[13,"Shl","","Shift the (second top value) left (top value) bits and …",41,null],[13,"Shr","","Shift the (second top value) right (top value) bits and …",41,null],[18,"NUM_INSTRUCTIONS","","The number of variants in this enum.",41,null],[17,"NUMBER_OF_NATIVE_FUNCTIONS","","",null,null],[11,"is_unconditional_branch","","Return true if this bytecode instruction always branches",41,[[]]],[11,"is_conditional_branch","","Return true if the branching behavior of this bytecode …",41,[[]]],[11,"is_branch","","Returns true if this bytecode instruction is either a …",41,[[]]],[11,"offset","","Returns the offset that this bytecode instruction …",41,[[],[["option",4],["codeoffset",6]]]],[11,"get_successors","","Return the successor offsets of this bytecode instruction.",41,[[["codeoffset",6]],[["vec",3],["codeoffset",6]]]],[3,"CompiledScript","","Contains the main function to execute and its …",null,null],[3,"CompiledScriptMut","","A mutable version of <code>CompiledScript</code>. Converting to a …",null,null],[12,"module_handles","","Handles to all modules referenced.",42,null],[12,"struct_handles","","Handles to external/imported types.",42,null],[12,"function_handles","","Handles to external/imported functions.",42,null],[12,"function_instantiations","","Function instantiations.",42,null],[12,"signatures","","",42,null],[12,"identifiers","","All identifiers used in this transaction.",42,null],[12,"address_identifiers","","All address identifiers used in this transaction.",42,null],[12,"constant_pool","","Constant pool. The constant values used in the …",42,null],[12,"type_parameters","","",42,null],[12,"parameters","","",42,null],[12,"code","","",42,null],[18,"MAIN_INDEX","","Returns the index of <code>main</code> in case a script is converted …",43,null],[11,"as_inner","","Returns a reference to the inner <code>CompiledScriptMut</code>.",43,[[],["compiledscriptmut",3]]],[11,"into_inner","","Converts this instance into the inner <code>CompiledScriptMut</code>. …",43,[[],["compiledscriptmut",3]]],[11,"into_module","","Converts a <code>CompiledScript</code> into a <code>CompiledModule</code> for code …",43,[[]]],[3,"ScriptConversionInfo","","",null,null],[11,"freeze","","Converts this instance into <code>CompiledScript</code> after …",42,[[],[["partialvmresult",6],["compiledscript",3]]]],[11,"into_module","","Converts a <code>CompiledScriptMut</code> to a <code>CompiledModule</code> for code …",42,[[]]],[3,"CompiledModule","","A <code>CompiledModule</code> defines the structure of a module which …",null,null],[3,"CompiledModuleMut","","A mutable version of <code>CompiledModule</code>. Converting to a …",null,null],[12,"self_module_handle_idx","","Handle to self.",44,null],[12,"module_handles","","Handles to external dependency modules and self.",44,null],[12,"struct_handles","","Handles to external and internal types.",44,null],[12,"function_handles","","Handles to external and internal functions.",44,null],[12,"field_handles","","Handles to fields.",44,null],[12,"friend_decls","","Friend declarations, represented as a collection of …",44,null],[12,"struct_def_instantiations","","Struct instantiations.",44,null],[12,"function_instantiations","","Function instantiations.",44,null],[12,"field_instantiations","","Field instantiations.",44,null],[12,"signatures","","Locals signature pool. The signature for all locals of …",44,null],[12,"identifiers","","All identifiers used in this module.",44,null],[12,"address_identifiers","","All address identifiers used in this module.",44,null],[12,"constant_pool","","Constant pool. The constant values used in the module.",44,null],[12,"struct_defs","","Types defined in this module.",44,null],[12,"function_defs","","Function defined in this module.",44,null],[11,"kind_count","","Returns the count of a specific <code>IndexKind</code>",44,[[["indexkind",4]]]],[11,"freeze","","Converts this instance into <code>CompiledModule</code> after …",44,[[],[["partialvmresult",6],["compiledmodule",3]]]],[11,"as_inner","","Returns a reference to the inner <code>CompiledModuleMut</code>.",45,[[],["compiledmodulemut",3]]],[11,"into_inner","","Converts this instance into the inner <code>CompiledModuleMut</code>. …",45,[[],["compiledmodulemut",3]]],[11,"kind_count","","Returns the number of items of a specific <code>IndexKind</code>.",45,[[["indexkind",4]]]],[11,"module_id_for_handle","","Returns the code key of <code>module_handle</code>",45,[[["modulehandle",3]],["moduleid",3]]],[11,"self_id","","Returns the code key of <code>self</code>",45,[[],["moduleid",3]]],[11,"into_script","","This function should only be called on an instance of …",45,[[["scriptconversioninfo",3]],["compiledscript",3]]],[5,"empty_module","","Return the simplest module that will pass the bounds …",null,[[],["compiledmodulemut",3]]],[5,"basic_test_module","","Create the following module which is convenient in tests: …",null,[[],["compiledmodulemut",3]]],[5,"dummy_procedure_module","","Create a dummy module to wrap the bytecode program in …",null,[[["vec",3],["bytecode",4]],["compiledmodule",3]]],[5,"empty_script","","Return a simple script that contains only a return in the …",null,[[],["compiledscriptmut",3]]],[0,"file_format_common","vm","Constants for the binary format.",null,null],[4,"BinaryConstants","vm::file_format_common","Constant values for the binary format header.",null,null],[18,"DIEM_MAGIC_SIZE","","The blob that must start a binary.",46,null],[18,"DIEM_MAGIC","","",46,null],[18,"HEADER_SIZE","","The <code>DIEM_MAGIC</code> size, 4 byte for major version and 1 byte …",46,null],[18,"TABLE_HEADER_SIZE","","A (Table Type, Start Offset, Byte Count) size, which is 1 …",46,null],[17,"TABLE_COUNT_MAX","","",null,null],[17,"TABLE_OFFSET_MAX","","",null,null],[17,"TABLE_SIZE_MAX","","",null,null],[17,"TABLE_CONTENT_SIZE_MAX","","",null,null],[17,"TABLE_INDEX_MAX","","",null,null],[17,"SIGNATURE_INDEX_MAX","","",null,null],[17,"ADDRESS_INDEX_MAX","","",null,null],[17,"IDENTIFIER_INDEX_MAX","","",null,null],[17,"MODULE_HANDLE_INDEX_MAX","","",null,null],[17,"STRUCT_HANDLE_INDEX_MAX","","",null,null],[17,"STRUCT_DEF_INDEX_MAX","","",null,null],[17,"FUNCTION_HANDLE_INDEX_MAX","","",null,null],[17,"FUNCTION_INST_INDEX_MAX","","",null,null],[17,"FIELD_HANDLE_INDEX_MAX","","",null,null],[17,"FIELD_INST_INDEX_MAX","","",null,null],[17,"STRUCT_DEF_INST_INDEX_MAX","","",null,null],[17,"CONSTANT_INDEX_MAX","","",null,null],[17,"BYTECODE_COUNT_MAX","","",null,null],[17,"BYTECODE_INDEX_MAX","","",null,null],[17,"LOCAL_INDEX_MAX","","",null,null],[17,"IDENTIFIER_SIZE_MAX","","",null,null],[17,"CONSTANT_SIZE_MAX","","",null,null],[17,"SIGNATURE_SIZE_MAX","","",null,null],[17,"ACQUIRES_COUNT_MAX","","",null,null],[17,"FIELD_COUNT_MAX","","",null,null],[17,"FIELD_OFFSET_MAX","","",null,null],[17,"TYPE_PARAMETER_COUNT_MAX","","",null,null],[17,"TYPE_PARAMETER_INDEX_MAX","","",null,null],[17,"SIGNATURE_TOKEN_DEPTH_MAX","","",null,null],[4,"TableType","","Constants for table types in the binary.",null,null],[13,"MODULE_HANDLES","","",47,null],[13,"STRUCT_HANDLES","","",47,null],[13,"FUNCTION_HANDLES","","",47,null],[13,"FUNCTION_INST","","",47,null],[13,"SIGNATURES","","",47,null],[13,"CONSTANT_POOL","","",47,null],[13,"IDENTIFIERS","","",47,null],[13,"ADDRESS_IDENTIFIERS","","",47,null],[13,"STRUCT_DEFS","","",47,null],[13,"STRUCT_DEF_INST","","",47,null],[13,"FUNCTION_DEFS","","",47,null],[13,"FIELD_HANDLE","","",47,null],[13,"FIELD_INST","","",47,null],[13,"FRIEND_DECLS","","",47,null],[4,"SerializedType","","Constants for signature blob values.",null,null],[13,"BOOL","","",48,null],[13,"U8","","",48,null],[13,"U64","","",48,null],[13,"U128","","",48,null],[13,"ADDRESS","","",48,null],[13,"REFERENCE","","",48,null],[13,"MUTABLE_REFERENCE","","",48,null],[13,"STRUCT","","",48,null],[13,"TYPE_PARAMETER","","",48,null],[13,"VECTOR","","",48,null],[13,"STRUCT_INST","","",48,null],[13,"SIGNER","","",48,null],[4,"SerializedNativeStructFlag","","",null,null],[13,"NATIVE","","",49,null],[13,"DECLARED","","",49,null],[4,"Opcodes","","List of opcodes constants.",null,null],[13,"POP","","",50,null],[13,"RET","","",50,null],[13,"BR_TRUE","","",50,null],[13,"BR_FALSE","","",50,null],[13,"BRANCH","","",50,null],[13,"LD_U64","","",50,null],[13,"LD_CONST","","",50,null],[13,"LD_TRUE","","",50,null],[13,"LD_FALSE","","",50,null],[13,"COPY_LOC","","",50,null],[13,"MOVE_LOC","","",50,null],[13,"ST_LOC","","",50,null],[13,"MUT_BORROW_LOC","","",50,null],[13,"IMM_BORROW_LOC","","",50,null],[13,"MUT_BORROW_FIELD","","",50,null],[13,"IMM_BORROW_FIELD","","",50,null],[13,"CALL","","",50,null],[13,"PACK","","",50,null],[13,"UNPACK","","",50,null],[13,"READ_REF","","",50,null],[13,"WRITE_REF","","",50,null],[13,"ADD","","",50,null],[13,"SUB","","",50,null],[13,"MUL","","",50,null],[13,"MOD","","",50,null],[13,"DIV","","",50,null],[13,"BIT_OR","","",50,null],[13,"BIT_AND","","",50,null],[13,"XOR","","",50,null],[13,"OR","","",50,null],[13,"AND","","",50,null],[13,"NOT","","",50,null],[13,"EQ","","",50,null],[13,"NEQ","","",50,null],[13,"LT","","",50,null],[13,"GT","","",50,null],[13,"LE","","",50,null],[13,"GE","","",50,null],[13,"ABORT","","",50,null],[13,"NOP","","",50,null],[13,"EXISTS","","",50,null],[13,"MUT_BORROW_GLOBAL","","",50,null],[13,"IMM_BORROW_GLOBAL","","",50,null],[13,"MOVE_FROM","","",50,null],[13,"MOVE_TO","","",50,null],[13,"FREEZE_REF","","",50,null],[13,"SHL","","",50,null],[13,"SHR","","",50,null],[13,"LD_U8","","",50,null],[13,"LD_U128","","",50,null],[13,"CAST_U8","","",50,null],[13,"CAST_U64","","",50,null],[13,"CAST_U128","","",50,null],[13,"MUT_BORROW_FIELD_GENERIC","","",50,null],[13,"IMM_BORROW_FIELD_GENERIC","","",50,null],[13,"CALL_GENERIC","","",50,null],[13,"PACK_GENERIC","","",50,null],[13,"UNPACK_GENERIC","","",50,null],[13,"EXISTS_GENERIC","","",50,null],[13,"MUT_BORROW_GLOBAL_GENERIC","","",50,null],[13,"IMM_BORROW_GLOBAL_GENERIC","","",50,null],[13,"MOVE_FROM_GENERIC","","",50,null],[13,"MOVE_TO_GENERIC","","",50,null],[17,"BINARY_SIZE_LIMIT","","Upper limit on the binary size",null,null],[5,"read_u8","","",null,[[["cursor",3]],["result",6]]],[5,"read_u32","","",null,[[["cursor",3]],["result",6]]],[5,"read_uleb128_as_u64","","",null,[[["cursor",3]],["result",6]]],[17,"VERSION_1","","Version 1: the initial version",null,null],[17,"VERSION_2","","Version 2: changes compared with version 1 + function …",null,null],[17,"VERSION_MAX","","",null,null],[5,"instruction_key","","The encoding of the instruction is the serialized form of …",null,[[["bytecode",4]]]],[0,"internals","vm","Types meant for use by other parts of this crate, and by …",null,null],[8,"ModuleIndex","vm::internals","Represents a module index.",null,null],[18,"KIND","","",51,null],[10,"into_index","","",51,[[]]],[0,"normalized","vm","",null,null],[4,"Type","vm::normalized","Defines normalized representations of Move types, fields, …",null,null],[13,"Bool","","",52,null],[13,"U8","","",52,null],[13,"U64","","",52,null],[13,"U128","","",52,null],[13,"Address","","",52,null],[13,"Signer","","",52,null],[13,"Struct","","",52,null],[12,"address","vm::normalized::Type","",53,null],[12,"module","","",53,null],[12,"name","","",53,null],[12,"type_arguments","","",53,null],[13,"Vector","vm::normalized","",52,null],[13,"TypeParameter","","",52,null],[13,"Reference","","",52,null],[13,"MutableReference","","",52,null],[3,"Field","","Normalized version of a <code>FieldDefinition</code>. The <code>name</code> is …",null,null],[12,"name","","",54,null],[12,"type_","","",54,null],[3,"Struct","","Normalized version of a <code>StructDefinition</code>. Not safe to …",null,null],[12,"name","","",55,null],[12,"abilities","","",55,null],[12,"type_parameters","","",55,null],[12,"fields","","",55,null],[3,"FunctionSignature","","Normalized version of a <code>FunctionDefinition</code>. Not safe to …",null,null],[12,"name","","",56,null],[12,"type_parameters","","",56,null],[12,"formals","","",56,null],[12,"ret","","",56,null],[3,"Module","","Normalized version of a <code>CompiledModule</code>: its address, …",null,null],[12,"address","","",57,null],[12,"name","","",57,null],[12,"friends","","",57,null],[12,"structs","","",57,null],[12,"exposed_functions","","",57,null],[11,"new","","Extract a normalized module from a <code>CompiledModule</code>. The …",57,[[["compiledmodule",3]]]],[11,"module_id","","",57,[[],["moduleid",3]]],[11,"new","","Create a normalized <code>Type</code> for <code>SignatureToken</code> <code>s</code> in module <code>m</code>.",52,[[["compiledmodule",3],["signaturetoken",4]]]],[11,"is_closed","","Return true if <code>self</code> is a closed type with no free type …",52,[[]]],[11,"into_type_tag","","",52,[[],[["typetag",4],["option",4]]]],[11,"new","","Create a <code>Field</code> for <code>FieldDefinition</code> <code>f</code> in module <code>m</code>.",54,[[["compiledmodule",3],["fielddefinition",3]]]],[11,"new","","Create a <code>Struct</code> for <code>StructDefinition</code> <code>def</code> in module <code>m</code>. …",55,[[["structdefinition",3],["compiledmodule",3]]]],[11,"new","","Create a <code>FunctionSignature</code> for <code>FunctionHandle</code> <code>f</code> in module …",56,[[["functionhandle",3],["compiledmodule",3]]]],[0,"proptest_types","vm","Utilities for property-based testing.",null,null],[6,"TableSize","vm::proptest_types","Represents how large [<code>CompiledModule</code>] tables can be.",null,null],[11,"valid_strategy","vm::file_format","Convenience wrapper around [<code>CompiledModuleStrategyGen</code>][…",45,[[]]],[3,"CompiledModuleStrategyGen","vm::proptest_types","Contains configuration to generate [<code>CompiledModule</code>] …",null,null],[11,"new","","Create a new configuration for randomly generating […",58,[[["tablesize",6]]]],[11,"zeros_all","","Zero out all fields, type parameters, arguments and …",58,[[]]],[11,"generate","","Create a <code>proptest</code> strategy for <code>CompiledModule</code> instances …",58,[[]]],[0,"serializer","vm","Serialization of transactions and modules.",null,null],[11,"serialize","vm::file_format","Serializes a <code>CompiledScript</code> into a binary. The mutable …",43,[[["vec",3]],["result",6]]],[11,"serialize","","Serializes this into a binary format.",42,[[["vec",3]],["result",6]]],[11,"serialize","","Serializes a <code>CompiledModule</code> into a binary. The mutable …",45,[[["vec",3]],["result",6]]],[11,"serialize","","Serializes this into a binary format.",44,[[["vec",3]],["result",6]]],[0,"views","vm","An alternate representation of the file format built on …",null,null],[3,"ModuleView","vm::views","Represents a lazily evaluated abstraction over a module.",null,null],[11,"new","","",59,[[]]],[11,"self_handle_idx","","",59,[[],["modulehandleindex",3]]],[11,"module_handles","","",59,[[]]],[11,"struct_handles","","",59,[[]]],[11,"function_handles","","",59,[[]]],[11,"field_handles","","",59,[[]]],[11,"struct_instantiations","","",59,[[]]],[11,"function_instantiations","","",59,[[]]],[11,"field_instantiations","","",59,[[]]],[11,"signatures","","",59,[[]]],[11,"structs","","",59,[[]]],[11,"functions","","",59,[[]]],[11,"function_definition","","",59,[[["identstr",3]],[["option",4],["functiondefinitionview",3]]]],[11,"struct_definition","","",59,[[["identstr",3]],[["option",4],["structdefinitionview",3]]]],[11,"function_acquired_resources","","",59,[[["functionhandle",3]],[["btreeset",3],["structdefinitionindex",3]]]],[11,"id","","",59,[[],["moduleid",3]]],[3,"ModuleHandleView","","",null,null],[11,"new","","",60,[[["modulehandle",3]]]],[11,"module_id","","",60,[[],["moduleid",3]]],[3,"StructHandleView","","",null,null],[11,"new","","",61,[[["structhandle",3]]]],[11,"handle","","",61,[[],["structhandle",3]]],[11,"abilities","","",61,[[],["abilityset",3]]],[11,"type_parameters","","",61,[[],["vec",3]]],[11,"module_handle","","",61,[[],["modulehandle",3]]],[11,"name","","",61,[[],["identstr",3]]],[11,"module_id","","",61,[[],["moduleid",3]]],[11,"handle_idx","","Return the StructHandleIndex of this handle in the …",61,[[],["structhandleindex",3]]],[3,"FunctionHandleView","","",null,null],[11,"new","","",62,[[["functionhandle",3]]]],[11,"module_handle","","",62,[[],["modulehandle",3]]],[11,"name","","",62,[[],["identstr",3]]],[11,"parameters","","",62,[[],["signature",3]]],[11,"return_","","",62,[[],["signature",3]]],[11,"return_tokens","","",62,[[]]],[11,"arg_tokens","","",62,[[]]],[11,"type_parameters","","",62,[[],["vec",3]]],[11,"return_count","","",62,[[]]],[11,"arg_count","","",62,[[]]],[11,"module_id","","",62,[[],["moduleid",3]]],[3,"StructDefinitionView","","",null,null],[11,"new","","",63,[[["structdefinition",3]]]],[11,"abilities","","",63,[[],["abilityset",3]]],[11,"is_native","","",63,[[]]],[11,"type_parameters","","",63,[[],["vec",3]]],[11,"fields","","",63,[[],["option",4]]],[11,"name","","",63,[[],["identstr",3]]],[3,"FieldDefinitionView","","",null,null],[11,"new","","",64,[[["fielddefinition",3]]]],[11,"name","","",64,[[],["identstr",3]]],[11,"type_signature","","",64,[[],["typesignatureview",3]]],[11,"signature_token","","",64,[[],["signaturetoken",4]]],[11,"signature_token_view","","",64,[[],["signaturetokenview",3]]],[3,"LocalsSignatureView","","",null,null],[11,"is_empty","","",65,[[]]],[11,"len","","",65,[[]]],[11,"token_at","","",65,[[["localindex",6]],["signaturetokenview",3]]],[3,"FunctionDefinitionView","","",null,null],[11,"new","","",66,[[["functiondefinition",3]]]],[11,"visibility","","",66,[[],["visibility",4]]],[11,"is_native","","",66,[[]]],[11,"locals_signature","","",66,[[],[["option",4],["localssignatureview",3]]]],[11,"name","","",66,[[],["identstr",3]]],[11,"parameters","","",66,[[],["signature",3]]],[11,"return_","","",66,[[],["signature",3]]],[11,"type_parameters","","",66,[[],["vec",3]]],[11,"return_tokens","","",66,[[]]],[11,"arg_tokens","","",66,[[]]],[11,"return_count","","",66,[[]]],[11,"arg_count","","",66,[[]]],[11,"code","","",66,[[],[["codeunit",3],["option",4]]]],[3,"StructInstantiationView","","",null,null],[11,"new","","",67,[[["structdefinstantiation",3]]]],[3,"FieldHandleView","","",null,null],[11,"new","","",68,[[["fieldhandle",3]]]],[3,"FunctionInstantiationView","","",null,null],[11,"new","","",69,[[["functioninstantiation",3]]]],[3,"FieldInstantiationView","","",null,null],[11,"new","","",70,[[["fieldinstantiation",3]]]],[3,"TypeSignatureView","","",null,null],[11,"new","","",71,[[["typesignature",3]]]],[11,"token","","",71,[[],["signaturetokenview",3]]],[3,"SignatureView","","",null,null],[11,"new","","",72,[[["signature",3]]]],[11,"len","","",72,[[]]],[11,"is_empty","","",72,[[]]],[11,"tokens","","",72,[[]]],[11,"token_at","","",72,[[["localindex",6]],["signaturetokenview",3]]],[3,"SignatureTokenView","","",null,null],[11,"new","","",73,[[["signaturetoken",4]]]],[11,"signature_token","","",73,[[],["signaturetoken",4]]],[11,"signature_token_kind","","",73,[[],["signaturetokenkind",4]]],[11,"is_reference","","",73,[[]]],[11,"is_mutable_reference","","",73,[[]]],[8,"ViewInternals","","This is used to expose some view internals to checks and …",null,null],[16,"ModuleType","","",74,null],[16,"Inner","","",74,null],[10,"module","","",74,[[]]],[10,"as_inner","","",74,[[]]],[4,"IndexKind","vm","Represents a kind of index -- useful for error messages.",null,null],[13,"ModuleHandle","","",75,null],[13,"StructHandle","","",75,null],[13,"FunctionHandle","","",75,null],[13,"FieldHandle","","",75,null],[13,"FriendDeclaration","","",75,null],[13,"FunctionInstantiation","","",75,null],[13,"FieldInstantiation","","",75,null],[13,"StructDefinition","","",75,null],[13,"StructDefInstantiation","","",75,null],[13,"FunctionDefinition","","",75,null],[13,"FieldDefinition","","",75,null],[13,"Signature","","",75,null],[13,"Identifier","","",75,null],[13,"AddressIdentifier","","",75,null],[13,"ConstantPool","","",75,null],[13,"LocalPool","","",75,null],[13,"CodeDefinition","","",75,null],[13,"TypeParameter","","",75,null],[13,"MemberCount","","",75,null],[11,"variants","","",75,[[]]],[4,"SignatureTokenKind","","Represents the kind of a signature token.",null,null],[13,"Value","","Any sort of owned value that isn\'t an array (Integer, …",76,null],[13,"Reference","","A reference.",76,null],[13,"MutableReference","","A mutable reference.",76,null],[11,"from","vm::check_bounds","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","vm::compatibility","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","vm::errors","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","vm::deserializer","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","vm::file_format","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"into_iter","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"init","","",77,[[]]],[11,"deref","","",77,[[]]],[11,"deref_mut","","",77,[[]]],[11,"drop","","",77,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"into_iter","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"init","","",78,[[]]],[11,"deref","","",78,[[]]],[11,"deref_mut","","",78,[[]]],[11,"drop","","",78,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"into_iter","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"init","","",79,[[]]],[11,"deref","","",79,[[]]],[11,"deref_mut","","",79,[[]]],[11,"drop","","",79,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"init","","",41,[[]]],[11,"deref","","",41,[[]]],[11,"deref_mut","","",41,[[]]],[11,"drop","","",41,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"init","","",80,[[]]],[11,"deref","","",80,[[]]],[11,"deref_mut","","",80,[[]]],[11,"drop","","",80,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"from","vm::file_format_common","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"init","","",46,[[]]],[11,"deref","","",46,[[]]],[11,"deref_mut","","",46,[[]]],[11,"drop","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"init","","",47,[[]]],[11,"deref","","",47,[[]]],[11,"deref_mut","","",47,[[]]],[11,"drop","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"init","","",48,[[]]],[11,"deref","","",48,[[]]],[11,"deref_mut","","",48,[[]]],[11,"drop","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"init","","",49,[[]]],[11,"deref","","",49,[[]]],[11,"deref_mut","","",49,[[]]],[11,"drop","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"init","","",50,[[]]],[11,"deref","","",50,[[]]],[11,"deref_mut","","",50,[[]]],[11,"drop","","",50,[[]]],[11,"from","vm::normalized","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"init","","",52,[[]]],[11,"deref","","",52,[[]]],[11,"deref_mut","","",52,[[]]],[11,"drop","","",52,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"init","","",54,[[]]],[11,"deref","","",54,[[]]],[11,"deref_mut","","",54,[[]]],[11,"drop","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"init","","",55,[[]]],[11,"deref","","",55,[[]]],[11,"deref_mut","","",55,[[]]],[11,"drop","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"init","","",56,[[]]],[11,"deref","","",56,[[]]],[11,"deref_mut","","",56,[[]]],[11,"drop","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"init","","",57,[[]]],[11,"deref","","",57,[[]]],[11,"deref_mut","","",57,[[]]],[11,"drop","","",57,[[]]],[11,"from","vm::proptest_types","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"init","","",58,[[]]],[11,"deref","","",58,[[]]],[11,"deref_mut","","",58,[[]]],[11,"drop","","",58,[[]]],[11,"from","vm::views","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"init","","",59,[[]]],[11,"deref","","",59,[[]]],[11,"deref_mut","","",59,[[]]],[11,"drop","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"init","","",60,[[]]],[11,"deref","","",60,[[]]],[11,"deref_mut","","",60,[[]]],[11,"drop","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"init","","",61,[[]]],[11,"deref","","",61,[[]]],[11,"deref_mut","","",61,[[]]],[11,"drop","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"init","","",62,[[]]],[11,"deref","","",62,[[]]],[11,"deref_mut","","",62,[[]]],[11,"drop","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"init","","",63,[[]]],[11,"deref","","",63,[[]]],[11,"deref_mut","","",63,[[]]],[11,"drop","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"init","","",64,[[]]],[11,"deref","","",64,[[]]],[11,"deref_mut","","",64,[[]]],[11,"drop","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"init","","",65,[[]]],[11,"deref","","",65,[[]]],[11,"deref_mut","","",65,[[]]],[11,"drop","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"init","","",66,[[]]],[11,"deref","","",66,[[]]],[11,"deref_mut","","",66,[[]]],[11,"drop","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"init","","",67,[[]]],[11,"deref","","",67,[[]]],[11,"deref_mut","","",67,[[]]],[11,"drop","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"init","","",68,[[]]],[11,"deref","","",68,[[]]],[11,"deref_mut","","",68,[[]]],[11,"drop","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"init","","",69,[[]]],[11,"deref","","",69,[[]]],[11,"deref_mut","","",69,[[]]],[11,"drop","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"init","","",70,[[]]],[11,"deref","","",70,[[]]],[11,"deref_mut","","",70,[[]]],[11,"drop","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"init","","",71,[[]]],[11,"deref","","",71,[[]]],[11,"deref_mut","","",71,[[]]],[11,"drop","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"init","","",72,[[]]],[11,"deref","","",72,[[]]],[11,"deref_mut","","",72,[[]]],[11,"drop","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"init","","",73,[[]]],[11,"deref","","",73,[[]]],[11,"deref_mut","","",73,[[]]],[11,"drop","","",73,[[]]],[11,"from","vm","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"to_string","","",75,[[],["string",3]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"init","","",75,[[]]],[11,"deref","","",75,[[]]],[11,"deref_mut","","",75,[[]]],[11,"drop","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"to_string","","",76,[[],["string",3]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"init","","",76,[[]]],[11,"deref","","",76,[[]]],[11,"deref_mut","","",76,[[]]],[11,"drop","","",76,[[]]],[11,"as_module","vm::file_format","",45,[[],["compiledmodule",3]]],[11,"as_script","","",43,[[],["compiledscript",3]]],[11,"into_index","","",8,[[]]],[11,"into_index","","",9,[[]]],[11,"into_index","","",10,[[]]],[11,"into_index","","",11,[[]]],[11,"into_index","","",12,[[]]],[11,"into_index","","",13,[[]]],[11,"into_index","","",14,[[]]],[11,"into_index","","",15,[[]]],[11,"into_index","","",16,[[]]],[11,"into_index","","",17,[[]]],[11,"into_index","","",18,[[]]],[11,"into_index","","",19,[[]]],[11,"into_index","","",20,[[]]],[11,"module","vm::views","",59,[[]]],[11,"as_inner","","",59,[[]]],[11,"module","","",60,[[]]],[11,"as_inner","","",60,[[]]],[11,"module","","",61,[[]]],[11,"as_inner","","",61,[[]]],[11,"module","","",62,[[]]],[11,"as_inner","","",62,[[]]],[11,"module","","",63,[[]]],[11,"as_inner","","",63,[[]]],[11,"module","","",66,[[]]],[11,"as_inner","","",66,[[]]],[11,"module","","",64,[[]]],[11,"as_inner","","",64,[[]]],[11,"module","","",71,[[]]],[11,"as_inner","","",71,[[]]],[11,"module","","",72,[[]]],[11,"as_inner","","",72,[[]]],[11,"module","","",73,[[]]],[11,"as_inner","","",73,[[]]],[11,"into","vm::errors","",5,[[],["vmstatus",4]]],[11,"into_iter","vm::file_format","",37,[[]]],[11,"next","","",77,[[],["option",4]]],[11,"next","","",78,[[],["option",4]]],[11,"next","","",79,[[],["option",4]]],[11,"clone","vm::errors","",4,[[],["location",4]]],[11,"clone","","",5,[[],["vmerror",3]]],[11,"clone","","",6,[[],["partialvmerror",3]]],[11,"clone","vm::deserializer","",7,[[],["deprecatednominalresourceflag",4]]],[11,"clone","vm::file_format","",8,[[],["modulehandleindex",3]]],[11,"clone","","",9,[[],["structhandleindex",3]]],[11,"clone","","",10,[[],["functionhandleindex",3]]],[11,"clone","","",11,[[],["fieldhandleindex",3]]],[11,"clone","","",12,[[],["structdefinstantiationindex",3]]],[11,"clone","","",13,[[],["functioninstantiationindex",3]]],[11,"clone","","",14,[[],["fieldinstantiationindex",3]]],[11,"clone","","",15,[[],["identifierindex",3]]],[11,"clone","","",16,[[],["addressidentifierindex",3]]],[11,"clone","","",17,[[],["constantpoolindex",3]]],[11,"clone","","",18,[[],["signatureindex",3]]],[11,"clone","","",19,[[],["structdefinitionindex",3]]],[11,"clone","","",20,[[],["functiondefinitionindex",3]]],[11,"clone","","",21,[[],["modulehandle",3]]],[11,"clone","","",22,[[],["structhandle",3]]],[11,"clone","","",23,[[],["functionhandle",3]]],[11,"clone","","",24,[[],["fieldhandle",3]]],[11,"clone","","",25,[[],["structfieldinformation",4]]],[11,"clone","","",26,[[],["structdefinstantiation",3]]],[11,"clone","","",27,[[],["functioninstantiation",3]]],[11,"clone","","",28,[[],["fieldinstantiation",3]]],[11,"clone","","",29,[[],["structdefinition",3]]],[11,"clone","","",30,[[],["fielddefinition",3]]],[11,"clone","","",31,[[],["visibility",4]]],[11,"clone","","",32,[[],["functiondefinition",3]]],[11,"clone","","",33,[[],["typesignature",3]]],[11,"clone","","",34,[[],["functionsignature",3]]],[11,"clone","","",35,[[],["signature",3]]],[11,"clone","","",36,[[],["ability",4]]],[11,"clone","","",37,[[],["abilityset",3]]],[11,"clone","","",38,[[],["signaturetoken",4]]],[11,"clone","","",39,[[],["constant",3]]],[11,"clone","","",40,[[],["codeunit",3]]],[11,"clone","","",41,[[],["bytecode",4]]],[11,"clone","","",43,[[],["compiledscript",3]]],[11,"clone","","",42,[[],["compiledscriptmut",3]]],[11,"clone","","",45,[[],["compiledmodule",3]]],[11,"clone","","",44,[[],["compiledmodulemut",3]]],[11,"clone","vm::file_format_common","",47,[[],["tabletype",4]]],[11,"clone","","",48,[[],["serializedtype",4]]],[11,"clone","","",49,[[],["serializednativestructflag",4]]],[11,"clone","","",50,[[],["opcodes",4]]],[11,"clone","vm::normalized","",52,[[],["type",4]]],[11,"clone","","",54,[[],["field",3]]],[11,"clone","","",55,[[],["struct",3]]],[11,"clone","","",56,[[],["functionsignature",3]]],[11,"clone","","",57,[[],["module",3]]],[11,"clone","vm::proptest_types","",58,[[],["compiledmodulestrategygen",3]]],[11,"clone","vm::views","",62,[[]]],[11,"clone","","",66,[[]]],[11,"clone","vm","",75,[[],["indexkind",4]]],[11,"clone","","",76,[[],["signaturetokenkind",4]]],[11,"default","vm::file_format","",8,[[],["modulehandleindex",3]]],[11,"default","","",9,[[],["structhandleindex",3]]],[11,"default","","",10,[[],["functionhandleindex",3]]],[11,"default","","",11,[[],["fieldhandleindex",3]]],[11,"default","","",12,[[],["structdefinstantiationindex",3]]],[11,"default","","",13,[[],["functioninstantiationindex",3]]],[11,"default","","",14,[[],["fieldinstantiationindex",3]]],[11,"default","","",15,[[],["identifierindex",3]]],[11,"default","","",16,[[],["addressidentifierindex",3]]],[11,"default","","",17,[[],["constantpoolindex",3]]],[11,"default","","",18,[[],["signatureindex",3]]],[11,"default","","",19,[[],["structdefinitionindex",3]]],[11,"default","","",20,[[],["functiondefinitionindex",3]]],[11,"default","","",31,[[]]],[11,"default","","",32,[[],["functiondefinition",3]]],[11,"default","","",35,[[],["signature",3]]],[11,"default","","",40,[[],["codeunit",3]]],[11,"default","","",42,[[],["compiledscriptmut",3]]],[11,"default","","",44,[[],["compiledmodulemut",3]]],[11,"cmp","vm::errors","",4,[[["location",4]],["ordering",4]]],[11,"cmp","","",5,[[["vmerror",3]],["ordering",4]]],[11,"cmp","vm::file_format","",8,[[["modulehandleindex",3]],["ordering",4]]],[11,"cmp","","",9,[[["structhandleindex",3]],["ordering",4]]],[11,"cmp","","",10,[[["functionhandleindex",3]],["ordering",4]]],[11,"cmp","","",11,[[["fieldhandleindex",3]],["ordering",4]]],[11,"cmp","","",12,[[["structdefinstantiationindex",3]],["ordering",4]]],[11,"cmp","","",13,[[["functioninstantiationindex",3]],["ordering",4]]],[11,"cmp","","",14,[[["fieldinstantiationindex",3]],["ordering",4]]],[11,"cmp","","",15,[[["identifierindex",3]],["ordering",4]]],[11,"cmp","","",16,[[["addressidentifierindex",3]],["ordering",4]]],[11,"cmp","","",17,[[["constantpoolindex",3]],["ordering",4]]],[11,"cmp","","",18,[[["signatureindex",3]],["ordering",4]]],[11,"cmp","","",19,[[["structdefinitionindex",3]],["ordering",4]]],[11,"cmp","","",20,[[["functiondefinitionindex",3]],["ordering",4]]],[11,"cmp","","",21,[[["modulehandle",3]],["ordering",4]]],[11,"cmp","","",22,[[["structhandle",3]],["ordering",4]]],[11,"cmp","","",36,[[["ability",4]],["ordering",4]]],[11,"cmp","","",37,[[["abilityset",3]],["ordering",4]]],[11,"cmp","","",38,[[["signaturetoken",4]],["ordering",4]]],[11,"cmp","vm::normalized","",52,[[["type",4]],["ordering",4]]],[11,"cmp","","",56,[[["functionsignature",3]],["ordering",4]]],[11,"cmp","vm","",75,[[["indexkind",4]],["ordering",4]]],[11,"cmp","","",76,[[["signaturetokenkind",4]],["ordering",4]]],[11,"eq","vm::errors","",4,[[["location",4]]]],[11,"ne","","",4,[[["location",4]]]],[11,"eq","","",5,[[["vmerror",3]]]],[11,"ne","","",5,[[["vmerror",3]]]],[11,"eq","vm::file_format","",8,[[["modulehandleindex",3]]]],[11,"ne","","",8,[[["modulehandleindex",3]]]],[11,"eq","","",9,[[["structhandleindex",3]]]],[11,"ne","","",9,[[["structhandleindex",3]]]],[11,"eq","","",10,[[["functionhandleindex",3]]]],[11,"ne","","",10,[[["functionhandleindex",3]]]],[11,"eq","","",11,[[["fieldhandleindex",3]]]],[11,"ne","","",11,[[["fieldhandleindex",3]]]],[11,"eq","","",12,[[["structdefinstantiationindex",3]]]],[11,"ne","","",12,[[["structdefinstantiationindex",3]]]],[11,"eq","","",13,[[["functioninstantiationindex",3]]]],[11,"ne","","",13,[[["functioninstantiationindex",3]]]],[11,"eq","","",14,[[["fieldinstantiationindex",3]]]],[11,"ne","","",14,[[["fieldinstantiationindex",3]]]],[11,"eq","","",15,[[["identifierindex",3]]]],[11,"ne","","",15,[[["identifierindex",3]]]],[11,"eq","","",16,[[["addressidentifierindex",3]]]],[11,"ne","","",16,[[["addressidentifierindex",3]]]],[11,"eq","","",17,[[["constantpoolindex",3]]]],[11,"ne","","",17,[[["constantpoolindex",3]]]],[11,"eq","","",18,[[["signatureindex",3]]]],[11,"ne","","",18,[[["signatureindex",3]]]],[11,"eq","","",19,[[["structdefinitionindex",3]]]],[11,"ne","","",19,[[["structdefinitionindex",3]]]],[11,"eq","","",20,[[["functiondefinitionindex",3]]]],[11,"ne","","",20,[[["functiondefinitionindex",3]]]],[11,"eq","","",21,[[["modulehandle",3]]]],[11,"ne","","",21,[[["modulehandle",3]]]],[11,"eq","","",22,[[["structhandle",3]]]],[11,"ne","","",22,[[["structhandle",3]]]],[11,"eq","","",23,[[["functionhandle",3]]]],[11,"ne","","",23,[[["functionhandle",3]]]],[11,"eq","","",24,[[["fieldhandle",3]]]],[11,"ne","","",24,[[["fieldhandle",3]]]],[11,"eq","","",25,[[["structfieldinformation",4]]]],[11,"ne","","",25,[[["structfieldinformation",4]]]],[11,"eq","","",26,[[["structdefinstantiation",3]]]],[11,"ne","","",26,[[["structdefinstantiation",3]]]],[11,"eq","","",27,[[["functioninstantiation",3]]]],[11,"ne","","",27,[[["functioninstantiation",3]]]],[11,"eq","","",28,[[["fieldinstantiation",3]]]],[11,"ne","","",28,[[["fieldinstantiation",3]]]],[11,"eq","","",29,[[["structdefinition",3]]]],[11,"ne","","",29,[[["structdefinition",3]]]],[11,"eq","","",30,[[["fielddefinition",3]]]],[11,"ne","","",30,[[["fielddefinition",3]]]],[11,"eq","","",31,[[["visibility",4]]]],[11,"eq","","",32,[[["functiondefinition",3]]]],[11,"ne","","",32,[[["functiondefinition",3]]]],[11,"eq","","",33,[[["typesignature",3]]]],[11,"ne","","",33,[[["typesignature",3]]]],[11,"eq","","",34,[[["functionsignature",3]]]],[11,"ne","","",34,[[["functionsignature",3]]]],[11,"eq","","",35,[[["signature",3]]]],[11,"ne","","",35,[[["signature",3]]]],[11,"eq","","",36,[[["ability",4]]]],[11,"eq","","",37,[[["abilityset",3]]]],[11,"ne","","",37,[[["abilityset",3]]]],[11,"eq","","",38,[[["signaturetoken",4]]]],[11,"ne","","",38,[[["signaturetoken",4]]]],[11,"eq","","",39,[[["constant",3]]]],[11,"ne","","",39,[[["constant",3]]]],[11,"eq","","",40,[[["codeunit",3]]]],[11,"ne","","",40,[[["codeunit",3]]]],[11,"eq","","",41,[[["bytecode",4]]]],[11,"ne","","",41,[[["bytecode",4]]]],[11,"eq","","",43,[[["compiledscript",3]]]],[11,"ne","","",43,[[["compiledscript",3]]]],[11,"eq","","",42,[[["compiledscriptmut",3]]]],[11,"ne","","",42,[[["compiledscriptmut",3]]]],[11,"eq","","",45,[[["compiledmodule",3]]]],[11,"ne","","",45,[[["compiledmodule",3]]]],[11,"eq","","",44,[[["compiledmodulemut",3]]]],[11,"ne","","",44,[[["compiledmodulemut",3]]]],[11,"eq","vm::file_format_common","",47,[[["tabletype",4]]]],[11,"eq","vm::normalized","",52,[[["type",4]]]],[11,"ne","","",52,[[["type",4]]]],[11,"eq","","",54,[[["field",3]]]],[11,"ne","","",54,[[["field",3]]]],[11,"eq","","",55,[[["struct",3]]]],[11,"ne","","",55,[[["struct",3]]]],[11,"eq","","",56,[[["functionsignature",3]]]],[11,"ne","","",56,[[["functionsignature",3]]]],[11,"eq","","",57,[[["module",3]]]],[11,"ne","","",57,[[["module",3]]]],[11,"eq","vm","",75,[[["indexkind",4]]]],[11,"eq","","",76,[[["signaturetokenkind",4]]]],[11,"partial_cmp","vm::errors","",4,[[["location",4]],[["option",4],["ordering",4]]]],[11,"lt","","",4,[[["location",4]]]],[11,"le","","",4,[[["location",4]]]],[11,"gt","","",4,[[["location",4]]]],[11,"ge","","",4,[[["location",4]]]],[11,"partial_cmp","","",5,[[["vmerror",3]],[["option",4],["ordering",4]]]],[11,"lt","","",5,[[["vmerror",3]]]],[11,"le","","",5,[[["vmerror",3]]]],[11,"gt","","",5,[[["vmerror",3]]]],[11,"ge","","",5,[[["vmerror",3]]]],[11,"partial_cmp","vm::file_format","",8,[[["modulehandleindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",8,[[["modulehandleindex",3]]]],[11,"le","","",8,[[["modulehandleindex",3]]]],[11,"gt","","",8,[[["modulehandleindex",3]]]],[11,"ge","","",8,[[["modulehandleindex",3]]]],[11,"partial_cmp","","",9,[[["structhandleindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",9,[[["structhandleindex",3]]]],[11,"le","","",9,[[["structhandleindex",3]]]],[11,"gt","","",9,[[["structhandleindex",3]]]],[11,"ge","","",9,[[["structhandleindex",3]]]],[11,"partial_cmp","","",10,[[["functionhandleindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",10,[[["functionhandleindex",3]]]],[11,"le","","",10,[[["functionhandleindex",3]]]],[11,"gt","","",10,[[["functionhandleindex",3]]]],[11,"ge","","",10,[[["functionhandleindex",3]]]],[11,"partial_cmp","","",11,[[["fieldhandleindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",11,[[["fieldhandleindex",3]]]],[11,"le","","",11,[[["fieldhandleindex",3]]]],[11,"gt","","",11,[[["fieldhandleindex",3]]]],[11,"ge","","",11,[[["fieldhandleindex",3]]]],[11,"partial_cmp","","",12,[[["structdefinstantiationindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",12,[[["structdefinstantiationindex",3]]]],[11,"le","","",12,[[["structdefinstantiationindex",3]]]],[11,"gt","","",12,[[["structdefinstantiationindex",3]]]],[11,"ge","","",12,[[["structdefinstantiationindex",3]]]],[11,"partial_cmp","","",13,[[["functioninstantiationindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",13,[[["functioninstantiationindex",3]]]],[11,"le","","",13,[[["functioninstantiationindex",3]]]],[11,"gt","","",13,[[["functioninstantiationindex",3]]]],[11,"ge","","",13,[[["functioninstantiationindex",3]]]],[11,"partial_cmp","","",14,[[["fieldinstantiationindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",14,[[["fieldinstantiationindex",3]]]],[11,"le","","",14,[[["fieldinstantiationindex",3]]]],[11,"gt","","",14,[[["fieldinstantiationindex",3]]]],[11,"ge","","",14,[[["fieldinstantiationindex",3]]]],[11,"partial_cmp","","",15,[[["identifierindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",15,[[["identifierindex",3]]]],[11,"le","","",15,[[["identifierindex",3]]]],[11,"gt","","",15,[[["identifierindex",3]]]],[11,"ge","","",15,[[["identifierindex",3]]]],[11,"partial_cmp","","",16,[[["addressidentifierindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",16,[[["addressidentifierindex",3]]]],[11,"le","","",16,[[["addressidentifierindex",3]]]],[11,"gt","","",16,[[["addressidentifierindex",3]]]],[11,"ge","","",16,[[["addressidentifierindex",3]]]],[11,"partial_cmp","","",17,[[["constantpoolindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",17,[[["constantpoolindex",3]]]],[11,"le","","",17,[[["constantpoolindex",3]]]],[11,"gt","","",17,[[["constantpoolindex",3]]]],[11,"ge","","",17,[[["constantpoolindex",3]]]],[11,"partial_cmp","","",18,[[["signatureindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",18,[[["signatureindex",3]]]],[11,"le","","",18,[[["signatureindex",3]]]],[11,"gt","","",18,[[["signatureindex",3]]]],[11,"ge","","",18,[[["signatureindex",3]]]],[11,"partial_cmp","","",19,[[["structdefinitionindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",19,[[["structdefinitionindex",3]]]],[11,"le","","",19,[[["structdefinitionindex",3]]]],[11,"gt","","",19,[[["structdefinitionindex",3]]]],[11,"ge","","",19,[[["structdefinitionindex",3]]]],[11,"partial_cmp","","",20,[[["functiondefinitionindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",20,[[["functiondefinitionindex",3]]]],[11,"le","","",20,[[["functiondefinitionindex",3]]]],[11,"gt","","",20,[[["functiondefinitionindex",3]]]],[11,"ge","","",20,[[["functiondefinitionindex",3]]]],[11,"partial_cmp","","",21,[[["modulehandle",3]],[["option",4],["ordering",4]]]],[11,"lt","","",21,[[["modulehandle",3]]]],[11,"le","","",21,[[["modulehandle",3]]]],[11,"gt","","",21,[[["modulehandle",3]]]],[11,"ge","","",21,[[["modulehandle",3]]]],[11,"partial_cmp","","",22,[[["structhandle",3]],[["option",4],["ordering",4]]]],[11,"lt","","",22,[[["structhandle",3]]]],[11,"le","","",22,[[["structhandle",3]]]],[11,"gt","","",22,[[["structhandle",3]]]],[11,"ge","","",22,[[["structhandle",3]]]],[11,"partial_cmp","","",36,[[["ability",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",37,[[["abilityset",3]],[["option",4],["ordering",4]]]],[11,"lt","","",37,[[["abilityset",3]]]],[11,"le","","",37,[[["abilityset",3]]]],[11,"gt","","",37,[[["abilityset",3]]]],[11,"ge","","",37,[[["abilityset",3]]]],[11,"partial_cmp","","",38,[[["signaturetoken",4]],[["option",4],["ordering",4]]]],[11,"lt","","",38,[[["signaturetoken",4]]]],[11,"le","","",38,[[["signaturetoken",4]]]],[11,"gt","","",38,[[["signaturetoken",4]]]],[11,"ge","","",38,[[["signaturetoken",4]]]],[11,"partial_cmp","vm::normalized","",52,[[["type",4]],[["option",4],["ordering",4]]]],[11,"lt","","",52,[[["type",4]]]],[11,"le","","",52,[[["type",4]]]],[11,"gt","","",52,[[["type",4]]]],[11,"ge","","",52,[[["type",4]]]],[11,"partial_cmp","","",56,[[["functionsignature",3]],[["option",4],["ordering",4]]]],[11,"lt","","",56,[[["functionsignature",3]]]],[11,"le","","",56,[[["functionsignature",3]]]],[11,"gt","","",56,[[["functionsignature",3]]]],[11,"ge","","",56,[[["functionsignature",3]]]],[11,"partial_cmp","vm","",75,[[["indexkind",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",76,[[["signaturetokenkind",4]],[["option",4],["ordering",4]]]],[11,"fmt","vm::errors","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","vm::deserializer","",7,[[["formatter",3]],["result",6]]],[11,"fmt","vm::file_format","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","vm::file_format_common","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","vm::normalized","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","vm::proptest_types","",58,[[["formatter",3]],["result",6]]],[11,"fmt","vm","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","vm::errors","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","vm::file_format","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","vm","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"bitor","vm::file_format","",37,[[["ability",4]]]],[11,"bitor","","",37,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",41,[[]]],[11,"hash","vm::file_format_common","",47,[[]]],[11,"hash","vm","",75,[[]]],[11,"try_from","vm::file_format","",31,[[],["result",4]]],[11,"arbitrary_with","","",8,[[]]],[11,"arbitrary_with","","",9,[[]]],[11,"arbitrary_with","","",10,[[]]],[11,"arbitrary_with","","",11,[[]]],[11,"arbitrary_with","","",12,[[]]],[11,"arbitrary_with","","",13,[[]]],[11,"arbitrary_with","","",14,[[]]],[11,"arbitrary_with","","",15,[[]]],[11,"arbitrary_with","","",16,[[]]],[11,"arbitrary_with","","",17,[[]]],[11,"arbitrary_with","","",18,[[]]],[11,"arbitrary_with","","",19,[[]]],[11,"arbitrary_with","","",20,[[]]],[11,"arbitrary_with","","",21,[[]]],[11,"arbitrary_with","","",22,[[]]],[11,"arbitrary_with","","",23,[[]]],[11,"arbitrary_with","","",24,[[]]],[11,"arbitrary_with","","",25,[[]]],[11,"arbitrary_with","","",26,[[]]],[11,"arbitrary_with","","",27,[[]]],[11,"arbitrary_with","","",28,[[]]],[11,"arbitrary_with","","",29,[[]]],[11,"arbitrary_with","","",30,[[]]],[11,"arbitrary_with","","",31,[[]]],[11,"arbitrary_with","","",32,[[]]],[11,"arbitrary_with","","",33,[[]]],[11,"arbitrary_with","","",34,[[]]],[11,"arbitrary_with","","",35,[[]]],[11,"arbitrary_with","","",36,[[]]],[11,"arbitrary_with","","",37,[[]]],[11,"arbitrary_with","","",38,[[]]],[11,"arbitrary_with","","",40,[[]]],[11,"arbitrary_with","","",41,[[]]],[11,"arbitrary_with","","",42,[[]]],[11,"arbitrary_with","","",44,[[]]],[11,"serialize_constant","","",39,[[["movevalue",4],["movetypelayout",4]],["option",4]]],[11,"deserialize_constant","","",39,[[],[["option",4],["movevalue",4]]]],[11,"deserialize","","Deserializes a &[u8] slice into a <code>CompiledScript</code> instance.",43,[[],["binaryloaderresult",6]]],[11,"deserialize","","Deserialize a &[u8] slice into a <code>CompiledModule</code> instance.",45,[[],["binaryloaderresult",6]]],[11,"deserialize_no_check_bounds","","",44,[[],["binaryloaderresult",6]]]],"p":[[8,"ModuleAccess"],[8,"ScriptAccess"],[3,"BoundsChecker"],[3,"Compatibility"],[4,"Location"],[3,"VMError"],[3,"PartialVMError"],[4,"DeprecatedNominalResourceFlag"],[3,"ModuleHandleIndex"],[3,"StructHandleIndex"],[3,"FunctionHandleIndex"],[3,"FieldHandleIndex"],[3,"StructDefInstantiationIndex"],[3,"FunctionInstantiationIndex"],[3,"FieldInstantiationIndex"],[3,"IdentifierIndex"],[3,"AddressIdentifierIndex"],[3,"ConstantPoolIndex"],[3,"SignatureIndex"],[3,"StructDefinitionIndex"],[3,"FunctionDefinitionIndex"],[3,"ModuleHandle"],[3,"StructHandle"],[3,"FunctionHandle"],[3,"FieldHandle"],[4,"StructFieldInformation"],[3,"StructDefInstantiation"],[3,"FunctionInstantiation"],[3,"FieldInstantiation"],[3,"StructDefinition"],[3,"FieldDefinition"],[4,"Visibility"],[3,"FunctionDefinition"],[3,"TypeSignature"],[3,"FunctionSignature"],[3,"Signature"],[4,"Ability"],[3,"AbilitySet"],[4,"SignatureToken"],[3,"Constant"],[3,"CodeUnit"],[4,"Bytecode"],[3,"CompiledScriptMut"],[3,"CompiledScript"],[3,"CompiledModuleMut"],[3,"CompiledModule"],[4,"BinaryConstants"],[4,"TableType"],[4,"SerializedType"],[4,"SerializedNativeStructFlag"],[4,"Opcodes"],[8,"ModuleIndex"],[4,"Type"],[13,"Struct"],[3,"Field"],[3,"Struct"],[3,"FunctionSignature"],[3,"Module"],[3,"CompiledModuleStrategyGen"],[3,"ModuleView"],[3,"ModuleHandleView"],[3,"StructHandleView"],[3,"FunctionHandleView"],[3,"StructDefinitionView"],[3,"FieldDefinitionView"],[3,"LocalsSignatureView"],[3,"FunctionDefinitionView"],[3,"StructInstantiationView"],[3,"FieldHandleView"],[3,"FunctionInstantiationView"],[3,"FieldInstantiationView"],[3,"TypeSignatureView"],[3,"SignatureView"],[3,"SignatureTokenView"],[8,"ViewInternals"],[4,"IndexKind"],[4,"SignatureTokenKind"],[3,"AbilitySetIterator"],[3,"SignatureTokenPreorderTraversalIter"],[3,"SignatureTokenPreorderTraversalIterWithDepth"],[3,"ScriptConversionInfo"]]},\
"vm_genesis":{"doc":"","i":[[0,"genesis_gas_schedule","vm_genesis","This file contains the starting gas schedule published at …",null,null],[7,"INITIAL_GAS_SCHEDULE","vm_genesis::genesis_gas_schedule","",null,null],[7,"GENESIS_KEYPAIR","vm_genesis","",null,null],[7,"ZERO_COST_SCHEDULE","","",null,null],[6,"Name","","",null,null],[6,"OperatorAssignment","","",null,null],[6,"OperatorRegistration","","",null,null],[5,"encode_genesis_transaction","","",null,[[["ed25519publickey",3],["option",4],["chainid",3],["vmpublishingoption",3]],["transaction",4]]],[5,"encode_genesis_change_set","","",null,[[["ed25519publickey",3],["vmpublishingoption",3],["chainid",3]],["changeset",3]]],[5,"generate_genesis_change_set_for_testing","","Generate an artificial genesis <code>ChangeSet</code> for testing",null,[[["stdliboptions",4]],["changeset",3]]],[5,"test_genesis_transaction","","",null,[[],["transaction",4]]],[5,"test_genesis_change_set_and_validators","","",null,[[["option",4]]]],[3,"Validator","","",null,null],[12,"index","","",0,null],[12,"key","","",0,null],[12,"name","","",0,null],[12,"operator_address","","",0,null],[12,"owner_address","","",0,null],[11,"new_set","","",0,[[["option",4]],[["vec",3],["validator",3]]]],[5,"generate_test_genesis","","",null,[[["vmpublishingoption",3],["option",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]]],"p":[[3,"Validator"]]},\
"vm_validator":{"doc":"","i":[[0,"mocks","vm_validator","",null,null],[0,"mock_vm_validator","vm_validator::mocks","",null,null],[3,"MockVMValidator","vm_validator::mocks::mock_vm_validator","",null,null],[0,"vm_validator","vm_validator","",null,null],[8,"TransactionValidation","vm_validator::vm_validator","",null,null],[16,"ValidationInstance","","",0,null],[10,"validate_transaction","","Validate a txn from client",0,[[["signedtransaction",3]],[["result",6],["vmvalidatorresult",3]]]],[10,"restart","","Restart the transaction validation instance",0,[[["onchainconfigpayload",3]],["result",6]]],[3,"VMValidator","","",null,null],[11,"new","","",1,[[["arc",3],["dbreader",8]]]],[5,"get_account_sequence_number","","returns account\'s sequence number from storage",null,[[["accountaddress",3],["dbreader",8]],["result",6]]],[11,"from","vm_validator::mocks::mock_vm_validator","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","vm_validator::vm_validator","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"validate_transaction","vm_validator::mocks::mock_vm_validator","",2,[[["signedtransaction",3]],[["result",6],["vmvalidatorresult",3]]]],[11,"restart","","",2,[[["onchainconfigpayload",3]],["result",6]]],[11,"validate_transaction","vm_validator::vm_validator","",1,[[["signedtransaction",3]],[["result",6],["vmvalidatorresult",3]]]],[11,"restart","","",1,[[["onchainconfigpayload",3]],["result",6]]],[11,"clone","vm_validator::mocks::mock_vm_validator","",2,[[],["mockvmvalidator",3]]],[11,"clone","vm_validator::vm_validator","",1,[[],["vmvalidator",3]]],[11,"validate_transaction","vm_validator::mocks::mock_vm_validator","",2,[[["stateview",8],["signedtransaction",3]],["vmvalidatorresult",3]]]],"p":[[8,"TransactionValidation"],[3,"VMValidator"],[3,"MockVMValidator"]]},\
"x_core":{"doc":"","i":[[0,"core_config","x_core","",null,null],[3,"XCoreConfig","x_core::core_config","Core configuration for x.",null,null],[12,"subsets","","Subsets of this workspace",0,null],[12,"hakari","","Config for Hakari (workspace-hack management).",0,null],[3,"SubsetConfig","","",null,null],[12,"root_members","","The root members in this subset",1,null],[3,"DebugIgnore","x_core","A newtype wrapper that causes this field to be ignored …",null,null],[12,"0","","",2,null],[6,"Result","","Type alias for the return type for <code>run</code> methods.",null,null],[4,"SystemError","","A system error that happened while running a lint.",null,null],[13,"CwdNotInProjectRoot","","",3,null],[12,"current_dir","x_core::SystemError","",4,null],[12,"project_root","","",4,null],[13,"Exec","x_core","",3,null],[12,"cmd","x_core::SystemError","",5,null],[12,"status","","",5,null],[13,"GitRoot","x_core","",3,null],[13,"FromHex","","",3,null],[12,"context","x_core::SystemError","",6,null],[12,"err","","",6,null],[13,"Guppy","x_core","",3,null],[12,"context","x_core::SystemError","",7,null],[12,"err","","",7,null],[13,"HakariCargoToml","x_core","",3,null],[12,"context","x_core::SystemError","",8,null],[12,"err","","",8,null],[13,"HakariTomlOut","x_core","",3,null],[12,"context","x_core::SystemError","",9,null],[12,"err","","",9,null],[13,"Io","x_core","",3,null],[12,"context","x_core::SystemError","",10,null],[12,"err","","",10,null],[13,"NonUtf8Path","x_core","",3,null],[12,"path","x_core::SystemError","",11,null],[12,"err","","",11,null],[13,"Serde","x_core","",3,null],[12,"context","x_core::SystemError","",12,null],[12,"err","","",12,null],[13,"TargetSpec","x_core","",3,null],[12,"context","x_core::SystemError","",13,null],[12,"err","","",13,null],[3,"WorkspaceSubsets","x_core","Contains information about all the subsets specified in …",null,null],[3,"WorkspaceSubset","","Information collected about a subset of members of a …",null,null],[4,"WorkspaceStatus","","The status of a particular package ID in a <code>WorkspaceSubset</code>…",null,null],[13,"RootMember","","This package ID is a root member of the workspace subset.",14,null],[13,"Dependency","","This package ID is a dependency of the workspace subset, …",14,null],[13,"Absent","","This package ID is not a dependency of the workspace …",14,null],[3,"XCoreContext","","Core context shared across all of x.",null,null],[11,"new","","Creates a new XCoreContext.",15,[[["pathbuf",3],["path",3],["xcoreconfig",3]],["result",6]]],[11,"project_root","","Returns the project root for this workspace.",15,[[],["path",3]]],[11,"config","","Returns the core config.",15,[[],["xcoreconfig",3]]],[11,"current_dir","","Returns the current working directory for this process.",15,[[],["path",3]]],[11,"current_rel_dir","","Returns the current working directory for this process, …",15,[[],["path",3]]],[11,"current_dir_is_root","","Returns true if x has been run from the project root.",15,[[]]],[11,"git_cli","","Returns the Git CLI for this workspace.",15,[[],["gitcli",3]]],[11,"package_graph","","Returns the package graph for this workspace.",15,[[],[["packagegraph",3],["result",6]]]],[11,"subsets","","Returns information about the subsets for this workspace.",15,[[],[["result",6],["workspacesubsets",3]]]],[11,"hakari_builder","","Returns a Hakari builder for this workspace.",15,[[],[["hakaribuilder",3],["result",6]]]],[11,"hakari_toml_options","","Returns the default Hakari TOML options for this …",15,[[],["tomloptions",3]]],[11,"from","x_core::core_config","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"equivalent","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"borrow_replacement","","",0,[[]]],[11,"clone_boxed","","",0,[[],[["defaultfeatures",8],["global",3],["box",3]]]],[11,"self_address_mut","","",0,[[]]],[11,"clone_boxed","","",0,[[],[["global",3],["nonsyncfeatures",8],["box",3]]]],[11,"self_address_mut","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"equivalent","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"borrow_replacement","","",1,[[]]],[11,"clone_boxed","","",1,[[],[["defaultfeatures",8],["global",3],["box",3]]]],[11,"self_address_mut","","",1,[[]]],[11,"clone_boxed","","",1,[[],[["global",3],["nonsyncfeatures",8],["box",3]]]],[11,"self_address_mut","","",1,[[]]],[11,"from","x_core","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"equivalent","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"borrow_replacement","","",2,[[]]],[11,"clone_boxed","","",2,[[],[["defaultfeatures",8],["global",3],["box",3]]]],[11,"self_address_mut","","",2,[[]]],[11,"clone_boxed","","",2,[[],[["global",3],["nonsyncfeatures",8],["box",3]]]],[11,"self_address_mut","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"borrow_replacement","","",3,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"borrow_replacement","","",16,[[]]],[11,"clone_boxed","","",16,[[],[["defaultfeatures",8],["global",3],["box",3]]]],[11,"self_address_mut","","",16,[[]]],[11,"clone_boxed","","",16,[[],[["global",3],["nonsyncfeatures",8],["box",3]]]],[11,"self_address_mut","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"borrow_replacement","","",17,[[]]],[11,"clone_boxed","","",17,[[],[["defaultfeatures",8],["global",3],["box",3]]]],[11,"self_address_mut","","",17,[[]]],[11,"clone_boxed","","",17,[[],[["global",3],["nonsyncfeatures",8],["box",3]]]],[11,"self_address_mut","","",17,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"equivalent","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"borrow_replacement","","",14,[[]]],[11,"clone_boxed","","",14,[[],[["defaultfeatures",8],["global",3],["box",3]]]],[11,"self_address_mut","","",14,[[]]],[11,"clone_boxed","","",14,[[],[["global",3],["nonsyncfeatures",8],["box",3]]]],[11,"self_address_mut","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"borrow_replacement","","",15,[[]]],[11,"clone","x_core::core_config","",0,[[],["xcoreconfig",3]]],[11,"clone","","",1,[[],["subsetconfig",3]]],[11,"clone","x_core","",2,[[],["debugignore",3]]],[11,"clone","","",16,[[],["workspacesubsets",3]]],[11,"clone","","",17,[[],["workspacesubset",3]]],[11,"clone","","",14,[[],["workspacestatus",4]]],[11,"cmp","","",2,[[["debugignore",3]],["ordering",4]]],[11,"eq","x_core::core_config","",0,[[["xcoreconfig",3]]]],[11,"ne","","",0,[[["xcoreconfig",3]]]],[11,"eq","","",1,[[["subsetconfig",3]]]],[11,"ne","","",1,[[["subsetconfig",3]]]],[11,"eq","x_core","",2,[[["debugignore",3]]]],[11,"ne","","",2,[[["debugignore",3]]]],[11,"eq","","",14,[[["workspacestatus",4]]]],[11,"partial_cmp","","",2,[[["debugignore",3]],[["option",4],["ordering",4]]]],[11,"lt","","",2,[[["debugignore",3]]]],[11,"le","","",2,[[["debugignore",3]]]],[11,"gt","","",2,[[["debugignore",3]]]],[11,"ge","","",2,[[["debugignore",3]]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"fmt","x_core::core_config","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","x_core","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"hash","","",2,[[]]],[11,"hash","","",14,[[]]],[11,"source","","",3,[[],[["error",8],["option",4]]]],[11,"deserialize","x_core::core_config","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"io","x_core","",3,[[["error",3]]]],[11,"guppy","","",3,[[["error",4]]]],[11,"git_root","","",3,[[]]],[11,"from_hex","","",3,[[["fromhexerror",4]]]],[11,"hakari_cargo_toml","","",3,[[["cargotomlerror",4]]]],[11,"hakari_toml_out","","",3,[[["tomlouterror",4]]]],[11,"de","","",3,[[]]],[11,"ser","","",3,[[]]],[11,"target_spec","","",3,[[["targetspecerror",4]]]],[11,"new","","Constructs a new store for workspace subsets.",16,[[["packagegraph",3],["btreemap",3],["path",3]],["result",6]]],[11,"default_members","","Returns information about default members.",16,[[],["workspacesubset",3]]],[11,"get","","Returns information about the subset by name.",16,[[],[["workspacesubset",3],["option",4]]]],[11,"iter","","Iterate over all named subsets.",16,[[]]],[11,"new","","Creates a new subset by simulating a Cargo build on the …",17,[[["packageset",3],["cargooptions",3]]]],[11,"initials","","Returns the initial members that this subset was …",17,[[],["featureset",3]]],[11,"status_of","","Returns the status of the given package ID in the subset.",17,[[["packageid",3]],["workspacestatus",4]]],[11,"root_members","","Returns a list of root packages in this subset, ignoring …",17,[[]]],[11,"build_set","","Returns the set of packages and features that would be …",17,[[],["cargoset",3]]]],"p":[[3,"XCoreConfig"],[3,"SubsetConfig"],[3,"DebugIgnore"],[4,"SystemError"],[13,"CwdNotInProjectRoot"],[13,"Exec"],[13,"FromHex"],[13,"Guppy"],[13,"HakariCargoToml"],[13,"HakariTomlOut"],[13,"Io"],[13,"NonUtf8Path"],[13,"Serde"],[13,"TargetSpec"],[4,"WorkspaceStatus"],[3,"XCoreContext"],[3,"WorkspaceSubsets"],[3,"WorkspaceSubset"]]},\
"x_lint":{"doc":"Lint engine.","i":[[0,"content","x_lint","",null,null],[8,"ContentLinter","x_lint::content","Represents a linter that checks file contents.",null,null],[11,"pre_run","","Pre-run step -- avoids loading the contents if possible.",0,[[["filepathcontext",3]],[["runstatus",4],["result",6]]]],[10,"run","","Executes the lint against the given content context.",0,[[["lintformatter",3],["contentcontext",3]],[["runstatus",4],["result",6]]]],[3,"ContentContext","","",null,null],[18,"BINARY_FILE_CUTOFF","","The number of bytes that will be searched for null bytes …",1,null],[11,"file_ctx","","Returns the file context.",1,[[],["filepathcontext",3]]],[11,"content","","Returns the content, or <code>None</code> if this is a non-UTF-8 file.",1,[[],["option",4]]],[11,"content_bytes","","Returns the raw bytes for the content.",1,[[]]],[11,"is_binary","","Returns true if this is a binary file.",1,[[]]],[0,"file_path","x_lint","",null,null],[8,"FilePathLinter","x_lint::file_path","Represents a linter that runs once per file path.",null,null],[10,"run","","Executes this linter against the given file path context.",2,[[["lintformatter",3],["filepathcontext",3]],[["runstatus",4],["result",6]]]],[3,"FilePathContext","","Contains information for a single file path.",null,null],[11,"new","","Constructs a new context.",3,[[["projectcontext",3],["utf8path",3]]]],[11,"project_ctx","","Returns the project context.",3,[[],["projectcontext",3]]],[11,"file_path","","Returns the path of this file, relative to the root of …",3,[[],["utf8path",3]]],[11,"extension","","Returns the extension of the file. Returns <code>None</code> if …",3,[[],["option",4]]],[0,"package","x_lint","",null,null],[8,"PackageLinter","x_lint::package","Represents a linter that runs once per package.",null,null],[10,"run","","",4,[[["packagecontext",3],["lintformatter",3]],[["runstatus",4],["result",6]]]],[3,"PackageContext","","Lint context for an individual package.",null,null],[11,"new","","",5,[[["projectcontext",3],["packagemetadata",3],["packagegraph",3],["utf8path",3]],["result",6]]],[11,"project_ctx","","Returns the project context.",5,[[],["projectcontext",3]]],[11,"package_graph","","Returns the package graph.",5,[[],["packagegraph",3]]],[11,"workspace_path","","Returns the relative path for this package in the …",5,[[],["utf8path",3]]],[11,"metadata","","Returns the metadata for this package.",5,[[],["packagemetadata",3]]],[11,"is_default_member","","Returns true if this is a default member of this …",5,[[]]],[0,"project","x_lint","",null,null],[8,"ProjectLinter","x_lint::project","Represents a linter that checks some property for the …",null,null],[10,"run","","Executes the lint against the given project context.",6,[[["lintformatter",3],["projectcontext",3]],[["runstatus",4],["result",6]]]],[3,"ProjectContext","","Overall linter context for a project.",null,null],[11,"new","","",7,[[["xcorecontext",3]]]],[11,"core","","Returns the core context.",7,[[],["xcorecontext",3]]],[11,"project_root","","Returns the project root.",7,[[],["path",3]]],[11,"package_graph","","Returns the package graph, computing it for the first …",7,[[],[["result",6],["packagegraph",3]]]],[11,"full_path","","Returns the absolute path from the project root.",7,[[],["pathbuf",3]]],[11,"default_members","","Returns information about the default workspace members.",7,[[],[["result",6],["workspacesubset",3]]]],[11,"hakari","","Returns Hakari information.",7,[[],[["hakari",3],["result",6]]]],[0,"runner","x_lint","",null,null],[3,"LintEngineConfig","x_lint::runner","Configuration for the lint engine.",null,null],[11,"new","","",8,[[["xcorecontext",3]]]],[11,"with_project_linters","","",8,[[]]],[11,"with_package_linters","","",8,[[]]],[11,"with_file_path_linters","","",8,[[]]],[11,"with_content_linters","","",8,[[]]],[11,"fail_fast","","",8,[[]]],[11,"build","","",8,[[],["lintengine",3]]],[3,"LintEngine","","Executor for linters.",null,null],[11,"new","","",9,[[["lintengineconfig",3]]]],[11,"run","","",9,[[],[["lintresults",3],["result",6]]]],[3,"LintResults","","",null,null],[12,"skipped","","",10,null],[12,"messages","","",10,null],[0,"prelude","x_lint","",null,null],[6,"Result","x_lint::prelude","Type alias for the return type for <code>run</code> methods.",null,null],[4,"SystemError","","A system error that happened while running a lint.",null,null],[13,"CwdNotInProjectRoot","","",11,null],[12,"current_dir","x_lint::prelude::SystemError","",12,null],[12,"project_root","","",12,null],[13,"Exec","x_lint::prelude","",11,null],[12,"cmd","x_lint::prelude::SystemError","",13,null],[12,"status","","",13,null],[13,"GitRoot","x_lint::prelude","",11,null],[13,"FromHex","","",11,null],[12,"context","x_lint::prelude::SystemError","",14,null],[12,"err","","",14,null],[13,"Guppy","x_lint::prelude","",11,null],[12,"context","x_lint::prelude::SystemError","",15,null],[12,"err","","",15,null],[13,"HakariCargoToml","x_lint::prelude","",11,null],[12,"context","x_lint::prelude::SystemError","",16,null],[12,"err","","",16,null],[13,"HakariTomlOut","x_lint::prelude","",11,null],[12,"context","x_lint::prelude::SystemError","",17,null],[12,"err","","",17,null],[13,"Io","x_lint::prelude","",11,null],[12,"context","x_lint::prelude::SystemError","",18,null],[12,"err","","",18,null],[13,"NonUtf8Path","x_lint::prelude","",11,null],[12,"path","x_lint::prelude::SystemError","",19,null],[12,"err","","",19,null],[13,"Serde","x_lint::prelude","",11,null],[12,"context","x_lint::prelude::SystemError","",20,null],[12,"err","","",20,null],[13,"TargetSpec","x_lint::prelude","",11,null],[12,"context","x_lint::prelude::SystemError","",21,null],[12,"err","","",21,null],[8,"Linter","x_lint","Represents a linter.",null,null],[10,"name","","Returns the name of the linter.",22,[[]]],[3,"LintFormatter","","A lint formatter.",null,null],[11,"new","","",23,[[["vec",3],["lintsource",3]]]],[11,"write","","Writes a new lint message to this formatter.",23,[[["lintlevel",4]]]],[11,"write_kind","","Writes a new lint message to this formatter with a custom …",23,[[["lintkind",4],["lintlevel",4]]]],[4,"RunStatus","","The run status of a lint.",null,null],[13,"Executed","","This lint run was successful, with messages possibly …",24,null],[13,"Skipped","","This lint was skipped.",24,null],[4,"SkipReason","","The reason for why this lint was skipped.",null,null],[13,"NonUtf8Content","","This file\'s content was not valid UTF-8.",25,null],[13,"UnsupportedExtension","","This extension was unsupported.",25,null],[13,"UnsupportedFile","","The given file was unsupported by this linter.",25,null],[13,"UnsupportedPackage","","The given package was unsupported by this linter.",25,null],[13,"GlobExemption","","The given file was excepted by a glob rule",25,null],[3,"LintMessage","","A message raised by a lint.",null,null],[11,"new","","",26,[[["lintlevel",4]]]],[11,"level","","",26,[[],["lintlevel",4]]],[11,"message","","",26,[[]]],[4,"LintLevel","","",null,null],[13,"Error","","",27,null],[13,"Warning","","",27,null],[3,"LintSource","","Message source for lints.",null,null],[11,"name","","",28,[[]]],[11,"kind","","",28,[[],["lintkind",4]]],[4,"LintKind","","",null,null],[13,"Project","","",29,null],[13,"Package","","",29,null],[12,"name","x_lint::LintKind","",30,null],[12,"workspace_path","","",30,null],[13,"FilePath","x_lint","",29,null],[13,"Content","","",29,null],[11,"from","x_lint::content","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"borrow_replacement","","",1,[[]]],[11,"from","x_lint::file_path","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"borrow_replacement","","",3,[[]]],[11,"clone_boxed","","",3,[[],[["global",3],["box",3],["defaultfeatures",8]]]],[11,"self_address_mut","","",3,[[]]],[11,"clone_boxed","","",3,[[],[["box",3],["nonsyncfeatures",8],["global",3]]]],[11,"self_address_mut","","",3,[[]]],[11,"from","x_lint::package","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"borrow_replacement","","",5,[[]]],[11,"clone_boxed","","",5,[[],[["global",3],["box",3],["defaultfeatures",8]]]],[11,"self_address_mut","","",5,[[]]],[11,"clone_boxed","","",5,[[],[["box",3],["nonsyncfeatures",8],["global",3]]]],[11,"self_address_mut","","",5,[[]]],[11,"from","x_lint::project","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"borrow_replacement","","",7,[[]]],[11,"from","x_lint::runner","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"borrow_replacement","","",8,[[]]],[11,"clone_boxed","","",8,[[],[["global",3],["box",3],["defaultfeatures",8]]]],[11,"self_address_mut","","",8,[[]]],[11,"clone_boxed","","",8,[[],[["box",3],["nonsyncfeatures",8],["global",3]]]],[11,"self_address_mut","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"borrow_replacement","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"borrow_replacement","","",10,[[]]],[11,"from","x_lint::prelude","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"borrow_replacement","","",11,[[]]],[11,"from","x_lint","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"borrow_replacement","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"equivalent","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"borrow_replacement","","",24,[[]]],[11,"clone_boxed","","",24,[[],[["global",3],["box",3],["defaultfeatures",8]]]],[11,"self_address_mut","","",24,[[]]],[11,"clone_boxed","","",24,[[],[["box",3],["nonsyncfeatures",8],["global",3]]]],[11,"self_address_mut","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"equivalent","","",25,[[]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"borrow_replacement","","",25,[[]]],[11,"clone_boxed","","",25,[[],[["global",3],["box",3],["defaultfeatures",8]]]],[11,"self_address_mut","","",25,[[]]],[11,"clone_boxed","","",25,[[],[["box",3],["nonsyncfeatures",8],["global",3]]]],[11,"self_address_mut","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"borrow_replacement","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"equivalent","","",27,[[]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"borrow_replacement","","",27,[[]]],[11,"clone_boxed","","",27,[[],[["global",3],["box",3],["defaultfeatures",8]]]],[11,"self_address_mut","","",27,[[]]],[11,"clone_boxed","","",27,[[],[["box",3],["nonsyncfeatures",8],["global",3]]]],[11,"self_address_mut","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"borrow_replacement","","",28,[[]]],[11,"clone_boxed","","",28,[[],[["global",3],["box",3],["defaultfeatures",8]]]],[11,"self_address_mut","","",28,[[]]],[11,"clone_boxed","","",28,[[],[["box",3],["nonsyncfeatures",8],["global",3]]]],[11,"self_address_mut","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"equivalent","","",29,[[]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"borrow_replacement","","",29,[[]]],[11,"clone_boxed","","",29,[[],[["global",3],["box",3],["defaultfeatures",8]]]],[11,"self_address_mut","","",29,[[]]],[11,"clone_boxed","","",29,[[],[["box",3],["nonsyncfeatures",8],["global",3]]]],[11,"self_address_mut","","",29,[[]]],[11,"fmt","x_lint::prelude","",11,[[["formatter",3]],[["result",4],["error",3]]]],[11,"source","","",11,[[],[["error",8],["option",4]]]],[11,"fmt","","",11,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","x_lint::file_path","",3,[[],["filepathcontext",3]]],[11,"clone","x_lint::package","",5,[[],["packagecontext",3]]],[11,"clone","x_lint::runner","",8,[[],["lintengineconfig",3]]],[11,"clone","x_lint","",24,[[],["runstatus",4]]],[11,"clone","","",25,[[],["skipreason",4]]],[11,"clone","","",27,[[],["lintlevel",4]]],[11,"clone","","",28,[[],["lintsource",3]]],[11,"clone","","",29,[[],["lintkind",4]]],[11,"eq","","",24,[[["runstatus",4]]]],[11,"ne","","",24,[[["runstatus",4]]]],[11,"eq","","",25,[[["skipreason",4]]]],[11,"ne","","",25,[[["skipreason",4]]]],[11,"eq","","",27,[[["lintlevel",4]]]],[11,"eq","","",29,[[["lintkind",4]]]],[11,"ne","","",29,[[["lintkind",4]]]],[11,"fmt","x_lint::content","",1,[[["formatter",3]],["result",6]]],[11,"fmt","x_lint::file_path","",3,[[["formatter",3]],["result",6]]],[11,"fmt","x_lint::package","",5,[[["formatter",3]],["result",6]]],[11,"fmt","x_lint::project","",7,[[["formatter",3]],["result",6]]],[11,"fmt","x_lint::runner","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","x_lint","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"io","x_lint::prelude","",11,[[["error",3]],["systemerror",4]]],[11,"guppy","","",11,[[["error",4]],["systemerror",4]]],[11,"git_root","","",11,[[],["systemerror",4]]],[11,"from_hex","","",11,[[["fromhexerror",4]],["systemerror",4]]],[11,"hakari_cargo_toml","","",11,[[["cargotomlerror",4]],["systemerror",4]]],[11,"hakari_toml_out","","",11,[[["tomlouterror",4]],["systemerror",4]]],[11,"de","","",11,[[],["systemerror",4]]],[11,"ser","","",11,[[],["systemerror",4]]],[11,"target_spec","","",11,[[["error",4]],["systemerror",4]]]],"p":[[8,"ContentLinter"],[3,"ContentContext"],[8,"FilePathLinter"],[3,"FilePathContext"],[8,"PackageLinter"],[3,"PackageContext"],[8,"ProjectLinter"],[3,"ProjectContext"],[3,"LintEngineConfig"],[3,"LintEngine"],[3,"LintResults"],[4,"SystemError"],[13,"CwdNotInProjectRoot"],[13,"Exec"],[13,"FromHex"],[13,"Guppy"],[13,"HakariCargoToml"],[13,"HakariTomlOut"],[13,"Io"],[13,"NonUtf8Path"],[13,"Serde"],[13,"TargetSpec"],[8,"Linter"],[3,"LintFormatter"],[4,"RunStatus"],[4,"SkipReason"],[3,"LintMessage"],[4,"LintLevel"],[3,"LintSource"],[4,"LintKind"],[13,"Package"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);